{"id":"088460ff4ad78adc42cea1e59f6f4f71","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"},"@openzeppelin/contracts/security/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor () {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n *\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping (uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping (address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor (string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155).interfaceId\n            || interfaceId == type(IERC1155MetadataURI).interfaceId\n            || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    )\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(_msgSender() != operator, \"ERC1155: setting approval status for self\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    )\n        public\n        virtual\n        override\n    {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        _balances[id][from] = fromBalance - amount;\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    )\n        public\n        virtual\n        override\n    {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            _balances[id][from] = fromBalance - amount;\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address account, uint256 id, uint256 amount, bytes memory data) internal virtual {\n        require(account != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        _balances[id][account] += amount;\n        emit TransferSingle(operator, address(0), account, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), account, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `account`\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(address account, uint256 id, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, account, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\n\n        uint256 accountBalance = _balances[id][account];\n        require(accountBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        _balances[id][account] = accountBalance - amount;\n\n        emit TransferSingle(operator, account, address(0), id, amount);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(address account, uint256[] memory ids, uint256[] memory amounts) internal virtual {\n        require(account != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, account, address(0), ids, amounts, \"\");\n\n        for (uint i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 accountBalance = _balances[id][account];\n            require(accountBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            _balances[id][account] = accountBalance - amount;\n        }\n\n        emit TransferBatch(operator, account, address(0), ids, amounts);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    )\n        internal\n        virtual\n    { }\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    )\n        private\n    {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver(to).onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    )\n        private\n    {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1155.sol\";\n\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n *\n * _Available since v3.1._\n */\nabstract contract ERC1155Burnable is ERC1155 {\n    function burn(address account, uint256 id, uint256 value) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n\n    /**\n        @dev Handles the receipt of a single ERC1155 token type. This function is\n        called at the end of a `safeTransferFrom` after the balance has been updated.\n        To accept the transfer, this must return\n        `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n        (i.e. 0xf23a6e61, or its own function selector).\n        @param operator The address which initiated the transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param id The ID of the token being transferred\n        @param value The amount of tokens being transferred\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n    */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    )\n        external\n        returns(bytes4);\n\n    /**\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\n        is called at the end of a `safeBatchTransferFrom` after the balances have\n        been updated. To accept the transfer(s), this must return\n        `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n        (i.e. 0xbc197c81, or its own function selector).\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n    */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    )\n        external\n        returns(bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./ERC1155Receiver.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ncontract ERC1155Holder is ERC1155Receiver {\n    function onERC1155Received(address, address, uint256, uint256, bytes memory) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(address, address, uint256[] memory, uint256[] memory, bytes memory) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155Receiver.sol\";\nimport \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId\n            || super.supportsInterface(interfaceId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The defaut value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overloaded;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        _approve(sender, _msgSender(), currentAllowance - amount);\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[sender] = senderBalance - amount;\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        _balances[account] = accountBalance - amount;\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        uint256 currentAllowance = allowance(account, _msgSender());\n        require(currentAllowance >= amount, \"ERC20: burn amount exceeds allowance\");\n        _approve(account, _msgSender(), currentAllowance - amount);\n        _burn(account, amount);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"./extensions/IERC721Enumerable.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping (uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping (address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping (uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor (string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC721).interfaceId\n            || interfaceId == type(IERC721Metadata).interfaceId\n            || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0\n            ? string(abi.encodePacked(baseURI, tokenId.toString()))\n            : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\n     * in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(_msgSender() == owner || ERC721.isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(operator != _msgSender(), \"ERC721: approve to caller\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || ERC721.isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {\n        _mint(to, tokenId);\n        require(_checkOnERC721Received(address(0), to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\n        private returns (bool)\n    {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver(to).onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    // solhint-disable-next-line no-inline-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual { }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @title ERC721 Burnable Token\n * @dev ERC721 Token that can be irreversibly burned (destroyed).\n */\nabstract contract ERC721Burnable is Context, ERC721 {\n    /**\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721Burnable: caller is not owner nor approved\");\n        _burn(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"./IERC721Enumerable.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n * enumerability of all the token ids in the contract as well as all token ids owned by each\n * account.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    // Mapping from owner to list of owned token IDs\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\n\n    // Mapping from token ID to index of the owner tokens list\n    mapping(uint256 => uint256) private _ownedTokensIndex;\n\n    // Array with all token ids, used for enumeration\n    uint256[] private _allTokens;\n\n    // Mapping from token id to position in the allTokens array\n    mapping(uint256 => uint256) private _allTokensIndex;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId\n            || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\");\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\");\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual override {\n        super._beforeTokenTransfer(from, to, tokenId);\n\n        if (from == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (from != to) {\n            _removeTokenFromOwnerEnumeration(from, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (to != from) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = ERC721.balanceOf(to);\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping (uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\");\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\n      *\n      * Requirements:\n      *\n      * - `from` cannot be the zero address.\n      * - `to` cannot be the zero address.\n      * - `tokenId` token must exist and be owned by `from`.\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n      *\n      * Emits a {Transfer} event.\n      */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\n     */\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant alphabet = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = alphabet[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n}\n"},"contracts/Assets.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.0 <=0.8.19;\r\n\r\nimport \"./NFTVenture.sol\";\r\nimport \"./AssetStruct.sol\";\r\n\r\ncontract Assets {\r\n    NFTVenture private nftContract;\r\n    address public supervisor;\r\n\r\n    // Eventos\r\n    event LogInvestment(\r\n        address indexed investor,\r\n        uint256 indexed assetId,\r\n        uint256 indexed tokenId,\r\n        uint256 tokenAmount,\r\n        uint256 value\r\n    );\r\n\r\n    event AssetCreated(\r\n        uint256 indexed assetId,\r\n        address indexed owner,\r\n        string tokenURI\r\n    );\r\n\r\n    // Constructor\r\n    constructor(address nftAddress) {\r\n        nftContract = NFTVenture(nftAddress);\r\n        supervisor = msg.sender;\r\n    }\r\n\r\n    modifier onlySupervisor() {\r\n        require(\r\n            msg.sender == supervisor,\r\n            \"Only supervisor can call this function\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    function addAsset(\r\n        uint256 price,\r\n        string memory author,\r\n        string memory title,\r\n        string memory description,\r\n        uint256 projectEndDate,\r\n        address to,\r\n        string memory tokenURI,\r\n        string memory mainPhoto,\r\n        string[] memory secondaryPhotos,\r\n        Category category\r\n    ) public onlySupervisor {\r\n        require(price != 0, \"Price cannot be zero\");\r\n        require(\r\n            projectEndDate >= block.timestamp,\r\n            \"Project end date should be in the future\"\r\n        );\r\n        require(to != address(0), \"Address cannot be zero\");\r\n\r\n        uint256 assetId = nftContract.getAssetsCount();\r\n\r\n        Reward[] memory emptyRewards;\r\n        Asset memory newAsset = Asset(\r\n            assetId,\r\n            price,\r\n            author,\r\n            title,\r\n            description,\r\n            block.timestamp,\r\n            projectEndDate,\r\n            emptyRewards,\r\n            ProjectStatus.Started,\r\n            address(0),\r\n            mainPhoto,\r\n            secondaryPhotos,\r\n            category\r\n        );\r\n        nftContract._addAsset(assetId, newAsset, to);\r\n\r\n        nftContract.mint(to, assetId, tokenURI);\r\n\r\n        emit AssetCreated(assetId, to, tokenURI);\r\n\r\n        nftContract.incrementAssetsCount();\r\n    }\r\n\r\n    function getAllAssets(\r\n        ProjectStatus status\r\n    ) public view returns (Asset[] memory, uint256[] memory, uint256[] memory) {\r\n        uint256[] memory assetIds;\r\n\r\n        if (status == ProjectStatus.Started) {\r\n            assetIds = nftContract.getActiveAssets();\r\n        } else if (status == ProjectStatus.Funded) {\r\n            assetIds = nftContract.getFundedAssets();\r\n        } else if (status == ProjectStatus.Failed) {\r\n            assetIds = nftContract.getFailedAssets();\r\n        } else if (status == ProjectStatus.Completed) {\r\n            assetIds = nftContract.getCompletedAssets();\r\n        } else {\r\n            revert(\"Invalid status\");\r\n        }\r\n\r\n        uint256 assetCount = assetIds.length;\r\n        Asset[] memory assets = new Asset[](assetCount);\r\n        uint256[] memory investmentAmounts = new uint256[](assetCount);\r\n        uint256[] memory investorCounts = new uint256[](assetCount);\r\n\r\n        for (uint256 i = 0; i < assetCount; i++) {\r\n            assets[i] = nftContract.getAsset(assetIds[i]);\r\n            investmentAmounts[i] = nftContract.getTotalInvestment(assetIds[i]);\r\n            investorCounts[i] = nftContract.getTotalInvestors(assetIds[i]);\r\n        }\r\n\r\n        return (assets, investmentAmounts, investorCounts);\r\n    }\r\n\r\n    function getAllAssetsByCategory(\r\n        ProjectStatus status,\r\n        Category category\r\n    ) public view returns (Asset[] memory) {\r\n        uint256[] memory allAssetIds;\r\n\r\n        if (status == ProjectStatus.Started) {\r\n            allAssetIds = nftContract.getActiveAssets();\r\n        } else if (status == ProjectStatus.Funded) {\r\n            allAssetIds = nftContract.getFundedAssets();\r\n        } else if (status == ProjectStatus.Failed) {\r\n            allAssetIds = nftContract.getFailedAssets();\r\n        } else if (status == ProjectStatus.Completed) {\r\n            allAssetIds = nftContract.getCompletedAssets();\r\n        } else {\r\n            revert(\"Invalid status\");\r\n        }\r\n\r\n        uint256[] memory categoryAssetIds = nftContract.getAssetsByCategory(\r\n            category\r\n        );\r\n        uint256[] memory assetIds = new uint256[](categoryAssetIds.length);\r\n        uint256 count = 0;\r\n\r\n        for (uint256 i = 0; i < allAssetIds.length; i++) {\r\n            assetIds[i] = allAssetIds[i];\r\n        }\r\n\r\n        Asset[] memory filteredAssets = new Asset[](categoryAssetIds.length);\r\n        for (uint256 i = 0; i < categoryAssetIds.length; i++) {\r\n            for (uint256 j = 0; j < assetIds.length; j++) {\r\n                if (categoryAssetIds[i] == assetIds[j]) {\r\n                    filteredAssets[count] = nftContract.getAsset(\r\n                        categoryAssetIds[i]\r\n                    );\r\n                    count++;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return filteredAssets;\r\n    }\r\n\r\n    function getAssetById(uint256 assetId) public view returns (Asset memory) {\r\n        return nftContract.getAsset(assetId);\r\n    }\r\n\r\n    function getAssetsOfOwner(\r\n        address owner\r\n    ) public view returns (Asset[] memory) {\r\n        uint256[] memory assetIds = nftContract.getAssetsOfOwner(owner);\r\n        uint256 assetCount = assetIds.length;\r\n        Asset[] memory assets = new Asset[](assetCount);\r\n\r\n        for (uint256 i = 0; i < assetCount; i++) {\r\n            assets[i] = nftContract.getAsset(assetIds[i]);\r\n        }\r\n\r\n        return assets;\r\n    }\r\n\r\n    function updateAsset(\r\n        uint256 assetId,\r\n        string memory mainPhoto,\r\n        string[] memory secondaryPhotos,\r\n        string memory description\r\n    ) public {\r\n        require(nftContract.exists(assetId), \"Asset does not exist\");\r\n        require(\r\n            nftContract.isApprovedOrOwner(msg.sender, assetId),\r\n            \"Not approved or owner\"\r\n        );\r\n\r\n        Asset memory asset = nftContract.getAsset(assetId);\r\n\r\n        asset.mainPhoto = bytes(mainPhoto).length > 0\r\n            ? mainPhoto\r\n            : asset.mainPhoto;\r\n        asset.secondaryPhotos = secondaryPhotos.length > 0\r\n            ? secondaryPhotos\r\n            : asset.secondaryPhotos;\r\n        asset.description = bytes(description).length > 0\r\n            ? description\r\n            : asset.description;\r\n\r\n        nftContract.updateAsset(assetId, asset);\r\n    }\r\n}\r\n"},"contracts/AssetStruct.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <=0.8.19;\n\nenum ProjectStatus {\n    Started,\n    Funded,\n    Failed,\n    Completed\n}\n\nenum Category {\n    Technology,\n    Gaming,\n    Music,\n    Movies,\n    Art\n}\n\nstruct Reward {\n    string title;\n    string description;\n    uint256 tokenAmount;\n    uint256 individualPrice;\n    uint256 availableTokens;\n    uint256 rewardTokenId;\n}\n\nstruct NewReward {\n    string tokenURI;\n    string title;\n    string description;\n    uint256 tokenAmount;\n    uint256 individualPrice;\n}\n\nstruct Asset {\n    uint256 assetId;\n    uint256 price;\n    string author;\n    string title;\n    string description;\n    uint256 projectStartDate;\n    uint256 projectEndDate;\n    Reward[] rewards;\n    ProjectStatus status;\n    address rewardTokenAddress;\n    string mainPhoto;\n    string[] secondaryPhotos;\n    Category category;\n}\n"},"contracts/FCTVToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <=0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract FCTVToken is ERC1155, ERC1155Burnable, Ownable {\n    string public name;\n    string public symbol;\n    mapping(uint256 => string) private _tokenURIs;\n\n    constructor(string memory baseURI) ERC1155(baseURI) {\n        name = \"Fractional CTV Tokens\";\n        symbol = \"FCTVT\";\n    }\n\n    function setURI(uint256 tokenId, string memory tokenURI) public onlyOwner {\n        _tokenURIs[tokenId] = tokenURI;\n    }\n\n    function uri(uint256 tokenId) public view override returns (string memory) {\n        return _tokenURIs[tokenId];\n    }\n\n    function mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        string memory tokenURI,\n        bytes memory data\n    ) public onlyOwner {\n        _mint(to, id, amount, data);\n        setURI(id, tokenURI);\n    }\n\n    function mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        string[] memory tokenURIs,\n        bytes memory data\n    ) public onlyOwner {\n        require(\n            ids.length == tokenURIs.length,\n            \"ERC1155: ids and uris length mismatch\"\n        );\n        _mintBatch(to, ids, amounts, data);\n        for (uint256 i = 0; i < ids.length; i++) {\n            _tokenURIs[ids[i]] = tokenURIs[i];\n        }\n    }\n}\n"},"contracts/Investments.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <=0.8.19;\n\nimport \"./NFTVenture.sol\";\nimport \"./AssetStruct.sol\";\n\n\ncontract Investments {\n    NFTVenture private nftContract;\n    address public Reward_tokens;\n    address public supervisor;\n\n    // Eventos\n    event LogInvestment(\n        address indexed investor,\n        uint256 indexed assetId,\n        uint256 indexed tokenId,\n        uint256 tokenAmount,\n        uint256 value\n    );\n\n\n    // Constructor\n    constructor(address nftAddress, address reward_tokens) {\n        nftContract = NFTVenture(nftAddress);\n        supervisor = msg.sender;\n        Reward_tokens = reward_tokens;\n    }\n\n    modifier onlySupervisor() {\n        require(\n            msg.sender == supervisor,\n            \"Only supervisor can call this function\"\n        );\n        _;\n    }\n\n    modifier onlyAssetOwner(uint256 assetId) {\n        require(\n            nftContract.ownerOf(assetId) == msg.sender,\n            \"Caller is not the owner of the asset\"\n        );\n        _;\n    }\n\n\n    ////////////////////////////////////////////////////////////////////////////////\n    // Functions Investments //\n    ////////////////////////////////////////////////////////////////////////////////\n\n\n function investAsset(uint256 assetId, uint256 rewardTokenId, uint256 tokenAmount) public payable {\n        require(tokenAmount > 0, \"Token amount must be greater than 0\");\n        require(nftContract.exists(assetId), \"Asset does not exist\");\n        \n        Asset memory asset = nftContract.getAsset(assetId);\n        require(asset.status == ProjectStatus.Started, \"Project is not in Started status\");\n        \n        Reward memory reward;\n        bool rewardFound = false;\n        uint256 rewardIndex = 0;\n\n        for (uint256 i = 0; i < asset.rewards.length; i++) {\n            if (asset.rewards[i].rewardTokenId == rewardTokenId) {\n                reward = asset.rewards[i];\n                rewardFound = true;\n                rewardIndex = i;\n                break;\n            }\n        }\n\n        require(rewardFound, \"Reward does not exist for this asset\");\n        require(reward.availableTokens >= tokenAmount, \"Not enough available tokens\");\n        require(msg.value == reward.individualPrice * tokenAmount, \"Incorrect value sent\");\n\n        reward.availableTokens -= tokenAmount;\n        nftContract.updateAssetReward(assetId, rewardIndex, reward.availableTokens);\n        nftContract.addInvestment(assetId, msg.sender, msg.value);\n\n        bool investorExists = false;\n        address[] memory investors = nftContract.getAssetInvestors(assetId);\n\n        for (uint256 i = 0; i < investors.length; i++) {\n            if (investors[i] == msg.sender) {\n                investorExists = true;\n                break;\n            }\n        }\n\n        if (!investorExists) {\n            nftContract.addInvestor(assetId, msg.sender);\n        }\n\n        nftContract.updateInvestorTokens(assetId, msg.sender, rewardTokenId, tokenAmount);\n\n        emit LogInvestment(\n            msg.sender,\n            assetId,\n            rewardTokenId,\n            tokenAmount,\n            msg.value\n        );\n    }\n\n    function getInvestmentDetails(uint256 assetId) public view returns (uint256 totalInvested, uint256 remainingFunding) {\n        require(nftContract.exists(assetId), \"Asset does not exist\");\n        Asset memory asset = nftContract.getAsset(assetId);\n        totalInvested = nftContract.investmentReceived(assetId);\n        remainingFunding = asset.price > totalInvested ? asset.price - totalInvested : 0;\n    }\n\nfunction getInvestmentHistory(uint256 assetId) public view returns (address[] memory investors, uint256[] memory amounts, uint256[][] memory tokenIds, uint256[][] memory tokenAmounts) {\n    require(nftContract.exists(assetId), \"Asset does not exist\");\n\n    investors = nftContract.getAssetInvestors(assetId);\n    uint256 investorCount = investors.length;\n    \n    amounts = new uint256[](investorCount);\n    tokenIds = new uint256[][](investorCount);\n    tokenAmounts = new uint256[][](investorCount);\n\n    for (uint256 i = 0; i < investorCount; i++) {\n        address investor = investors[i];\n        amounts[i] = nftContract.getInvestmentAmount(assetId, investor); \n        (tokenIds[i], tokenAmounts[i]) = nftContract.getInvestorTokens(assetId, investor);\n    }\n}\n\n\nfunction getInvestmentsByAddress(address investor) public view returns (uint256[] memory assetIds, uint256[] memory amounts, uint256[][] memory tokenIds, uint256[][] memory tokenAmounts) {\n    uint256[] memory investorInvestments = nftContract.getInvestorAssets(investor);\n    uint256 investmentCount = investorInvestments.length;\n\n    assetIds = new uint256[](investmentCount);\n    amounts = new uint256[](investmentCount);\n    tokenIds = new uint256[][](investmentCount);\n    tokenAmounts = new uint256[][](investmentCount);\n\n    for (uint256 i = 0; i < investmentCount; i++) {\n        uint256 assetId = investorInvestments[i];\n        amounts[i] = nftContract.getInvestmentAmount(assetId, investor); \n        (tokenIds[i], tokenAmounts[i]) = nftContract.getInvestorTokens(assetId, investor); \n        assetIds[i] = assetId;\n    }\n}\n\nfunction getInvestmentsByAddressInAsset(uint256 assetId, address investor) public view returns (uint256 amount, uint256[] memory tokenIds, uint256[] memory tokenAmounts) {\n    require(nftContract.exists(assetId), \"Asset does not exist\");\n    \n    amount = nftContract.getInvestmentAmount(assetId, investor); \n    (tokenIds, tokenAmounts) = nftContract.getInvestorTokens(assetId, investor); \n\n}\n\n\n\n}"},"contracts/NFTVenture.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <=0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\";\nimport \"./AssetStruct.sol\";\n\ncontract NFTVenture is\n    ERC721,\n    ERC721Enumerable,\n    ERC721URIStorage,\n    Pausable,\n    Ownable,\n    ERC721Burnable\n{\n    // Assets\n    uint256 public assetsCount;\n    mapping(uint256 => Asset) public assetMap;\n    mapping(uint256 => bool) public assetExists;\n\n    mapping(address => uint256[]) public ownerToAssets;\n\n    mapping(uint256 => address) public assetApprovals;\n    mapping(uint256 => address) public assetOwner;\n    mapping(address => uint256) public ownedAssetsCount;\n\n    // State-based Asset IDs\n    uint256[] public activeAssets;\n    uint256[] public fundedAssets;\n    uint256[] public failedAssets;\n    uint256[] public completedAssets;\n\n    // Category-based Asset IDs\n    mapping(Category => uint256[]) public categoryAssets;\n\n    // Investments\n    mapping(uint256 => mapping(address => uint256)) public investmentAmountOf;\n    mapping(uint256 => uint256) public investmentReceived;\n    mapping(uint256 => address[]) public assetInvestors;\n    mapping(uint256 => bool) public isTransferAllowed;\n    mapping(uint256 => bool) public isRefundingAllowed;\n    mapping(uint256 => uint256) public investmentRefunded;\n    mapping(uint256 => mapping(address => uint256)) public pendingReturns;\n    mapping(uint256 => mapping(address => mapping(uint256 => uint256)))\n        public investorTokens;\n    mapping(uint256 => uint256) public totalInvestors;\n    mapping(uint256 => uint256) public totalInvestment;\n    mapping(address => uint256[]) public investorAssets;\n\n    // Constructor\n    constructor() ERC721(\"FractionalCTV\", \"FCTV\") {}\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function _baseURI() internal pure override returns (string memory) {\n        return \"\";\n    }\n\n    function transfer(\n        address recipient,\n        uint256 amount\n    ) public virtual returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal override(ERC721, ERC721Enumerable) whenNotPaused {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n\n    function _burn(\n        uint256 tokenId\n    ) internal override(ERC721, ERC721URIStorage) {\n        super._burn(tokenId);\n    }\n\n    function tokenURI(\n        uint256 tokenId\n    ) public view override(ERC721, ERC721URIStorage) returns (string memory) {\n        return super.tokenURI(tokenId);\n    }\n\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view override(ERC721, ERC721Enumerable) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n\n    modifier isNFTOwner(uint256 assetId) {\n        require(msg.sender == ownerOf(assetId));\n        _;\n    }\n\n    function balanceOf() public view returns (uint256) {\n        require(\n            msg.sender != address(0),\n            \"ERC721: balance query for the zero address\"\n        );\n        return ownedAssetsCount[msg.sender];\n    }\n\n    function ownerOf(\n        uint256 assetId\n    ) public view override(ERC721, IERC721) returns (address) {\n        address owner = assetOwner[assetId];\n        require(owner != address(0), \"NoAssetExists\");\n        return owner;\n    }\n\n    function approve(\n        address to,\n        uint256 assetId\n    ) public override(ERC721, IERC721) {\n        address owner = ownerOf(assetId);\n        require(to != owner, \"CurrentOwnerApproval\");\n        require(msg.sender == owner, \"NotTheAssetOwner\");\n        assetApprovals[assetId] = to;\n        emit Approval(owner, to, assetId);\n    }\n\n    function getApproved(\n        uint256 assetId\n    ) public view override(ERC721, IERC721) returns (address) {\n        require(\n            _exists(assetId),\n            \"ERC721: approved query for nonexistent token\"\n        );\n        return assetApprovals[assetId];\n    }\n\n    function clearApproval(uint256 assetId, address approved) public {\n        if (assetApprovals[assetId] == approved) {\n            assetApprovals[assetId] = address(0);\n        }\n    }\n\n    function mint(address to, uint256 assetId, string memory asseturi) public {\n        require(to != address(0), \"ZeroAddressMiniting\");\n        _safeMint(to, assetId);\n        _setTokenURI(assetId, asseturi);\n        emit Transfer(address(0), to, assetId);\n    }\n\n    function exists(uint256 assetId) public view returns (bool) {\n        return assetExists[assetId];\n    }\n\n    function isApprovedOrOwner(\n        address spender,\n        uint256 assetId\n    ) external view returns (bool) {\n        require(\n            exists(assetId),\n            \"ERC721: operator query for nonexistent token\"\n        );\n        address owner = ownerOf(assetId);\n        return (spender == owner || getApproved(assetId) == spender);\n    }\n\n    function _addAsset(\n        uint256 assetId,\n        Asset memory asset,\n        address to\n    ) external {\n        assetMap[assetId] = asset;\n        assetOwner[assetId] = to;\n        ownedAssetsCount[to]++;\n        ownerToAssets[to].push(assetId);\n        assetExists[assetId] = true;\n        activeAssets.push(assetId);\n        categoryAssets[asset.category].push(assetId);\n    }\n\n    function getAsset(uint256 assetId) public view returns (Asset memory) {\n        return assetMap[assetId];\n    }\n\n    function updateAsset(uint256 assetId, Asset memory asset) public {\n        assetMap[assetId] = asset;\n    }\n\n    function getAssetsCount() public view returns (uint256) {\n        return assetsCount;\n    }\n\n    function incrementAssetsCount() public {\n        assetsCount++;\n    }\n\n    function getAssetsOfOwner(\n        address owner\n    ) public view returns (uint256[] memory) {\n        return ownerToAssets[owner];\n    }\n\n    function updateAssetReward(\n        uint256 assetId,\n        uint256 rewardIndex,\n        uint256 newAvailableTokens\n    ) external {\n        require(\n            rewardIndex < assetMap[assetId].rewards.length,\n            \"Invalid reward index\"\n        );\n        assetMap[assetId]\n            .rewards[rewardIndex]\n            .availableTokens = newAvailableTokens;\n    }\n\n    function handleRewardAddedToAsset(\n        uint256 assetId,\n        string memory title,\n        string memory description,\n        uint256 tokenAmount,\n        uint256 individualPrice,\n        bytes32 rewardId\n    ) external {\n        Asset storage asset = assetMap[assetId];\n        asset.rewards.push(\n            Reward({\n                title: title,\n                description: description,\n                tokenAmount: tokenAmount,\n                individualPrice: individualPrice,\n                availableTokens: tokenAmount,\n                rewardTokenId: uint256(rewardId)\n            })\n        );\n    }\n\n    function updateRewardTokenAddress(\n        uint256 assetId,\n        address rewardTokenAddress\n    ) external {\n        assetMap[assetId].rewardTokenAddress = rewardTokenAddress;\n    }\n\n    function addInvestment(\n        uint256 assetId,\n        address investor,\n        uint256 amount\n    ) external {\n        investmentAmountOf[assetId][investor] += amount;\n        investmentReceived[assetId] += amount;\n        totalInvestment[assetId] += amount;\n        if (investmentAmountOf[assetId][investor] == amount) {\n            assetInvestors[assetId].push(investor);\n            investorAssets[investor].push(assetId);\n\n            totalInvestors[assetId]++;\n        }\n    }\n\n    function getTotalInvestment(\n        uint256 assetId\n    ) external view returns (uint256) {\n        return totalInvestment[assetId];\n    }\n\n    function getTotalInvestors(\n        uint256 assetId\n    ) external view returns (uint256) {\n        return totalInvestors[assetId];\n    }\n\n    function addInvestor(uint256 assetId, address investor) external {\n        assetInvestors[assetId].push(investor);\n        investorAssets[investor].push(assetId);\n    }\n\n    function getAssetInvestors(\n        uint256 assetId\n    ) external view returns (address[] memory) {\n        return assetInvestors[assetId];\n    }\n\n    function getInvestorAssets(\n        address investor\n    ) external view returns (uint256[] memory) {\n        return investorAssets[investor];\n    }\n    function getInvestorTokens(\n        uint256 assetId,\n        address investor\n    ) public view returns (uint256[] memory, uint256[] memory) {\n        Asset memory asset = assetMap[assetId];\n        uint256 rewardCount = asset.rewards.length;\n\n        uint256[] memory tokenIds = new uint256[](rewardCount);\n        uint256[] memory tokenAmounts = new uint256[](rewardCount);\n\n        for (uint256 i = 0; i < rewardCount; i++) {\n            uint256 tokenId = asset.rewards[i].rewardTokenId;\n            tokenIds[i] = tokenId;\n            tokenAmounts[i] = investorTokens[assetId][investor][tokenId];\n        }\n\n        return (tokenIds, tokenAmounts);\n    }\n\n    function getInvestmentAmount(\n        uint256 assetId,\n        address investor\n    ) public view returns (uint256) {\n        return investmentAmountOf[assetId][investor];\n    }\n\n    function updateInvestorTokens(\n        uint256 assetId,\n        address investor,\n        uint256 tokenId,\n        uint256 tokenAmount\n    ) external {\n        investorTokens[assetId][investor][tokenId] = tokenAmount;\n    }\n\n    function allowTransfers(uint256 assetId, bool allowed) external {\n        isTransferAllowed[assetId] = allowed;\n    }\n\n    function allowRefunding(uint256 assetId, bool allowed) external {\n        isRefundingAllowed[assetId] = allowed;\n    }\n\n    function updatePendingReturns(\n        uint256 assetId,\n        address investor,\n        uint256 amount\n    ) external {\n        pendingReturns[assetId][investor] = amount;\n    }\n\n    function updateInvestmentRefunded(\n        uint256 assetId,\n        uint256 amount\n    ) external {\n        investmentRefunded[assetId] = amount;\n    }\n\n    function getActiveAssets() external view returns (uint256[] memory) {\n        return activeAssets;\n    }\n\n    function getFundedAssets() external view returns (uint256[] memory) {\n        return fundedAssets;\n    }\n\n    function getFailedAssets() external view returns (uint256[] memory) {\n        return failedAssets;\n    }\n\n    function getCompletedAssets() external view returns (uint256[] memory) {\n        return completedAssets;\n    }\n\n    function getAssetsByCategory(\n        Category category\n    ) external view returns (uint256[] memory) {\n        return categoryAssets[category];\n    }\n}\n"},"contracts/ReclamarFrac.sol":{"content":"// SPDX-License-Identifier: MIT\n/**\n * @file reclamarFrac.sol\n * @autor A.Castellano <alcamo93@suissistemas.com>\n * @date created 1th Jul 2022\n * @date last modified 11th Jul 2022\n */\n\npragma solidity >=0.7.0 <=0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract reclamarFrac {\n    using SafeMath for uint256;\n\n    address payable public ownerAddress;\n    address public nftAddress;\n    address public tokenAddress;\n    enum ClaimState {\n        initiated,\n        accepting,\n        closed\n    }\n    ClaimState public claimState;\n    uint256 public funds;\n    uint256 public supply;\n    event SupplyDetails(uint256 supply);\n    event TokenAddressDetails(address tokenAddress);\n    event FundsDetails(uint256 funds);\n    event ClaimStateDetails(ClaimState claimState);\n    event Claimed(address reclamante, uint256 cantidad);\n\n    event funded();\n    //este contrato de reclamar fracciones solo debe permitirse si la persona que lo inició posee este token NFT\n    //this claims contract should only be allowed if the guy who started it owns this NFT token\n    modifier isOwnerOfNFT(\n        address _nftAddress,\n        address _ownerAddress,\n        uint256 _tokenID\n    ) {\n        require(ERC721(_nftAddress).ownerOf(_tokenID) == _ownerAddress);\n        _;\n    }\n\n    modifier condition(bool _condition) {\n        require(_condition);\n        _;\n    }\n    modifier onlyOwner() {\n        require(msg.sender == ownerAddress);\n        _;\n    }\n\n    modifier inClaimState(ClaimState _state) {\n        require(claimState == _state);\n        _;\n    }\n\n    modifier correctToken(address _token) {\n        require(_token == tokenAddress);\n        _;\n    }\n\n    constructor(\n        address _nftAddress,\n        uint256 _tokenID\n    ) isOwnerOfNFT(_nftAddress, msg.sender, _tokenID) {\n        nftAddress = _nftAddress;\n        ownerAddress = payable(msg.sender);\n        claimState = ClaimState.initiated;\n    }\n\n    function getClaimState() public view returns (ClaimState) {\n    return claimState;\n}\n\n\n    function fund(\n        address _token\n    ) public payable inClaimState(ClaimState.initiated) onlyOwner {\n        funds = msg.value; //cantidad agregada para permitir que se hagan reclamos //amount added to allow claims to be made\n        tokenAddress = _token; //dirección del token aceptable //address of acceptable token\n        claimState = ClaimState.accepting; //establece en estado aceptación//set to accepting status\n\n        supply = ERC20(_token).totalSupply().div(1000000000000000000);\n\n    emit SupplyDetails(supply);\n    emit TokenAddressDetails(tokenAddress);\n    emit FundsDetails(funds);\n    emit ClaimStateDetails(claimState);\n\n        emit funded();\n    }\n\n \nfunction claim(address _token, uint256 tokenAmount) public correctToken(_token) {\n    // Convierte supply a wei\n    uint256 supplyInWei = supply.mul(1e18);\n\n    // Calcula la cantidad de ETH a transferir en base al tokenAmount\n    uint256 cantidad = tokenAmount.mul(funds).div(supplyInWei);\n\n    // Asegúrate de que el contrato tenga suficientes fondos\n    require(address(this).balance >= cantidad, \"Fondos insuficientes en el contrato\");\n\n    // Transfiere la cantidad calculada de ETH al remitente\n    payable(msg.sender).transfer(cantidad);\n\n\n    // Quema la cantidad de tokens del remitente\n    ERC20Burnable(tokenAddress).burnFrom(msg.sender, tokenAmount);\n\n\n    // Emite un evento para indicar que se ha realizado una reclamación\n    emit Claimed(msg.sender, cantidad);\n\n    //ok, fully claimed. Close this contract\n        if (ERC20Burnable(_token).totalSupply() == 0){\n            claimState = ClaimState.closed;\n        }\n}\n}"},"contracts/Rewards.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <=0.8.19;\n\nimport \"./FCTVToken.sol\";\nimport \"./NFTVenture.sol\";\nimport \"./AssetStruct.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\n\ncontract Rewards is ERC1155Holder {\n    NFTVenture private nftContract;\n    address public supervisor;\n\n    // Events\n    event RewardsAdded(uint256 indexed assetId, uint256 rewardsCount, address rewardTokenAddress);\n\n    // Constructor\n    constructor(address nftAddress) {\n        nftContract = NFTVenture(nftAddress);\n        supervisor = msg.sender;\n    }\n\n    modifier onlySupervisor() {\n        require(msg.sender == supervisor, \"Only supervisor can call this function\");\n        _;\n    }\n\n    ////////////////////////////////////////////////////////////////////////////////\n    // Functions Rewards //\n    ////////////////////////////////////////////////////////////////////////////////\n\n    function addRewards(uint256 assetId, NewReward[] memory rewards) public onlySupervisor {\n        require(nftContract.exists(assetId), \"Asset does not exist\");\n        Asset memory asset = nftContract.getAsset(assetId);\n\n        if (asset.rewardTokenAddress == address(0)) {\n            FCTVToken rewardToken = new FCTVToken(\"\");\n            asset.rewardTokenAddress = address(rewardToken);\n            nftContract.updateRewardTokenAddress(assetId, address(rewardToken));\n        }\n\n        FCTVToken rewardTokenContract = FCTVToken(asset.rewardTokenAddress);\n\n        for (uint256 i = 0; i < rewards.length; i++) {\n            bytes32 rewardId = keccak256(abi.encodePacked(assetId, i));\n            rewardTokenContract.mint(\n                address(this),\n                uint256(rewardId),\n                rewards[i].tokenAmount,\n                rewards[i].tokenURI,\n                \"\"\n            );\n\n            nftContract.handleRewardAddedToAsset(assetId, rewards[i].title, rewards[i].description, rewards[i].tokenAmount, rewards[i].individualPrice, rewardId);\n\n            emit RewardsAdded(assetId, rewards.length, asset.rewardTokenAddress);\n        }\n    }\n\n    function getRewardsForAsset(uint256 assetId) public view returns (Reward[] memory) {\n        Asset memory asset = nftContract.getAsset(assetId);\n        return asset.rewards;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":10},"viaIR":true,"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[4034],"Ownable":[109]},"id":110,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":110,"sourceUnit":4035,"src":"58:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["613:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":4034,"src":"613:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"613:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"89:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":109,"linearizedBaseContracts":[109,4034],"name":"Ownable","nameLocation":"602:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"643:6:0","nodeType":"VariableDeclaration","scope":109,"src":"627:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"627:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"662:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"699:13:0","nodeType":"VariableDeclaration","scope":13,"src":"683:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"683:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"730:8:0","nodeType":"VariableDeclaration","scope":13,"src":"714:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"714:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"682:57:0"},"src":"656:84:0"},{"body":{"id":34,"nodeType":"Block","src":"857:135:0","statements":[{"assignments":[18],"declarations":[{"constant":false,"id":18,"mutability":"mutable","name":"msgSender","nameLocation":"875:9:0","nodeType":"VariableDeclaration","scope":34,"src":"867:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":21,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":19,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"887:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"887:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"867:32:0"},{"expression":{"id":24,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":22,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"909:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":23,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"918:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"909:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":25,"nodeType":"ExpressionStatement","src":"909:18:0"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":29,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"971:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":28,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"963:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"963:7:0","typeDescriptions":{}}},"id":30,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"963:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":31,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"975:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":26,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"942:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"942:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":33,"nodeType":"EmitStatement","src":"937:48:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"746:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":35,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"854:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"857:0:0"},"scope":109,"src":"842:150:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":43,"nodeType":"Block","src":"1123:30:0","statements":[{"expression":{"id":41,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1140:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":40,"id":42,"nodeType":"Return","src":"1133:13:0"}]},"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"998:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":44,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1077:5:0","nodeType":"FunctionDefinition","parameters":{"id":37,"nodeType":"ParameterList","parameters":[],"src":"1082:2:0"},"returnParameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":44,"src":"1114:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1113:9:0"},"scope":109,"src":"1068:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":57,"nodeType":"Block","src":"1262:96:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":48,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1280:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1280:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":50,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"1291:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1280:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1305:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":47,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1272:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1272:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1272:68:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1350:1:0"}]},"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"1159:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1250:9:0","nodeType":"ModifierDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"1259:2:0"},"src":"1241:117:0","virtual":false,"visibility":"internal"},{"body":{"id":79,"nodeType":"Block","src":"1754:91:0","statements":[{"eventCall":{"arguments":[{"id":65,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1790:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":68,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1806:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":67,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1798:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"1798:7:0","typeDescriptions":{}}},"id":69,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1798:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":64,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1769:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":70,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1769:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":71,"nodeType":"EmitStatement","src":"1764:45:0"},{"expression":{"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":72,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1819:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":75,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":74,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1828:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"1828:7:0","typeDescriptions":{}}},"id":76,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1819:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":78,"nodeType":"ExpressionStatement","src":"1819:19:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1364:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":80,"implemented":true,"kind":"function","modifiers":[{"id":62,"kind":"modifierInvocation","modifierName":{"id":61,"name":"onlyOwner","nameLocations":["1744:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1744:9:0"},"nodeType":"ModifierInvocation","src":"1744:9:0"}],"name":"renounceOwnership","nameLocation":"1709:17:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1726:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[],"src":"1754:0:0"},"scope":109,"src":"1700:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":107,"nodeType":"Block","src":"2064:170:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":94,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":89,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"2082:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":92,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2102:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":91,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2094:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"2094:7:0","typeDescriptions":{}}},"id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2094:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2082:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2106:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":88,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2074:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2074:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":97,"nodeType":"ExpressionStatement","src":"2074:73:0"},{"eventCall":{"arguments":[{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2183:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":100,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"2191:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":98,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2162:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":102,"nodeType":"EmitStatement","src":"2157:43:0"},{"expression":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":103,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2210:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":104,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"2219:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2210:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":106,"nodeType":"ExpressionStatement","src":"2210:17:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"1851:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":108,"implemented":true,"kind":"function","modifiers":[{"id":86,"kind":"modifierInvocation","modifierName":{"id":85,"name":"onlyOwner","nameLocations":["2054:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2054:9:0"},"nodeType":"ModifierInvocation","src":"2054:9:0"}],"name":"transferOwnership","nameLocation":"2003:17:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"newOwner","nameLocation":"2029:8:0","nodeType":"VariableDeclaration","scope":108,"src":"2021:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"2021:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2020:18:0"},"returnParameters":{"id":87,"nodeType":"ParameterList","parameters":[],"src":"2064:0:0"},"scope":109,"src":"1994:240:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":110,"src":"584:1652:0","usedErrors":[]}],"src":"33:2204:0"},"id":0},"@openzeppelin/contracts/security/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","exportedSymbols":{"Context":[4034],"Pausable":[201]},"id":202,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":111,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":112,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":202,"sourceUnit":4035,"src":"58:30:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":114,"name":"Context","nameLocations":["560:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":4034,"src":"560:7:1"},"id":115,"nodeType":"InheritanceSpecifier","src":"560:7:1"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":113,"nodeType":"StructuredDocumentation","src":"90:439:1","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":201,"linearizedBaseContracts":[201,4034],"name":"Pausable","nameLocation":"548:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"574:73:1","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":120,"name":"Paused","nameLocation":"658:6:1","nodeType":"EventDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"673:7:1","nodeType":"VariableDeclaration","scope":120,"src":"665:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"665:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"664:17:1"},"src":"652:30:1"},{"anonymous":false,"documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"688:70:1","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":125,"name":"Unpaused","nameLocation":"769:8:1","nodeType":"EventDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":123,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"786:7:1","nodeType":"VariableDeclaration","scope":125,"src":"778:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":122,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:17:1"},"src":"763:32:1"},{"constant":false,"id":127,"mutability":"mutable","name":"_paused","nameLocation":"814:7:1","nodeType":"VariableDeclaration","scope":201,"src":"801:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":126,"name":"bool","nodeType":"ElementaryTypeName","src":"801:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":135,"nodeType":"Block","src":"915:32:1","statements":[{"expression":{"id":133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":131,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"925:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"935:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"925:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":134,"nodeType":"ExpressionStatement","src":"925:15:1"}]},"documentation":{"id":128,"nodeType":"StructuredDocumentation","src":"828:67:1","text":" @dev Initializes the contract in unpaused state."},"id":136,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":129,"nodeType":"ParameterList","parameters":[],"src":"912:2:1"},"returnParameters":{"id":130,"nodeType":"ParameterList","parameters":[],"src":"915:0:1"},"scope":201,"src":"900:47:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":144,"nodeType":"Block","src":"1095:31:1","statements":[{"expression":{"id":142,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"1112:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":141,"id":143,"nodeType":"Return","src":"1105:14:1"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"953:84:1","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":145,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1051:6:1","nodeType":"FunctionDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[],"src":"1057:2:1"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":145,"src":"1089:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":139,"name":"bool","nodeType":"ElementaryTypeName","src":"1089:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1088:6:1"},"scope":201,"src":"1042:84:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":156,"nodeType":"Block","src":"1337:66:1","statements":[{"expression":{"arguments":[{"id":151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1355:9:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":149,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"1356:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1356:8:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:18:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":148,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1347:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1347:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":154,"nodeType":"ExpressionStatement","src":"1347:38:1"},{"id":155,"nodeType":"PlaceholderStatement","src":"1395:1:1"}]},"documentation":{"id":146,"nodeType":"StructuredDocumentation","src":"1132:175:1","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":157,"name":"whenNotPaused","nameLocation":"1321:13:1","nodeType":"ModifierDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[],"src":"1334:2:1"},"src":"1312:91:1","virtual":false,"visibility":"internal"},{"body":{"id":167,"nodeType":"Block","src":"1603:69:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":161,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"1621:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1621:8:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1631:22:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":160,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1613:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1613:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":165,"nodeType":"ExpressionStatement","src":"1613:41:1"},{"id":166,"nodeType":"PlaceholderStatement","src":"1664:1:1"}]},"documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"1409:167:1","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":168,"name":"whenPaused","nameLocation":"1590:10:1","nodeType":"ModifierDefinition","parameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"1600:2:1"},"src":"1581:91:1","virtual":false,"visibility":"internal"},{"body":{"id":183,"nodeType":"Block","src":"1856:66:1","statements":[{"expression":{"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":174,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"1866:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1876:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1866:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":177,"nodeType":"ExpressionStatement","src":"1866:14:1"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":179,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"1902:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1902:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":178,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"1895:6:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":182,"nodeType":"EmitStatement","src":"1890:25:1"}]},"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"1678:124:1","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":184,"implemented":true,"kind":"function","modifiers":[{"id":172,"kind":"modifierInvocation","modifierName":{"id":171,"name":"whenNotPaused","nameLocations":["1842:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":157,"src":"1842:13:1"},"nodeType":"ModifierInvocation","src":"1842:13:1"}],"name":"_pause","nameLocation":"1816:6:1","nodeType":"FunctionDefinition","parameters":{"id":170,"nodeType":"ParameterList","parameters":[],"src":"1822:2:1"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"1856:0:1"},"scope":201,"src":"1807:115:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":199,"nodeType":"Block","src":"2102:69:1","statements":[{"expression":{"id":192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":190,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"2112:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2122:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2112:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":193,"nodeType":"ExpressionStatement","src":"2112:15:1"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":195,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"2151:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2151:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":194,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2142:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2142:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":198,"nodeType":"EmitStatement","src":"2137:27:1"}]},"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"1928:121:1","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":200,"implemented":true,"kind":"function","modifiers":[{"id":188,"kind":"modifierInvocation","modifierName":{"id":187,"name":"whenPaused","nameLocations":["2091:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":168,"src":"2091:10:1"},"nodeType":"ModifierInvocation","src":"2091:10:1"}],"name":"_unpause","nameLocation":"2063:8:1","nodeType":"FunctionDefinition","parameters":{"id":186,"nodeType":"ParameterList","parameters":[],"src":"2071:2:1"},"returnParameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"2102:0:1"},"scope":201,"src":"2054:117:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":202,"src":"530:1643:1","usedErrors":[]}],"src":"33:2141:1"},"id":1},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Address":[4011],"Context":[4034],"ERC1155":[1234],"ERC165":[4261],"IERC1155":[1356],"IERC1155MetadataURI":[1481],"IERC1155Receiver":[1397],"IERC165":[4273]},"id":1235,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":203,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":204,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1235,"sourceUnit":1357,"src":"58:24:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"./IERC1155Receiver.sol","id":205,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1235,"sourceUnit":1398,"src":"83:32:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":206,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1235,"sourceUnit":1482,"src":"116:46:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":207,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1235,"sourceUnit":4012,"src":"163:33:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":208,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1235,"sourceUnit":4035,"src":"197:33:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":209,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1235,"sourceUnit":4262,"src":"231:46:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":211,"name":"Context","nameLocations":["517:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":4034,"src":"517:7:2"},"id":212,"nodeType":"InheritanceSpecifier","src":"517:7:2"},{"baseName":{"id":213,"name":"ERC165","nameLocations":["526:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":4261,"src":"526:6:2"},"id":214,"nodeType":"InheritanceSpecifier","src":"526:6:2"},{"baseName":{"id":215,"name":"IERC1155","nameLocations":["534:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":1356,"src":"534:8:2"},"id":216,"nodeType":"InheritanceSpecifier","src":"534:8:2"},{"baseName":{"id":217,"name":"IERC1155MetadataURI","nameLocations":["544:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1481,"src":"544:19:2"},"id":218,"nodeType":"InheritanceSpecifier","src":"544:19:2"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"279:217:2","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"},"fullyImplemented":true,"id":1234,"linearizedBaseContracts":[1234,1481,1356,4261,4273,4034],"name":"ERC1155","nameLocation":"506:7:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":221,"libraryName":{"id":219,"name":"Address","nameLocations":["576:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":4011,"src":"576:7:2"},"nodeType":"UsingForDirective","src":"570:26:2","typeName":{"id":220,"name":"address","nodeType":"ElementaryTypeName","src":"588:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"constant":false,"id":227,"mutability":"mutable","name":"_balances","nameLocation":"708:9:2","nodeType":"VariableDeclaration","scope":1234,"src":"651:66:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":226,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"660:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"651:48:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":225,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":223,"name":"address","nodeType":"ElementaryTypeName","src":"679:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"671:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"690:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":233,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"828:18:2","nodeType":"VariableDeclaration","scope":1234,"src":"774:72:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":232,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"783:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"774:45:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":231,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":229,"name":"address","nodeType":"ElementaryTypeName","src":"802:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"794:24:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":230,"name":"bool","nodeType":"ElementaryTypeName","src":"813:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":235,"mutability":"mutable","name":"_uri","nameLocation":"982:4:2","nodeType":"VariableDeclaration","scope":1234,"src":"967:19:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":234,"name":"string","nodeType":"ElementaryTypeName","src":"967:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":245,"nodeType":"Block","src":"1069:30:2","statements":[{"expression":{"arguments":[{"id":242,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"1087:4:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":241,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"1079:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1079:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":244,"nodeType":"ExpressionStatement","src":"1079:13:2"}]},"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"993:38:2","text":" @dev See {_setURI}."},"id":246,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"uri_","nameLocation":"1063:4:2","nodeType":"VariableDeclaration","scope":246,"src":"1049:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":237,"name":"string","nodeType":"ElementaryTypeName","src":"1049:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1048:20:2"},"returnParameters":{"id":240,"nodeType":"ParameterList","parameters":[],"src":"1069:0:2"},"scope":1234,"src":"1036:63:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4260,4272],"body":{"id":276,"nodeType":"Block","src":"1274:185:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":257,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"1291:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":259,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"1311:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1356_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1356_$","typeString":"type(contract IERC1155)"}],"id":258,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1306:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1306:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1356","typeString":"type(contract IERC1155)"}},"id":261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1321:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1306:26:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1291:41:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"1348:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":265,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"1368:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1481_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1481_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":264,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1363:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1363:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1481","typeString":"type(contract IERC1155MetadataURI)"}},"id":267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1389:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1363:37:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1348:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1291:109:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":272,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"1440:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":270,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1416:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1234_$","typeString":"type(contract super ERC1155)"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1422:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4260,"src":"1416:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1416:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1291:161:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":256,"id":275,"nodeType":"Return","src":"1284:168:2"}]},"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"1105:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":277,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1175:17:2","nodeType":"FunctionDefinition","overrides":{"id":253,"nodeType":"OverrideSpecifier","overrides":[{"id":251,"name":"ERC165","nameLocations":["1242:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":4261,"src":"1242:6:2"},{"id":252,"name":"IERC165","nameLocations":["1250:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":4273,"src":"1250:7:2"}],"src":"1233:25:2"},"parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"interfaceId","nameLocation":"1200:11:2","nodeType":"VariableDeclaration","scope":277,"src":"1193:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":248,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1193:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1192:20:2"},"returnParameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":277,"src":"1268:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":254,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:2"},"scope":1234,"src":"1166:293:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1480],"body":{"id":288,"nodeType":"Block","src":"1933:28:2","statements":[{"expression":{"id":286,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"1950:4:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":285,"id":287,"nodeType":"Return","src":"1943:11:2"}]},"documentation":{"id":278,"nodeType":"StructuredDocumentation","src":"1465:388:2","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":289,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"1867:3:2","nodeType":"FunctionDefinition","overrides":{"id":282,"nodeType":"OverrideSpecifier","overrides":[],"src":"1900:8:2"},"parameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":289,"src":"1871:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"1871:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1870:9:2"},"returnParameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":289,"src":"1918:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":283,"name":"string","nodeType":"ElementaryTypeName","src":"1918:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1917:15:2"},"scope":1234,"src":"1858:103:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1294],"body":{"id":316,"nodeType":"Block","src":"2198:133:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":301,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"2216:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2235:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2227:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"2227:7:2","typeDescriptions":{}}},"id":305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2227:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2216:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2239:45:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9","typeString":"literal_string \"ERC1155: balance query for the zero address\""},"value":"ERC1155: balance query for the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9","typeString":"literal_string \"ERC1155: balance query for the zero address\""}],"id":300,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2208:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2208:77:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":309,"nodeType":"ExpressionStatement","src":"2208:77:2"},{"expression":{"baseExpression":{"baseExpression":{"id":310,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"2302:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":312,"indexExpression":{"id":311,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"2312:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2302:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":314,"indexExpression":{"id":313,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"2316:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2302:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":299,"id":315,"nodeType":"Return","src":"2295:29:2"}]},"documentation":{"id":290,"nodeType":"StructuredDocumentation","src":"1967:131:2","text":" @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":317,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2112:9:2","nodeType":"FunctionDefinition","overrides":{"id":296,"nodeType":"OverrideSpecifier","overrides":[],"src":"2171:8:2"},"parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":292,"mutability":"mutable","name":"account","nameLocation":"2130:7:2","nodeType":"VariableDeclaration","scope":317,"src":"2122:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"2122:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":294,"mutability":"mutable","name":"id","nameLocation":"2147:2:2","nodeType":"VariableDeclaration","scope":317,"src":"2139:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"2139:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2121:29:2"},"returnParameters":{"id":299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":317,"src":"2189:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":297,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2188:9:2"},"scope":1234,"src":"2103:228:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1307],"body":{"id":380,"nodeType":"Block","src":"2683:335:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":332,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"2701:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2710:6:2","memberName":"length","nodeType":"MemberAccess","src":"2701:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":334,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"2720:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2724:6:2","memberName":"length","nodeType":"MemberAccess","src":"2720:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2701:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368","id":337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2732:43:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","typeString":"literal_string \"ERC1155: accounts and ids length mismatch\""},"value":"ERC1155: accounts and ids length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5","typeString":"literal_string \"ERC1155: accounts and ids length mismatch\""}],"id":331,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2693:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2693:83:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":339,"nodeType":"ExpressionStatement","src":"2693:83:2"},{"assignments":[344],"declarations":[{"constant":false,"id":344,"mutability":"mutable","name":"batchBalances","nameLocation":"2804:13:2","nodeType":"VariableDeclaration","scope":380,"src":"2787:30:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":342,"name":"uint256","nodeType":"ElementaryTypeName","src":"2787:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":343,"nodeType":"ArrayTypeName","src":"2787:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":351,"initialValue":{"arguments":[{"expression":{"id":348,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"2834:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2843:6:2","memberName":"length","nodeType":"MemberAccess","src":"2834:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2820:13:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"2824:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":346,"nodeType":"ArrayTypeName","src":"2824:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2820:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2787:63:2"},{"body":{"id":376,"nodeType":"Block","src":"2907:74:2","statements":[{"expression":{"id":374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":363,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"2921:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":365,"indexExpression":{"id":364,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"2935:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2921:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":367,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"2950:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":369,"indexExpression":{"id":368,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"2959:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2950:11:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":370,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"2963:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":372,"indexExpression":{"id":371,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"2967:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2963:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":366,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2940:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2940:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2921:49:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":375,"nodeType":"ExpressionStatement","src":"2921:49:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":356,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"2881:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":357,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"2885:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2894:6:2","memberName":"length","nodeType":"MemberAccess","src":"2885:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2881:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":377,"initializationExpression":{"assignments":[353],"declarations":[{"constant":false,"id":353,"mutability":"mutable","name":"i","nameLocation":"2874:1:2","nodeType":"VariableDeclaration","scope":377,"src":"2866:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":352,"name":"uint256","nodeType":"ElementaryTypeName","src":"2866:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":355,"initialValue":{"hexValue":"30","id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2878:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2866:13:2"},"loopExpression":{"expression":{"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2902:3:2","subExpression":{"id":360,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"2904:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":362,"nodeType":"ExpressionStatement","src":"2902:3:2"},"nodeType":"ForStatement","src":"2861:120:2"},{"expression":{"id":378,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"2998:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":330,"id":379,"nodeType":"Return","src":"2991:20:2"}]},"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"2337:146:2","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":381,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2497:14:2","nodeType":"FunctionDefinition","overrides":{"id":326,"nodeType":"OverrideSpecifier","overrides":[],"src":"2635:8:2"},"parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"accounts","nameLocation":"2538:8:2","nodeType":"VariableDeclaration","scope":381,"src":"2521:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"2521:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":320,"nodeType":"ArrayTypeName","src":"2521:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"ids","nameLocation":"2573:3:2","nodeType":"VariableDeclaration","scope":381,"src":"2556:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"2556:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":323,"nodeType":"ArrayTypeName","src":"2556:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2511:71:2"},"returnParameters":{"id":330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":381,"src":"2661:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"2661:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":328,"nodeType":"ArrayTypeName","src":"2661:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2660:18:2"},"scope":1234,"src":"2488:530:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1315],"body":{"id":414,"nodeType":"Block","src":"3170:222:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":391,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"3188:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3188:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":393,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"3204:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3188:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66","id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3214:43:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","typeString":"literal_string \"ERC1155: setting approval status for self\""},"value":"ERC1155: setting approval status for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2","typeString":"literal_string \"ERC1155: setting approval status for self\""}],"id":390,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3180:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3180:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":397,"nodeType":"ExpressionStatement","src":"3180:78:2"},{"expression":{"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":398,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"3269:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":402,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":399,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"3288:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3288:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3269:32:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":403,"indexExpression":{"id":401,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"3302:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3269:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":404,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"3314:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3269:53:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":406,"nodeType":"ExpressionStatement","src":"3269:53:2"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":408,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"3352:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3352:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":410,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"3366:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":411,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"3376:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":407,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"3337:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3337:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":413,"nodeType":"EmitStatement","src":"3332:53:2"}]},"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"3024:57:2","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":415,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3095:17:2","nodeType":"FunctionDefinition","overrides":{"id":388,"nodeType":"OverrideSpecifier","overrides":[],"src":"3161:8:2"},"parameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"operator","nameLocation":"3121:8:2","nodeType":"VariableDeclaration","scope":415,"src":"3113:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"3113:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"approved","nameLocation":"3136:8:2","nodeType":"VariableDeclaration","scope":415,"src":"3131:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":385,"name":"bool","nodeType":"ElementaryTypeName","src":"3131:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3112:33:2"},"returnParameters":{"id":389,"nodeType":"ParameterList","parameters":[],"src":"3170:0:2"},"scope":1234,"src":"3086:306:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1325],"body":{"id":432,"nodeType":"Block","src":"3564:61:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":426,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"3581:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":428,"indexExpression":{"id":427,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"3600:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3581:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":430,"indexExpression":{"id":429,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"3609:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3581:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":425,"id":431,"nodeType":"Return","src":"3574:44:2"}]},"documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"3398:56:2","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":433,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3468:16:2","nodeType":"FunctionDefinition","overrides":{"id":422,"nodeType":"OverrideSpecifier","overrides":[],"src":"3540:8:2"},"parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"account","nameLocation":"3493:7:2","nodeType":"VariableDeclaration","scope":433,"src":"3485:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"3485:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"operator","nameLocation":"3510:8:2","nodeType":"VariableDeclaration","scope":433,"src":"3502:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"3502:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3484:35:2"},"returnParameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":433,"src":"3558:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":423,"name":"bool","nodeType":"ElementaryTypeName","src":"3558:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3557:6:2"},"scope":1234,"src":"3459:166:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1339],"body":{"id":540,"nodeType":"Block","src":"3889:758:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":449,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"3907:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3921:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3913:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"3913:7:2","typeDescriptions":{}}},"id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3907:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373","id":455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3925:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""},"value":"ERC1155: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""}],"id":448,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3899:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3899:66:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":457,"nodeType":"ExpressionStatement","src":"3899:66:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":459,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"3996:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":460,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"4004:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4004:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3996:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":464,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"4037:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":465,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"4043:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4043:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":463,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"4020:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4020:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3996:60:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4070:43:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a","typeString":"literal_string \"ERC1155: caller is not owner nor approved\""},"value":"ERC1155: caller is not owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a","typeString":"literal_string \"ERC1155: caller is not owner nor approved\""}],"id":458,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3975:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:148:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"3975:148:2"},{"assignments":[473],"declarations":[{"constant":false,"id":473,"mutability":"mutable","name":"operator","nameLocation":"4142:8:2","nodeType":"VariableDeclaration","scope":540,"src":"4134:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":472,"name":"address","nodeType":"ElementaryTypeName","src":"4134:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":476,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":474,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"4153:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4153:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4134:31:2"},{"expression":{"arguments":[{"id":478,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"4197:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":479,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"4207:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":480,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"4213:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":482,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"4235:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":481,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"4217:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4217:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":485,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"4258:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":484,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"4240:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":487,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"4267:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":477,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"4176:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4176:96:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"4176:96:2"},{"assignments":[491],"declarations":[{"constant":false,"id":491,"mutability":"mutable","name":"fromBalance","nameLocation":"4291:11:2","nodeType":"VariableDeclaration","scope":540,"src":"4283:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":490,"name":"uint256","nodeType":"ElementaryTypeName","src":"4283:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":497,"initialValue":{"baseExpression":{"baseExpression":{"id":492,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"4305:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":494,"indexExpression":{"id":493,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"4315:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4305:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":496,"indexExpression":{"id":495,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"4319:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4305:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4283:41:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":499,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"4342:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":500,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"4357:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4342:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4365:44:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""},"value":"ERC1155: insufficient balance for transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""}],"id":498,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4334:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4334:76:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"ExpressionStatement","src":"4334:76:2"},{"expression":{"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":505,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"4420:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":508,"indexExpression":{"id":506,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"4430:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4420:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":509,"indexExpression":{"id":507,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"4434:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4420:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":510,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"4442:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":511,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"4456:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4442:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4420:42:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":514,"nodeType":"ExpressionStatement","src":"4420:42:2"},{"expression":{"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":515,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"4472:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":518,"indexExpression":{"id":516,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"4482:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4472:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":519,"indexExpression":{"id":517,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"4486:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4472:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":520,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"4493:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4472:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":522,"nodeType":"ExpressionStatement","src":"4472:27:2"},{"eventCall":{"arguments":[{"id":524,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"4530:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":525,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"4540:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":526,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"4546:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":527,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"4550:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":528,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"4554:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":523,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"4515:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":530,"nodeType":"EmitStatement","src":"4510:51:2"},{"expression":{"arguments":[{"id":532,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"4603:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":533,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"4613:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"4619:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":535,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"4623:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":536,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"4627:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":537,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"4635:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":531,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"4572:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4572:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":539,"nodeType":"ExpressionStatement","src":"4572:68:2"}]},"documentation":{"id":434,"nodeType":"StructuredDocumentation","src":"3631:56:2","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":541,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3701:16:2","nodeType":"FunctionDefinition","overrides":{"id":446,"nodeType":"OverrideSpecifier","overrides":[],"src":"3876:8:2"},"parameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"from","nameLocation":"3735:4:2","nodeType":"VariableDeclaration","scope":541,"src":"3727:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"3727:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":438,"mutability":"mutable","name":"to","nameLocation":"3757:2:2","nodeType":"VariableDeclaration","scope":541,"src":"3749:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":437,"name":"address","nodeType":"ElementaryTypeName","src":"3749:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":440,"mutability":"mutable","name":"id","nameLocation":"3777:2:2","nodeType":"VariableDeclaration","scope":541,"src":"3769:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":439,"name":"uint256","nodeType":"ElementaryTypeName","src":"3769:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":442,"mutability":"mutable","name":"amount","nameLocation":"3797:6:2","nodeType":"VariableDeclaration","scope":541,"src":"3789:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"3789:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":444,"mutability":"mutable","name":"data","nameLocation":"3826:4:2","nodeType":"VariableDeclaration","scope":541,"src":"3813:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":443,"name":"bytes","nodeType":"ElementaryTypeName","src":"3813:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3717:119:2"},"returnParameters":{"id":447,"nodeType":"ParameterList","parameters":[],"src":"3889:0:2"},"scope":1234,"src":"3692:955:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1355],"body":{"id":680,"nodeType":"Block","src":"4941:982:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":559,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"4959:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4963:6:2","memberName":"length","nodeType":"MemberAccess","src":"4959:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":561,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"4973:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4981:6:2","memberName":"length","nodeType":"MemberAccess","src":"4973:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4959:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4989:42:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":558,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4951:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4951:81:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":566,"nodeType":"ExpressionStatement","src":"4951:81:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":568,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"5050:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5064:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5056:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"5056:7:2","typeDescriptions":{}}},"id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5056:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5050:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5068:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""},"value":"ERC1155: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d","typeString":"literal_string \"ERC1155: transfer to the zero address\""}],"id":567,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5042:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5042:66:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":576,"nodeType":"ExpressionStatement","src":"5042:66:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":578,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"5139:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":579,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"5147:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5147:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5139:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":583,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"5180:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":584,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"5186:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5186:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":582,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"5163:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5163:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5139:60:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564","id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5213:52:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686","typeString":"literal_string \"ERC1155: transfer caller is not owner nor approved\""},"value":"ERC1155: transfer caller is not owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686","typeString":"literal_string \"ERC1155: transfer caller is not owner nor approved\""}],"id":577,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5118:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5118:157:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":590,"nodeType":"ExpressionStatement","src":"5118:157:2"},{"assignments":[592],"declarations":[{"constant":false,"id":592,"mutability":"mutable","name":"operator","nameLocation":"5294:8:2","nodeType":"VariableDeclaration","scope":680,"src":"5286:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"5286:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":595,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":593,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"5305:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5305:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5286:31:2"},{"expression":{"arguments":[{"id":597,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"5349:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":598,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"5359:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":599,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"5365:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":600,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"5369:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":601,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"5374:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":602,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"5383:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":596,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"5328:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5328:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":604,"nodeType":"ExpressionStatement","src":"5328:60:2"},{"body":{"id":661,"nodeType":"Block","src":"5440:328:2","statements":[{"assignments":[617],"declarations":[{"constant":false,"id":617,"mutability":"mutable","name":"id","nameLocation":"5462:2:2","nodeType":"VariableDeclaration","scope":661,"src":"5454:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":616,"name":"uint256","nodeType":"ElementaryTypeName","src":"5454:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":621,"initialValue":{"baseExpression":{"id":618,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"5467:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":620,"indexExpression":{"id":619,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"5471:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5467:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5454:19:2"},{"assignments":[623],"declarations":[{"constant":false,"id":623,"mutability":"mutable","name":"amount","nameLocation":"5495:6:2","nodeType":"VariableDeclaration","scope":661,"src":"5487:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":622,"name":"uint256","nodeType":"ElementaryTypeName","src":"5487:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":627,"initialValue":{"baseExpression":{"id":624,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"5504:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":626,"indexExpression":{"id":625,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"5512:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5504:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5487:27:2"},{"assignments":[629],"declarations":[{"constant":false,"id":629,"mutability":"mutable","name":"fromBalance","nameLocation":"5537:11:2","nodeType":"VariableDeclaration","scope":661,"src":"5529:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":628,"name":"uint256","nodeType":"ElementaryTypeName","src":"5529:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":635,"initialValue":{"baseExpression":{"baseExpression":{"id":630,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"5551:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":632,"indexExpression":{"id":631,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"5561:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5551:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":634,"indexExpression":{"id":633,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"5565:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5551:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5529:41:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":637,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"5592:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":638,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"5607:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5592:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572","id":640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5615:44:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""},"value":"ERC1155: insufficient balance for transfer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf","typeString":"literal_string \"ERC1155: insufficient balance for transfer\""}],"id":636,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5584:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5584:76:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"ExpressionStatement","src":"5584:76:2"},{"expression":{"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":643,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"5674:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":646,"indexExpression":{"id":644,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"5684:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5674:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":647,"indexExpression":{"id":645,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"5688:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5674:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":648,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"5696:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":649,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"5710:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5696:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5674:42:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":652,"nodeType":"ExpressionStatement","src":"5674:42:2"},{"expression":{"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":653,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"5730:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":656,"indexExpression":{"id":654,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"5740:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5730:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":657,"indexExpression":{"id":655,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"5744:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5730:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":658,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"5751:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5730:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":660,"nodeType":"ExpressionStatement","src":"5730:27:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":609,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"5419:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":610,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"5423:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5427:6:2","memberName":"length","nodeType":"MemberAccess","src":"5423:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5419:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":662,"initializationExpression":{"assignments":[606],"declarations":[{"constant":false,"id":606,"mutability":"mutable","name":"i","nameLocation":"5412:1:2","nodeType":"VariableDeclaration","scope":662,"src":"5404:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":605,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":608,"initialValue":{"hexValue":"30","id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5416:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5404:13:2"},"loopExpression":{"expression":{"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5435:3:2","subExpression":{"id":613,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"5437:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":615,"nodeType":"ExpressionStatement","src":"5435:3:2"},"nodeType":"ForStatement","src":"5399:369:2"},{"eventCall":{"arguments":[{"id":664,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"5797:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":665,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"5807:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":666,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"5813:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":667,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"5817:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":668,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"5822:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":663,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"5783:13:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5783:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":670,"nodeType":"EmitStatement","src":"5778:52:2"},{"expression":{"arguments":[{"id":672,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"5877:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":673,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"5887:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"5893:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":675,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"5897:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":676,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"5902:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":677,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"5911:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":671,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"5841:35:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5841:75:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":679,"nodeType":"ExpressionStatement","src":"5841:75:2"}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"4653:61:2","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":681,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4728:21:2","nodeType":"FunctionDefinition","overrides":{"id":556,"nodeType":"OverrideSpecifier","overrides":[],"src":"4928:8:2"},"parameters":{"id":555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"from","nameLocation":"4767:4:2","nodeType":"VariableDeclaration","scope":681,"src":"4759:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"4759:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":546,"mutability":"mutable","name":"to","nameLocation":"4789:2:2","nodeType":"VariableDeclaration","scope":681,"src":"4781:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":545,"name":"address","nodeType":"ElementaryTypeName","src":"4781:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"ids","nameLocation":"4818:3:2","nodeType":"VariableDeclaration","scope":681,"src":"4801:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":547,"name":"uint256","nodeType":"ElementaryTypeName","src":"4801:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":548,"nodeType":"ArrayTypeName","src":"4801:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":552,"mutability":"mutable","name":"amounts","nameLocation":"4848:7:2","nodeType":"VariableDeclaration","scope":681,"src":"4831:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"4831:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":551,"nodeType":"ArrayTypeName","src":"4831:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":554,"mutability":"mutable","name":"data","nameLocation":"4878:4:2","nodeType":"VariableDeclaration","scope":681,"src":"4865:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":553,"name":"bytes","nodeType":"ElementaryTypeName","src":"4865:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4749:139:2"},"returnParameters":{"id":557,"nodeType":"ParameterList","parameters":[],"src":"4941:0:2"},"scope":1234,"src":"4719:1204:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":691,"nodeType":"Block","src":"6802:30:2","statements":[{"expression":{"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":687,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"6812:4:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":688,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"6819:6:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"6812:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":690,"nodeType":"ExpressionStatement","src":"6812:13:2"}]},"documentation":{"id":682,"nodeType":"StructuredDocumentation","src":"5929:812:2","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":692,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"6755:7:2","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"newuri","nameLocation":"6777:6:2","nodeType":"VariableDeclaration","scope":692,"src":"6763:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":683,"name":"string","nodeType":"ElementaryTypeName","src":"6763:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6762:22:2"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[],"src":"6802:0:2"},"scope":1234,"src":"6746:86:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":766,"nodeType":"Block","src":"7316:449:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":705,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"7334:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7353:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7345:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"7345:7:2","typeDescriptions":{}}},"id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7345:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7334:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f2061646472657373","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7357:35:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""},"value":"ERC1155: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""}],"id":704,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7326:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7326:67:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"7326:67:2"},{"assignments":[715],"declarations":[{"constant":false,"id":715,"mutability":"mutable","name":"operator","nameLocation":"7412:8:2","nodeType":"VariableDeclaration","scope":766,"src":"7404:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":714,"name":"address","nodeType":"ElementaryTypeName","src":"7404:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":718,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":716,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"7423:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7423:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7404:31:2"},{"expression":{"arguments":[{"id":720,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"7467:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7485:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7477:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"7477:7:2","typeDescriptions":{}}},"id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7477:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":725,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"7489:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":727,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"7516:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":726,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"7498:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7498:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":730,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"7539:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":729,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"7521:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7521:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":732,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"7548:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":719,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"7446:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7446:107:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":734,"nodeType":"ExpressionStatement","src":"7446:107:2"},{"expression":{"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":735,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"7564:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":738,"indexExpression":{"id":736,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"7574:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7564:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":739,"indexExpression":{"id":737,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"7578:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7564:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":740,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"7590:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7564:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":742,"nodeType":"ExpressionStatement","src":"7564:32:2"},{"eventCall":{"arguments":[{"id":744,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"7626:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:2","typeDescriptions":{}}},"id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":749,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"7648:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":750,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"7657:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":751,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"7661:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":743,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"7611:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7611:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":753,"nodeType":"EmitStatement","src":"7606:62:2"},{"expression":{"arguments":[{"id":755,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"7710:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7728:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7720:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"7720:7:2","typeDescriptions":{}}},"id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7720:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":760,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"7732:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":761,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"7741:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":762,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"7745:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":763,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"7753:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":754,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"7679:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:79:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":765,"nodeType":"ExpressionStatement","src":"7679:79:2"}]},"documentation":{"id":693,"nodeType":"StructuredDocumentation","src":"6838:377:2","text":" @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n Emits a {TransferSingle} event.\n Requirements:\n - `account` cannot be the zero address.\n - If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":767,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7229:5:2","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"account","nameLocation":"7243:7:2","nodeType":"VariableDeclaration","scope":767,"src":"7235:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"7235:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"id","nameLocation":"7260:2:2","nodeType":"VariableDeclaration","scope":767,"src":"7252:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"7252:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"amount","nameLocation":"7272:6:2","nodeType":"VariableDeclaration","scope":767,"src":"7264:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":698,"name":"uint256","nodeType":"ElementaryTypeName","src":"7264:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"data","nameLocation":"7293:4:2","nodeType":"VariableDeclaration","scope":767,"src":"7280:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":700,"name":"bytes","nodeType":"ElementaryTypeName","src":"7280:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7234:64:2"},"returnParameters":{"id":703,"nodeType":"ParameterList","parameters":[],"src":"7316:0:2"},"scope":1234,"src":"7220:545:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":865,"nodeType":"Block","src":"8226:558:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":782,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"8244:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8258:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8250:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"8250:7:2","typeDescriptions":{}}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8250:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8244:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206d696e7420746f20746865207a65726f2061646472657373","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8262:35:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""},"value":"ERC1155: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2","typeString":"literal_string \"ERC1155: mint to the zero address\""}],"id":781,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8236:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8236:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":790,"nodeType":"ExpressionStatement","src":"8236:62:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":792,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"8316:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8320:6:2","memberName":"length","nodeType":"MemberAccess","src":"8316:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":794,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"8330:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8338:6:2","memberName":"length","nodeType":"MemberAccess","src":"8330:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8316:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8346:42:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":791,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8308:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8308:81:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":799,"nodeType":"ExpressionStatement","src":"8308:81:2"},{"assignments":[801],"declarations":[{"constant":false,"id":801,"mutability":"mutable","name":"operator","nameLocation":"8408:8:2","nodeType":"VariableDeclaration","scope":865,"src":"8400:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"8400:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":804,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":802,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"8419:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8419:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8400:31:2"},{"expression":{"arguments":[{"id":806,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"8463:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8481:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8473:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"8473:7:2","typeDescriptions":{}}},"id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8473:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":811,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"8485:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"8489:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":813,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"8494:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":814,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"8503:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":805,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"8442:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8442:66:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":816,"nodeType":"ExpressionStatement","src":"8442:66:2"},{"body":{"id":840,"nodeType":"Block","src":"8557:60:2","statements":[{"expression":{"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":828,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"8571:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":833,"indexExpression":{"baseExpression":{"id":829,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"8581:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":831,"indexExpression":{"id":830,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"8585:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8581:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8571:17:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":834,"indexExpression":{"id":832,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"8589:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8571:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":835,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"8596:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":837,"indexExpression":{"id":836,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"8604:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8596:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8571:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":839,"nodeType":"ExpressionStatement","src":"8571:35:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":821,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"8536:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":822,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"8540:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8544:6:2","memberName":"length","nodeType":"MemberAccess","src":"8540:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":841,"initializationExpression":{"assignments":[818],"declarations":[{"constant":false,"id":818,"mutability":"mutable","name":"i","nameLocation":"8529:1:2","nodeType":"VariableDeclaration","scope":841,"src":"8524:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint","nodeType":"ElementaryTypeName","src":"8524:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":820,"initialValue":{"hexValue":"30","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8533:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8524:10:2"},"loopExpression":{"expression":{"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8552:3:2","subExpression":{"id":825,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"8552:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":827,"nodeType":"ExpressionStatement","src":"8552:3:2"},"nodeType":"ForStatement","src":"8519:98:2"},{"eventCall":{"arguments":[{"id":843,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"8646:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8664:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8656:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"8656:7:2","typeDescriptions":{}}},"id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8656:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":848,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"8668:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":849,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"8672:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":850,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"8677:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":842,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"8632:13:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8632:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":852,"nodeType":"EmitStatement","src":"8627:58:2"},{"expression":{"arguments":[{"id":854,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"8732:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8750:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8742:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"8742:7:2","typeDescriptions":{}}},"id":858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8742:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":859,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"8754:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":860,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"8758:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":861,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"8763:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":862,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"8772:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":853,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"8696:35:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8696:81:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":864,"nodeType":"ExpressionStatement","src":"8696:81:2"}]},"documentation":{"id":768,"nodeType":"StructuredDocumentation","src":"7771:334:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":866,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"8119:10:2","nodeType":"FunctionDefinition","parameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"to","nameLocation":"8138:2:2","nodeType":"VariableDeclaration","scope":866,"src":"8130:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"8130:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"ids","nameLocation":"8159:3:2","nodeType":"VariableDeclaration","scope":866,"src":"8142:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":771,"name":"uint256","nodeType":"ElementaryTypeName","src":"8142:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":772,"nodeType":"ArrayTypeName","src":"8142:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":776,"mutability":"mutable","name":"amounts","nameLocation":"8181:7:2","nodeType":"VariableDeclaration","scope":866,"src":"8164:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":774,"name":"uint256","nodeType":"ElementaryTypeName","src":"8164:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":775,"nodeType":"ArrayTypeName","src":"8164:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"data","nameLocation":"8203:4:2","nodeType":"VariableDeclaration","scope":866,"src":"8190:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":777,"name":"bytes","nodeType":"ElementaryTypeName","src":"8190:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8129:79:2"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[],"src":"8226:0:2"},"scope":1234,"src":"8110:674:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":943,"nodeType":"Block","src":"9110:516:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":877,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"9128:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9147:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9139:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":878,"name":"address","nodeType":"ElementaryTypeName","src":"9139:7:2","typeDescriptions":{}}},"id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9139:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9128:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373","id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9151:37:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""},"value":"ERC1155: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""}],"id":876,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9120:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9120:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":885,"nodeType":"ExpressionStatement","src":"9120:69:2"},{"assignments":[887],"declarations":[{"constant":false,"id":887,"mutability":"mutable","name":"operator","nameLocation":"9208:8:2","nodeType":"VariableDeclaration","scope":943,"src":"9200:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"9200:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":890,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":888,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"9219:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9219:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9200:31:2"},{"expression":{"arguments":[{"id":892,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"9263:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":893,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"9273:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9290:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9282:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"9282:7:2","typeDescriptions":{}}},"id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9282:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":899,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"9312:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":898,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"9294:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9294:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":902,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"9335:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":901,"name":"_asSingletonArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"9317:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9317:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9344:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":891,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"9242:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9242:105:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":906,"nodeType":"ExpressionStatement","src":"9242:105:2"},{"assignments":[908],"declarations":[{"constant":false,"id":908,"mutability":"mutable","name":"accountBalance","nameLocation":"9366:14:2","nodeType":"VariableDeclaration","scope":943,"src":"9358:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":907,"name":"uint256","nodeType":"ElementaryTypeName","src":"9358:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":914,"initialValue":{"baseExpression":{"baseExpression":{"id":909,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"9383:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":911,"indexExpression":{"id":910,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"9393:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9383:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":913,"indexExpression":{"id":912,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"9397:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9383:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9358:47:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":916,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"9423:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":917,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"9441:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9423:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9449:38:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""},"value":"ERC1155: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""}],"id":915,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9415:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9415:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":921,"nodeType":"ExpressionStatement","src":"9415:73:2"},{"expression":{"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":922,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"9498:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":925,"indexExpression":{"id":923,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"9508:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9498:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":926,"indexExpression":{"id":924,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"9512:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9498:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":927,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"9523:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":928,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"9540:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9523:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9498:48:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":931,"nodeType":"ExpressionStatement","src":"9498:48:2"},{"eventCall":{"arguments":[{"id":933,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"9577:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":934,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"9587:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9604:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9596:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"9596:7:2","typeDescriptions":{}}},"id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9596:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":939,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"9608:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":940,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"9612:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":932,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"9562:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9562:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":942,"nodeType":"EmitStatement","src":"9557:62:2"}]},"documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"8790:238:2","text":" @dev Destroys `amount` tokens of token type `id` from `account`\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens of token type `id`."},"id":944,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9042:5:2","nodeType":"FunctionDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":869,"mutability":"mutable","name":"account","nameLocation":"9056:7:2","nodeType":"VariableDeclaration","scope":944,"src":"9048:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"9048:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"id","nameLocation":"9073:2:2","nodeType":"VariableDeclaration","scope":944,"src":"9065:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"9065:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":873,"mutability":"mutable","name":"amount","nameLocation":"9085:6:2","nodeType":"VariableDeclaration","scope":944,"src":"9077:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":872,"name":"uint256","nodeType":"ElementaryTypeName","src":"9077:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9047:45:2"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[],"src":"9110:0:2"},"scope":1234,"src":"9033:593:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1053,"nodeType":"Block","src":"9922:717:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":957,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"9940:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9959:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9951:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"9951:7:2","typeDescriptions":{}}},"id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9951:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9940:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373","id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9963:37:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""},"value":"ERC1155: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a","typeString":"literal_string \"ERC1155: burn from the zero address\""}],"id":956,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9932:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9932:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":965,"nodeType":"ExpressionStatement","src":"9932:69:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":967,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"10019:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10023:6:2","memberName":"length","nodeType":"MemberAccess","src":"10019:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":969,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"10033:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10041:6:2","memberName":"length","nodeType":"MemberAccess","src":"10033:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10019:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10049:42:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""},"value":"ERC1155: ids and amounts length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807","typeString":"literal_string \"ERC1155: ids and amounts length mismatch\""}],"id":966,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10011:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10011:81:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":974,"nodeType":"ExpressionStatement","src":"10011:81:2"},{"assignments":[976],"declarations":[{"constant":false,"id":976,"mutability":"mutable","name":"operator","nameLocation":"10111:8:2","nodeType":"VariableDeclaration","scope":1053,"src":"10103:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"10103:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":979,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":977,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"10122:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10122:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10103:31:2"},{"expression":{"arguments":[{"id":981,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"10166:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":982,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"10176:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10193:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10185:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"10185:7:2","typeDescriptions":{}}},"id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10185:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":987,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"10197:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":988,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"10202:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10211:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":980,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"10145:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10145:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":991,"nodeType":"ExpressionStatement","src":"10145:69:2"},{"body":{"id":1040,"nodeType":"Block","src":"10263:296:2","statements":[{"assignments":[1004],"declarations":[{"constant":false,"id":1004,"mutability":"mutable","name":"id","nameLocation":"10285:2:2","nodeType":"VariableDeclaration","scope":1040,"src":"10277:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1003,"name":"uint256","nodeType":"ElementaryTypeName","src":"10277:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1008,"initialValue":{"baseExpression":{"id":1005,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"10290:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1007,"indexExpression":{"id":1006,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"10294:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10290:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10277:19:2"},{"assignments":[1010],"declarations":[{"constant":false,"id":1010,"mutability":"mutable","name":"amount","nameLocation":"10318:6:2","nodeType":"VariableDeclaration","scope":1040,"src":"10310:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"10310:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1014,"initialValue":{"baseExpression":{"id":1011,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"10327:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1013,"indexExpression":{"id":1012,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"10335:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10327:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10310:27:2"},{"assignments":[1016],"declarations":[{"constant":false,"id":1016,"mutability":"mutable","name":"accountBalance","nameLocation":"10360:14:2","nodeType":"VariableDeclaration","scope":1040,"src":"10352:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1015,"name":"uint256","nodeType":"ElementaryTypeName","src":"10352:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1022,"initialValue":{"baseExpression":{"baseExpression":{"id":1017,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"10377:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1019,"indexExpression":{"id":1018,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"10387:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10377:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1021,"indexExpression":{"id":1020,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"10391:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10377:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10352:47:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1024,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"10421:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1025,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"10439:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10421:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10447:38:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""},"value":"ERC1155: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685","typeString":"literal_string \"ERC1155: burn amount exceeds balance\""}],"id":1023,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10413:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10413:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1029,"nodeType":"ExpressionStatement","src":"10413:73:2"},{"expression":{"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1030,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"10500:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1033,"indexExpression":{"id":1031,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"10510:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10500:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1034,"indexExpression":{"id":1032,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"10514:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10500:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1035,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"10525:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1036,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"10542:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10525:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10500:48:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1039,"nodeType":"ExpressionStatement","src":"10500:48:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":996,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"10242:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":997,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"10246:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10250:6:2","memberName":"length","nodeType":"MemberAccess","src":"10246:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1041,"initializationExpression":{"assignments":[993],"declarations":[{"constant":false,"id":993,"mutability":"mutable","name":"i","nameLocation":"10235:1:2","nodeType":"VariableDeclaration","scope":1041,"src":"10230:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":992,"name":"uint","nodeType":"ElementaryTypeName","src":"10230:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":995,"initialValue":{"hexValue":"30","id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10239:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10230:10:2"},"loopExpression":{"expression":{"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10258:3:2","subExpression":{"id":1000,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"10258:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1002,"nodeType":"ExpressionStatement","src":"10258:3:2"},"nodeType":"ForStatement","src":"10225:334:2"},{"eventCall":{"arguments":[{"id":1043,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"10588:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1044,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"10598:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10615:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10607:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"10607:7:2","typeDescriptions":{}}},"id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10607:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1049,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"10619:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1050,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"10624:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1042,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"10574:13:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10574:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1052,"nodeType":"EmitStatement","src":"10569:63:2"}]},"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"9632:183:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."},"id":1054,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"9829:10:2","nodeType":"FunctionDefinition","parameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"account","nameLocation":"9848:7:2","nodeType":"VariableDeclaration","scope":1054,"src":"9840:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"9840:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"ids","nameLocation":"9874:3:2","nodeType":"VariableDeclaration","scope":1054,"src":"9857:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":948,"name":"uint256","nodeType":"ElementaryTypeName","src":"9857:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":949,"nodeType":"ArrayTypeName","src":"9857:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"amounts","nameLocation":"9896:7:2","nodeType":"VariableDeclaration","scope":1054,"src":"9879:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":951,"name":"uint256","nodeType":"ElementaryTypeName","src":"9879:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":952,"nodeType":"ArrayTypeName","src":"9879:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"9839:65:2"},"returnParameters":{"id":955,"nodeType":"ParameterList","parameters":[],"src":"9922:0:2"},"scope":1234,"src":"9820:819:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1072,"nodeType":"Block","src":"11805:3:2","statements":[]},"documentation":{"id":1055,"nodeType":"StructuredDocumentation","src":"10645:923:2","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1073,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"11582:20:2","nodeType":"FunctionDefinition","parameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"operator","nameLocation":"11620:8:2","nodeType":"VariableDeclaration","scope":1073,"src":"11612:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"11612:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"from","nameLocation":"11646:4:2","nodeType":"VariableDeclaration","scope":1073,"src":"11638:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1058,"name":"address","nodeType":"ElementaryTypeName","src":"11638:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"to","nameLocation":"11668:2:2","nodeType":"VariableDeclaration","scope":1073,"src":"11660:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"11660:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"ids","nameLocation":"11697:3:2","nodeType":"VariableDeclaration","scope":1073,"src":"11680:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"11680:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1063,"nodeType":"ArrayTypeName","src":"11680:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"amounts","nameLocation":"11727:7:2","nodeType":"VariableDeclaration","scope":1073,"src":"11710:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"11710:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1066,"nodeType":"ArrayTypeName","src":"11710:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"data","nameLocation":"11757:4:2","nodeType":"VariableDeclaration","scope":1073,"src":"11744:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1068,"name":"bytes","nodeType":"ElementaryTypeName","src":"11744:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11602:165:2"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"11805:0:2"},"scope":1234,"src":"11573:235:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1137,"nodeType":"Block","src":"12019:536:2","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1088,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"12033:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12036:10:2","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":3735,"src":"12033:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12033:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1136,"nodeType":"IfStatement","src":"12029:520:2","trueBody":{"id":1135,"nodeType":"Block","src":"12050:499:2","statements":[{"clauses":[{"block":{"id":1117,"nodeType":"Block","src":"12167:188:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1104,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"12189:8:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"arguments":[{"id":1106,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"12218:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1105,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"12201:16:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1397_$","typeString":"type(contract IERC1155Receiver)"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12201:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1397","typeString":"contract IERC1155Receiver"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12222:17:2","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"12201:38:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12240:8:2","memberName":"selector","nodeType":"MemberAccess","src":"12201:47:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"12189:59:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1116,"nodeType":"IfStatement","src":"12185:156:2","trueBody":{"id":1115,"nodeType":"Block","src":"12250:91:2","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73","id":1112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12279:42:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""},"value":"ERC1155: ERC1155Receiver rejected tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""}],"id":1111,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"12272:6:2","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12272:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1114,"nodeType":"ExpressionStatement","src":"12272:50:2"}]}}]},"errorName":"","id":1118,"nodeType":"TryCatchClause","parameters":{"id":1103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"response","nameLocation":"12157:8:2","nodeType":"VariableDeclaration","scope":1118,"src":"12150:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1101,"name":"bytes4","nodeType":"ElementaryTypeName","src":"12150:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"12149:17:2"},"src":"12141:214:2"},{"block":{"id":1126,"nodeType":"Block","src":"12390:47:2","statements":[{"expression":{"arguments":[{"id":1123,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"12415:6:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1122,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"12408:6:2","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1125,"nodeType":"ExpressionStatement","src":"12408:14:2"}]},"errorName":"Error","id":1127,"nodeType":"TryCatchClause","parameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"mutability":"mutable","name":"reason","nameLocation":"12382:6:2","nodeType":"VariableDeclaration","scope":1127,"src":"12368:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1119,"name":"string","nodeType":"ElementaryTypeName","src":"12368:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12367:22:2"},"src":"12356:81:2"},{"block":{"id":1132,"nodeType":"Block","src":"12444:95:2","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12469:54:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed","typeString":"literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""},"value":"ERC1155: transfer to non ERC1155Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed","typeString":"literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""}],"id":1128,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"12462:6:2","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12462:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1131,"nodeType":"ExpressionStatement","src":"12462:62:2"}]},"errorName":"","id":1133,"nodeType":"TryCatchClause","src":"12438:101:2"}],"externalCall":{"arguments":[{"id":1095,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"12107:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1096,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"12117:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1097,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"12123:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1098,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"12127:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1099,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"12135:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1092,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"12085:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1091,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"12068:16:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1397_$","typeString":"type(contract IERC1155Receiver)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12068:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1397","typeString":"contract IERC1155Receiver"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12089:17:2","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"12068:38:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12068:72:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1134,"nodeType":"TryStatement","src":"12064:475:2"}]}}]},"id":1138,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeTransferAcceptanceCheck","nameLocation":"11823:30:2","nodeType":"FunctionDefinition","parameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"operator","nameLocation":"11871:8:2","nodeType":"VariableDeclaration","scope":1138,"src":"11863:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1074,"name":"address","nodeType":"ElementaryTypeName","src":"11863:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"from","nameLocation":"11897:4:2","nodeType":"VariableDeclaration","scope":1138,"src":"11889:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"11889:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1079,"mutability":"mutable","name":"to","nameLocation":"11919:2:2","nodeType":"VariableDeclaration","scope":1138,"src":"11911:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1078,"name":"address","nodeType":"ElementaryTypeName","src":"11911:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1081,"mutability":"mutable","name":"id","nameLocation":"11939:2:2","nodeType":"VariableDeclaration","scope":1138,"src":"11931:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"11931:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"amount","nameLocation":"11959:6:2","nodeType":"VariableDeclaration","scope":1138,"src":"11951:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"11951:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"data","nameLocation":"11988:4:2","nodeType":"VariableDeclaration","scope":1138,"src":"11975:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1084,"name":"bytes","nodeType":"ElementaryTypeName","src":"11975:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11853:145:2"},"returnParameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"12019:0:2"},"scope":1234,"src":"11814:741:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1204,"nodeType":"Block","src":"12791:548:2","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1155,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"12805:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12808:10:2","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":3735,"src":"12805:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12805:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1203,"nodeType":"IfStatement","src":"12801:532:2","trueBody":{"id":1202,"nodeType":"Block","src":"12822:511:2","statements":[{"clauses":[{"block":{"id":1184,"nodeType":"Block","src":"12946:193:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1171,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"12968:8:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"arguments":[{"id":1173,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"12997:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1172,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"12980:16:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1397_$","typeString":"type(contract IERC1155Receiver)"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12980:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1397","typeString":"contract IERC1155Receiver"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13001:22:2","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1396,"src":"12980:43:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13024:8:2","memberName":"selector","nodeType":"MemberAccess","src":"12980:52:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"12968:64:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1183,"nodeType":"IfStatement","src":"12964:161:2","trueBody":{"id":1182,"nodeType":"Block","src":"13034:91:2","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73","id":1179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13063:42:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""},"value":"ERC1155: ERC1155Receiver rejected tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503","typeString":"literal_string \"ERC1155: ERC1155Receiver rejected tokens\""}],"id":1178,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"13056:6:2","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13056:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1181,"nodeType":"ExpressionStatement","src":"13056:50:2"}]}}]},"errorName":"","id":1185,"nodeType":"TryCatchClause","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"mutability":"mutable","name":"response","nameLocation":"12936:8:2","nodeType":"VariableDeclaration","scope":1185,"src":"12929:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1168,"name":"bytes4","nodeType":"ElementaryTypeName","src":"12929:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"12928:17:2"},"src":"12920:219:2"},{"block":{"id":1193,"nodeType":"Block","src":"13174:47:2","statements":[{"expression":{"arguments":[{"id":1190,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"13199:6:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1189,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"13192:6:2","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13192:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1192,"nodeType":"ExpressionStatement","src":"13192:14:2"}]},"errorName":"Error","id":1194,"nodeType":"TryCatchClause","parameters":{"id":1188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"reason","nameLocation":"13166:6:2","nodeType":"VariableDeclaration","scope":1194,"src":"13152:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1186,"name":"string","nodeType":"ElementaryTypeName","src":"13152:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13151:22:2"},"src":"13140:81:2"},{"block":{"id":1199,"nodeType":"Block","src":"13228:95:2","statements":[{"expression":{"arguments":[{"hexValue":"455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572","id":1196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13253:54:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed","typeString":"literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""},"value":"ERC1155: transfer to non ERC1155Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed","typeString":"literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""}],"id":1195,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"13246:6:2","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13246:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1198,"nodeType":"ExpressionStatement","src":"13246:62:2"}]},"errorName":"","id":1200,"nodeType":"TryCatchClause","src":"13222:101:2"}],"externalCall":{"arguments":[{"id":1162,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"12884:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1163,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"12894:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1164,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"12900:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1165,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"12905:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1166,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"12914:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1159,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"12857:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1158,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"12840:16:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1397_$","typeString":"type(contract IERC1155Receiver)"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12840:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1397","typeString":"contract IERC1155Receiver"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12861:22:2","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1396,"src":"12840:43:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12840:79:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1201,"nodeType":"TryStatement","src":"12836:487:2"}]}}]},"id":1205,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeBatchTransferAcceptanceCheck","nameLocation":"12570:35:2","nodeType":"FunctionDefinition","parameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"operator","nameLocation":"12623:8:2","nodeType":"VariableDeclaration","scope":1205,"src":"12615:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"12615:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"from","nameLocation":"12649:4:2","nodeType":"VariableDeclaration","scope":1205,"src":"12641:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1141,"name":"address","nodeType":"ElementaryTypeName","src":"12641:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"to","nameLocation":"12671:2:2","nodeType":"VariableDeclaration","scope":1205,"src":"12663:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1143,"name":"address","nodeType":"ElementaryTypeName","src":"12663:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"ids","nameLocation":"12700:3:2","nodeType":"VariableDeclaration","scope":1205,"src":"12683:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"12683:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1146,"nodeType":"ArrayTypeName","src":"12683:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1150,"mutability":"mutable","name":"amounts","nameLocation":"12730:7:2","nodeType":"VariableDeclaration","scope":1205,"src":"12713:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1148,"name":"uint256","nodeType":"ElementaryTypeName","src":"12713:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1149,"nodeType":"ArrayTypeName","src":"12713:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1152,"mutability":"mutable","name":"data","nameLocation":"12760:4:2","nodeType":"VariableDeclaration","scope":1205,"src":"12747:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1151,"name":"bytes","nodeType":"ElementaryTypeName","src":"12747:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12605:165:2"},"returnParameters":{"id":1154,"nodeType":"ParameterList","parameters":[],"src":"12791:0:2"},"scope":1234,"src":"12561:778:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1232,"nodeType":"Block","src":"13429:109:2","statements":[{"assignments":[1217],"declarations":[{"constant":false,"id":1217,"mutability":"mutable","name":"array","nameLocation":"13456:5:2","nodeType":"VariableDeclaration","scope":1232,"src":"13439:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1215,"name":"uint256","nodeType":"ElementaryTypeName","src":"13439:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1216,"nodeType":"ArrayTypeName","src":"13439:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1223,"initialValue":{"arguments":[{"hexValue":"31","id":1221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13478:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13464:13:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"13468:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1219,"nodeType":"ArrayTypeName","src":"13468:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13464:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"13439:41:2"},{"expression":{"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1224,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"13490:5:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1226,"indexExpression":{"hexValue":"30","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13496:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13490:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1227,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"13501:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13490:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1229,"nodeType":"ExpressionStatement","src":"13490:18:2"},{"expression":{"id":1230,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"13526:5:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1212,"id":1231,"nodeType":"Return","src":"13519:12:2"}]},"id":1233,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArray","nameLocation":"13354:17:2","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"element","nameLocation":"13380:7:2","nodeType":"VariableDeclaration","scope":1233,"src":"13372:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"13372:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13371:17:2"},"returnParameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1233,"src":"13411:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1209,"name":"uint256","nodeType":"ElementaryTypeName","src":"13411:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1210,"nodeType":"ArrayTypeName","src":"13411:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13410:18:2"},"scope":1234,"src":"13345:193:2","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1235,"src":"497:13043:2","usedErrors":[]}],"src":"33:13508:2"},"id":2},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1356],"IERC165":[4273]},"id":1357,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1236,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1357,"sourceUnit":4274,"src":"58:47:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1239,"name":"IERC165","nameLocations":["295:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":4273,"src":"295:7:3"},"id":1240,"nodeType":"InheritanceSpecifier","src":"295:7:3"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1238,"nodeType":"StructuredDocumentation","src":"107:165:3","text":" @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"id":1356,"linearizedBaseContracts":[1356,4273],"name":"IERC1155","nameLocation":"283:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1241,"nodeType":"StructuredDocumentation","src":"309:121:3","text":" @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1253,"name":"TransferSingle","nameLocation":"441:14:3","nodeType":"EventDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"472:8:3","nodeType":"VariableDeclaration","scope":1253,"src":"456:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"456:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1245,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"498:4:3","nodeType":"VariableDeclaration","scope":1253,"src":"482:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"482:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1247,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"520:2:3","nodeType":"VariableDeclaration","scope":1253,"src":"504:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"504:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1249,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"532:2:3","nodeType":"VariableDeclaration","scope":1253,"src":"524:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"524:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1251,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"544:5:3","nodeType":"VariableDeclaration","scope":1253,"src":"536:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1250,"name":"uint256","nodeType":"ElementaryTypeName","src":"536:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"455:95:3"},"src":"435:116:3"},{"anonymous":false,"documentation":{"id":1254,"nodeType":"StructuredDocumentation","src":"557:144:3","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1268,"name":"TransferBatch","nameLocation":"712:13:3","nodeType":"EventDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"742:8:3","nodeType":"VariableDeclaration","scope":1268,"src":"726:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1255,"name":"address","nodeType":"ElementaryTypeName","src":"726:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1258,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"768:4:3","nodeType":"VariableDeclaration","scope":1268,"src":"752:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1257,"name":"address","nodeType":"ElementaryTypeName","src":"752:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1260,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"790:2:3","nodeType":"VariableDeclaration","scope":1268,"src":"774:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1259,"name":"address","nodeType":"ElementaryTypeName","src":"774:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1263,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"804:3:3","nodeType":"VariableDeclaration","scope":1268,"src":"794:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"794:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1262,"nodeType":"ArrayTypeName","src":"794:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1266,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"819:6:3","nodeType":"VariableDeclaration","scope":1268,"src":"809:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1264,"name":"uint256","nodeType":"ElementaryTypeName","src":"809:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1265,"nodeType":"ArrayTypeName","src":"809:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"725:101:3"},"src":"706:121:3"},{"anonymous":false,"documentation":{"id":1269,"nodeType":"StructuredDocumentation","src":"833:147:3","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1277,"name":"ApprovalForAll","nameLocation":"991:14:3","nodeType":"EventDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1022:7:3","nodeType":"VariableDeclaration","scope":1277,"src":"1006:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1270,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1273,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1047:8:3","nodeType":"VariableDeclaration","scope":1277,"src":"1031:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1275,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1062:8:3","nodeType":"VariableDeclaration","scope":1277,"src":"1057:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1274,"name":"bool","nodeType":"ElementaryTypeName","src":"1057:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1005:66:3"},"src":"985:87:3"},{"anonymous":false,"documentation":{"id":1278,"nodeType":"StructuredDocumentation","src":"1078:343:3","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1284,"name":"URI","nameLocation":"1432:3:3","nodeType":"EventDefinition","parameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1443:5:3","nodeType":"VariableDeclaration","scope":1284,"src":"1436:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1279,"name":"string","nodeType":"ElementaryTypeName","src":"1436:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1282,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1466:2:3","nodeType":"VariableDeclaration","scope":1284,"src":"1450:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1450:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1435:34:3"},"src":"1426:44:3"},{"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"1476:173:3","text":" @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":1294,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1663:9:3","nodeType":"FunctionDefinition","parameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"account","nameLocation":"1681:7:3","nodeType":"VariableDeclaration","scope":1294,"src":"1673:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"1673:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1289,"mutability":"mutable","name":"id","nameLocation":"1698:2:3","nodeType":"VariableDeclaration","scope":1294,"src":"1690:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1690:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1672:29:3"},"returnParameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1294,"src":"1725:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1724:9:3"},"scope":1356,"src":"1654:80:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1295,"nodeType":"StructuredDocumentation","src":"1740:188:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1307,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1942:14:3","nodeType":"FunctionDefinition","parameters":{"id":1302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"accounts","nameLocation":"1976:8:3","nodeType":"VariableDeclaration","scope":1307,"src":"1957:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1296,"name":"address","nodeType":"ElementaryTypeName","src":"1957:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1297,"nodeType":"ArrayTypeName","src":"1957:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1301,"mutability":"mutable","name":"ids","nameLocation":"2005:3:3","nodeType":"VariableDeclaration","scope":1307,"src":"1986:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"1986:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1300,"nodeType":"ArrayTypeName","src":"1986:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1956:53:3"},"returnParameters":{"id":1306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1307,"src":"2033:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1303,"name":"uint256","nodeType":"ElementaryTypeName","src":"2033:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1304,"nodeType":"ArrayTypeName","src":"2033:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2032:18:3"},"scope":1356,"src":"1933:118:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"2057:248:3","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."},"functionSelector":"a22cb465","id":1315,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2319:17:3","nodeType":"FunctionDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"operator","nameLocation":"2345:8:3","nodeType":"VariableDeclaration","scope":1315,"src":"2337:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"2337:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"approved","nameLocation":"2360:8:3","nodeType":"VariableDeclaration","scope":1315,"src":"2355:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1311,"name":"bool","nodeType":"ElementaryTypeName","src":"2355:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2336:33:3"},"returnParameters":{"id":1314,"nodeType":"ParameterList","parameters":[],"src":"2378:0:3"},"scope":1356,"src":"2310:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"2385:135:3","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1325,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2534:16:3","nodeType":"FunctionDefinition","parameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"account","nameLocation":"2559:7:3","nodeType":"VariableDeclaration","scope":1325,"src":"2551:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"2551:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"operator","nameLocation":"2576:8:3","nodeType":"VariableDeclaration","scope":1325,"src":"2568:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1319,"name":"address","nodeType":"ElementaryTypeName","src":"2568:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2550:35:3"},"returnParameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1325,"src":"2609:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1322,"name":"bool","nodeType":"ElementaryTypeName","src":"2609:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2608:6:3"},"scope":1356,"src":"2525:90:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1326,"nodeType":"StructuredDocumentation","src":"2621:559:3","text":" @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1339,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3194:16:3","nodeType":"FunctionDefinition","parameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"from","nameLocation":"3219:4:3","nodeType":"VariableDeclaration","scope":1339,"src":"3211:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"to","nameLocation":"3233:2:3","nodeType":"VariableDeclaration","scope":1339,"src":"3225:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"3225:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"id","nameLocation":"3245:2:3","nodeType":"VariableDeclaration","scope":1339,"src":"3237:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1331,"name":"uint256","nodeType":"ElementaryTypeName","src":"3237:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1334,"mutability":"mutable","name":"amount","nameLocation":"3257:6:3","nodeType":"VariableDeclaration","scope":1339,"src":"3249:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1333,"name":"uint256","nodeType":"ElementaryTypeName","src":"3249:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"data","nameLocation":"3280:4:3","nodeType":"VariableDeclaration","scope":1339,"src":"3265:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1335,"name":"bytes","nodeType":"ElementaryTypeName","src":"3265:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3210:75:3"},"returnParameters":{"id":1338,"nodeType":"ParameterList","parameters":[],"src":"3294:0:3"},"scope":1356,"src":"3185:110:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"3301:390:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1355,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"3705:21:3","nodeType":"FunctionDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"from","nameLocation":"3735:4:3","nodeType":"VariableDeclaration","scope":1355,"src":"3727:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1341,"name":"address","nodeType":"ElementaryTypeName","src":"3727:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1344,"mutability":"mutable","name":"to","nameLocation":"3749:2:3","nodeType":"VariableDeclaration","scope":1355,"src":"3741:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1343,"name":"address","nodeType":"ElementaryTypeName","src":"3741:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1347,"mutability":"mutable","name":"ids","nameLocation":"3772:3:3","nodeType":"VariableDeclaration","scope":1355,"src":"3753:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1345,"name":"uint256","nodeType":"ElementaryTypeName","src":"3753:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1346,"nodeType":"ArrayTypeName","src":"3753:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"amounts","nameLocation":"3796:7:3","nodeType":"VariableDeclaration","scope":1355,"src":"3777:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"3777:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1349,"nodeType":"ArrayTypeName","src":"3777:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"data","nameLocation":"3820:4:3","nodeType":"VariableDeclaration","scope":1355,"src":"3805:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1351,"name":"bytes","nodeType":"ElementaryTypeName","src":"3805:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3726:99:3"},"returnParameters":{"id":1354,"nodeType":"ParameterList","parameters":[],"src":"3834:0:3"},"scope":1356,"src":"3696:139:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1357,"src":"273:3564:3","usedErrors":[]}],"src":"33:3805:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1397],"IERC165":[4273]},"id":1398,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1358,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1359,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1398,"sourceUnit":4274,"src":"58:47:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1361,"name":"IERC165","nameLocations":["172:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":4273,"src":"172:7:4"},"id":1362,"nodeType":"InheritanceSpecifier","src":"172:7:4"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1360,"nodeType":"StructuredDocumentation","src":"107:34:4","text":" _Available since v3.1._"},"fullyImplemented":false,"id":1397,"linearizedBaseContracts":[1397,4273],"name":"IERC1155Receiver","nameLocation":"152:16:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1363,"nodeType":"StructuredDocumentation","src":"187:816:4","text":"@dev Handles the receipt of a single ERC1155 token type. This function is\ncalled at the end of a `safeTransferFrom` after the balance has been updated.\nTo accept the transfer, this must return\n`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n(i.e. 0xf23a6e61, or its own function selector).\n@param operator The address which initiated the transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param id The ID of the token being transferred\n@param value The amount of tokens being transferred\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1378,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1017:17:4","nodeType":"FunctionDefinition","parameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"operator","nameLocation":"1052:8:4","nodeType":"VariableDeclaration","scope":1378,"src":"1044:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"1044:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"from","nameLocation":"1078:4:4","nodeType":"VariableDeclaration","scope":1378,"src":"1070:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"1070:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1369,"mutability":"mutable","name":"id","nameLocation":"1100:2:4","nodeType":"VariableDeclaration","scope":1378,"src":"1092:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1371,"mutability":"mutable","name":"value","nameLocation":"1120:5:4","nodeType":"VariableDeclaration","scope":1378,"src":"1112:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1370,"name":"uint256","nodeType":"ElementaryTypeName","src":"1112:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1373,"mutability":"mutable","name":"data","nameLocation":"1150:4:4","nodeType":"VariableDeclaration","scope":1378,"src":"1135:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1372,"name":"bytes","nodeType":"ElementaryTypeName","src":"1135:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1034:126:4"},"returnParameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1378,"src":"1194:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1375,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1194:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1193:8:4"},"scope":1397,"src":"1008:194:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1379,"nodeType":"StructuredDocumentation","src":"1208:977:4","text":"@dev Handles the receipt of a multiple ERC1155 token types. This function\nis called at the end of a `safeBatchTransferFrom` after the balances have\nbeen updated. To accept the transfer(s), this must return\n`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n(i.e. 0xbc197c81, or its own function selector).\n@param operator The address which initiated the batch transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param ids An array containing ids of each token being transferred (order and length must match values array)\n@param values An array containing amounts of each token being transferred (order and length must match ids array)\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1396,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2199:22:4","nodeType":"FunctionDefinition","parameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"mutability":"mutable","name":"operator","nameLocation":"2239:8:4","nodeType":"VariableDeclaration","scope":1396,"src":"2231:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1380,"name":"address","nodeType":"ElementaryTypeName","src":"2231:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1383,"mutability":"mutable","name":"from","nameLocation":"2265:4:4","nodeType":"VariableDeclaration","scope":1396,"src":"2257:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"2257:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1386,"mutability":"mutable","name":"ids","nameLocation":"2298:3:4","nodeType":"VariableDeclaration","scope":1396,"src":"2279:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"2279:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1385,"nodeType":"ArrayTypeName","src":"2279:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1389,"mutability":"mutable","name":"values","nameLocation":"2330:6:4","nodeType":"VariableDeclaration","scope":1396,"src":"2311:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"2311:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1388,"nodeType":"ArrayTypeName","src":"2311:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1391,"mutability":"mutable","name":"data","nameLocation":"2361:4:4","nodeType":"VariableDeclaration","scope":1396,"src":"2346:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1390,"name":"bytes","nodeType":"ElementaryTypeName","src":"2346:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2221:150:4"},"returnParameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1396,"src":"2405:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1393,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2405:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2404:8:4"},"scope":1397,"src":"2190:223:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1398,"src":"142:2273:4","usedErrors":[]}],"src":"33:2383:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","exportedSymbols":{"Address":[4011],"Context":[4034],"ERC1155":[1234],"ERC1155Burnable":[1466],"ERC165":[4261],"IERC1155":[1356],"IERC1155MetadataURI":[1481],"IERC1155Receiver":[1397],"IERC165":[4273]},"id":1467,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1399,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"../ERC1155.sol","id":1400,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1467,"sourceUnit":1235,"src":"58:24:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1402,"name":"ERC1155","nameLocations":["299:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1234,"src":"299:7:5"},"id":1403,"nodeType":"InheritanceSpecifier","src":"299:7:5"}],"canonicalName":"ERC1155Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1401,"nodeType":"StructuredDocumentation","src":"84:177:5","text":" @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use.\n _Available since v3.1._"},"fullyImplemented":true,"id":1466,"linearizedBaseContracts":[1466,1234,1481,1356,4261,4273,4034],"name":"ERC1155Burnable","nameLocation":"280:15:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1432,"nodeType":"Block","src":"386:207:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1413,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"417:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1414,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"428:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"428:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"417:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1418,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"461:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1419,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"470:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"470:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1417,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"444:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"444:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"417:66:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"497:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a","typeString":"literal_string \"ERC1155: caller is not owner nor approved\""},"value":"ERC1155: caller is not owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a","typeString":"literal_string \"ERC1155: caller is not owner nor approved\""}],"id":1412,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"396:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"396:154:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1425,"nodeType":"ExpressionStatement","src":"396:154:5"},{"expression":{"arguments":[{"id":1427,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"567:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1428,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"576:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"580:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1426,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"561:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"561:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1431,"nodeType":"ExpressionStatement","src":"561:25:5"}]},"functionSelector":"f5298aca","id":1433,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"322:4:5","nodeType":"FunctionDefinition","parameters":{"id":1410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1405,"mutability":"mutable","name":"account","nameLocation":"335:7:5","nodeType":"VariableDeclaration","scope":1433,"src":"327:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1404,"name":"address","nodeType":"ElementaryTypeName","src":"327:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1407,"mutability":"mutable","name":"id","nameLocation":"352:2:5","nodeType":"VariableDeclaration","scope":1433,"src":"344:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1406,"name":"uint256","nodeType":"ElementaryTypeName","src":"344:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1409,"mutability":"mutable","name":"value","nameLocation":"364:5:5","nodeType":"VariableDeclaration","scope":1433,"src":"356:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1408,"name":"uint256","nodeType":"ElementaryTypeName","src":"356:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"326:44:5"},"returnParameters":{"id":1411,"nodeType":"ParameterList","parameters":[],"src":"386:0:5"},"scope":1466,"src":"313:280:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1464,"nodeType":"Block","src":"697:214:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1445,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"728:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1446,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"739:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"739:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"728:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1450,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"772:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1451,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"781:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"781:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1449,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"755:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"755:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"728:66:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564","id":1455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"808:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a","typeString":"literal_string \"ERC1155: caller is not owner nor approved\""},"value":"ERC1155: caller is not owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a","typeString":"literal_string \"ERC1155: caller is not owner nor approved\""}],"id":1444,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"707:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"707:154:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1457,"nodeType":"ExpressionStatement","src":"707:154:5"},{"expression":{"arguments":[{"id":1459,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"883:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1460,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"892:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1461,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"897:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1458,"name":"_burnBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"872:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"872:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1463,"nodeType":"ExpressionStatement","src":"872:32:5"}]},"functionSelector":"6b20c454","id":1465,"implemented":true,"kind":"function","modifiers":[],"name":"burnBatch","nameLocation":"608:9:5","nodeType":"FunctionDefinition","parameters":{"id":1442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"account","nameLocation":"626:7:5","nodeType":"VariableDeclaration","scope":1465,"src":"618:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1434,"name":"address","nodeType":"ElementaryTypeName","src":"618:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1438,"mutability":"mutable","name":"ids","nameLocation":"652:3:5","nodeType":"VariableDeclaration","scope":1465,"src":"635:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1436,"name":"uint256","nodeType":"ElementaryTypeName","src":"635:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1437,"nodeType":"ArrayTypeName","src":"635:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1441,"mutability":"mutable","name":"values","nameLocation":"674:6:5","nodeType":"VariableDeclaration","scope":1465,"src":"657:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1439,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1440,"nodeType":"ArrayTypeName","src":"657:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"617:64:5"},"returnParameters":{"id":1443,"nodeType":"ParameterList","parameters":[],"src":"697:0:5"},"scope":1466,"src":"599:312:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1467,"src":"262:651:5","usedErrors":[]}],"src":"33:881:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1356],"IERC1155MetadataURI":[1481],"IERC165":[4273]},"id":1482,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1468,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1469,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1482,"sourceUnit":1357,"src":"58:25:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1471,"name":"IERC1155","nameLocations":["313:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1356,"src":"313:8:6"},"id":1472,"nodeType":"InheritanceSpecifier","src":"313:8:6"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1470,"nodeType":"StructuredDocumentation","src":"85:194:6","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"id":1481,"linearizedBaseContracts":[1481,1356,4273],"name":"IERC1155MetadataURI","nameLocation":"290:19:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1473,"nodeType":"StructuredDocumentation","src":"328:192:6","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1480,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"534:3:6","nodeType":"FunctionDefinition","parameters":{"id":1476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1475,"mutability":"mutable","name":"id","nameLocation":"546:2:6","nodeType":"VariableDeclaration","scope":1480,"src":"538:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1474,"name":"uint256","nodeType":"ElementaryTypeName","src":"538:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"537:12:6"},"returnParameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1480,"src":"573:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1477,"name":"string","nodeType":"ElementaryTypeName","src":"573:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"572:15:6"},"scope":1481,"src":"525:63:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1482,"src":"280:310:6","usedErrors":[]}],"src":"33:558:6"},"id":6},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol","exportedSymbols":{"ERC1155Holder":[1532],"ERC1155Receiver":[1566],"ERC165":[4261],"IERC1155Receiver":[1397],"IERC165":[4273]},"id":1533,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1483,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol","file":"./ERC1155Receiver.sol","id":1484,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1533,"sourceUnit":1567,"src":"58:31:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1486,"name":"ERC1155Receiver","nameLocations":["157:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":1566,"src":"157:15:7"},"id":1487,"nodeType":"InheritanceSpecifier","src":"157:15:7"}],"canonicalName":"ERC1155Holder","contractDependencies":[],"contractKind":"contract","documentation":{"id":1485,"nodeType":"StructuredDocumentation","src":"91:39:7","text":" @dev _Available since v3.1._"},"fullyImplemented":true,"id":1532,"linearizedBaseContracts":[1532,1566,1397,4261,4273],"name":"ERC1155Holder","nameLocation":"140:13:7","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1378],"body":{"id":1507,"nodeType":"Block","src":"297:55:7","statements":[{"expression":{"expression":{"expression":{"id":1503,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"314:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC1155Holder_$1532","typeString":"contract ERC1155Holder"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"319:17:7","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1508,"src":"314:22:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"337:8:7","memberName":"selector","nodeType":"MemberAccess","src":"314:31:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1502,"id":1506,"nodeType":"Return","src":"307:38:7"}]},"functionSelector":"f23a6e61","id":1508,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"188:17:7","nodeType":"FunctionDefinition","overrides":{"id":1499,"nodeType":"OverrideSpecifier","overrides":[],"src":"271:8:7"},"parameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1508,"src":"206:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1488,"name":"address","nodeType":"ElementaryTypeName","src":"206:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1508,"src":"215:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1490,"name":"address","nodeType":"ElementaryTypeName","src":"215:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1508,"src":"224:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1492,"name":"uint256","nodeType":"ElementaryTypeName","src":"224:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1508,"src":"233:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"233:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1508,"src":"242:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1496,"name":"bytes","nodeType":"ElementaryTypeName","src":"242:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"205:50:7"},"returnParameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1508,"src":"289:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1500,"name":"bytes4","nodeType":"ElementaryTypeName","src":"289:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"288:8:7"},"scope":1532,"src":"179:173:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1396],"body":{"id":1530,"nodeType":"Block","src":"499:60:7","statements":[{"expression":{"expression":{"expression":{"id":1526,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"516:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC1155Holder_$1532","typeString":"contract ERC1155Holder"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"521:22:7","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1531,"src":"516:27:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"544:8:7","memberName":"selector","nodeType":"MemberAccess","src":"516:36:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1525,"id":1529,"nodeType":"Return","src":"509:43:7"}]},"functionSelector":"bc197c81","id":1531,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"367:22:7","nodeType":"FunctionDefinition","overrides":{"id":1522,"nodeType":"OverrideSpecifier","overrides":[],"src":"473:8:7"},"parameters":{"id":1521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1531,"src":"390:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1509,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1531,"src":"399:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1511,"name":"address","nodeType":"ElementaryTypeName","src":"399:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1531,"src":"408:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1513,"name":"uint256","nodeType":"ElementaryTypeName","src":"408:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1514,"nodeType":"ArrayTypeName","src":"408:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1531,"src":"426:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1516,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1517,"nodeType":"ArrayTypeName","src":"426:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1531,"src":"444:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1519,"name":"bytes","nodeType":"ElementaryTypeName","src":"444:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"389:68:7"},"returnParameters":{"id":1525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1531,"src":"491:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1523,"name":"bytes4","nodeType":"ElementaryTypeName","src":"491:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"490:8:7"},"scope":1532,"src":"358:201:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1533,"src":"131:430:7","usedErrors":[]}],"src":"33:529:7"},"id":7},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol","exportedSymbols":{"ERC1155Receiver":[1566],"ERC165":[4261],"IERC1155Receiver":[1397],"IERC165":[4273]},"id":1567,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1534,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":1535,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1567,"sourceUnit":1398,"src":"58:33:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../../utils/introspection/ERC165.sol","id":1536,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1567,"sourceUnit":4262,"src":"92:49:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1538,"name":"ERC165","nameLocations":["220:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":4261,"src":"220:6:8"},"id":1539,"nodeType":"InheritanceSpecifier","src":"220:6:8"},{"baseName":{"id":1540,"name":"IERC1155Receiver","nameLocations":["228:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1397,"src":"228:16:8"},"id":1541,"nodeType":"InheritanceSpecifier","src":"228:16:8"}],"canonicalName":"ERC1155Receiver","contractDependencies":[],"contractKind":"contract","documentation":{"id":1537,"nodeType":"StructuredDocumentation","src":"143:39:8","text":" @dev _Available since v3.1._"},"fullyImplemented":false,"id":1566,"linearizedBaseContracts":[1566,1397,4261,4273],"name":"ERC1155Receiver","nameLocation":"201:15:8","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4260,4272],"body":{"id":1564,"nodeType":"Block","src":"420:125:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1552,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"437:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1554,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"457:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1397_$","typeString":"type(contract IERC1155Receiver)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1397_$","typeString":"type(contract IERC1155Receiver)"}],"id":1553,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"452:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"452:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155Receiver_$1397","typeString":"type(contract IERC1155Receiver)"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"475:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"452:34:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"437:49:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1560,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"526:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1558,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"502:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155Receiver_$1566_$","typeString":"type(contract super ERC1155Receiver)"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"508:17:8","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4260,"src":"502:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"502:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"437:101:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1551,"id":1563,"nodeType":"Return","src":"430:108:8"}]},"documentation":{"id":1542,"nodeType":"StructuredDocumentation","src":"251:56:8","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1565,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"321:17:8","nodeType":"FunctionDefinition","overrides":{"id":1548,"nodeType":"OverrideSpecifier","overrides":[{"id":1546,"name":"ERC165","nameLocations":["388:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":4261,"src":"388:6:8"},{"id":1547,"name":"IERC165","nameLocations":["396:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":4273,"src":"396:7:8"}],"src":"379:25:8"},"parameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"interfaceId","nameLocation":"346:11:8","nodeType":"VariableDeclaration","scope":1565,"src":"339:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1543,"name":"bytes4","nodeType":"ElementaryTypeName","src":"339:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"338:20:8"},"returnParameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1565,"src":"414:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1549,"name":"bool","nodeType":"ElementaryTypeName","src":"414:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"413:6:8"},"scope":1566,"src":"312:233:8","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1567,"src":"183:364:8","usedErrors":[]}],"src":"33:515:8"},"id":8},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[4034],"ERC20":[2067],"IERC20":[2145]},"id":2068,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1568,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1569,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2068,"sourceUnit":2146,"src":"58:22:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1570,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2068,"sourceUnit":4035,"src":"81:33:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1572,"name":"Context","nameLocations":["1297:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":4034,"src":"1297:7:9"},"id":1573,"nodeType":"InheritanceSpecifier","src":"1297:7:9"},{"baseName":{"id":1574,"name":"IERC20","nameLocations":["1306:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2145,"src":"1306:6:9"},"id":1575,"nodeType":"InheritanceSpecifier","src":"1306:6:9"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1571,"nodeType":"StructuredDocumentation","src":"116:1162:9","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":2067,"linearizedBaseContracts":[2067,2145,4034],"name":"ERC20","nameLocation":"1288:5:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1579,"mutability":"mutable","name":"_balances","nameLocation":"1356:9:9","nodeType":"VariableDeclaration","scope":2067,"src":"1319:46:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1578,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"1328:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1319:28:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1585,"mutability":"mutable","name":"_allowances","nameLocation":"1430:11:9","nodeType":"VariableDeclaration","scope":2067,"src":"1372:69:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1584,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1580,"name":"address","nodeType":"ElementaryTypeName","src":"1381:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1372:49:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1583,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1581,"name":"address","nodeType":"ElementaryTypeName","src":"1401:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1392:28:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1582,"name":"uint256","nodeType":"ElementaryTypeName","src":"1412:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1587,"mutability":"mutable","name":"_totalSupply","nameLocation":"1464:12:9","nodeType":"VariableDeclaration","scope":2067,"src":"1448:28:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1586,"name":"uint256","nodeType":"ElementaryTypeName","src":"1448:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1589,"mutability":"mutable","name":"_name","nameLocation":"1498:5:9","nodeType":"VariableDeclaration","scope":2067,"src":"1483:20:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1588,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1591,"mutability":"mutable","name":"_symbol","nameLocation":"1524:7:9","nodeType":"VariableDeclaration","scope":2067,"src":"1509:22:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1590,"name":"string","nodeType":"ElementaryTypeName","src":"1509:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1607,"nodeType":"Block","src":"1899:57:9","statements":[{"expression":{"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1599,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"1909:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1600,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"1917:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1909:13:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1602,"nodeType":"ExpressionStatement","src":"1909:13:9"},{"expression":{"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1603,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"1932:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1604,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"1942:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1932:17:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1606,"nodeType":"ExpressionStatement","src":"1932:17:9"}]},"documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"1538:299:9","text":" @dev Sets the values for {name} and {symbol}.\n The defaut value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All three of these values are immutable: they can only be set once during\n construction."},"id":1608,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"name_","nameLocation":"1869:5:9","nodeType":"VariableDeclaration","scope":1608,"src":"1855:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1593,"name":"string","nodeType":"ElementaryTypeName","src":"1855:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1596,"mutability":"mutable","name":"symbol_","nameLocation":"1890:7:9","nodeType":"VariableDeclaration","scope":1608,"src":"1876:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1595,"name":"string","nodeType":"ElementaryTypeName","src":"1876:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1854:44:9"},"returnParameters":{"id":1598,"nodeType":"ParameterList","parameters":[],"src":"1899:0:9"},"scope":2067,"src":"1842:114:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1616,"nodeType":"Block","src":"2081:29:9","statements":[{"expression":{"id":1614,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"2098:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1613,"id":1615,"nodeType":"Return","src":"2091:12:9"}]},"documentation":{"id":1609,"nodeType":"StructuredDocumentation","src":"1962:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1617,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2030:4:9","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[],"src":"2034:2:9"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1617,"src":"2066:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1611,"name":"string","nodeType":"ElementaryTypeName","src":"2066:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2065:15:9"},"scope":2067,"src":"2021:89:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1625,"nodeType":"Block","src":"2285:31:9","statements":[{"expression":{"id":1623,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"2302:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1622,"id":1624,"nodeType":"Return","src":"2295:14:9"}]},"documentation":{"id":1618,"nodeType":"StructuredDocumentation","src":"2116:102:9","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1626,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2232:6:9","nodeType":"FunctionDefinition","parameters":{"id":1619,"nodeType":"ParameterList","parameters":[],"src":"2238:2:9"},"returnParameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1626,"src":"2270:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1620,"name":"string","nodeType":"ElementaryTypeName","src":"2270:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2269:15:9"},"scope":2067,"src":"2223:93:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1634,"nodeType":"Block","src":"2996:26:9","statements":[{"expression":{"hexValue":"3138","id":1632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3013:2:9","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1631,"id":1633,"nodeType":"Return","src":"3006:9:9"}]},"documentation":{"id":1627,"nodeType":"StructuredDocumentation","src":"2322:613:9","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overloaded;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1635,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2949:8:9","nodeType":"FunctionDefinition","parameters":{"id":1628,"nodeType":"ParameterList","parameters":[],"src":"2957:2:9"},"returnParameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1635,"src":"2989:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1629,"name":"uint8","nodeType":"ElementaryTypeName","src":"2989:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2988:7:9"},"scope":2067,"src":"2940:82:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2076],"body":{"id":1644,"nodeType":"Block","src":"3152:36:9","statements":[{"expression":{"id":1642,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"3169:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1641,"id":1643,"nodeType":"Return","src":"3162:19:9"}]},"documentation":{"id":1636,"nodeType":"StructuredDocumentation","src":"3028:49:9","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1645,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3091:11:9","nodeType":"FunctionDefinition","overrides":{"id":1638,"nodeType":"OverrideSpecifier","overrides":[],"src":"3125:8:9"},"parameters":{"id":1637,"nodeType":"ParameterList","parameters":[],"src":"3102:2:9"},"returnParameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1645,"src":"3143:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"3143:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3142:9:9"},"scope":2067,"src":"3082:106:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2084],"body":{"id":1658,"nodeType":"Block","src":"3329:42:9","statements":[{"expression":{"baseExpression":{"id":1654,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"3346:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1656,"indexExpression":{"id":1655,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"3356:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3346:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1653,"id":1657,"nodeType":"Return","src":"3339:25:9"}]},"documentation":{"id":1646,"nodeType":"StructuredDocumentation","src":"3194:47:9","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1659,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3255:9:9","nodeType":"FunctionDefinition","overrides":{"id":1650,"nodeType":"OverrideSpecifier","overrides":[],"src":"3302:8:9"},"parameters":{"id":1649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1648,"mutability":"mutable","name":"account","nameLocation":"3273:7:9","nodeType":"VariableDeclaration","scope":1659,"src":"3265:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1647,"name":"address","nodeType":"ElementaryTypeName","src":"3265:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3264:17:9"},"returnParameters":{"id":1653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1659,"src":"3320:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1651,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3319:9:9"},"scope":2067,"src":"3246:125:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2094],"body":{"id":1679,"nodeType":"Block","src":"3666:80:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1671,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"3686:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3686:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1673,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"3700:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1674,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"3711:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1670,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"3676:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3676:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1676,"nodeType":"ExpressionStatement","src":"3676:42:9"},{"expression":{"hexValue":"74727565","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3735:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1669,"id":1678,"nodeType":"Return","src":"3728:11:9"}]},"documentation":{"id":1660,"nodeType":"StructuredDocumentation","src":"3377:192:9","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":1680,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3583:8:9","nodeType":"FunctionDefinition","overrides":{"id":1666,"nodeType":"OverrideSpecifier","overrides":[],"src":"3642:8:9"},"parameters":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1662,"mutability":"mutable","name":"recipient","nameLocation":"3600:9:9","nodeType":"VariableDeclaration","scope":1680,"src":"3592:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1661,"name":"address","nodeType":"ElementaryTypeName","src":"3592:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1664,"mutability":"mutable","name":"amount","nameLocation":"3619:6:9","nodeType":"VariableDeclaration","scope":1680,"src":"3611:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3591:35:9"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1680,"src":"3660:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1667,"name":"bool","nodeType":"ElementaryTypeName","src":"3660:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3659:6:9"},"scope":2067,"src":"3574:172:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2104],"body":{"id":1697,"nodeType":"Block","src":"3902:51:9","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1691,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"3919:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1693,"indexExpression":{"id":1692,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"3931:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3919:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1695,"indexExpression":{"id":1694,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"3938:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3919:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1690,"id":1696,"nodeType":"Return","src":"3912:34:9"}]},"documentation":{"id":1681,"nodeType":"StructuredDocumentation","src":"3752:47:9","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1698,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3813:9:9","nodeType":"FunctionDefinition","overrides":{"id":1687,"nodeType":"OverrideSpecifier","overrides":[],"src":"3875:8:9"},"parameters":{"id":1686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"mutability":"mutable","name":"owner","nameLocation":"3831:5:9","nodeType":"VariableDeclaration","scope":1698,"src":"3823:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1682,"name":"address","nodeType":"ElementaryTypeName","src":"3823:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1685,"mutability":"mutable","name":"spender","nameLocation":"3846:7:9","nodeType":"VariableDeclaration","scope":1698,"src":"3838:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1684,"name":"address","nodeType":"ElementaryTypeName","src":"3838:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3822:32:9"},"returnParameters":{"id":1690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1698,"src":"3893:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1688,"name":"uint256","nodeType":"ElementaryTypeName","src":"3893:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3892:9:9"},"scope":2067,"src":"3804:149:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2114],"body":{"id":1718,"nodeType":"Block","src":"4180:77:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1710,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"4199:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4199:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1712,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"4213:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1713,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"4222:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1709,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"4190:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4190:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1715,"nodeType":"ExpressionStatement","src":"4190:39:9"},{"expression":{"hexValue":"74727565","id":1716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4246:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1708,"id":1717,"nodeType":"Return","src":"4239:11:9"}]},"documentation":{"id":1699,"nodeType":"StructuredDocumentation","src":"3959:127:9","text":" @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1719,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4100:7:9","nodeType":"FunctionDefinition","overrides":{"id":1705,"nodeType":"OverrideSpecifier","overrides":[],"src":"4156:8:9"},"parameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"spender","nameLocation":"4116:7:9","nodeType":"VariableDeclaration","scope":1719,"src":"4108:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"4108:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1703,"mutability":"mutable","name":"amount","nameLocation":"4133:6:9","nodeType":"VariableDeclaration","scope":1719,"src":"4125:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1702,"name":"uint256","nodeType":"ElementaryTypeName","src":"4125:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4107:33:9"},"returnParameters":{"id":1708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1719,"src":"4174:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1706,"name":"bool","nodeType":"ElementaryTypeName","src":"4174:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4173:6:9"},"scope":2067,"src":"4091:166:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2126],"body":{"id":1765,"nodeType":"Block","src":"4836:302:9","statements":[{"expression":{"arguments":[{"id":1733,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"4856:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1734,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"4864:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1735,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"4875:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1732,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"4846:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4846:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1737,"nodeType":"ExpressionStatement","src":"4846:36:9"},{"assignments":[1739],"declarations":[{"constant":false,"id":1739,"mutability":"mutable","name":"currentAllowance","nameLocation":"4901:16:9","nodeType":"VariableDeclaration","scope":1765,"src":"4893:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1738,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1746,"initialValue":{"baseExpression":{"baseExpression":{"id":1740,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"4920:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1742,"indexExpression":{"id":1741,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"4932:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4920:19:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1745,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1743,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"4940:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4940:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4920:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4893:60:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1748,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"4971:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1749,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"4991:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4971:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4999:42:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330","typeString":"literal_string \"ERC20: transfer amount exceeds allowance\""},"value":"ERC20: transfer amount exceeds allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330","typeString":"literal_string \"ERC20: transfer amount exceeds allowance\""}],"id":1747,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4963:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4963:79:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1753,"nodeType":"ExpressionStatement","src":"4963:79:9"},{"expression":{"arguments":[{"id":1755,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"5061:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1756,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"5069:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5069:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1758,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"5083:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1759,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"5102:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5083:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1754,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"5052:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5052:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1762,"nodeType":"ExpressionStatement","src":"5052:57:9"},{"expression":{"hexValue":"74727565","id":1763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5127:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1731,"id":1764,"nodeType":"Return","src":"5120:11:9"}]},"documentation":{"id":1720,"nodeType":"StructuredDocumentation","src":"4263:456:9","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":1766,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4733:12:9","nodeType":"FunctionDefinition","overrides":{"id":1728,"nodeType":"OverrideSpecifier","overrides":[],"src":"4812:8:9"},"parameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1722,"mutability":"mutable","name":"sender","nameLocation":"4754:6:9","nodeType":"VariableDeclaration","scope":1766,"src":"4746:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1721,"name":"address","nodeType":"ElementaryTypeName","src":"4746:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1724,"mutability":"mutable","name":"recipient","nameLocation":"4770:9:9","nodeType":"VariableDeclaration","scope":1766,"src":"4762:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1723,"name":"address","nodeType":"ElementaryTypeName","src":"4762:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1726,"mutability":"mutable","name":"amount","nameLocation":"4789:6:9","nodeType":"VariableDeclaration","scope":1766,"src":"4781:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1725,"name":"uint256","nodeType":"ElementaryTypeName","src":"4781:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4745:51:9"},"returnParameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1766,"src":"4830:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1729,"name":"bool","nodeType":"ElementaryTypeName","src":"4830:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4829:6:9"},"scope":2067,"src":"4724:414:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1792,"nodeType":"Block","src":"5627:118:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1777,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"5646:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5646:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1779,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"5660:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":1780,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"5669:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1783,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1781,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"5681:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5681:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5669:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1785,"indexExpression":{"id":1784,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"5695:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5669:34:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1786,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"5706:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5669:47:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1776,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"5637:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5637:80:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1789,"nodeType":"ExpressionStatement","src":"5637:80:9"},{"expression":{"hexValue":"74727565","id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5734:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1775,"id":1791,"nodeType":"Return","src":"5727:11:9"}]},"documentation":{"id":1767,"nodeType":"StructuredDocumentation","src":"5144:384:9","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":1793,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5542:17:9","nodeType":"FunctionDefinition","parameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"spender","nameLocation":"5568:7:9","nodeType":"VariableDeclaration","scope":1793,"src":"5560:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"5560:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1771,"mutability":"mutable","name":"addedValue","nameLocation":"5585:10:9","nodeType":"VariableDeclaration","scope":1793,"src":"5577:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"5577:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5559:37:9"},"returnParameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1793,"src":"5621:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1773,"name":"bool","nodeType":"ElementaryTypeName","src":"5621:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5620:6:9"},"scope":2067,"src":"5533:212:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1830,"nodeType":"Block","src":"6331:272:9","statements":[{"assignments":[1804],"declarations":[{"constant":false,"id":1804,"mutability":"mutable","name":"currentAllowance","nameLocation":"6349:16:9","nodeType":"VariableDeclaration","scope":1830,"src":"6341:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1803,"name":"uint256","nodeType":"ElementaryTypeName","src":"6341:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1811,"initialValue":{"baseExpression":{"baseExpression":{"id":1805,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"6368:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1808,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1806,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"6380:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6380:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6368:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1810,"indexExpression":{"id":1809,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"6394:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6368:34:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6341:61:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1813,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"6420:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1814,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"6440:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6420:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6457:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":1812,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6412:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6412:85:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1818,"nodeType":"ExpressionStatement","src":"6412:85:9"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1820,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"6516:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6516:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1822,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"6530:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1823,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"6539:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1824,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"6558:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6539:34:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1819,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"6507:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6507:67:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1827,"nodeType":"ExpressionStatement","src":"6507:67:9"},{"expression":{"hexValue":"74727565","id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6592:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1802,"id":1829,"nodeType":"Return","src":"6585:11:9"}]},"documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"5751:476:9","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":1831,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6241:17:9","nodeType":"FunctionDefinition","parameters":{"id":1799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"spender","nameLocation":"6267:7:9","nodeType":"VariableDeclaration","scope":1831,"src":"6259:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1795,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1798,"mutability":"mutable","name":"subtractedValue","nameLocation":"6284:15:9","nodeType":"VariableDeclaration","scope":1831,"src":"6276:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1797,"name":"uint256","nodeType":"ElementaryTypeName","src":"6276:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6258:42:9"},"returnParameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1831,"src":"6325:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1800,"name":"bool","nodeType":"ElementaryTypeName","src":"6325:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6324:6:9"},"scope":2067,"src":"6232:371:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1900,"nodeType":"Block","src":"7164:505:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1842,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"7182:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7200:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7192:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1843,"name":"address","nodeType":"ElementaryTypeName","src":"7192:7:9","typeDescriptions":{}}},"id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7192:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7182:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7204:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":1841,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7174:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7174:70:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1850,"nodeType":"ExpressionStatement","src":"7174:70:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1852,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"7262:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7283:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7275:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1853,"name":"address","nodeType":"ElementaryTypeName","src":"7275:7:9","typeDescriptions":{}}},"id":1856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7275:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7262:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7287:37:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":1851,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7254:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7254:71:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1860,"nodeType":"ExpressionStatement","src":"7254:71:9"},{"expression":{"arguments":[{"id":1862,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"7357:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1863,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"7365:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1864,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"7376:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1861,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"7336:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7336:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1866,"nodeType":"ExpressionStatement","src":"7336:47:9"},{"assignments":[1868],"declarations":[{"constant":false,"id":1868,"mutability":"mutable","name":"senderBalance","nameLocation":"7402:13:9","nodeType":"VariableDeclaration","scope":1900,"src":"7394:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1867,"name":"uint256","nodeType":"ElementaryTypeName","src":"7394:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1872,"initialValue":{"baseExpression":{"id":1869,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"7418:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1871,"indexExpression":{"id":1870,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"7428:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7418:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7394:41:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1874,"name":"senderBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"7453:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1875,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"7470:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7453:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7478:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":1873,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7445:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7445:74:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1879,"nodeType":"ExpressionStatement","src":"7445:74:9"},{"expression":{"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1880,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"7529:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1882,"indexExpression":{"id":1881,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"7539:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7529:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1883,"name":"senderBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"7549:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1884,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"7565:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7549:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7529:42:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1887,"nodeType":"ExpressionStatement","src":"7529:42:9"},{"expression":{"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1888,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"7581:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1890,"indexExpression":{"id":1889,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"7591:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7581:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1891,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"7605:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1893,"nodeType":"ExpressionStatement","src":"7581:30:9"},{"eventCall":{"arguments":[{"id":1895,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"7636:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1896,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"7644:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1897,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"7655:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1894,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"7627:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7627:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1899,"nodeType":"EmitStatement","src":"7622:40:9"}]},"documentation":{"id":1832,"nodeType":"StructuredDocumentation","src":"6609:463:9","text":" @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."},"id":1901,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7086:9:9","nodeType":"FunctionDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"sender","nameLocation":"7104:6:9","nodeType":"VariableDeclaration","scope":1901,"src":"7096:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1833,"name":"address","nodeType":"ElementaryTypeName","src":"7096:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"recipient","nameLocation":"7120:9:9","nodeType":"VariableDeclaration","scope":1901,"src":"7112:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1835,"name":"address","nodeType":"ElementaryTypeName","src":"7112:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"amount","nameLocation":"7139:6:9","nodeType":"VariableDeclaration","scope":1901,"src":"7131:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"7131:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7095:51:9"},"returnParameters":{"id":1840,"nodeType":"ParameterList","parameters":[],"src":"7164:0:9"},"scope":2067,"src":"7077:592:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1947,"nodeType":"Block","src":"8005:265:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1910,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"8023:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8042:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8034:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1911,"name":"address","nodeType":"ElementaryTypeName","src":"8034:7:9","typeDescriptions":{}}},"id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8034:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8023:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8046:33:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":1909,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8015:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8015:65:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1918,"nodeType":"ExpressionStatement","src":"8015:65:9"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8120:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8112:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1920,"name":"address","nodeType":"ElementaryTypeName","src":"8112:7:9","typeDescriptions":{}}},"id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8112:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1924,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"8124:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1925,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"8133:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1919,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"8091:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8091:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1927,"nodeType":"ExpressionStatement","src":"8091:49:9"},{"expression":{"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1928,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"8151:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1929,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"8167:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8151:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1931,"nodeType":"ExpressionStatement","src":"8151:22:9"},{"expression":{"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1932,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"8183:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1934,"indexExpression":{"id":1933,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"8193:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8183:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1935,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"8205:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8183:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1937,"nodeType":"ExpressionStatement","src":"8183:28:9"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8243:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8235:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1939,"name":"address","nodeType":"ElementaryTypeName","src":"8235:7:9","typeDescriptions":{}}},"id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8235:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1943,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"8247:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1944,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"8256:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1938,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"8226:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8226:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1946,"nodeType":"EmitStatement","src":"8221:42:9"}]},"documentation":{"id":1902,"nodeType":"StructuredDocumentation","src":"7675:260:9","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."},"id":1948,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7949:5:9","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"account","nameLocation":"7963:7:9","nodeType":"VariableDeclaration","scope":1948,"src":"7955:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1903,"name":"address","nodeType":"ElementaryTypeName","src":"7955:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"amount","nameLocation":"7980:6:9","nodeType":"VariableDeclaration","scope":1948,"src":"7972:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"7972:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7954:33:9"},"returnParameters":{"id":1908,"nodeType":"ParameterList","parameters":[],"src":"8005:0:9"},"scope":2067,"src":"7940:330:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2009,"nodeType":"Block","src":"8655:418:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1957,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"8673:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8692:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8684:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"8684:7:9","typeDescriptions":{}}},"id":1961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8684:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8673:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8696:35:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":1956,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8665:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8665:67:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1965,"nodeType":"ExpressionStatement","src":"8665:67:9"},{"expression":{"arguments":[{"id":1967,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"8764:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8781:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8773:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1968,"name":"address","nodeType":"ElementaryTypeName","src":"8773:7:9","typeDescriptions":{}}},"id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8773:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1972,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"8785:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1966,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"8743:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8743:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1974,"nodeType":"ExpressionStatement","src":"8743:49:9"},{"assignments":[1976],"declarations":[{"constant":false,"id":1976,"mutability":"mutable","name":"accountBalance","nameLocation":"8811:14:9","nodeType":"VariableDeclaration","scope":2009,"src":"8803:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1975,"name":"uint256","nodeType":"ElementaryTypeName","src":"8803:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1980,"initialValue":{"baseExpression":{"id":1977,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"8828:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1979,"indexExpression":{"id":1978,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"8838:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8828:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8803:43:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1982,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"8864:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1983,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"8882:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8864:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8890:36:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":1981,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8856:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8856:71:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1987,"nodeType":"ExpressionStatement","src":"8856:71:9"},{"expression":{"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1988,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"8937:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1990,"indexExpression":{"id":1989,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"8947:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8937:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1991,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"8958:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1992,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"8975:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8958:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8937:44:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1995,"nodeType":"ExpressionStatement","src":"8937:44:9"},{"expression":{"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1996,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"8991:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1997,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"9007:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8991:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1999,"nodeType":"ExpressionStatement","src":"8991:22:9"},{"eventCall":{"arguments":[{"id":2001,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"9038:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9055:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9047:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2002,"name":"address","nodeType":"ElementaryTypeName","src":"9047:7:9","typeDescriptions":{}}},"id":2005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9047:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2006,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"9059:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2000,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"9029:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9029:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2008,"nodeType":"EmitStatement","src":"9024:42:9"}]},"documentation":{"id":1949,"nodeType":"StructuredDocumentation","src":"8276:309:9","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":2010,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8599:5:9","nodeType":"FunctionDefinition","parameters":{"id":1954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1951,"mutability":"mutable","name":"account","nameLocation":"8613:7:9","nodeType":"VariableDeclaration","scope":2010,"src":"8605:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1950,"name":"address","nodeType":"ElementaryTypeName","src":"8605:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1953,"mutability":"mutable","name":"amount","nameLocation":"8630:6:9","nodeType":"VariableDeclaration","scope":2010,"src":"8622:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1952,"name":"uint256","nodeType":"ElementaryTypeName","src":"8622:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8604:33:9"},"returnParameters":{"id":1955,"nodeType":"ParameterList","parameters":[],"src":"8655:0:9"},"scope":2067,"src":"8590:483:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2054,"nodeType":"Block","src":"9579:257:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2021,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"9597:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9614:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9606:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2022,"name":"address","nodeType":"ElementaryTypeName","src":"9606:7:9","typeDescriptions":{}}},"id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9606:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9597:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9618:38:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":2020,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9589:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9589:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2029,"nodeType":"ExpressionStatement","src":"9589:68:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2031,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"9675:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9694:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9686:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2032,"name":"address","nodeType":"ElementaryTypeName","src":"9686:7:9","typeDescriptions":{}}},"id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9686:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9675:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":2037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9698:36:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":2030,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9667:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9667:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2039,"nodeType":"ExpressionStatement","src":"9667:68:9"},{"expression":{"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2040,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"9746:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2043,"indexExpression":{"id":2041,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"9758:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9746:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2044,"indexExpression":{"id":2042,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"9765:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2045,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"9776:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2047,"nodeType":"ExpressionStatement","src":"9746:36:9"},{"eventCall":{"arguments":[{"id":2049,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"9806:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2050,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"9813:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2051,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"9822:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2048,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"9797:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9797:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2053,"nodeType":"EmitStatement","src":"9792:37:9"}]},"documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"9079:412:9","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":2055,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9505:8:9","nodeType":"FunctionDefinition","parameters":{"id":2018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2013,"mutability":"mutable","name":"owner","nameLocation":"9522:5:9","nodeType":"VariableDeclaration","scope":2055,"src":"9514:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2012,"name":"address","nodeType":"ElementaryTypeName","src":"9514:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2015,"mutability":"mutable","name":"spender","nameLocation":"9537:7:9","nodeType":"VariableDeclaration","scope":2055,"src":"9529:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2014,"name":"address","nodeType":"ElementaryTypeName","src":"9529:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2017,"mutability":"mutable","name":"amount","nameLocation":"9554:6:9","nodeType":"VariableDeclaration","scope":2055,"src":"9546:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2016,"name":"uint256","nodeType":"ElementaryTypeName","src":"9546:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9513:48:9"},"returnParameters":{"id":2019,"nodeType":"ParameterList","parameters":[],"src":"9579:0:9"},"scope":2067,"src":"9496:340:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2065,"nodeType":"Block","src":"10512:3:9","statements":[]},"documentation":{"id":2056,"nodeType":"StructuredDocumentation","src":"9842:576:9","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2066,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"10432:20:9","nodeType":"FunctionDefinition","parameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2058,"mutability":"mutable","name":"from","nameLocation":"10461:4:9","nodeType":"VariableDeclaration","scope":2066,"src":"10453:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2057,"name":"address","nodeType":"ElementaryTypeName","src":"10453:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2060,"mutability":"mutable","name":"to","nameLocation":"10475:2:9","nodeType":"VariableDeclaration","scope":2066,"src":"10467:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2059,"name":"address","nodeType":"ElementaryTypeName","src":"10467:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2062,"mutability":"mutable","name":"amount","nameLocation":"10487:6:9","nodeType":"VariableDeclaration","scope":2066,"src":"10479:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2061,"name":"uint256","nodeType":"ElementaryTypeName","src":"10479:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10452:42:9"},"returnParameters":{"id":2064,"nodeType":"ParameterList","parameters":[],"src":"10512:0:9"},"scope":2067,"src":"10423:92:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2068,"src":"1279:9238:9","usedErrors":[]}],"src":"33:10485:9"},"id":9},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2145]},"id":2146,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2069,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2070,"nodeType":"StructuredDocumentation","src":"58:70:10","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":2145,"linearizedBaseContracts":[2145],"name":"IERC20","nameLocation":"139:6:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2071,"nodeType":"StructuredDocumentation","src":"152:66:10","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":2076,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"232:11:10","nodeType":"FunctionDefinition","parameters":{"id":2072,"nodeType":"ParameterList","parameters":[],"src":"243:2:10"},"returnParameters":{"id":2075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2076,"src":"269:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2073,"name":"uint256","nodeType":"ElementaryTypeName","src":"269:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"268:9:10"},"scope":2145,"src":"223:55:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2077,"nodeType":"StructuredDocumentation","src":"284:72:10","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":2084,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"370:9:10","nodeType":"FunctionDefinition","parameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"account","nameLocation":"388:7:10","nodeType":"VariableDeclaration","scope":2084,"src":"380:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2078,"name":"address","nodeType":"ElementaryTypeName","src":"380:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"379:17:10"},"returnParameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2084,"src":"420:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2081,"name":"uint256","nodeType":"ElementaryTypeName","src":"420:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"419:9:10"},"scope":2145,"src":"361:68:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2085,"nodeType":"StructuredDocumentation","src":"435:209:10","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2094,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"658:8:10","nodeType":"FunctionDefinition","parameters":{"id":2090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2087,"mutability":"mutable","name":"recipient","nameLocation":"675:9:10","nodeType":"VariableDeclaration","scope":2094,"src":"667:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2086,"name":"address","nodeType":"ElementaryTypeName","src":"667:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2089,"mutability":"mutable","name":"amount","nameLocation":"694:6:10","nodeType":"VariableDeclaration","scope":2094,"src":"686:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2088,"name":"uint256","nodeType":"ElementaryTypeName","src":"686:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"666:35:10"},"returnParameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2094,"src":"720:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2091,"name":"bool","nodeType":"ElementaryTypeName","src":"720:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"719:6:10"},"scope":2145,"src":"649:77:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2095,"nodeType":"StructuredDocumentation","src":"732:264:10","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2104,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1010:9:10","nodeType":"FunctionDefinition","parameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2097,"mutability":"mutable","name":"owner","nameLocation":"1028:5:10","nodeType":"VariableDeclaration","scope":2104,"src":"1020:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2096,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2099,"mutability":"mutable","name":"spender","nameLocation":"1043:7:10","nodeType":"VariableDeclaration","scope":2104,"src":"1035:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2098,"name":"address","nodeType":"ElementaryTypeName","src":"1035:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1019:32:10"},"returnParameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2104,"src":"1075:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2101,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1074:9:10"},"scope":2145,"src":"1001:83:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2105,"nodeType":"StructuredDocumentation","src":"1090:642:10","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2114,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1746:7:10","nodeType":"FunctionDefinition","parameters":{"id":2110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2107,"mutability":"mutable","name":"spender","nameLocation":"1762:7:10","nodeType":"VariableDeclaration","scope":2114,"src":"1754:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2106,"name":"address","nodeType":"ElementaryTypeName","src":"1754:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2109,"mutability":"mutable","name":"amount","nameLocation":"1779:6:10","nodeType":"VariableDeclaration","scope":2114,"src":"1771:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2108,"name":"uint256","nodeType":"ElementaryTypeName","src":"1771:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:33:10"},"returnParameters":{"id":2113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2114,"src":"1805:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2111,"name":"bool","nodeType":"ElementaryTypeName","src":"1805:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1804:6:10"},"scope":2145,"src":"1737:74:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2115,"nodeType":"StructuredDocumentation","src":"1817:296:10","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2126,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2127:12:10","nodeType":"FunctionDefinition","parameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2117,"mutability":"mutable","name":"sender","nameLocation":"2148:6:10","nodeType":"VariableDeclaration","scope":2126,"src":"2140:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2116,"name":"address","nodeType":"ElementaryTypeName","src":"2140:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2119,"mutability":"mutable","name":"recipient","nameLocation":"2164:9:10","nodeType":"VariableDeclaration","scope":2126,"src":"2156:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2118,"name":"address","nodeType":"ElementaryTypeName","src":"2156:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2121,"mutability":"mutable","name":"amount","nameLocation":"2183:6:10","nodeType":"VariableDeclaration","scope":2126,"src":"2175:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"2175:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2139:51:10"},"returnParameters":{"id":2125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2126,"src":"2209:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2123,"name":"bool","nodeType":"ElementaryTypeName","src":"2209:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2208:6:10"},"scope":2145,"src":"2118:97:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":2127,"nodeType":"StructuredDocumentation","src":"2221:158:10","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2135,"name":"Transfer","nameLocation":"2390:8:10","nodeType":"EventDefinition","parameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2415:4:10","nodeType":"VariableDeclaration","scope":2135,"src":"2399:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2128,"name":"address","nodeType":"ElementaryTypeName","src":"2399:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2131,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2437:2:10","nodeType":"VariableDeclaration","scope":2135,"src":"2421:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2130,"name":"address","nodeType":"ElementaryTypeName","src":"2421:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2133,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2449:5:10","nodeType":"VariableDeclaration","scope":2135,"src":"2441:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2132,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2398:57:10"},"src":"2384:72:10"},{"anonymous":false,"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"2462:148:10","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2144,"name":"Approval","nameLocation":"2621:8:10","nodeType":"EventDefinition","parameters":{"id":2143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2646:5:10","nodeType":"VariableDeclaration","scope":2144,"src":"2630:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2137,"name":"address","nodeType":"ElementaryTypeName","src":"2630:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2140,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"2669:7:10","nodeType":"VariableDeclaration","scope":2144,"src":"2653:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2139,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2142,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2686:5:10","nodeType":"VariableDeclaration","scope":2144,"src":"2678:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2141,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2629:63:10"},"src":"2615:78:10"}],"scope":2146,"src":"129:2566:10","usedErrors":[]}],"src":"33:2663:10"},"id":10},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[4034],"ERC20":[2067],"ERC20Burnable":[2206],"IERC20":[2145]},"id":2207,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2147,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":2148,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2207,"sourceUnit":2068,"src":"58:22:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":2149,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2207,"sourceUnit":4035,"src":"81:36:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2151,"name":"Context","nameLocations":["363:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":4034,"src":"363:7:11"},"id":2152,"nodeType":"InheritanceSpecifier","src":"363:7:11"},{"baseName":{"id":2153,"name":"ERC20","nameLocations":["372:5:11"],"nodeType":"IdentifierPath","referencedDeclaration":2067,"src":"372:5:11"},"id":2154,"nodeType":"InheritanceSpecifier","src":"372:5:11"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2150,"nodeType":"StructuredDocumentation","src":"119:208:11","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":2206,"linearizedBaseContracts":[2206,2067,2145,4034],"name":"ERC20Burnable","nameLocation":"346:13:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2166,"nodeType":"Block","src":"532:44:11","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2161,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"548:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"548:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2163,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"562:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2160,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"542:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"542:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2165,"nodeType":"ExpressionStatement","src":"542:27:11"}]},"documentation":{"id":2155,"nodeType":"StructuredDocumentation","src":"384:98:11","text":" @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":2167,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"496:4:11","nodeType":"FunctionDefinition","parameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"amount","nameLocation":"509:6:11","nodeType":"VariableDeclaration","scope":2167,"src":"501:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2156,"name":"uint256","nodeType":"ElementaryTypeName","src":"501:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"500:16:11"},"returnParameters":{"id":2159,"nodeType":"ParameterList","parameters":[],"src":"532:0:11"},"scope":2206,"src":"487:89:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2204,"nodeType":"Block","src":"948:261:11","statements":[{"assignments":[2176],"declarations":[{"constant":false,"id":2176,"mutability":"mutable","name":"currentAllowance","nameLocation":"966:16:11","nodeType":"VariableDeclaration","scope":2204,"src":"958:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2175,"name":"uint256","nodeType":"ElementaryTypeName","src":"958:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2182,"initialValue":{"arguments":[{"id":2178,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"995:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2179,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"1004:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1004:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2177,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"985:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"985:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"958:59:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2184,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"1035:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2185,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"1055:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1035:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1063:38:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db","typeString":"literal_string \"ERC20: burn amount exceeds allowance\""},"value":"ERC20: burn amount exceeds allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db","typeString":"literal_string \"ERC20: burn amount exceeds allowance\""}],"id":2183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1027:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1027:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2189,"nodeType":"ExpressionStatement","src":"1027:75:11"},{"expression":{"arguments":[{"id":2191,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"1121:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2192,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"1130:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1130:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2194,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"1144:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2195,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"1163:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1144:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2190,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"1112:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1112:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2198,"nodeType":"ExpressionStatement","src":"1112:58:11"},{"expression":{"arguments":[{"id":2200,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"1186:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2201,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"1195:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2199,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"1180:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1180:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2203,"nodeType":"ExpressionStatement","src":"1180:22:11"}]},"documentation":{"id":2168,"nodeType":"StructuredDocumentation","src":"582:295:11","text":" @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."},"functionSelector":"79cc6790","id":2205,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"891:8:11","nodeType":"FunctionDefinition","parameters":{"id":2173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2170,"mutability":"mutable","name":"account","nameLocation":"908:7:11","nodeType":"VariableDeclaration","scope":2205,"src":"900:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2169,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2172,"mutability":"mutable","name":"amount","nameLocation":"925:6:11","nodeType":"VariableDeclaration","scope":2205,"src":"917:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2171,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"899:33:11"},"returnParameters":{"id":2174,"nodeType":"ParameterList","parameters":[],"src":"948:0:11"},"scope":2206,"src":"882:327:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":2207,"src":"328:883:11","usedErrors":[]}],"src":"33:1179:11"},"id":11},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[4011],"Context":[4034],"ERC165":[4261],"ERC721":[3027],"IERC165":[4273],"IERC721":[3143],"IERC721Enumerable":[3688],"IERC721Metadata":[3715],"IERC721Receiver":[3161],"Strings":[4237]},"id":3028,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2208,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":2209,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3028,"sourceUnit":3144,"src":"58:23:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":2210,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3028,"sourceUnit":3162,"src":"82:31:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":2211,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3028,"sourceUnit":3716,"src":"114:42:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","file":"./extensions/IERC721Enumerable.sol","id":2212,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3028,"sourceUnit":3689,"src":"157:44:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":2213,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3028,"sourceUnit":4012,"src":"202:33:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":2214,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3028,"sourceUnit":4035,"src":"236:33:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":2215,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3028,"sourceUnit":4238,"src":"270:33:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":2216,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3028,"sourceUnit":4262,"src":"304:46:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2218,"name":"Context","nameLocations":["618:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":4034,"src":"618:7:12"},"id":2219,"nodeType":"InheritanceSpecifier","src":"618:7:12"},{"baseName":{"id":2220,"name":"ERC165","nameLocations":["627:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":4261,"src":"627:6:12"},"id":2221,"nodeType":"InheritanceSpecifier","src":"627:6:12"},{"baseName":{"id":2222,"name":"IERC721","nameLocations":["635:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":3143,"src":"635:7:12"},"id":2223,"nodeType":"InheritanceSpecifier","src":"635:7:12"},{"baseName":{"id":2224,"name":"IERC721Metadata","nameLocations":["644:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":3715,"src":"644:15:12"},"id":2225,"nodeType":"InheritanceSpecifier","src":"644:15:12"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":2217,"nodeType":"StructuredDocumentation","src":"352:246:12","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":3027,"linearizedBaseContracts":[3027,3715,3143,4261,4273,4034],"name":"ERC721","nameLocation":"608:6:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2228,"libraryName":{"id":2226,"name":"Address","nameLocations":["672:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":4011,"src":"672:7:12"},"nodeType":"UsingForDirective","src":"666:26:12","typeName":{"id":2227,"name":"address","nodeType":"ElementaryTypeName","src":"684:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":2231,"libraryName":{"id":2229,"name":"Strings","nameLocations":["703:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":4237,"src":"703:7:12"},"nodeType":"UsingForDirective","src":"697:26:12","typeName":{"id":2230,"name":"uint256","nodeType":"ElementaryTypeName","src":"715:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":2233,"mutability":"mutable","name":"_name","nameLocation":"762:5:12","nodeType":"VariableDeclaration","scope":3027,"src":"747:20:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2232,"name":"string","nodeType":"ElementaryTypeName","src":"747:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2235,"mutability":"mutable","name":"_symbol","nameLocation":"809:7:12","nodeType":"VariableDeclaration","scope":3027,"src":"794:22:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2234,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2239,"mutability":"mutable","name":"_owners","nameLocation":"906:7:12","nodeType":"VariableDeclaration","scope":3027,"src":"869:44:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":2238,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2236,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"869:28:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2237,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":2243,"mutability":"mutable","name":"_balances","nameLocation":"1001:9:12","nodeType":"VariableDeclaration","scope":3027,"src":"964:46:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2242,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2240,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"964:28:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2241,"name":"uint256","nodeType":"ElementaryTypeName","src":"984:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":2247,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1103:15:12","nodeType":"VariableDeclaration","scope":3027,"src":"1066:52:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":2246,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2244,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1066:28:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2245,"name":"address","nodeType":"ElementaryTypeName","src":"1086:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":2253,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1228:18:12","nodeType":"VariableDeclaration","scope":3027,"src":"1173:73:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":2252,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2248,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1173:46:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2251,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2249,"name":"address","nodeType":"ElementaryTypeName","src":"1202:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1193:25:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2250,"name":"bool","nodeType":"ElementaryTypeName","src":"1213:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":2269,"nodeType":"Block","src":"1423:57:12","statements":[{"expression":{"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2261,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"1433:5:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2262,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"1441:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1433:13:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2264,"nodeType":"ExpressionStatement","src":"1433:13:12"},{"expression":{"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2265,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"1456:7:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2266,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"1466:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:17:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2268,"nodeType":"ExpressionStatement","src":"1456:17:12"}]},"documentation":{"id":2254,"nodeType":"StructuredDocumentation","src":"1253:108:12","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":2270,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2256,"mutability":"mutable","name":"name_","nameLocation":"1393:5:12","nodeType":"VariableDeclaration","scope":2270,"src":"1379:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2255,"name":"string","nodeType":"ElementaryTypeName","src":"1379:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2258,"mutability":"mutable","name":"symbol_","nameLocation":"1414:7:12","nodeType":"VariableDeclaration","scope":2270,"src":"1400:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2257,"name":"string","nodeType":"ElementaryTypeName","src":"1400:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1378:44:12"},"returnParameters":{"id":2260,"nodeType":"ParameterList","parameters":[],"src":"1423:0:12"},"scope":3027,"src":"1366:114:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4260,4272],"body":{"id":2300,"nodeType":"Block","src":"1655:180:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2281,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"1672:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2283,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"1692:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$3143_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$3143_$","typeString":"type(contract IERC721)"}],"id":2282,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1687:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1687:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$3143","typeString":"type(contract IERC721)"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1701:11:12","memberName":"interfaceId","nodeType":"MemberAccess","src":"1687:25:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1672:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2287,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"1728:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2289,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"1748:15:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3715_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3715_$","typeString":"type(contract IERC721Metadata)"}],"id":2288,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1743:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1743:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$3715","typeString":"type(contract IERC721Metadata)"}},"id":2291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1765:11:12","memberName":"interfaceId","nodeType":"MemberAccess","src":"1743:33:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1728:48:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1672:104:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2296,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"1816:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2294,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1792:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$3027_$","typeString":"type(contract super ERC721)"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1798:17:12","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4260,"src":"1792:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1792:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1672:156:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2280,"id":2299,"nodeType":"Return","src":"1665:163:12"}]},"documentation":{"id":2271,"nodeType":"StructuredDocumentation","src":"1486:56:12","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2301,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1556:17:12","nodeType":"FunctionDefinition","overrides":{"id":2277,"nodeType":"OverrideSpecifier","overrides":[{"id":2275,"name":"ERC165","nameLocations":["1623:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":4261,"src":"1623:6:12"},{"id":2276,"name":"IERC165","nameLocations":["1631:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":4273,"src":"1631:7:12"}],"src":"1614:25:12"},"parameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"interfaceId","nameLocation":"1581:11:12","nodeType":"VariableDeclaration","scope":2301,"src":"1574:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2272,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1574:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1573:20:12"},"returnParameters":{"id":2280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2301,"src":"1649:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2278,"name":"bool","nodeType":"ElementaryTypeName","src":"1649:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1648:6:12"},"scope":3027,"src":"1547:288:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3068],"body":{"id":2324,"nodeType":"Block","src":"1975:124:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2311,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"1993:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2010:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2002:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2312,"name":"address","nodeType":"ElementaryTypeName","src":"2002:7:12","typeDescriptions":{}}},"id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2002:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1993:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373","id":2317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2014:44:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","typeString":"literal_string \"ERC721: balance query for the zero address\""},"value":"ERC721: balance query for the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","typeString":"literal_string \"ERC721: balance query for the zero address\""}],"id":2310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1985:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1985:74:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2319,"nodeType":"ExpressionStatement","src":"1985:74:12"},{"expression":{"baseExpression":{"id":2320,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"2076:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2322,"indexExpression":{"id":2321,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"2086:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2076:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2309,"id":2323,"nodeType":"Return","src":"2069:23:12"}]},"documentation":{"id":2302,"nodeType":"StructuredDocumentation","src":"1841:48:12","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":2325,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1903:9:12","nodeType":"FunctionDefinition","overrides":{"id":2306,"nodeType":"OverrideSpecifier","overrides":[],"src":"1948:8:12"},"parameters":{"id":2305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2304,"mutability":"mutable","name":"owner","nameLocation":"1921:5:12","nodeType":"VariableDeclaration","scope":2325,"src":"1913:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2303,"name":"address","nodeType":"ElementaryTypeName","src":"1913:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1912:15:12"},"returnParameters":{"id":2309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2325,"src":"1966:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"1966:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1965:9:12"},"scope":3027,"src":"1894:205:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3076],"body":{"id":2352,"nodeType":"Block","src":"2237:154:12","statements":[{"assignments":[2335],"declarations":[{"constant":false,"id":2335,"mutability":"mutable","name":"owner","nameLocation":"2255:5:12","nodeType":"VariableDeclaration","scope":2352,"src":"2247:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2334,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2339,"initialValue":{"baseExpression":{"id":2336,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"2263:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2338,"indexExpression":{"id":2337,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"2271:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2263:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2247:32:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2341,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"2297:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2314:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2306:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2342,"name":"address","nodeType":"ElementaryTypeName","src":"2306:7:12","typeDescriptions":{}}},"id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2306:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2297:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":2347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2318:43:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","typeString":"literal_string \"ERC721: owner query for nonexistent token\""},"value":"ERC721: owner query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","typeString":"literal_string \"ERC721: owner query for nonexistent token\""}],"id":2340,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2289:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2289:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2349,"nodeType":"ExpressionStatement","src":"2289:73:12"},{"expression":{"id":2350,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"2379:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2333,"id":2351,"nodeType":"Return","src":"2372:12:12"}]},"documentation":{"id":2326,"nodeType":"StructuredDocumentation","src":"2105:46:12","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":2353,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2165:7:12","nodeType":"FunctionDefinition","overrides":{"id":2330,"nodeType":"OverrideSpecifier","overrides":[],"src":"2210:8:12"},"parameters":{"id":2329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2328,"mutability":"mutable","name":"tokenId","nameLocation":"2181:7:12","nodeType":"VariableDeclaration","scope":2353,"src":"2173:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2327,"name":"uint256","nodeType":"ElementaryTypeName","src":"2173:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2172:17:12"},"returnParameters":{"id":2333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2353,"src":"2228:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2331,"name":"address","nodeType":"ElementaryTypeName","src":"2228:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2227:9:12"},"scope":3027,"src":"2156:235:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3700],"body":{"id":2362,"nodeType":"Block","src":"2522:29:12","statements":[{"expression":{"id":2360,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"2539:5:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2359,"id":2361,"nodeType":"Return","src":"2532:12:12"}]},"documentation":{"id":2354,"nodeType":"StructuredDocumentation","src":"2397:51:12","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":2363,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2462:4:12","nodeType":"FunctionDefinition","overrides":{"id":2356,"nodeType":"OverrideSpecifier","overrides":[],"src":"2489:8:12"},"parameters":{"id":2355,"nodeType":"ParameterList","parameters":[],"src":"2466:2:12"},"returnParameters":{"id":2359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2363,"src":"2507:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2357,"name":"string","nodeType":"ElementaryTypeName","src":"2507:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2506:15:12"},"scope":3027,"src":"2453:98:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3706],"body":{"id":2372,"nodeType":"Block","src":"2686:31:12","statements":[{"expression":{"id":2370,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"2703:7:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2369,"id":2371,"nodeType":"Return","src":"2696:14:12"}]},"documentation":{"id":2364,"nodeType":"StructuredDocumentation","src":"2557:53:12","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":2373,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2624:6:12","nodeType":"FunctionDefinition","overrides":{"id":2366,"nodeType":"OverrideSpecifier","overrides":[],"src":"2653:8:12"},"parameters":{"id":2365,"nodeType":"ParameterList","parameters":[],"src":"2630:2:12"},"returnParameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2373,"src":"2671:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2367,"name":"string","nodeType":"ElementaryTypeName","src":"2671:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2670:15:12"},"scope":3027,"src":"2615:102:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3714],"body":{"id":2414,"nodeType":"Block","src":"2871:265:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2384,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"2897:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2383,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"2889:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2889:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2907:49:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","typeString":"literal_string \"ERC721Metadata: URI query for nonexistent token\""},"value":"ERC721Metadata: URI query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","typeString":"literal_string \"ERC721Metadata: URI query for nonexistent token\""}],"id":2382,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2881:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:76:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2388,"nodeType":"ExpressionStatement","src":"2881:76:12"},{"assignments":[2390],"declarations":[{"constant":false,"id":2390,"mutability":"mutable","name":"baseURI","nameLocation":"2982:7:12","nodeType":"VariableDeclaration","scope":2414,"src":"2968:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2389,"name":"string","nodeType":"ElementaryTypeName","src":"2968:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2393,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2391,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"2992:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2992:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2968:34:12"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2396,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"3025:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3019:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2394,"name":"bytes","nodeType":"ElementaryTypeName","src":"3019:5:12","typeDescriptions":{}}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3019:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3034:6:12","memberName":"length","nodeType":"MemberAccess","src":"3019:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3043:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3019:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3127:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3019:110:12","trueExpression":{"arguments":[{"arguments":[{"id":2405,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"3083:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2406,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"3092:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3100:8:12","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4119,"src":"3092:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3092:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2403,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3066:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3070:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"3066:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3059:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2401,"name":"string","nodeType":"ElementaryTypeName","src":"3059:6:12","typeDescriptions":{}}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3059:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2381,"id":2413,"nodeType":"Return","src":"3012:117:12"}]},"documentation":{"id":2374,"nodeType":"StructuredDocumentation","src":"2723:55:12","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":2415,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2792:8:12","nodeType":"FunctionDefinition","overrides":{"id":2378,"nodeType":"OverrideSpecifier","overrides":[],"src":"2838:8:12"},"parameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"tokenId","nameLocation":"2809:7:12","nodeType":"VariableDeclaration","scope":2415,"src":"2801:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2375,"name":"uint256","nodeType":"ElementaryTypeName","src":"2801:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2800:17:12"},"returnParameters":{"id":2381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2415,"src":"2856:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2379,"name":"string","nodeType":"ElementaryTypeName","src":"2856:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2855:15:12"},"scope":3027,"src":"2783:353:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2423,"nodeType":"Block","src":"3333:26:12","statements":[{"expression":{"hexValue":"","id":2421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3350:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":2420,"id":2422,"nodeType":"Return","src":"3343:9:12"}]},"documentation":{"id":2416,"nodeType":"StructuredDocumentation","src":"3142:120:12","text":" @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\n in child contracts."},"id":2424,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3276:8:12","nodeType":"FunctionDefinition","parameters":{"id":2417,"nodeType":"ParameterList","parameters":[],"src":"3284:2:12"},"returnParameters":{"id":2420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2424,"src":"3318:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2418,"name":"string","nodeType":"ElementaryTypeName","src":"3318:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3317:15:12"},"scope":3027,"src":"3267:92:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[3104],"body":{"id":2467,"nodeType":"Block","src":"3486:325:12","statements":[{"assignments":[2434],"declarations":[{"constant":false,"id":2434,"mutability":"mutable","name":"owner","nameLocation":"3504:5:12","nodeType":"VariableDeclaration","scope":2467,"src":"3496:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2433,"name":"address","nodeType":"ElementaryTypeName","src":"3496:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2439,"initialValue":{"arguments":[{"id":2437,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"3527:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2435,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"3512:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$3027_$","typeString":"type(contract ERC721)"}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3519:7:12","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2353,"src":"3512:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3512:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3496:39:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2441,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"3553:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2442,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"3559:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3553:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3566:35:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":2440,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3545:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3545:57:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2446,"nodeType":"ExpressionStatement","src":"3545:57:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2448,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"3621:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3621:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2450,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"3637:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3621:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2454,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"3670:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2455,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"3677:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3677:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2452,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"3646:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$3027_$","typeString":"type(contract ERC721)"}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3653:16:12","memberName":"isApprovedForAll","nodeType":"MemberAccess","referencedDeclaration":2541,"src":"3646:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3646:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3621:69:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c","id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3704:58:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","typeString":"literal_string \"ERC721: approve caller is not owner nor approved for all\""},"value":"ERC721: approve caller is not owner nor approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","typeString":"literal_string \"ERC721: approve caller is not owner nor approved for all\""}],"id":2447,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3613:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3613:159:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2461,"nodeType":"ExpressionStatement","src":"3613:159:12"},{"expression":{"arguments":[{"id":2463,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"3792:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2464,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"3796:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2462,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"3783:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3783:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2466,"nodeType":"ExpressionStatement","src":"3783:21:12"}]},"documentation":{"id":2425,"nodeType":"StructuredDocumentation","src":"3365:46:12","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":2468,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3425:7:12","nodeType":"FunctionDefinition","overrides":{"id":2431,"nodeType":"OverrideSpecifier","overrides":[],"src":"3477:8:12"},"parameters":{"id":2430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2427,"mutability":"mutable","name":"to","nameLocation":"3441:2:12","nodeType":"VariableDeclaration","scope":2468,"src":"3433:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2426,"name":"address","nodeType":"ElementaryTypeName","src":"3433:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2429,"mutability":"mutable","name":"tokenId","nameLocation":"3453:7:12","nodeType":"VariableDeclaration","scope":2468,"src":"3445:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2428,"name":"uint256","nodeType":"ElementaryTypeName","src":"3445:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3432:29:12"},"returnParameters":{"id":2432,"nodeType":"ParameterList","parameters":[],"src":"3486:0:12"},"scope":3027,"src":"3416:395:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3112],"body":{"id":2488,"nodeType":"Block","src":"3957:132:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2479,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"3983:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2478,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"3975:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3993:46:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","typeString":"literal_string \"ERC721: approved query for nonexistent token\""},"value":"ERC721: approved query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","typeString":"literal_string \"ERC721: approved query for nonexistent token\""}],"id":2477,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3967:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3967:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2483,"nodeType":"ExpressionStatement","src":"3967:73:12"},{"expression":{"baseExpression":{"id":2484,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"4058:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2486,"indexExpression":{"id":2485,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"4074:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4058:24:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2476,"id":2487,"nodeType":"Return","src":"4051:31:12"}]},"documentation":{"id":2469,"nodeType":"StructuredDocumentation","src":"3817:50:12","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":2489,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3881:11:12","nodeType":"FunctionDefinition","overrides":{"id":2473,"nodeType":"OverrideSpecifier","overrides":[],"src":"3930:8:12"},"parameters":{"id":2472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"mutability":"mutable","name":"tokenId","nameLocation":"3901:7:12","nodeType":"VariableDeclaration","scope":2489,"src":"3893:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2470,"name":"uint256","nodeType":"ElementaryTypeName","src":"3893:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3892:17:12"},"returnParameters":{"id":2476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2489,"src":"3948:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2474,"name":"address","nodeType":"ElementaryTypeName","src":"3948:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3947:9:12"},"scope":3027,"src":"3872:217:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3120],"body":{"id":2522,"nodeType":"Block","src":"4240:206:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2499,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"4258:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2500,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"4270:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4258:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4284:27:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":2498,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4250:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4250:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2505,"nodeType":"ExpressionStatement","src":"4250:62:12"},{"expression":{"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2506,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"4323:18:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2510,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2507,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"4342:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4342:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4323:32:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2511,"indexExpression":{"id":2509,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"4356:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4323:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2512,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"4368:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4323:53:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2514,"nodeType":"ExpressionStatement","src":"4323:53:12"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2516,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"4406:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4406:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2518,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"4420:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2519,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"4430:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2515,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"4391:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4391:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2521,"nodeType":"EmitStatement","src":"4386:53:12"}]},"documentation":{"id":2490,"nodeType":"StructuredDocumentation","src":"4095:56:12","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":2523,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4165:17:12","nodeType":"FunctionDefinition","overrides":{"id":2496,"nodeType":"OverrideSpecifier","overrides":[],"src":"4231:8:12"},"parameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"operator","nameLocation":"4191:8:12","nodeType":"VariableDeclaration","scope":2523,"src":"4183:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2491,"name":"address","nodeType":"ElementaryTypeName","src":"4183:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2494,"mutability":"mutable","name":"approved","nameLocation":"4206:8:12","nodeType":"VariableDeclaration","scope":2523,"src":"4201:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2493,"name":"bool","nodeType":"ElementaryTypeName","src":"4201:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4182:33:12"},"returnParameters":{"id":2497,"nodeType":"ParameterList","parameters":[],"src":"4240:0:12"},"scope":3027,"src":"4156:290:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3130],"body":{"id":2540,"nodeType":"Block","src":"4615:59:12","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2534,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"4632:18:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2536,"indexExpression":{"id":2535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"4651:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4632:25:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2538,"indexExpression":{"id":2537,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"4658:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4632:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2533,"id":2539,"nodeType":"Return","src":"4625:42:12"}]},"documentation":{"id":2524,"nodeType":"StructuredDocumentation","src":"4452:55:12","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":2541,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4521:16:12","nodeType":"FunctionDefinition","overrides":{"id":2530,"nodeType":"OverrideSpecifier","overrides":[],"src":"4591:8:12"},"parameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2526,"mutability":"mutable","name":"owner","nameLocation":"4546:5:12","nodeType":"VariableDeclaration","scope":2541,"src":"4538:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2525,"name":"address","nodeType":"ElementaryTypeName","src":"4538:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2528,"mutability":"mutable","name":"operator","nameLocation":"4561:8:12","nodeType":"VariableDeclaration","scope":2541,"src":"4553:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2527,"name":"address","nodeType":"ElementaryTypeName","src":"4553:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4537:33:12"},"returnParameters":{"id":2533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2541,"src":"4609:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2531,"name":"bool","nodeType":"ElementaryTypeName","src":"4609:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4608:6:12"},"scope":3027,"src":"4512:162:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3096],"body":{"id":2567,"nodeType":"Block","src":"4825:211:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2554,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"4914:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2556,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"4928:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2553,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"4895:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4895:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564","id":2558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4938:51:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""},"value":"ERC721: transfer caller is not owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""}],"id":2552,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4887:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4887:103:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2560,"nodeType":"ExpressionStatement","src":"4887:103:12"},{"expression":{"arguments":[{"id":2562,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"5011:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2563,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"5017:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2564,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"5021:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2561,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"5001:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5001:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2566,"nodeType":"ExpressionStatement","src":"5001:28:12"}]},"documentation":{"id":2542,"nodeType":"StructuredDocumentation","src":"4680:51:12","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":2568,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4745:12:12","nodeType":"FunctionDefinition","overrides":{"id":2550,"nodeType":"OverrideSpecifier","overrides":[],"src":"4816:8:12"},"parameters":{"id":2549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"from","nameLocation":"4766:4:12","nodeType":"VariableDeclaration","scope":2568,"src":"4758:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2543,"name":"address","nodeType":"ElementaryTypeName","src":"4758:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2546,"mutability":"mutable","name":"to","nameLocation":"4780:2:12","nodeType":"VariableDeclaration","scope":2568,"src":"4772:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2545,"name":"address","nodeType":"ElementaryTypeName","src":"4772:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2548,"mutability":"mutable","name":"tokenId","nameLocation":"4792:7:12","nodeType":"VariableDeclaration","scope":2568,"src":"4784:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"4784:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4757:43:12"},"returnParameters":{"id":2551,"nodeType":"ParameterList","parameters":[],"src":"4825:0:12"},"scope":3027,"src":"4736:300:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3086],"body":{"id":2586,"nodeType":"Block","src":"5195:56:12","statements":[{"expression":{"arguments":[{"id":2580,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"5222:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2581,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"5228:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2582,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"5232:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5241:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2579,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[2587,2617],"referencedDeclaration":2617,"src":"5205:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5205:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2585,"nodeType":"ExpressionStatement","src":"5205:39:12"}]},"documentation":{"id":2569,"nodeType":"StructuredDocumentation","src":"5042:55:12","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":2587,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5111:16:12","nodeType":"FunctionDefinition","overrides":{"id":2577,"nodeType":"OverrideSpecifier","overrides":[],"src":"5186:8:12"},"parameters":{"id":2576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2571,"mutability":"mutable","name":"from","nameLocation":"5136:4:12","nodeType":"VariableDeclaration","scope":2587,"src":"5128:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2570,"name":"address","nodeType":"ElementaryTypeName","src":"5128:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2573,"mutability":"mutable","name":"to","nameLocation":"5150:2:12","nodeType":"VariableDeclaration","scope":2587,"src":"5142:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2572,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2575,"mutability":"mutable","name":"tokenId","nameLocation":"5162:7:12","nodeType":"VariableDeclaration","scope":2587,"src":"5154:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2574,"name":"uint256","nodeType":"ElementaryTypeName","src":"5154:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5127:43:12"},"returnParameters":{"id":2578,"nodeType":"ParameterList","parameters":[],"src":"5195:0:12"},"scope":3027,"src":"5102:149:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3142],"body":{"id":2616,"nodeType":"Block","src":"5430:169:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2602,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"5467:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5467:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2604,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"5481:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2601,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"5448:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5448:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564","id":2606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5491:51:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""},"value":"ERC721: transfer caller is not owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""}],"id":2600,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5440:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5440:103:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2608,"nodeType":"ExpressionStatement","src":"5440:103:12"},{"expression":{"arguments":[{"id":2610,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"5567:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2611,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"5573:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2612,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"5577:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2613,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"5586:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2609,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"5553:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5553:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2615,"nodeType":"ExpressionStatement","src":"5553:39:12"}]},"documentation":{"id":2588,"nodeType":"StructuredDocumentation","src":"5257:55:12","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":2617,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5326:16:12","nodeType":"FunctionDefinition","overrides":{"id":2598,"nodeType":"OverrideSpecifier","overrides":[],"src":"5421:8:12"},"parameters":{"id":2597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2590,"mutability":"mutable","name":"from","nameLocation":"5351:4:12","nodeType":"VariableDeclaration","scope":2617,"src":"5343:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2589,"name":"address","nodeType":"ElementaryTypeName","src":"5343:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2592,"mutability":"mutable","name":"to","nameLocation":"5365:2:12","nodeType":"VariableDeclaration","scope":2617,"src":"5357:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2591,"name":"address","nodeType":"ElementaryTypeName","src":"5357:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2594,"mutability":"mutable","name":"tokenId","nameLocation":"5377:7:12","nodeType":"VariableDeclaration","scope":2617,"src":"5369:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2593,"name":"uint256","nodeType":"ElementaryTypeName","src":"5369:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2596,"mutability":"mutable","name":"_data","nameLocation":"5399:5:12","nodeType":"VariableDeclaration","scope":2617,"src":"5386:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2595,"name":"bytes","nodeType":"ElementaryTypeName","src":"5386:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5342:63:12"},"returnParameters":{"id":2599,"nodeType":"ParameterList","parameters":[],"src":"5430:0:12"},"scope":3027,"src":"5317:282:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2645,"nodeType":"Block","src":"6564:166:12","statements":[{"expression":{"arguments":[{"id":2630,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"6584:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2631,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"6590:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2632,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"6594:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2629,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"6574:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6574:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2634,"nodeType":"ExpressionStatement","src":"6574:28:12"},{"expression":{"arguments":[{"arguments":[{"id":2637,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"6643:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2638,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"6649:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2639,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"6653:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2640,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"6662:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2636,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"6620:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6620:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":2642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6670:52:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":2635,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6612:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6612:111:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2644,"nodeType":"ExpressionStatement","src":"6612:111:12"}]},"documentation":{"id":2618,"nodeType":"StructuredDocumentation","src":"5605:851:12","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2646,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6470:13:12","nodeType":"FunctionDefinition","parameters":{"id":2627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2620,"mutability":"mutable","name":"from","nameLocation":"6492:4:12","nodeType":"VariableDeclaration","scope":2646,"src":"6484:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2619,"name":"address","nodeType":"ElementaryTypeName","src":"6484:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2622,"mutability":"mutable","name":"to","nameLocation":"6506:2:12","nodeType":"VariableDeclaration","scope":2646,"src":"6498:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2621,"name":"address","nodeType":"ElementaryTypeName","src":"6498:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2624,"mutability":"mutable","name":"tokenId","nameLocation":"6518:7:12","nodeType":"VariableDeclaration","scope":2646,"src":"6510:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2623,"name":"uint256","nodeType":"ElementaryTypeName","src":"6510:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2626,"mutability":"mutable","name":"_data","nameLocation":"6540:5:12","nodeType":"VariableDeclaration","scope":2646,"src":"6527:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2625,"name":"bytes","nodeType":"ElementaryTypeName","src":"6527:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6483:63:12"},"returnParameters":{"id":2628,"nodeType":"ParameterList","parameters":[],"src":"6564:0:12"},"scope":3027,"src":"6461:269:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2663,"nodeType":"Block","src":"7104:54:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2654,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"7121:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2656,"indexExpression":{"id":2655,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"7129:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7121:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7149:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7141:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2657,"name":"address","nodeType":"ElementaryTypeName","src":"7141:7:12","typeDescriptions":{}}},"id":2660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7141:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7121:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2653,"id":2662,"nodeType":"Return","src":"7114:37:12"}]},"documentation":{"id":2647,"nodeType":"StructuredDocumentation","src":"6736:292:12","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":2664,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7042:7:12","nodeType":"FunctionDefinition","parameters":{"id":2650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2649,"mutability":"mutable","name":"tokenId","nameLocation":"7058:7:12","nodeType":"VariableDeclaration","scope":2664,"src":"7050:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2648,"name":"uint256","nodeType":"ElementaryTypeName","src":"7050:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7049:17:12"},"returnParameters":{"id":2653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2664,"src":"7098:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2651,"name":"bool","nodeType":"ElementaryTypeName","src":"7098:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7097:6:12"},"scope":3027,"src":"7033:125:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2705,"nodeType":"Block","src":"7415:252:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2676,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"7441:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2675,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"7433:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7433:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":2678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7451:46:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","typeString":"literal_string \"ERC721: operator query for nonexistent token\""},"value":"ERC721: operator query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","typeString":"literal_string \"ERC721: operator query for nonexistent token\""}],"id":2674,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7425:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2680,"nodeType":"ExpressionStatement","src":"7425:73:12"},{"assignments":[2682],"declarations":[{"constant":false,"id":2682,"mutability":"mutable","name":"owner","nameLocation":"7516:5:12","nodeType":"VariableDeclaration","scope":2705,"src":"7508:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2681,"name":"address","nodeType":"ElementaryTypeName","src":"7508:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2687,"initialValue":{"arguments":[{"id":2685,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"7539:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2683,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"7524:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$3027_$","typeString":"type(contract ERC721)"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7531:7:12","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2353,"src":"7524:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7524:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7508:39:12"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2688,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"7565:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2689,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"7576:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7565:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2692,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"7597:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2691,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"7585:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7585:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2694,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"7609:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7585:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7565:51:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2699,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"7644:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2700,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"7651:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2697,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"7620:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$3027_$","typeString":"type(contract ERC721)"}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7627:16:12","memberName":"isApprovedForAll","nodeType":"MemberAccess","referencedDeclaration":2541,"src":"7620:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7620:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7565:94:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2703,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7564:96:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2673,"id":2704,"nodeType":"Return","src":"7557:103:12"}]},"documentation":{"id":2665,"nodeType":"StructuredDocumentation","src":"7164:147:12","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":2706,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7325:18:12","nodeType":"FunctionDefinition","parameters":{"id":2670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2667,"mutability":"mutable","name":"spender","nameLocation":"7352:7:12","nodeType":"VariableDeclaration","scope":2706,"src":"7344:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2666,"name":"address","nodeType":"ElementaryTypeName","src":"7344:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2669,"mutability":"mutable","name":"tokenId","nameLocation":"7369:7:12","nodeType":"VariableDeclaration","scope":2706,"src":"7361:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2668,"name":"uint256","nodeType":"ElementaryTypeName","src":"7361:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7343:34:12"},"returnParameters":{"id":2673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2706,"src":"7409:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2671,"name":"bool","nodeType":"ElementaryTypeName","src":"7409:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7408:6:12"},"scope":3027,"src":"7316:351:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2720,"nodeType":"Block","src":"8062:43:12","statements":[{"expression":{"arguments":[{"id":2715,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"8082:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2716,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"8086:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8095:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2714,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2721,2750],"referencedDeclaration":2750,"src":"8072:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8072:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2719,"nodeType":"ExpressionStatement","src":"8072:26:12"}]},"documentation":{"id":2707,"nodeType":"StructuredDocumentation","src":"7673:319:12","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2721,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8006:9:12","nodeType":"FunctionDefinition","parameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"to","nameLocation":"8024:2:12","nodeType":"VariableDeclaration","scope":2721,"src":"8016:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2708,"name":"address","nodeType":"ElementaryTypeName","src":"8016:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2711,"mutability":"mutable","name":"tokenId","nameLocation":"8036:7:12","nodeType":"VariableDeclaration","scope":2721,"src":"8028:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2710,"name":"uint256","nodeType":"ElementaryTypeName","src":"8028:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8015:29:12"},"returnParameters":{"id":2713,"nodeType":"ParameterList","parameters":[],"src":"8062:0:12"},"scope":3027,"src":"7997:108:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2749,"nodeType":"Block","src":"8411:162:12","statements":[{"expression":{"arguments":[{"id":2732,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"8427:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2733,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"8431:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2731,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"8421:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8421:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2735,"nodeType":"ExpressionStatement","src":"8421:18:12"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":2740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8488:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8480:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2738,"name":"address","nodeType":"ElementaryTypeName","src":"8480:7:12","typeDescriptions":{}}},"id":2741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8480:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2742,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"8492:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2743,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"8496:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2744,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"8505:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2737,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"8457:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8457:54:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":2746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8513:52:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":2736,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8449:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8449:117:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2748,"nodeType":"ExpressionStatement","src":"8449:117:12"}]},"documentation":{"id":2722,"nodeType":"StructuredDocumentation","src":"8111:210:12","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2750,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8335:9:12","nodeType":"FunctionDefinition","parameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2724,"mutability":"mutable","name":"to","nameLocation":"8353:2:12","nodeType":"VariableDeclaration","scope":2750,"src":"8345:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2723,"name":"address","nodeType":"ElementaryTypeName","src":"8345:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2726,"mutability":"mutable","name":"tokenId","nameLocation":"8365:7:12","nodeType":"VariableDeclaration","scope":2750,"src":"8357:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2725,"name":"uint256","nodeType":"ElementaryTypeName","src":"8357:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2728,"mutability":"mutable","name":"_data","nameLocation":"8387:5:12","nodeType":"VariableDeclaration","scope":2750,"src":"8374:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2727,"name":"bytes","nodeType":"ElementaryTypeName","src":"8374:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8344:49:12"},"returnParameters":{"id":2730,"nodeType":"ParameterList","parameters":[],"src":"8411:0:12"},"scope":3027,"src":"8326:247:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2806,"nodeType":"Block","src":"8956:311:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2759,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"8974:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8988:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8980:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2760,"name":"address","nodeType":"ElementaryTypeName","src":"8980:7:12","typeDescriptions":{}}},"id":2763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8980:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8974:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8992:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":2758,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8966:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8966:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2767,"nodeType":"ExpressionStatement","src":"8966:61:12"},{"expression":{"arguments":[{"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9045:17:12","subExpression":{"arguments":[{"id":2770,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"9054:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2769,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"9046:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9046:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":2773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9064:30:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":2768,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9037:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9037:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2775,"nodeType":"ExpressionStatement","src":"9037:58:12"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9127:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2777,"name":"address","nodeType":"ElementaryTypeName","src":"9127:7:12","typeDescriptions":{}}},"id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9127:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2781,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"9139:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2782,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"9143:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2776,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"9106:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9106:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2784,"nodeType":"ExpressionStatement","src":"9106:45:12"},{"expression":{"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2785,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"9162:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2787,"indexExpression":{"id":2786,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"9172:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9162:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9179:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9162:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2790,"nodeType":"ExpressionStatement","src":"9162:18:12"},{"expression":{"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2791,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"9190:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2793,"indexExpression":{"id":2792,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"9198:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9190:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2794,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"9209:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9190:21:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2796,"nodeType":"ExpressionStatement","src":"9190:21:12"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9244:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9236:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2798,"name":"address","nodeType":"ElementaryTypeName","src":"9236:7:12","typeDescriptions":{}}},"id":2801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9236:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2802,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"9248:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2803,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"9252:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2797,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"9227:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9227:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2805,"nodeType":"EmitStatement","src":"9222:38:12"}]},"documentation":{"id":2751,"nodeType":"StructuredDocumentation","src":"8579:311:12","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":2807,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8904:5:12","nodeType":"FunctionDefinition","parameters":{"id":2756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2753,"mutability":"mutable","name":"to","nameLocation":"8918:2:12","nodeType":"VariableDeclaration","scope":2807,"src":"8910:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2752,"name":"address","nodeType":"ElementaryTypeName","src":"8910:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2755,"mutability":"mutable","name":"tokenId","nameLocation":"8930:7:12","nodeType":"VariableDeclaration","scope":2807,"src":"8922:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2754,"name":"uint256","nodeType":"ElementaryTypeName","src":"8922:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8909:29:12"},"returnParameters":{"id":2757,"nodeType":"ParameterList","parameters":[],"src":"8956:0:12"},"scope":3027,"src":"8895:372:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2857,"nodeType":"Block","src":"9533:299:12","statements":[{"assignments":[2814],"declarations":[{"constant":false,"id":2814,"mutability":"mutable","name":"owner","nameLocation":"9551:5:12","nodeType":"VariableDeclaration","scope":2857,"src":"9543:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2813,"name":"address","nodeType":"ElementaryTypeName","src":"9543:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2819,"initialValue":{"arguments":[{"id":2817,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"9574:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2815,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"9559:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$3027_$","typeString":"type(contract ERC721)"}},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9566:7:12","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2353,"src":"9559:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9559:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9543:39:12"},{"expression":{"arguments":[{"id":2821,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"9614:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9629:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9621:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2822,"name":"address","nodeType":"ElementaryTypeName","src":"9621:7:12","typeDescriptions":{}}},"id":2825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9621:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2826,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"9633:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2820,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"9593:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9593:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2828,"nodeType":"ExpressionStatement","src":"9593:48:12"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9696:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9688:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2830,"name":"address","nodeType":"ElementaryTypeName","src":"9688:7:12","typeDescriptions":{}}},"id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9688:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2834,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"9700:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2829,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"9679:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9679:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2836,"nodeType":"ExpressionStatement","src":"9679:29:12"},{"expression":{"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2837,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"9719:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2839,"indexExpression":{"id":2838,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"9729:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9719:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9739:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9719:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2842,"nodeType":"ExpressionStatement","src":"9719:21:12"},{"expression":{"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"9750:23:12","subExpression":{"baseExpression":{"id":2843,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"9757:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2845,"indexExpression":{"id":2844,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"9765:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9757:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2847,"nodeType":"ExpressionStatement","src":"9750:23:12"},{"eventCall":{"arguments":[{"id":2849,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"9798:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9813:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2850,"name":"address","nodeType":"ElementaryTypeName","src":"9805:7:12","typeDescriptions":{}}},"id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2854,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"9817:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2848,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"9789:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9789:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2856,"nodeType":"EmitStatement","src":"9784:41:12"}]},"documentation":{"id":2808,"nodeType":"StructuredDocumentation","src":"9273:206:12","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":2858,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9493:5:12","nodeType":"FunctionDefinition","parameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2810,"mutability":"mutable","name":"tokenId","nameLocation":"9507:7:12","nodeType":"VariableDeclaration","scope":2858,"src":"9499:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"9499:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9498:17:12"},"returnParameters":{"id":2812,"nodeType":"ParameterList","parameters":[],"src":"9533:0:12"},"scope":3027,"src":"9484:348:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2926,"nodeType":"Block","src":"10235:451:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2871,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"10268:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2869,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"10253:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$3027_$","typeString":"type(contract ERC721)"}},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10260:7:12","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2353,"src":"10253:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10253:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2873,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"10280:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10253:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10286:43:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950","typeString":"literal_string \"ERC721: transfer of token that is not own\""},"value":"ERC721: transfer of token that is not own"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950","typeString":"literal_string \"ERC721: transfer of token that is not own\""}],"id":2868,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10245:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10245:85:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2877,"nodeType":"ExpressionStatement","src":"10245:85:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2879,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10348:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10354:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2880,"name":"address","nodeType":"ElementaryTypeName","src":"10354:7:12","typeDescriptions":{}}},"id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10354:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10348:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10366:38:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":2878,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10340:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10340:65:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2887,"nodeType":"ExpressionStatement","src":"10340:65:12"},{"expression":{"arguments":[{"id":2889,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"10437:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2890,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10443:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2891,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"10447:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2888,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"10416:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10416:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2893,"nodeType":"ExpressionStatement","src":"10416:39:12"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10534:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10526:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2895,"name":"address","nodeType":"ElementaryTypeName","src":"10526:7:12","typeDescriptions":{}}},"id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10526:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2899,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"10538:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2894,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"10517:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10517:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2901,"nodeType":"ExpressionStatement","src":"10517:29:12"},{"expression":{"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2902,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"10557:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2904,"indexExpression":{"id":2903,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"10567:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10557:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10576:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10557:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2907,"nodeType":"ExpressionStatement","src":"10557:20:12"},{"expression":{"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2908,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"10587:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2910,"indexExpression":{"id":2909,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10597:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10587:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10604:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10587:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2913,"nodeType":"ExpressionStatement","src":"10587:18:12"},{"expression":{"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2914,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"10615:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2916,"indexExpression":{"id":2915,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"10623:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10615:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2917,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10634:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10615:21:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2919,"nodeType":"ExpressionStatement","src":"10615:21:12"},{"eventCall":{"arguments":[{"id":2921,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"10661:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2922,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10667:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2923,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"10671:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2920,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"10652:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10652:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2925,"nodeType":"EmitStatement","src":"10647:32:12"}]},"documentation":{"id":2859,"nodeType":"StructuredDocumentation","src":"9838:313:12","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":2927,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"10165:9:12","nodeType":"FunctionDefinition","parameters":{"id":2866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"from","nameLocation":"10183:4:12","nodeType":"VariableDeclaration","scope":2927,"src":"10175:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2860,"name":"address","nodeType":"ElementaryTypeName","src":"10175:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2863,"mutability":"mutable","name":"to","nameLocation":"10197:2:12","nodeType":"VariableDeclaration","scope":2927,"src":"10189:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2862,"name":"address","nodeType":"ElementaryTypeName","src":"10189:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2865,"mutability":"mutable","name":"tokenId","nameLocation":"10209:7:12","nodeType":"VariableDeclaration","scope":2927,"src":"10201:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2864,"name":"uint256","nodeType":"ElementaryTypeName","src":"10201:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10174:43:12"},"returnParameters":{"id":2867,"nodeType":"ParameterList","parameters":[],"src":"10235:0:12"},"scope":3027,"src":"10156:530:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2950,"nodeType":"Block","src":"10861:107:12","statements":[{"expression":{"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2935,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"10871:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2937,"indexExpression":{"id":2936,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"10887:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10871:24:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2938,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"10898:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10871:29:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2940,"nodeType":"ExpressionStatement","src":"10871:29:12"},{"eventCall":{"arguments":[{"arguments":[{"id":2944,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"10939:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2942,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"10924:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$3027_$","typeString":"type(contract ERC721)"}},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10931:7:12","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2353,"src":"10924:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10924:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2946,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"10949:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2947,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"10953:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2941,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"10915:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10915:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2949,"nodeType":"EmitStatement","src":"10910:51:12"}]},"documentation":{"id":2928,"nodeType":"StructuredDocumentation","src":"10692:100:12","text":" @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."},"id":2951,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10806:8:12","nodeType":"FunctionDefinition","parameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2930,"mutability":"mutable","name":"to","nameLocation":"10823:2:12","nodeType":"VariableDeclaration","scope":2951,"src":"10815:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2929,"name":"address","nodeType":"ElementaryTypeName","src":"10815:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2932,"mutability":"mutable","name":"tokenId","nameLocation":"10835:7:12","nodeType":"VariableDeclaration","scope":2951,"src":"10827:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2931,"name":"uint256","nodeType":"ElementaryTypeName","src":"10827:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10814:29:12"},"returnParameters":{"id":2934,"nodeType":"ParameterList","parameters":[],"src":"10861:0:12"},"scope":3027,"src":"10797:171:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3014,"nodeType":"Block","src":"11651:694:12","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2965,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"11665:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11668:10:12","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":3735,"src":"11665:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11665:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3012,"nodeType":"Block","src":"12303:36:12","statements":[{"expression":{"hexValue":"74727565","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12324:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2964,"id":3011,"nodeType":"Return","src":"12317:11:12"}]},"id":3013,"nodeType":"IfStatement","src":"11661:678:12","trueBody":{"id":3009,"nodeType":"Block","src":"11682:615:12","statements":[{"clauses":[{"block":{"id":2989,"nodeType":"Block","src":"11797:95:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2981,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"11822:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"arguments":[{"id":2983,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"11848:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2982,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"11832:15:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$3161_$","typeString":"type(contract IERC721Receiver)"}},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11832:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$3161","typeString":"contract IERC721Receiver"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11852:16:12","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":3160,"src":"11832:36:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11869:8:12","memberName":"selector","nodeType":"MemberAccess","src":"11832:45:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"11822:55:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2964,"id":2988,"nodeType":"Return","src":"11815:62:12"}]},"errorName":"","id":2990,"nodeType":"TryCatchClause","parameters":{"id":2980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"retval","nameLocation":"11789:6:12","nodeType":"VariableDeclaration","scope":2990,"src":"11782:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2978,"name":"bytes4","nodeType":"ElementaryTypeName","src":"11782:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"11781:15:12"},"src":"11773:119:12"},{"block":{"id":3006,"nodeType":"Block","src":"11921:366:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2994,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"11943:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11950:6:12","memberName":"length","nodeType":"MemberAccess","src":"11943:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11960:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11943:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3004,"nodeType":"Block","src":"12070:203:12","statements":[{"AST":{"nodeType":"YulBlock","src":"12169:86:12","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12206:2:12","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"12210:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12202:3:12"},"nodeType":"YulFunctionCall","src":"12202:15:12"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"12225:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12219:5:12"},"nodeType":"YulFunctionCall","src":"12219:13:12"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12195:6:12"},"nodeType":"YulFunctionCall","src":"12195:38:12"},"nodeType":"YulExpressionStatement","src":"12195:38:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":2992,"isOffset":false,"isSlot":false,"src":"12210:6:12","valueSize":1},{"declaration":2992,"isOffset":false,"isSlot":false,"src":"12225:6:12","valueSize":1}],"id":3003,"nodeType":"InlineAssembly","src":"12160:95:12"}]},"id":3005,"nodeType":"IfStatement","src":"11939:334:12","trueBody":{"id":3002,"nodeType":"Block","src":"11963:101:12","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11992:52:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":2998,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"11985:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11985:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3001,"nodeType":"ExpressionStatement","src":"11985:60:12"}]}}]},"errorName":"","id":3007,"nodeType":"TryCatchClause","parameters":{"id":2993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2992,"mutability":"mutable","name":"reason","nameLocation":"11913:6:12","nodeType":"VariableDeclaration","scope":3007,"src":"11900:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2991,"name":"bytes","nodeType":"ElementaryTypeName","src":"11900:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11899:21:12"},"src":"11893:394:12"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2972,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"11737:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11737:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2974,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"11751:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2975,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"11757:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2976,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"11766:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2969,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"11716:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2968,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"11700:15:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$3161_$","typeString":"type(contract IERC721Receiver)"}},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11700:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$3161","typeString":"contract IERC721Receiver"}},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11720:16:12","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":3160,"src":"11700:36:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11700:72:12","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3008,"nodeType":"TryStatement","src":"11696:591:12"}]}}]},"documentation":{"id":2952,"nodeType":"StructuredDocumentation","src":"10974:542:12","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":3015,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"11530:22:12","nodeType":"FunctionDefinition","parameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2954,"mutability":"mutable","name":"from","nameLocation":"11561:4:12","nodeType":"VariableDeclaration","scope":3015,"src":"11553:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2953,"name":"address","nodeType":"ElementaryTypeName","src":"11553:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2956,"mutability":"mutable","name":"to","nameLocation":"11575:2:12","nodeType":"VariableDeclaration","scope":3015,"src":"11567:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2955,"name":"address","nodeType":"ElementaryTypeName","src":"11567:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2958,"mutability":"mutable","name":"tokenId","nameLocation":"11587:7:12","nodeType":"VariableDeclaration","scope":3015,"src":"11579:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2957,"name":"uint256","nodeType":"ElementaryTypeName","src":"11579:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2960,"mutability":"mutable","name":"_data","nameLocation":"11609:5:12","nodeType":"VariableDeclaration","scope":3015,"src":"11596:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2959,"name":"bytes","nodeType":"ElementaryTypeName","src":"11596:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11552:63:12"},"returnParameters":{"id":2964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3015,"src":"11641:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2962,"name":"bool","nodeType":"ElementaryTypeName","src":"11641:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11640:6:12"},"scope":3027,"src":"11521:824:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3025,"nodeType":"Block","src":"13031:3:12","statements":[]},"documentation":{"id":3016,"nodeType":"StructuredDocumentation","src":"12351:585:12","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":3026,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12950:20:12","nodeType":"FunctionDefinition","parameters":{"id":3023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"from","nameLocation":"12979:4:12","nodeType":"VariableDeclaration","scope":3026,"src":"12971:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3017,"name":"address","nodeType":"ElementaryTypeName","src":"12971:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3020,"mutability":"mutable","name":"to","nameLocation":"12993:2:12","nodeType":"VariableDeclaration","scope":3026,"src":"12985:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3019,"name":"address","nodeType":"ElementaryTypeName","src":"12985:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3022,"mutability":"mutable","name":"tokenId","nameLocation":"13005:7:12","nodeType":"VariableDeclaration","scope":3026,"src":"12997:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"12997:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12970:43:12"},"returnParameters":{"id":3024,"nodeType":"ParameterList","parameters":[],"src":"13031:0:12"},"scope":3027,"src":"12941:93:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3028,"src":"599:12437:12","usedErrors":[]}],"src":"33:13004:12"},"id":12},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[4273],"IERC721":[3143]},"id":3144,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3029,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:13"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":3030,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3144,"sourceUnit":4274,"src":"58:47:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3032,"name":"IERC165","nameLocations":["196:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":4273,"src":"196:7:13"},"id":3033,"nodeType":"InheritanceSpecifier","src":"196:7:13"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":3031,"nodeType":"StructuredDocumentation","src":"107:67:13","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":3143,"linearizedBaseContracts":[3143,4273],"name":"IERC721","nameLocation":"185:7:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3034,"nodeType":"StructuredDocumentation","src":"210:88:13","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":3042,"name":"Transfer","nameLocation":"309:8:13","nodeType":"EventDefinition","parameters":{"id":3041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3036,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"334:4:13","nodeType":"VariableDeclaration","scope":3042,"src":"318:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3035,"name":"address","nodeType":"ElementaryTypeName","src":"318:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3038,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"356:2:13","nodeType":"VariableDeclaration","scope":3042,"src":"340:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3037,"name":"address","nodeType":"ElementaryTypeName","src":"340:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3040,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"376:7:13","nodeType":"VariableDeclaration","scope":3042,"src":"360:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"317:67:13"},"src":"303:82:13"},{"anonymous":false,"documentation":{"id":3043,"nodeType":"StructuredDocumentation","src":"391:94:13","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":3051,"name":"Approval","nameLocation":"496:8:13","nodeType":"EventDefinition","parameters":{"id":3050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3045,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"521:5:13","nodeType":"VariableDeclaration","scope":3051,"src":"505:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3044,"name":"address","nodeType":"ElementaryTypeName","src":"505:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3047,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"544:8:13","nodeType":"VariableDeclaration","scope":3051,"src":"528:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3046,"name":"address","nodeType":"ElementaryTypeName","src":"528:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3049,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"570:7:13","nodeType":"VariableDeclaration","scope":3051,"src":"554:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3048,"name":"uint256","nodeType":"ElementaryTypeName","src":"554:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:74:13"},"src":"490:89:13"},{"anonymous":false,"documentation":{"id":3052,"nodeType":"StructuredDocumentation","src":"585:117:13","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":3060,"name":"ApprovalForAll","nameLocation":"713:14:13","nodeType":"EventDefinition","parameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3054,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"744:5:13","nodeType":"VariableDeclaration","scope":3060,"src":"728:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3053,"name":"address","nodeType":"ElementaryTypeName","src":"728:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3056,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"767:8:13","nodeType":"VariableDeclaration","scope":3060,"src":"751:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3055,"name":"address","nodeType":"ElementaryTypeName","src":"751:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3058,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"782:8:13","nodeType":"VariableDeclaration","scope":3060,"src":"777:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3057,"name":"bool","nodeType":"ElementaryTypeName","src":"777:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"727:64:13"},"src":"707:85:13"},{"documentation":{"id":3061,"nodeType":"StructuredDocumentation","src":"798:76:13","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":3068,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"888:9:13","nodeType":"FunctionDefinition","parameters":{"id":3064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3063,"mutability":"mutable","name":"owner","nameLocation":"906:5:13","nodeType":"VariableDeclaration","scope":3068,"src":"898:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3062,"name":"address","nodeType":"ElementaryTypeName","src":"898:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"897:15:13"},"returnParameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3066,"mutability":"mutable","name":"balance","nameLocation":"944:7:13","nodeType":"VariableDeclaration","scope":3068,"src":"936:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3065,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"935:17:13"},"scope":3143,"src":"879:74:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3069,"nodeType":"StructuredDocumentation","src":"959:131:13","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":3076,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1104:7:13","nodeType":"FunctionDefinition","parameters":{"id":3072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3071,"mutability":"mutable","name":"tokenId","nameLocation":"1120:7:13","nodeType":"VariableDeclaration","scope":3076,"src":"1112:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3070,"name":"uint256","nodeType":"ElementaryTypeName","src":"1112:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1111:17:13"},"returnParameters":{"id":3075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3074,"mutability":"mutable","name":"owner","nameLocation":"1160:5:13","nodeType":"VariableDeclaration","scope":3076,"src":"1152:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3073,"name":"address","nodeType":"ElementaryTypeName","src":"1152:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1151:15:13"},"scope":3143,"src":"1095:72:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3077,"nodeType":"StructuredDocumentation","src":"1173:690:13","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":3086,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1877:16:13","nodeType":"FunctionDefinition","parameters":{"id":3084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3079,"mutability":"mutable","name":"from","nameLocation":"1902:4:13","nodeType":"VariableDeclaration","scope":3086,"src":"1894:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3078,"name":"address","nodeType":"ElementaryTypeName","src":"1894:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3081,"mutability":"mutable","name":"to","nameLocation":"1916:2:13","nodeType":"VariableDeclaration","scope":3086,"src":"1908:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3080,"name":"address","nodeType":"ElementaryTypeName","src":"1908:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3083,"mutability":"mutable","name":"tokenId","nameLocation":"1928:7:13","nodeType":"VariableDeclaration","scope":3086,"src":"1920:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3082,"name":"uint256","nodeType":"ElementaryTypeName","src":"1920:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1893:43:13"},"returnParameters":{"id":3085,"nodeType":"ParameterList","parameters":[],"src":"1945:0:13"},"scope":3143,"src":"1868:78:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3087,"nodeType":"StructuredDocumentation","src":"1952:504:13","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":3096,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2470:12:13","nodeType":"FunctionDefinition","parameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3089,"mutability":"mutable","name":"from","nameLocation":"2491:4:13","nodeType":"VariableDeclaration","scope":3096,"src":"2483:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3088,"name":"address","nodeType":"ElementaryTypeName","src":"2483:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3091,"mutability":"mutable","name":"to","nameLocation":"2505:2:13","nodeType":"VariableDeclaration","scope":3096,"src":"2497:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3090,"name":"address","nodeType":"ElementaryTypeName","src":"2497:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3093,"mutability":"mutable","name":"tokenId","nameLocation":"2517:7:13","nodeType":"VariableDeclaration","scope":3096,"src":"2509:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3092,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2482:43:13"},"returnParameters":{"id":3095,"nodeType":"ParameterList","parameters":[],"src":"2534:0:13"},"scope":3143,"src":"2461:74:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3097,"nodeType":"StructuredDocumentation","src":"2541:452:13","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":3104,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3007:7:13","nodeType":"FunctionDefinition","parameters":{"id":3102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3099,"mutability":"mutable","name":"to","nameLocation":"3023:2:13","nodeType":"VariableDeclaration","scope":3104,"src":"3015:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3098,"name":"address","nodeType":"ElementaryTypeName","src":"3015:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3101,"mutability":"mutable","name":"tokenId","nameLocation":"3035:7:13","nodeType":"VariableDeclaration","scope":3104,"src":"3027:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3100,"name":"uint256","nodeType":"ElementaryTypeName","src":"3027:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3014:29:13"},"returnParameters":{"id":3103,"nodeType":"ParameterList","parameters":[],"src":"3052:0:13"},"scope":3143,"src":"2998:55:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3105,"nodeType":"StructuredDocumentation","src":"3059:139:13","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":3112,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3212:11:13","nodeType":"FunctionDefinition","parameters":{"id":3108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3107,"mutability":"mutable","name":"tokenId","nameLocation":"3232:7:13","nodeType":"VariableDeclaration","scope":3112,"src":"3224:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3106,"name":"uint256","nodeType":"ElementaryTypeName","src":"3224:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3223:17:13"},"returnParameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"operator","nameLocation":"3272:8:13","nodeType":"VariableDeclaration","scope":3112,"src":"3264:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3109,"name":"address","nodeType":"ElementaryTypeName","src":"3264:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3263:18:13"},"scope":3143,"src":"3203:79:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3113,"nodeType":"StructuredDocumentation","src":"3288:309:13","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":3120,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3611:17:13","nodeType":"FunctionDefinition","parameters":{"id":3118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"operator","nameLocation":"3637:8:13","nodeType":"VariableDeclaration","scope":3120,"src":"3629:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3114,"name":"address","nodeType":"ElementaryTypeName","src":"3629:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3117,"mutability":"mutable","name":"_approved","nameLocation":"3652:9:13","nodeType":"VariableDeclaration","scope":3120,"src":"3647:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3116,"name":"bool","nodeType":"ElementaryTypeName","src":"3647:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3628:34:13"},"returnParameters":{"id":3119,"nodeType":"ParameterList","parameters":[],"src":"3671:0:13"},"scope":3143,"src":"3602:70:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3121,"nodeType":"StructuredDocumentation","src":"3678:138:13","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":3130,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3830:16:13","nodeType":"FunctionDefinition","parameters":{"id":3126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3123,"mutability":"mutable","name":"owner","nameLocation":"3855:5:13","nodeType":"VariableDeclaration","scope":3130,"src":"3847:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3122,"name":"address","nodeType":"ElementaryTypeName","src":"3847:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3125,"mutability":"mutable","name":"operator","nameLocation":"3870:8:13","nodeType":"VariableDeclaration","scope":3130,"src":"3862:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3124,"name":"address","nodeType":"ElementaryTypeName","src":"3862:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3846:33:13"},"returnParameters":{"id":3129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3130,"src":"3903:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3127,"name":"bool","nodeType":"ElementaryTypeName","src":"3903:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3902:6:13"},"scope":3143,"src":"3821:88:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3131,"nodeType":"StructuredDocumentation","src":"3915:568:13","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":3142,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4497:16:13","nodeType":"FunctionDefinition","parameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3133,"mutability":"mutable","name":"from","nameLocation":"4522:4:13","nodeType":"VariableDeclaration","scope":3142,"src":"4514:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3132,"name":"address","nodeType":"ElementaryTypeName","src":"4514:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3135,"mutability":"mutable","name":"to","nameLocation":"4536:2:13","nodeType":"VariableDeclaration","scope":3142,"src":"4528:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3134,"name":"address","nodeType":"ElementaryTypeName","src":"4528:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3137,"mutability":"mutable","name":"tokenId","nameLocation":"4548:7:13","nodeType":"VariableDeclaration","scope":3142,"src":"4540:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3136,"name":"uint256","nodeType":"ElementaryTypeName","src":"4540:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3139,"mutability":"mutable","name":"data","nameLocation":"4572:4:13","nodeType":"VariableDeclaration","scope":3142,"src":"4557:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3138,"name":"bytes","nodeType":"ElementaryTypeName","src":"4557:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4513:64:13"},"returnParameters":{"id":3141,"nodeType":"ParameterList","parameters":[],"src":"4586:0:13"},"scope":3143,"src":"4488:99:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3144,"src":"175:4414:13","usedErrors":[]}],"src":"33:4557:13"},"id":13},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[3161]},"id":3162,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3145,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":3146,"nodeType":"StructuredDocumentation","src":"58:152:14","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":3161,"linearizedBaseContracts":[3161],"name":"IERC721Receiver","nameLocation":"221:15:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3147,"nodeType":"StructuredDocumentation","src":"243:485:14","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."},"functionSelector":"150b7a02","id":3160,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"742:16:14","nodeType":"FunctionDefinition","parameters":{"id":3156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3149,"mutability":"mutable","name":"operator","nameLocation":"767:8:14","nodeType":"VariableDeclaration","scope":3160,"src":"759:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3148,"name":"address","nodeType":"ElementaryTypeName","src":"759:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3151,"mutability":"mutable","name":"from","nameLocation":"785:4:14","nodeType":"VariableDeclaration","scope":3160,"src":"777:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3150,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3153,"mutability":"mutable","name":"tokenId","nameLocation":"799:7:14","nodeType":"VariableDeclaration","scope":3160,"src":"791:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3152,"name":"uint256","nodeType":"ElementaryTypeName","src":"791:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3155,"mutability":"mutable","name":"data","nameLocation":"823:4:14","nodeType":"VariableDeclaration","scope":3160,"src":"808:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3154,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"758:70:14"},"returnParameters":{"id":3159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3160,"src":"847:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3157,"name":"bytes4","nodeType":"ElementaryTypeName","src":"847:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"846:8:14"},"scope":3161,"src":"733:122:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3162,"src":"211:646:14","usedErrors":[]}],"src":"33:825:14"},"id":14},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol","exportedSymbols":{"Address":[4011],"Context":[4034],"ERC165":[4261],"ERC721":[3027],"ERC721Burnable":[3191],"IERC165":[4273],"IERC721":[3143],"IERC721Enumerable":[3688],"IERC721Metadata":[3715],"IERC721Receiver":[3161],"Strings":[4237]},"id":3192,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3163,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":3164,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3192,"sourceUnit":3028,"src":"58:23:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":3165,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3192,"sourceUnit":4035,"src":"82:36:15","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3167,"name":"Context","nameLocations":["262:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":4034,"src":"262:7:15"},"id":3168,"nodeType":"InheritanceSpecifier","src":"262:7:15"},{"baseName":{"id":3169,"name":"ERC721","nameLocations":["271:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":3027,"src":"271:6:15"},"id":3170,"nodeType":"InheritanceSpecifier","src":"271:6:15"}],"canonicalName":"ERC721Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3166,"nodeType":"StructuredDocumentation","src":"120:105:15","text":" @title ERC721 Burnable Token\n @dev ERC721 Token that can be irreversibly burned (destroyed)."},"fullyImplemented":true,"id":3191,"linearizedBaseContracts":[3191,3027,3715,3143,4261,4273,4034],"name":"ERC721Burnable","nameLocation":"244:14:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":3189,"nodeType":"Block","src":"497:195:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3178,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"586:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"586:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3180,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"600:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3177,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"567:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"567:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564","id":3182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"610:50:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ee6b7e810d7b317242d4688e6943ff4dd7897bb01d903b1a666812481b12a4f1","typeString":"literal_string \"ERC721Burnable: caller is not owner nor approved\""},"value":"ERC721Burnable: caller is not owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ee6b7e810d7b317242d4688e6943ff4dd7897bb01d903b1a666812481b12a4f1","typeString":"literal_string \"ERC721Burnable: caller is not owner nor approved\""}],"id":3176,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"559:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"559:102:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3184,"nodeType":"ExpressionStatement","src":"559:102:15"},{"expression":{"arguments":[{"id":3186,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"677:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3185,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"671:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"671:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3188,"nodeType":"ExpressionStatement","src":"671:14:15"}]},"documentation":{"id":3171,"nodeType":"StructuredDocumentation","src":"284:162:15","text":" @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."},"functionSelector":"42966c68","id":3190,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"460:4:15","nodeType":"FunctionDefinition","parameters":{"id":3174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3173,"mutability":"mutable","name":"tokenId","nameLocation":"473:7:15","nodeType":"VariableDeclaration","scope":3190,"src":"465:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3172,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:17:15"},"returnParameters":{"id":3175,"nodeType":"ParameterList","parameters":[],"src":"497:0:15"},"scope":3191,"src":"451:241:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":3192,"src":"226:468:15","usedErrors":[]}],"src":"33:662:15"},"id":15},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","exportedSymbols":{"Address":[4011],"Context":[4034],"ERC165":[4261],"ERC721":[3027],"ERC721Enumerable":[3529],"IERC165":[4273],"IERC721":[3143],"IERC721Enumerable":[3688],"IERC721Metadata":[3715],"IERC721Receiver":[3161],"Strings":[4237]},"id":3530,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3193,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":3194,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3530,"sourceUnit":3028,"src":"58:23:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","file":"./IERC721Enumerable.sol","id":3195,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3530,"sourceUnit":3689,"src":"82:33:16","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3197,"name":"ERC721","nameLocations":["355:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3027,"src":"355:6:16"},"id":3198,"nodeType":"InheritanceSpecifier","src":"355:6:16"},{"baseName":{"id":3199,"name":"IERC721Enumerable","nameLocations":["363:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":3688,"src":"363:17:16"},"id":3200,"nodeType":"InheritanceSpecifier","src":"363:17:16"}],"canonicalName":"ERC721Enumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3196,"nodeType":"StructuredDocumentation","src":"117:199:16","text":" @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n enumerability of all the token ids in the contract as well as all token ids owned by each\n account."},"fullyImplemented":true,"id":3529,"linearizedBaseContracts":[3529,3688,3027,3715,3143,4261,4273,4034],"name":"ERC721Enumerable","nameLocation":"335:16:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3206,"mutability":"mutable","name":"_ownedTokens","nameLocation":"496:12:16","nodeType":"VariableDeclaration","scope":3529,"src":"440:68:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":3205,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3201,"name":"address","nodeType":"ElementaryTypeName","src":"448:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"440:47:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3204,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3202,"name":"uint256","nodeType":"ElementaryTypeName","src":"467:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"459:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3203,"name":"uint256","nodeType":"ElementaryTypeName","src":"478:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":3210,"mutability":"mutable","name":"_ownedTokensIndex","nameLocation":"614:17:16","nodeType":"VariableDeclaration","scope":3529,"src":"578:53:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":3209,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3207,"name":"uint256","nodeType":"ElementaryTypeName","src":"586:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"578:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3208,"name":"uint256","nodeType":"ElementaryTypeName","src":"597:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":3213,"mutability":"mutable","name":"_allTokens","nameLocation":"710:10:16","nodeType":"VariableDeclaration","scope":3529,"src":"692:28:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":3211,"name":"uint256","nodeType":"ElementaryTypeName","src":"692:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3212,"nodeType":"ArrayTypeName","src":"692:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"private"},{"constant":false,"id":3217,"mutability":"mutable","name":"_allTokensIndex","nameLocation":"827:15:16","nodeType":"VariableDeclaration","scope":3529,"src":"791:51:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":3216,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3214,"name":"uint256","nodeType":"ElementaryTypeName","src":"799:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"791:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3215,"name":"uint256","nodeType":"ElementaryTypeName","src":"810:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"baseFunctions":[2301,4272],"body":{"id":3240,"nodeType":"Block","src":"1018:126:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3228,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"1035:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3230,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"1055:17:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$3688_$","typeString":"type(contract IERC721Enumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$3688_$","typeString":"type(contract IERC721Enumerable)"}],"id":3229,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1050:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1050:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Enumerable_$3688","typeString":"type(contract IERC721Enumerable)"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1074:11:16","memberName":"interfaceId","nodeType":"MemberAccess","src":"1050:35:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1035:50:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3236,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"1125:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3234,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1101:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$3529_$","typeString":"type(contract super ERC721Enumerable)"}},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1107:17:16","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2301,"src":"1101:23:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1101:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1035:102:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3227,"id":3239,"nodeType":"Return","src":"1028:109:16"}]},"documentation":{"id":3218,"nodeType":"StructuredDocumentation","src":"849:56:16","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3241,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"919:17:16","nodeType":"FunctionDefinition","overrides":{"id":3224,"nodeType":"OverrideSpecifier","overrides":[{"id":3222,"name":"IERC165","nameLocations":["986:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":4273,"src":"986:7:16"},{"id":3223,"name":"ERC721","nameLocations":["995:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":3027,"src":"995:6:16"}],"src":"977:25:16"},"parameters":{"id":3221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3220,"mutability":"mutable","name":"interfaceId","nameLocation":"944:11:16","nodeType":"VariableDeclaration","scope":3241,"src":"937:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3219,"name":"bytes4","nodeType":"ElementaryTypeName","src":"937:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"936:20:16"},"returnParameters":{"id":3227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3241,"src":"1012:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3225,"name":"bool","nodeType":"ElementaryTypeName","src":"1012:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1011:6:16"},"scope":3529,"src":"910:234:16","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3679],"body":{"id":3268,"nodeType":"Block","src":"1329:147:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3253,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"1347:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[{"id":3256,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"1372:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3254,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"1355:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$3027_$","typeString":"type(contract ERC721)"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1362:9:16","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2325,"src":"1355:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1355:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1347:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e6473","id":3259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1380:45:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","typeString":"literal_string \"ERC721Enumerable: owner index out of bounds\""},"value":"ERC721Enumerable: owner index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","typeString":"literal_string \"ERC721Enumerable: owner index out of bounds\""}],"id":3252,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1339:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1339:87:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3261,"nodeType":"ExpressionStatement","src":"1339:87:16"},{"expression":{"baseExpression":{"baseExpression":{"id":3262,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"1443:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":3264,"indexExpression":{"id":3263,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"1456:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1443:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3266,"indexExpression":{"id":3265,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"1463:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1443:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3251,"id":3267,"nodeType":"Return","src":"1436:33:16"}]},"documentation":{"id":3242,"nodeType":"StructuredDocumentation","src":"1150:68:16","text":" @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."},"functionSelector":"2f745c59","id":3269,"implemented":true,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"1232:19:16","nodeType":"FunctionDefinition","overrides":{"id":3248,"nodeType":"OverrideSpecifier","overrides":[],"src":"1302:8:16"},"parameters":{"id":3247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"owner","nameLocation":"1260:5:16","nodeType":"VariableDeclaration","scope":3269,"src":"1252:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3243,"name":"address","nodeType":"ElementaryTypeName","src":"1252:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3246,"mutability":"mutable","name":"index","nameLocation":"1275:5:16","nodeType":"VariableDeclaration","scope":3269,"src":"1267:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3245,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1251:30:16"},"returnParameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3269,"src":"1320:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1320:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1319:9:16"},"scope":3529,"src":"1223:253:16","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3669],"body":{"id":3279,"nodeType":"Block","src":"1617:41:16","statements":[{"expression":{"expression":{"id":3276,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"1634:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1645:6:16","memberName":"length","nodeType":"MemberAccess","src":"1634:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3275,"id":3278,"nodeType":"Return","src":"1627:24:16"}]},"documentation":{"id":3270,"nodeType":"StructuredDocumentation","src":"1482:60:16","text":" @dev See {IERC721Enumerable-totalSupply}."},"functionSelector":"18160ddd","id":3280,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1556:11:16","nodeType":"FunctionDefinition","overrides":{"id":3272,"nodeType":"OverrideSpecifier","overrides":[],"src":"1590:8:16"},"parameters":{"id":3271,"nodeType":"ParameterList","parameters":[],"src":"1567:2:16"},"returnParameters":{"id":3275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3280,"src":"1608:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3273,"name":"uint256","nodeType":"ElementaryTypeName","src":"1608:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1607:9:16"},"scope":3529,"src":"1547:111:16","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3687],"body":{"id":3302,"nodeType":"Block","src":"1814:146:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3290,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"1832:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3291,"name":"ERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"1840:16:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Enumerable_$3529_$","typeString":"type(contract ERC721Enumerable)"}},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1857:11:16","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":3280,"src":"1840:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1840:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1832:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473","id":3295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1872:46:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","typeString":"literal_string \"ERC721Enumerable: global index out of bounds\""},"value":"ERC721Enumerable: global index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","typeString":"literal_string \"ERC721Enumerable: global index out of bounds\""}],"id":3289,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1824:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1824:95:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3297,"nodeType":"ExpressionStatement","src":"1824:95:16"},{"expression":{"baseExpression":{"id":3298,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"1936:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3300,"indexExpression":{"id":3299,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"1947:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1936:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3288,"id":3301,"nodeType":"Return","src":"1929:24:16"}]},"documentation":{"id":3281,"nodeType":"StructuredDocumentation","src":"1664:61:16","text":" @dev See {IERC721Enumerable-tokenByIndex}."},"functionSelector":"4f6ccce7","id":3303,"implemented":true,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"1739:12:16","nodeType":"FunctionDefinition","overrides":{"id":3285,"nodeType":"OverrideSpecifier","overrides":[],"src":"1787:8:16"},"parameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"index","nameLocation":"1760:5:16","nodeType":"VariableDeclaration","scope":3303,"src":"1752:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3282,"name":"uint256","nodeType":"ElementaryTypeName","src":"1752:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1751:15:16"},"returnParameters":{"id":3288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3303,"src":"1805:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3286,"name":"uint256","nodeType":"ElementaryTypeName","src":"1805:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1804:9:16"},"scope":3529,"src":"1730:230:16","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3026],"body":{"id":3366,"nodeType":"Block","src":"2655:443:16","statements":[{"expression":{"arguments":[{"id":3317,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"2692:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3318,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"2698:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3319,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"2702:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3314,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2665:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Enumerable_$3529_$","typeString":"type(contract super ERC721Enumerable)"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2671:20:16","memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":3026,"src":"2665:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2665:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3321,"nodeType":"ExpressionStatement","src":"2665:45:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3322,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"2725:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2741:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2733:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3323,"name":"address","nodeType":"ElementaryTypeName","src":"2733:7:16","typeDescriptions":{}}},"id":3326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2725:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3333,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"2820:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3334,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"2828:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2820:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3342,"nodeType":"IfStatement","src":"2816:88:16","trueBody":{"id":3341,"nodeType":"Block","src":"2832:72:16","statements":[{"expression":{"arguments":[{"id":3337,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"2879:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3338,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"2885:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3336,"name":"_removeTokenFromOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"2846:32:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2846:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3340,"nodeType":"ExpressionStatement","src":"2846:47:16"}]}},"id":3343,"nodeType":"IfStatement","src":"2721:183:16","trueBody":{"id":3332,"nodeType":"Block","src":"2745:65:16","statements":[{"expression":{"arguments":[{"id":3329,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"2791:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3328,"name":"_addTokenToAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"2759:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2759:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3331,"nodeType":"ExpressionStatement","src":"2759:40:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3344,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"2917:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2931:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2923:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3345,"name":"address","nodeType":"ElementaryTypeName","src":"2923:7:16","typeDescriptions":{}}},"id":3348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2923:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2917:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3355,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"3015:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3356,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"3021:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3015:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3364,"nodeType":"IfStatement","src":"3011:81:16","trueBody":{"id":3363,"nodeType":"Block","src":"3027:65:16","statements":[{"expression":{"arguments":[{"id":3359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"3069:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3360,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"3073:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3358,"name":"_addTokenToOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"3041:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3041:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3362,"nodeType":"ExpressionStatement","src":"3041:40:16"}]}},"id":3365,"nodeType":"IfStatement","src":"2913:179:16","trueBody":{"id":3354,"nodeType":"Block","src":"2935:70:16","statements":[{"expression":{"arguments":[{"id":3351,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"2986:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3350,"name":"_removeTokenFromAllTokensEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3528,"src":"2949:36:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2949:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3353,"nodeType":"ExpressionStatement","src":"2949:45:16"}]}}]},"documentation":{"id":3304,"nodeType":"StructuredDocumentation","src":"1966:585:16","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":3367,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"2565:20:16","nodeType":"FunctionDefinition","overrides":{"id":3312,"nodeType":"OverrideSpecifier","overrides":[],"src":"2646:8:16"},"parameters":{"id":3311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3306,"mutability":"mutable","name":"from","nameLocation":"2594:4:16","nodeType":"VariableDeclaration","scope":3367,"src":"2586:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3305,"name":"address","nodeType":"ElementaryTypeName","src":"2586:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3308,"mutability":"mutable","name":"to","nameLocation":"2608:2:16","nodeType":"VariableDeclaration","scope":3367,"src":"2600:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3307,"name":"address","nodeType":"ElementaryTypeName","src":"2600:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3310,"mutability":"mutable","name":"tokenId","nameLocation":"2620:7:16","nodeType":"VariableDeclaration","scope":3367,"src":"2612:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3309,"name":"uint256","nodeType":"ElementaryTypeName","src":"2612:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2585:43:16"},"returnParameters":{"id":3313,"nodeType":"ParameterList","parameters":[],"src":"2655:0:16"},"scope":3529,"src":"2556:542:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3396,"nodeType":"Block","src":"3466:143:16","statements":[{"assignments":[3376],"declarations":[{"constant":false,"id":3376,"mutability":"mutable","name":"length","nameLocation":"3484:6:16","nodeType":"VariableDeclaration","scope":3396,"src":"3476:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3375,"name":"uint256","nodeType":"ElementaryTypeName","src":"3476:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3381,"initialValue":{"arguments":[{"id":3379,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"3510:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3377,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"3493:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$3027_$","typeString":"type(contract ERC721)"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3500:9:16","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2325,"src":"3493:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3493:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3476:37:16"},{"expression":{"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3382,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"3523:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":3385,"indexExpression":{"id":3383,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"3536:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3523:16:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3386,"indexExpression":{"id":3384,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"3540:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3523:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3387,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"3550:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3523:34:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3389,"nodeType":"ExpressionStatement","src":"3523:34:16"},{"expression":{"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3390,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"3567:17:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3392,"indexExpression":{"id":3391,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"3585:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3567:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3393,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"3596:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3567:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3395,"nodeType":"ExpressionStatement","src":"3567:35:16"}]},"documentation":{"id":3368,"nodeType":"StructuredDocumentation","src":"3104:283:16","text":" @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"},"id":3397,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToOwnerEnumeration","nameLocation":"3401:27:16","nodeType":"FunctionDefinition","parameters":{"id":3373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3370,"mutability":"mutable","name":"to","nameLocation":"3437:2:16","nodeType":"VariableDeclaration","scope":3397,"src":"3429:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3369,"name":"address","nodeType":"ElementaryTypeName","src":"3429:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3372,"mutability":"mutable","name":"tokenId","nameLocation":"3449:7:16","nodeType":"VariableDeclaration","scope":3397,"src":"3441:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3371,"name":"uint256","nodeType":"ElementaryTypeName","src":"3441:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:29:16"},"returnParameters":{"id":3374,"nodeType":"ParameterList","parameters":[],"src":"3466:0:16"},"scope":3529,"src":"3392:217:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3416,"nodeType":"Block","src":"3870:95:16","statements":[{"expression":{"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3403,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"3880:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3405,"indexExpression":{"id":3404,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"3896:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3880:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3406,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"3907:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3918:6:16","memberName":"length","nodeType":"MemberAccess","src":"3907:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3880:44:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3409,"nodeType":"ExpressionStatement","src":"3880:44:16"},{"expression":{"arguments":[{"id":3413,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"3950:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3410,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"3934:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3945:4:16","memberName":"push","nodeType":"MemberAccess","src":"3934:15:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3934:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3415,"nodeType":"ExpressionStatement","src":"3934:24:16"}]},"documentation":{"id":3398,"nodeType":"StructuredDocumentation","src":"3615:184:16","text":" @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"},"id":3417,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToAllTokensEnumeration","nameLocation":"3813:31:16","nodeType":"FunctionDefinition","parameters":{"id":3401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3400,"mutability":"mutable","name":"tokenId","nameLocation":"3853:7:16","nodeType":"VariableDeclaration","scope":3417,"src":"3845:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3399,"name":"uint256","nodeType":"ElementaryTypeName","src":"3845:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3844:17:16"},"returnParameters":{"id":3402,"nodeType":"ParameterList","parameters":[],"src":"3870:0:16"},"scope":3529,"src":"3804:161:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3479,"nodeType":"Block","src":"4663:889:16","statements":[{"assignments":[3426],"declarations":[{"constant":false,"id":3426,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"4852:14:16","nodeType":"VariableDeclaration","scope":3479,"src":"4844:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3425,"name":"uint256","nodeType":"ElementaryTypeName","src":"4844:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3433,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3429,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"4886:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3427,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"4869:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$3027_$","typeString":"type(contract ERC721)"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4876:9:16","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2325,"src":"4869:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4869:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4894:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4869:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4844:51:16"},{"assignments":[3435],"declarations":[{"constant":false,"id":3435,"mutability":"mutable","name":"tokenIndex","nameLocation":"4913:10:16","nodeType":"VariableDeclaration","scope":3479,"src":"4905:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3434,"name":"uint256","nodeType":"ElementaryTypeName","src":"4905:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3439,"initialValue":{"baseExpression":{"id":3436,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"4926:17:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3438,"indexExpression":{"id":3437,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"4944:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4926:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4905:47:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3440,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"5056:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3441,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"5070:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5056:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3466,"nodeType":"IfStatement","src":"5052:323:16","trueBody":{"id":3465,"nodeType":"Block","src":"5086:289:16","statements":[{"assignments":[3444],"declarations":[{"constant":false,"id":3444,"mutability":"mutable","name":"lastTokenId","nameLocation":"5108:11:16","nodeType":"VariableDeclaration","scope":3465,"src":"5100:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3443,"name":"uint256","nodeType":"ElementaryTypeName","src":"5100:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3450,"initialValue":{"baseExpression":{"baseExpression":{"id":3445,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"5122:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":3447,"indexExpression":{"id":3446,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"5135:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5122:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3449,"indexExpression":{"id":3448,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"5141:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5122:34:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5100:56:16"},{"expression":{"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3451,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"5171:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":3454,"indexExpression":{"id":3452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"5184:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5171:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3455,"indexExpression":{"id":3453,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"5190:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5171:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3456,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"5204:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5171:44:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3458,"nodeType":"ExpressionStatement","src":"5171:44:16"},{"expression":{"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3459,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"5287:17:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3461,"indexExpression":{"id":3460,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"5305:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5287:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3462,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"5320:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5287:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3464,"nodeType":"ExpressionStatement","src":"5287:43:16"}]}},{"expression":{"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5461:33:16","subExpression":{"baseExpression":{"id":3467,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"5468:17:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3469,"indexExpression":{"id":3468,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"5486:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5468:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3471,"nodeType":"ExpressionStatement","src":"5461:33:16"},{"expression":{"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5504:41:16","subExpression":{"baseExpression":{"baseExpression":{"id":3472,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"5511:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":3474,"indexExpression":{"id":3473,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"5524:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5511:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3476,"indexExpression":{"id":3475,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"5530:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5511:34:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3478,"nodeType":"ExpressionStatement","src":"5504:41:16"}]},"documentation":{"id":3418,"nodeType":"StructuredDocumentation","src":"3971:606:16","text":" @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"},"id":3480,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromOwnerEnumeration","nameLocation":"4591:32:16","nodeType":"FunctionDefinition","parameters":{"id":3423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3420,"mutability":"mutable","name":"from","nameLocation":"4632:4:16","nodeType":"VariableDeclaration","scope":3480,"src":"4624:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3419,"name":"address","nodeType":"ElementaryTypeName","src":"4624:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3422,"mutability":"mutable","name":"tokenId","nameLocation":"4646:7:16","nodeType":"VariableDeclaration","scope":3480,"src":"4638:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3421,"name":"uint256","nodeType":"ElementaryTypeName","src":"4638:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4623:31:16"},"returnParameters":{"id":3424,"nodeType":"ParameterList","parameters":[],"src":"4663:0:16"},"scope":3529,"src":"4582:970:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3527,"nodeType":"Block","src":"5911:990:16","statements":[{"assignments":[3487],"declarations":[{"constant":false,"id":3487,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"6097:14:16","nodeType":"VariableDeclaration","scope":3527,"src":"6089:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3486,"name":"uint256","nodeType":"ElementaryTypeName","src":"6089:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3492,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3488,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"6114:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6125:6:16","memberName":"length","nodeType":"MemberAccess","src":"6114:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6134:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6114:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6089:46:16"},{"assignments":[3494],"declarations":[{"constant":false,"id":3494,"mutability":"mutable","name":"tokenIndex","nameLocation":"6153:10:16","nodeType":"VariableDeclaration","scope":3527,"src":"6145:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3493,"name":"uint256","nodeType":"ElementaryTypeName","src":"6145:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3498,"initialValue":{"baseExpression":{"id":3495,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"6166:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3497,"indexExpression":{"id":3496,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"6182:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6166:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6145:45:16"},{"assignments":[3500],"declarations":[{"constant":false,"id":3500,"mutability":"mutable","name":"lastTokenId","nameLocation":"6520:11:16","nodeType":"VariableDeclaration","scope":3527,"src":"6512:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3499,"name":"uint256","nodeType":"ElementaryTypeName","src":"6512:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3504,"initialValue":{"baseExpression":{"id":3501,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"6534:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3503,"indexExpression":{"id":3502,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"6545:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6534:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6512:48:16"},{"expression":{"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3505,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"6571:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3507,"indexExpression":{"id":3506,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"6582:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3508,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"6596:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3510,"nodeType":"ExpressionStatement","src":"6571:36:16"},{"expression":{"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3511,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"6675:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3513,"indexExpression":{"id":3512,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"6691:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6675:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3514,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"6706:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6675:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3516,"nodeType":"ExpressionStatement","src":"6675:41:16"},{"expression":{"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6837:31:16","subExpression":{"baseExpression":{"id":3517,"name":"_allTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"6844:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3519,"indexExpression":{"id":3518,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"6860:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6844:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3521,"nodeType":"ExpressionStatement","src":"6837:31:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3522,"name":"_allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"6878:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6889:3:16","memberName":"pop","nodeType":"MemberAccess","src":"6878:14:16","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer)"}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6878:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3526,"nodeType":"ExpressionStatement","src":"6878:16:16"}]},"documentation":{"id":3481,"nodeType":"StructuredDocumentation","src":"5558:277:16","text":" @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"},"id":3528,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromAllTokensEnumeration","nameLocation":"5849:36:16","nodeType":"FunctionDefinition","parameters":{"id":3484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3483,"mutability":"mutable","name":"tokenId","nameLocation":"5894:7:16","nodeType":"VariableDeclaration","scope":3528,"src":"5886:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"5886:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5885:17:16"},"returnParameters":{"id":3485,"nodeType":"ParameterList","parameters":[],"src":"5911:0:16"},"scope":3529,"src":"5840:1061:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":3530,"src":"317:6586:16","usedErrors":[]}],"src":"33:6871:16"},"id":16},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"Address":[4011],"Context":[4034],"ERC165":[4261],"ERC721":[3027],"ERC721URIStorage":[3657],"IERC165":[4273],"IERC721":[3143],"IERC721Enumerable":[3688],"IERC721Metadata":[3715],"IERC721Receiver":[3161],"Strings":[4237]},"id":3658,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3531,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":3532,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3658,"sourceUnit":3028,"src":"58:23:17","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3534,"name":"ERC721","nameLocations":["191:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":3027,"src":"191:6:17"},"id":3535,"nodeType":"InheritanceSpecifier","src":"191:6:17"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":3533,"nodeType":"StructuredDocumentation","src":"83:69:17","text":" @dev ERC721 token with storage based token URI management."},"fullyImplemented":true,"id":3657,"linearizedBaseContracts":[3657,3027,3715,3143,4261,4273,4034],"name":"ERC721URIStorage","nameLocation":"171:16:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3538,"libraryName":{"id":3536,"name":"Strings","nameLocations":["210:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":4237,"src":"210:7:17"},"nodeType":"UsingForDirective","src":"204:26:17","typeName":{"id":3537,"name":"uint256","nodeType":"ElementaryTypeName","src":"222:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":3542,"mutability":"mutable","name":"_tokenURIs","nameLocation":"311:10:17","nodeType":"VariableDeclaration","scope":3657,"src":"275:46:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":3541,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3539,"name":"uint256","nodeType":"ElementaryTypeName","src":"284:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"275:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3540,"name":"string","nodeType":"ElementaryTypeName","src":"295:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[2415],"body":{"id":3603,"nodeType":"Block","src":"476:575:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3553,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"502:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3552,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"494:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"494:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524337323155524953746f726167653a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":3555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"512:51:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a","typeString":"literal_string \"ERC721URIStorage: URI query for nonexistent token\""},"value":"ERC721URIStorage: URI query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a","typeString":"literal_string \"ERC721URIStorage: URI query for nonexistent token\""}],"id":3551,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"486:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"486:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3557,"nodeType":"ExpressionStatement","src":"486:78:17"},{"assignments":[3559],"declarations":[{"constant":false,"id":3559,"mutability":"mutable","name":"_tokenURI","nameLocation":"589:9:17","nodeType":"VariableDeclaration","scope":3603,"src":"575:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3558,"name":"string","nodeType":"ElementaryTypeName","src":"575:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3563,"initialValue":{"baseExpression":{"id":3560,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"601:10:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3562,"indexExpression":{"id":3561,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"612:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"601:19:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"575:45:17"},{"assignments":[3565],"declarations":[{"constant":false,"id":3565,"mutability":"mutable","name":"base","nameLocation":"644:4:17","nodeType":"VariableDeclaration","scope":3603,"src":"630:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3564,"name":"string","nodeType":"ElementaryTypeName","src":"630:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3568,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3566,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"651:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"651:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"630:31:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3571,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"740:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"734:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3569,"name":"bytes","nodeType":"ElementaryTypeName","src":"734:5:17","typeDescriptions":{}}},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"734:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"746:6:17","memberName":"length","nodeType":"MemberAccess","src":"734:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"756:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"734:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3579,"nodeType":"IfStatement","src":"730:70:17","trueBody":{"id":3578,"nodeType":"Block","src":"759:41:17","statements":[{"expression":{"id":3576,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"780:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3550,"id":3577,"nodeType":"Return","src":"773:16:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3582,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"908:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"902:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3580,"name":"bytes","nodeType":"ElementaryTypeName","src":"902:5:17","typeDescriptions":{}}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"902:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"919:6:17","memberName":"length","nodeType":"MemberAccess","src":"902:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"928:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"902:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3597,"nodeType":"IfStatement","src":"898:106:17","trueBody":{"id":3596,"nodeType":"Block","src":"931:73:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3591,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"976:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3592,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"982:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3589,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"959:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"963:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"959:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"959:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"952:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3587,"name":"string","nodeType":"ElementaryTypeName","src":"952:6:17","typeDescriptions":{}}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3550,"id":3595,"nodeType":"Return","src":"945:48:17"}]}},{"expression":{"arguments":[{"id":3600,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"1036:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3598,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1021:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$3657_$","typeString":"type(contract super ERC721URIStorage)"}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1027:8:17","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":2415,"src":"1021:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1021:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3550,"id":3602,"nodeType":"Return","src":"1014:30:17"}]},"documentation":{"id":3543,"nodeType":"StructuredDocumentation","src":"328:55:17","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":3604,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"397:8:17","nodeType":"FunctionDefinition","overrides":{"id":3547,"nodeType":"OverrideSpecifier","overrides":[],"src":"443:8:17"},"parameters":{"id":3546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3545,"mutability":"mutable","name":"tokenId","nameLocation":"414:7:17","nodeType":"VariableDeclaration","scope":3604,"src":"406:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3544,"name":"uint256","nodeType":"ElementaryTypeName","src":"406:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:17:17"},"returnParameters":{"id":3550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3604,"src":"461:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3548,"name":"string","nodeType":"ElementaryTypeName","src":"461:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"460:15:17"},"scope":3657,"src":"388:663:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3625,"nodeType":"Block","src":"1279:133:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3614,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"1305:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3613,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"1297:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1297:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1315:48:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""},"value":"ERC721URIStorage: URI set of nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""}],"id":3612,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1289:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:75:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3618,"nodeType":"ExpressionStatement","src":"1289:75:17"},{"expression":{"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3619,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"1374:10:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3621,"indexExpression":{"id":3620,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"1385:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1374:19:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3622,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"1396:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1374:31:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3624,"nodeType":"ExpressionStatement","src":"1374:31:17"}]},"documentation":{"id":3605,"nodeType":"StructuredDocumentation","src":"1057:136:17","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":3626,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1207:12:17","nodeType":"FunctionDefinition","parameters":{"id":3610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3607,"mutability":"mutable","name":"tokenId","nameLocation":"1228:7:17","nodeType":"VariableDeclaration","scope":3626,"src":"1220:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3606,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3609,"mutability":"mutable","name":"_tokenURI","nameLocation":"1251:9:17","nodeType":"VariableDeclaration","scope":3626,"src":"1237:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3608,"name":"string","nodeType":"ElementaryTypeName","src":"1237:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1219:42:17"},"returnParameters":{"id":3611,"nodeType":"ParameterList","parameters":[],"src":"1279:0:17"},"scope":3657,"src":"1198:214:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[2858],"body":{"id":3655,"nodeType":"Block","src":"1687:142:17","statements":[{"expression":{"arguments":[{"id":3636,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"1709:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3633,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1697:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$3657_$","typeString":"type(contract super ERC721URIStorage)"}},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1703:5:17","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":2858,"src":"1697:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1697:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3638,"nodeType":"ExpressionStatement","src":"1697:20:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":3641,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"1738:10:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3643,"indexExpression":{"id":3642,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"1749:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1738:19:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":3640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1732:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3639,"name":"bytes","nodeType":"ElementaryTypeName","src":"1732:5:17","typeDescriptions":{}}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1732:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1759:6:17","memberName":"length","nodeType":"MemberAccess","src":"1732:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1769:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1732:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3654,"nodeType":"IfStatement","src":"1728:95:17","trueBody":{"id":3653,"nodeType":"Block","src":"1772:51:17","statements":[{"expression":{"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1786:26:17","subExpression":{"baseExpression":{"id":3648,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"1793:10:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3650,"indexExpression":{"id":3649,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"1804:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1793:19:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3652,"nodeType":"ExpressionStatement","src":"1786:26:17"}]}}]},"documentation":{"id":3627,"nodeType":"StructuredDocumentation","src":"1418:206:17","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":3656,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"1638:5:17","nodeType":"FunctionDefinition","overrides":{"id":3631,"nodeType":"OverrideSpecifier","overrides":[],"src":"1678:8:17"},"parameters":{"id":3630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3629,"mutability":"mutable","name":"tokenId","nameLocation":"1652:7:17","nodeType":"VariableDeclaration","scope":3656,"src":"1644:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3628,"name":"uint256","nodeType":"ElementaryTypeName","src":"1644:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:17:17"},"returnParameters":{"id":3632,"nodeType":"ParameterList","parameters":[],"src":"1687:0:17"},"scope":3657,"src":"1629:200:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3658,"src":"153:1678:17","usedErrors":[]}],"src":"33:1799:17"},"id":17},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","exportedSymbols":{"IERC165":[4273],"IERC721":[3143],"IERC721Enumerable":[3688]},"id":3689,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3659,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":3660,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3689,"sourceUnit":3144,"src":"58:24:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3662,"name":"IERC721","nameLocations":["252:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":3143,"src":"252:7:18"},"id":3663,"nodeType":"InheritanceSpecifier","src":"252:7:18"}],"canonicalName":"IERC721Enumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":3661,"nodeType":"StructuredDocumentation","src":"84:136:18","text":" @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":3688,"linearizedBaseContracts":[3688,3143,4273],"name":"IERC721Enumerable","nameLocation":"231:17:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3664,"nodeType":"StructuredDocumentation","src":"267:82:18","text":" @dev Returns the total amount of tokens stored by the contract."},"functionSelector":"18160ddd","id":3669,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"363:11:18","nodeType":"FunctionDefinition","parameters":{"id":3665,"nodeType":"ParameterList","parameters":[],"src":"374:2:18"},"returnParameters":{"id":3668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3669,"src":"400:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3666,"name":"uint256","nodeType":"ElementaryTypeName","src":"400:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"399:9:18"},"scope":3688,"src":"354:55:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3670,"nodeType":"StructuredDocumentation","src":"415:171:18","text":" @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"functionSelector":"2f745c59","id":3679,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"600:19:18","nodeType":"FunctionDefinition","parameters":{"id":3675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3672,"mutability":"mutable","name":"owner","nameLocation":"628:5:18","nodeType":"VariableDeclaration","scope":3679,"src":"620:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3671,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3674,"mutability":"mutable","name":"index","nameLocation":"643:5:18","nodeType":"VariableDeclaration","scope":3679,"src":"635:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3673,"name":"uint256","nodeType":"ElementaryTypeName","src":"635:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"619:30:18"},"returnParameters":{"id":3678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3677,"mutability":"mutable","name":"tokenId","nameLocation":"681:7:18","nodeType":"VariableDeclaration","scope":3679,"src":"673:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3676,"name":"uint256","nodeType":"ElementaryTypeName","src":"673:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"672:17:18"},"scope":3688,"src":"591:99:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3680,"nodeType":"StructuredDocumentation","src":"696:164:18","text":" @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."},"functionSelector":"4f6ccce7","id":3687,"implemented":false,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"874:12:18","nodeType":"FunctionDefinition","parameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"index","nameLocation":"895:5:18","nodeType":"VariableDeclaration","scope":3687,"src":"887:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3681,"name":"uint256","nodeType":"ElementaryTypeName","src":"887:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"886:15:18"},"returnParameters":{"id":3686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3687,"src":"925:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3684,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:18"},"scope":3688,"src":"865:69:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3689,"src":"221:715:18","usedErrors":[]}],"src":"33:904:18"},"id":18},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[4273],"IERC721":[3143],"IERC721Metadata":[3715]},"id":3716,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3690,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:19"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":3691,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3716,"sourceUnit":3144,"src":"58:24:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3693,"name":"IERC721","nameLocations":["247:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":3143,"src":"247:7:19"},"id":3694,"nodeType":"InheritanceSpecifier","src":"247:7:19"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":3692,"nodeType":"StructuredDocumentation","src":"84:133:19","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":3715,"linearizedBaseContracts":[3715,3143,4273],"name":"IERC721Metadata","nameLocation":"228:15:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3695,"nodeType":"StructuredDocumentation","src":"262:58:19","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":3700,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"334:4:19","nodeType":"FunctionDefinition","parameters":{"id":3696,"nodeType":"ParameterList","parameters":[],"src":"338:2:19"},"returnParameters":{"id":3699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3700,"src":"364:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3697,"name":"string","nodeType":"ElementaryTypeName","src":"364:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"363:15:19"},"scope":3715,"src":"325:54:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3701,"nodeType":"StructuredDocumentation","src":"385:60:19","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":3706,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"459:6:19","nodeType":"FunctionDefinition","parameters":{"id":3702,"nodeType":"ParameterList","parameters":[],"src":"465:2:19"},"returnParameters":{"id":3705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3706,"src":"491:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3703,"name":"string","nodeType":"ElementaryTypeName","src":"491:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"490:15:19"},"scope":3715,"src":"450:56:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3707,"nodeType":"StructuredDocumentation","src":"512:90:19","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":3714,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"616:8:19","nodeType":"FunctionDefinition","parameters":{"id":3710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"tokenId","nameLocation":"633:7:19","nodeType":"VariableDeclaration","scope":3714,"src":"625:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"625:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"624:17:19"},"returnParameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3714,"src":"665:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3711,"name":"string","nodeType":"ElementaryTypeName","src":"665:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"664:15:19"},"scope":3715,"src":"607:73:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3716,"src":"218:464:19","usedErrors":[]}],"src":"33:650:19"},"id":19},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[4011]},"id":4012,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3717,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":3718,"nodeType":"StructuredDocumentation","src":"58:67:20","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":4011,"linearizedBaseContracts":[4011],"name":"Address","nameLocation":"134:7:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":3734,"nodeType":"Block","src":"784:347:20","statements":[{"assignments":[3727],"declarations":[{"constant":false,"id":3727,"mutability":"mutable","name":"size","nameLocation":"989:4:20","nodeType":"VariableDeclaration","scope":3734,"src":"981:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3726,"name":"uint256","nodeType":"ElementaryTypeName","src":"981:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3728,"nodeType":"VariableDeclarationStatement","src":"981:12:20"},{"AST":{"nodeType":"YulBlock","src":"1068:32:20","statements":[{"nodeType":"YulAssignment","src":"1070:28:20","value":{"arguments":[{"name":"account","nodeType":"YulIdentifier","src":"1090:7:20"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"1078:11:20"},"nodeType":"YulFunctionCall","src":"1078:20:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1070:4:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3721,"isOffset":false,"isSlot":false,"src":"1090:7:20","valueSize":1},{"declaration":3727,"isOffset":false,"isSlot":false,"src":"1070:4:20","valueSize":1}],"id":3729,"nodeType":"InlineAssembly","src":"1059:41:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3730,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"1116:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1123:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1116:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3725,"id":3733,"nodeType":"Return","src":"1109:15:20"}]},"documentation":{"id":3719,"nodeType":"StructuredDocumentation","src":"148:565:20","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="},"id":3735,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"727:10:20","nodeType":"FunctionDefinition","parameters":{"id":3722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3721,"mutability":"mutable","name":"account","nameLocation":"746:7:20","nodeType":"VariableDeclaration","scope":3735,"src":"738:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3720,"name":"address","nodeType":"ElementaryTypeName","src":"738:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"737:17:20"},"returnParameters":{"id":3725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3735,"src":"778:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3723,"name":"bool","nodeType":"ElementaryTypeName","src":"778:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"777:6:20"},"scope":4011,"src":"718:413:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3768,"nodeType":"Block","src":"2119:320:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3746,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2145:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4011","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4011","typeString":"library Address"}],"id":3745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2137:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3744,"name":"address","nodeType":"ElementaryTypeName","src":"2137:7:20","typeDescriptions":{}}},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2137:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2151:7:20","memberName":"balance","nodeType":"MemberAccess","src":"2137:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3749,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"2162:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2137:31:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":3751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2170:31:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":3743,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2129:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2129:73:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3753,"nodeType":"ExpressionStatement","src":"2129:73:20"},{"assignments":[3755,null],"declarations":[{"constant":false,"id":3755,"mutability":"mutable","name":"success","nameLocation":"2296:7:20","nodeType":"VariableDeclaration","scope":3768,"src":"2291:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3754,"name":"bool","nodeType":"ElementaryTypeName","src":"2291:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3762,"initialValue":{"arguments":[{"hexValue":"","id":3760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2341:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3756,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"2309:9:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2319:4:20","memberName":"call","nodeType":"MemberAccess","src":"2309:14:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3758,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"2332:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2309:31:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2309:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2290:54:20"},{"expression":{"arguments":[{"id":3764,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"2362:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2371:60:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":3763,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2354:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2354:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3767,"nodeType":"ExpressionStatement","src":"2354:78:20"}]},"documentation":{"id":3736,"nodeType":"StructuredDocumentation","src":"1137:906:20","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":3769,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2057:9:20","nodeType":"FunctionDefinition","parameters":{"id":3741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3738,"mutability":"mutable","name":"recipient","nameLocation":"2083:9:20","nodeType":"VariableDeclaration","scope":3769,"src":"2067:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3737,"name":"address","nodeType":"ElementaryTypeName","src":"2067:15:20","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3740,"mutability":"mutable","name":"amount","nameLocation":"2102:6:20","nodeType":"VariableDeclaration","scope":3769,"src":"2094:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3739,"name":"uint256","nodeType":"ElementaryTypeName","src":"2094:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2066:43:20"},"returnParameters":{"id":3742,"nodeType":"ParameterList","parameters":[],"src":"2119:0:20"},"scope":4011,"src":"2048:391:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3785,"nodeType":"Block","src":"3269:82:20","statements":[{"expression":{"arguments":[{"id":3780,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"3297:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3781,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"3305:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3311:32:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":3779,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[3786,3806],"referencedDeclaration":3806,"src":"3284:12:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:60:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3778,"id":3784,"nodeType":"Return","src":"3277:67:20"}]},"documentation":{"id":3770,"nodeType":"StructuredDocumentation","src":"2445:730:20","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":3786,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3189:12:20","nodeType":"FunctionDefinition","parameters":{"id":3775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"target","nameLocation":"3210:6:20","nodeType":"VariableDeclaration","scope":3786,"src":"3202:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3771,"name":"address","nodeType":"ElementaryTypeName","src":"3202:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3774,"mutability":"mutable","name":"data","nameLocation":"3231:4:20","nodeType":"VariableDeclaration","scope":3786,"src":"3218:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3773,"name":"bytes","nodeType":"ElementaryTypeName","src":"3218:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3201:35:20"},"returnParameters":{"id":3778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3786,"src":"3255:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3776,"name":"bytes","nodeType":"ElementaryTypeName","src":"3255:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3254:14:20"},"scope":4011,"src":"3180:171:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3805,"nodeType":"Block","src":"3690:76:20","statements":[{"expression":{"arguments":[{"id":3799,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"3729:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3800,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"3737:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3743:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3802,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"3746:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3798,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3826,3876],"referencedDeclaration":3876,"src":"3707:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3707:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3797,"id":3804,"nodeType":"Return","src":"3700:59:20"}]},"documentation":{"id":3787,"nodeType":"StructuredDocumentation","src":"3357:211:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":3806,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3582:12:20","nodeType":"FunctionDefinition","parameters":{"id":3794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3789,"mutability":"mutable","name":"target","nameLocation":"3603:6:20","nodeType":"VariableDeclaration","scope":3806,"src":"3595:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3788,"name":"address","nodeType":"ElementaryTypeName","src":"3595:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3791,"mutability":"mutable","name":"data","nameLocation":"3624:4:20","nodeType":"VariableDeclaration","scope":3806,"src":"3611:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3790,"name":"bytes","nodeType":"ElementaryTypeName","src":"3611:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3793,"mutability":"mutable","name":"errorMessage","nameLocation":"3644:12:20","nodeType":"VariableDeclaration","scope":3806,"src":"3630:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3792,"name":"string","nodeType":"ElementaryTypeName","src":"3630:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3594:63:20"},"returnParameters":{"id":3797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3806,"src":"3676:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3795,"name":"bytes","nodeType":"ElementaryTypeName","src":"3676:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3675:14:20"},"scope":4011,"src":"3573:193:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3825,"nodeType":"Block","src":"4241:111:20","statements":[{"expression":{"arguments":[{"id":3819,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"4280:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3820,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"4288:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"4294:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4301:43:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":3818,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3826,3876],"referencedDeclaration":3876,"src":"4258:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4258:87:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3817,"id":3824,"nodeType":"Return","src":"4251:94:20"}]},"documentation":{"id":3807,"nodeType":"StructuredDocumentation","src":"3772:351:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":3826,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4137:21:20","nodeType":"FunctionDefinition","parameters":{"id":3814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3809,"mutability":"mutable","name":"target","nameLocation":"4167:6:20","nodeType":"VariableDeclaration","scope":3826,"src":"4159:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3808,"name":"address","nodeType":"ElementaryTypeName","src":"4159:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3811,"mutability":"mutable","name":"data","nameLocation":"4188:4:20","nodeType":"VariableDeclaration","scope":3826,"src":"4175:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3810,"name":"bytes","nodeType":"ElementaryTypeName","src":"4175:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3813,"mutability":"mutable","name":"value","nameLocation":"4202:5:20","nodeType":"VariableDeclaration","scope":3826,"src":"4194:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3812,"name":"uint256","nodeType":"ElementaryTypeName","src":"4194:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4158:50:20"},"returnParameters":{"id":3817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3826,"src":"4227:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3815,"name":"bytes","nodeType":"ElementaryTypeName","src":"4227:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4226:14:20"},"scope":4011,"src":"4128:224:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3875,"nodeType":"Block","src":"4741:382:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3843,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4767:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4011","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4011","typeString":"library Address"}],"id":3842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4759:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3841,"name":"address","nodeType":"ElementaryTypeName","src":"4759:7:20","typeDescriptions":{}}},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4759:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4773:7:20","memberName":"balance","nodeType":"MemberAccess","src":"4759:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"4784:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4759:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":3848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4791:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":3840,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4751:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:81:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3850,"nodeType":"ExpressionStatement","src":"4751:81:20"},{"expression":{"arguments":[{"arguments":[{"id":3853,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"4861:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3852,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"4850:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4850:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4870:31:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":3851,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4842:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4842:60:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3857,"nodeType":"ExpressionStatement","src":"4842:60:20"},{"assignments":[3859,3861],"declarations":[{"constant":false,"id":3859,"mutability":"mutable","name":"success","nameLocation":"4978:7:20","nodeType":"VariableDeclaration","scope":3875,"src":"4973:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3858,"name":"bool","nodeType":"ElementaryTypeName","src":"4973:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3861,"mutability":"mutable","name":"returndata","nameLocation":"5000:10:20","nodeType":"VariableDeclaration","scope":3875,"src":"4987:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3860,"name":"bytes","nodeType":"ElementaryTypeName","src":"4987:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3868,"initialValue":{"arguments":[{"id":3866,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"5042:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3862,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"5014:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5021:4:20","memberName":"call","nodeType":"MemberAccess","src":"5014:11:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"5034:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5014:27:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5014:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4972:75:20"},{"expression":{"arguments":[{"id":3870,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"5082:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3871,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"5091:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3872,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"5103:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3869,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"5064:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5064:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3839,"id":3874,"nodeType":"Return","src":"5057:59:20"}]},"documentation":{"id":3827,"nodeType":"StructuredDocumentation","src":"4358:237:20","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":3876,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4609:21:20","nodeType":"FunctionDefinition","parameters":{"id":3836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3829,"mutability":"mutable","name":"target","nameLocation":"4639:6:20","nodeType":"VariableDeclaration","scope":3876,"src":"4631:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3828,"name":"address","nodeType":"ElementaryTypeName","src":"4631:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3831,"mutability":"mutable","name":"data","nameLocation":"4660:4:20","nodeType":"VariableDeclaration","scope":3876,"src":"4647:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3830,"name":"bytes","nodeType":"ElementaryTypeName","src":"4647:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3833,"mutability":"mutable","name":"value","nameLocation":"4674:5:20","nodeType":"VariableDeclaration","scope":3876,"src":"4666:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3832,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3835,"mutability":"mutable","name":"errorMessage","nameLocation":"4695:12:20","nodeType":"VariableDeclaration","scope":3876,"src":"4681:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3834,"name":"string","nodeType":"ElementaryTypeName","src":"4681:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4630:78:20"},"returnParameters":{"id":3839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3876,"src":"4727:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3837,"name":"bytes","nodeType":"ElementaryTypeName","src":"4727:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4726:14:20"},"scope":4011,"src":"4600:523:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3892,"nodeType":"Block","src":"5400:97:20","statements":[{"expression":{"arguments":[{"id":3887,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"5436:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3888,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"5444:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":3889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5450:39:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":3886,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[3893,3928],"referencedDeclaration":3928,"src":"5417:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5417:73:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3885,"id":3891,"nodeType":"Return","src":"5410:80:20"}]},"documentation":{"id":3877,"nodeType":"StructuredDocumentation","src":"5129:166:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3893,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5309:18:20","nodeType":"FunctionDefinition","parameters":{"id":3882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3879,"mutability":"mutable","name":"target","nameLocation":"5336:6:20","nodeType":"VariableDeclaration","scope":3893,"src":"5328:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3878,"name":"address","nodeType":"ElementaryTypeName","src":"5328:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3881,"mutability":"mutable","name":"data","nameLocation":"5357:4:20","nodeType":"VariableDeclaration","scope":3893,"src":"5344:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3880,"name":"bytes","nodeType":"ElementaryTypeName","src":"5344:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5327:35:20"},"returnParameters":{"id":3885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3893,"src":"5386:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3883,"name":"bytes","nodeType":"ElementaryTypeName","src":"5386:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5385:14:20"},"scope":4011,"src":"5300:197:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3927,"nodeType":"Block","src":"5809:288:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":3907,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"5838:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3906,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"5827:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5827:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":3909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5847:38:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":3905,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5819:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5819:67:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3911,"nodeType":"ExpressionStatement","src":"5819:67:20"},{"assignments":[3913,3915],"declarations":[{"constant":false,"id":3913,"mutability":"mutable","name":"success","nameLocation":"5962:7:20","nodeType":"VariableDeclaration","scope":3927,"src":"5957:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3912,"name":"bool","nodeType":"ElementaryTypeName","src":"5957:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3915,"mutability":"mutable","name":"returndata","nameLocation":"5984:10:20","nodeType":"VariableDeclaration","scope":3927,"src":"5971:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3914,"name":"bytes","nodeType":"ElementaryTypeName","src":"5971:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3920,"initialValue":{"arguments":[{"id":3918,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"6016:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3916,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"5998:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6005:10:20","memberName":"staticcall","nodeType":"MemberAccess","src":"5998:17:20","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5956:65:20"},{"expression":{"arguments":[{"id":3922,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"6056:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3923,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"6065:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3924,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"6077:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3921,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"6038:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3904,"id":3926,"nodeType":"Return","src":"6031:59:20"}]},"documentation":{"id":3894,"nodeType":"StructuredDocumentation","src":"5503:173:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3928,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5690:18:20","nodeType":"FunctionDefinition","parameters":{"id":3901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3896,"mutability":"mutable","name":"target","nameLocation":"5717:6:20","nodeType":"VariableDeclaration","scope":3928,"src":"5709:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3895,"name":"address","nodeType":"ElementaryTypeName","src":"5709:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3898,"mutability":"mutable","name":"data","nameLocation":"5738:4:20","nodeType":"VariableDeclaration","scope":3928,"src":"5725:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3897,"name":"bytes","nodeType":"ElementaryTypeName","src":"5725:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3900,"mutability":"mutable","name":"errorMessage","nameLocation":"5758:12:20","nodeType":"VariableDeclaration","scope":3928,"src":"5744:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3899,"name":"string","nodeType":"ElementaryTypeName","src":"5744:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5708:63:20"},"returnParameters":{"id":3904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3928,"src":"5795:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3902,"name":"bytes","nodeType":"ElementaryTypeName","src":"5795:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5794:14:20"},"scope":4011,"src":"5681:416:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3944,"nodeType":"Block","src":"6373:101:20","statements":[{"expression":{"arguments":[{"id":3939,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"6411:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3940,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"6419:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6425:41:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":3938,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[3945,3980],"referencedDeclaration":3980,"src":"6390:20:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:77:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3937,"id":3943,"nodeType":"Return","src":"6383:84:20"}]},"documentation":{"id":3929,"nodeType":"StructuredDocumentation","src":"6103:168:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3945,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6285:20:20","nodeType":"FunctionDefinition","parameters":{"id":3934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3931,"mutability":"mutable","name":"target","nameLocation":"6314:6:20","nodeType":"VariableDeclaration","scope":3945,"src":"6306:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3930,"name":"address","nodeType":"ElementaryTypeName","src":"6306:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3933,"mutability":"mutable","name":"data","nameLocation":"6335:4:20","nodeType":"VariableDeclaration","scope":3945,"src":"6322:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3932,"name":"bytes","nodeType":"ElementaryTypeName","src":"6322:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6305:35:20"},"returnParameters":{"id":3937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3945,"src":"6359:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3935,"name":"bytes","nodeType":"ElementaryTypeName","src":"6359:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6358:14:20"},"scope":4011,"src":"6276:198:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3979,"nodeType":"Block","src":"6785:292:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":3959,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"6814:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3958,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"6803:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6803:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":3961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:40:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":3957,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6795:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6795:69:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3963,"nodeType":"ExpressionStatement","src":"6795:69:20"},{"assignments":[3965,3967],"declarations":[{"constant":false,"id":3965,"mutability":"mutable","name":"success","nameLocation":"6940:7:20","nodeType":"VariableDeclaration","scope":3979,"src":"6935:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3964,"name":"bool","nodeType":"ElementaryTypeName","src":"6935:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3967,"mutability":"mutable","name":"returndata","nameLocation":"6962:10:20","nodeType":"VariableDeclaration","scope":3979,"src":"6949:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3966,"name":"bytes","nodeType":"ElementaryTypeName","src":"6949:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3972,"initialValue":{"arguments":[{"id":3970,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"6996:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3968,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"6976:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6983:12:20","memberName":"delegatecall","nodeType":"MemberAccess","src":"6976:19:20","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6976:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6934:67:20"},{"expression":{"arguments":[{"id":3974,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"7036:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3975,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"7045:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3976,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"7057:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3973,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"7018:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7018:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3956,"id":3978,"nodeType":"Return","src":"7011:59:20"}]},"documentation":{"id":3946,"nodeType":"StructuredDocumentation","src":"6480:175:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3980,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6669:20:20","nodeType":"FunctionDefinition","parameters":{"id":3953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3948,"mutability":"mutable","name":"target","nameLocation":"6698:6:20","nodeType":"VariableDeclaration","scope":3980,"src":"6690:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3947,"name":"address","nodeType":"ElementaryTypeName","src":"6690:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3950,"mutability":"mutable","name":"data","nameLocation":"6719:4:20","nodeType":"VariableDeclaration","scope":3980,"src":"6706:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3949,"name":"bytes","nodeType":"ElementaryTypeName","src":"6706:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3952,"mutability":"mutable","name":"errorMessage","nameLocation":"6739:12:20","nodeType":"VariableDeclaration","scope":3980,"src":"6725:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3951,"name":"string","nodeType":"ElementaryTypeName","src":"6725:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6689:63:20"},"returnParameters":{"id":3956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3980,"src":"6771:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3954,"name":"bytes","nodeType":"ElementaryTypeName","src":"6771:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6770:14:20"},"scope":4011,"src":"6660:417:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4009,"nodeType":"Block","src":"7212:596:20","statements":[{"condition":{"id":3991,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"7226:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4007,"nodeType":"Block","src":"7283:519:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3995,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"7367:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7378:6:20","memberName":"length","nodeType":"MemberAccess","src":"7367:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7367:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4005,"nodeType":"Block","src":"7739:53:20","statements":[{"expression":{"arguments":[{"id":4002,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"7764:12:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4001,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7757:6:20","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7757:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4004,"nodeType":"ExpressionStatement","src":"7757:20:20"}]},"id":4006,"nodeType":"IfStatement","src":"7363:429:20","trueBody":{"id":4000,"nodeType":"Block","src":"7390:343:20","statements":[{"AST":{"nodeType":"YulBlock","src":"7574:145:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7596:40:20","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"7625:10:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7619:5:20"},"nodeType":"YulFunctionCall","src":"7619:17:20"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"7600:15:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7668:2:20","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"7672:10:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7664:3:20"},"nodeType":"YulFunctionCall","src":"7664:19:20"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"7685:15:20"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7657:6:20"},"nodeType":"YulFunctionCall","src":"7657:44:20"},"nodeType":"YulExpressionStatement","src":"7657:44:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":3984,"isOffset":false,"isSlot":false,"src":"7625:10:20","valueSize":1},{"declaration":3984,"isOffset":false,"isSlot":false,"src":"7672:10:20","valueSize":1}],"id":3999,"nodeType":"InlineAssembly","src":"7565:154:20"}]}}]},"id":4008,"nodeType":"IfStatement","src":"7222:580:20","trueBody":{"id":3994,"nodeType":"Block","src":"7235:42:20","statements":[{"expression":{"id":3992,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"7256:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3990,"id":3993,"nodeType":"Return","src":"7249:17:20"}]}}]},"id":4010,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyCallResult","nameLocation":"7092:17:20","nodeType":"FunctionDefinition","parameters":{"id":3987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3982,"mutability":"mutable","name":"success","nameLocation":"7115:7:20","nodeType":"VariableDeclaration","scope":4010,"src":"7110:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3981,"name":"bool","nodeType":"ElementaryTypeName","src":"7110:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3984,"mutability":"mutable","name":"returndata","nameLocation":"7137:10:20","nodeType":"VariableDeclaration","scope":4010,"src":"7124:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3983,"name":"bytes","nodeType":"ElementaryTypeName","src":"7124:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3986,"mutability":"mutable","name":"errorMessage","nameLocation":"7163:12:20","nodeType":"VariableDeclaration","scope":4010,"src":"7149:26:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3985,"name":"string","nodeType":"ElementaryTypeName","src":"7149:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7109:67:20"},"returnParameters":{"id":3990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4010,"src":"7198:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3988,"name":"bytes","nodeType":"ElementaryTypeName","src":"7198:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7197:14:20"},"scope":4011,"src":"7083:725:20","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4012,"src":"126:7684:20","usedErrors":[]}],"src":"33:7778:20"},"id":20},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[4034]},"id":4035,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4013,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:21"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4034,"linearizedBaseContracts":[4034],"name":"Context","nameLocation":"572:7:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":4021,"nodeType":"Block","src":"648:34:21","statements":[{"expression":{"expression":{"id":4018,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"665:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"669:6:21","memberName":"sender","nodeType":"MemberAccess","src":"665:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4017,"id":4020,"nodeType":"Return","src":"658:17:21"}]},"id":4022,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"595:10:21","nodeType":"FunctionDefinition","parameters":{"id":4014,"nodeType":"ParameterList","parameters":[],"src":"605:2:21"},"returnParameters":{"id":4017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4022,"src":"639:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4015,"name":"address","nodeType":"ElementaryTypeName","src":"639:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"638:9:21"},"scope":4034,"src":"586:96:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4032,"nodeType":"Block","src":"755:165:21","statements":[{"expression":{"id":4027,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"765:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$4034","typeString":"contract Context"}},"id":4028,"nodeType":"ExpressionStatement","src":"765:4:21"},{"expression":{"expression":{"id":4029,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"905:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"909:4:21","memberName":"data","nodeType":"MemberAccess","src":"905:8:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":4026,"id":4031,"nodeType":"Return","src":"898:15:21"}]},"id":4033,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"697:8:21","nodeType":"FunctionDefinition","parameters":{"id":4023,"nodeType":"ParameterList","parameters":[],"src":"705:2:21"},"returnParameters":{"id":4026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4033,"src":"739:14:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4024,"name":"bytes","nodeType":"ElementaryTypeName","src":"739:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"738:16:21"},"scope":4034,"src":"688:232:21","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":4035,"src":"554:368:21","usedErrors":[]}],"src":"33:890:21"},"id":21},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Strings":[4237]},"id":4238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4036,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":4037,"nodeType":"StructuredDocumentation","src":"58:34:22","text":" @dev String operations."},"fullyImplemented":true,"id":4237,"linearizedBaseContracts":[4237],"name":"Strings","nameLocation":"101:7:22","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4040,"mutability":"constant","name":"alphabet","nameLocation":"140:8:22","nodeType":"VariableDeclaration","scope":4237,"src":"115:54:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":4038,"name":"bytes16","nodeType":"ElementaryTypeName","src":"115:7:22","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"151:18:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"body":{"id":4118,"nodeType":"Block","src":"342:632:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"544:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"553:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"544:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4054,"nodeType":"IfStatement","src":"540:51:22","trueBody":{"id":4053,"nodeType":"Block","src":"556:35:22","statements":[{"expression":{"hexValue":"30","id":4051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"577:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":4047,"id":4052,"nodeType":"Return","src":"570:10:22"}]}},{"assignments":[4056],"declarations":[{"constant":false,"id":4056,"mutability":"mutable","name":"temp","nameLocation":"608:4:22","nodeType":"VariableDeclaration","scope":4118,"src":"600:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4055,"name":"uint256","nodeType":"ElementaryTypeName","src":"600:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4058,"initialValue":{"id":4057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"615:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"600:20:22"},{"assignments":[4060],"declarations":[{"constant":false,"id":4060,"mutability":"mutable","name":"digits","nameLocation":"638:6:22","nodeType":"VariableDeclaration","scope":4118,"src":"630:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4059,"name":"uint256","nodeType":"ElementaryTypeName","src":"630:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4061,"nodeType":"VariableDeclarationStatement","src":"630:14:22"},{"body":{"id":4072,"nodeType":"Block","src":"672:57:22","statements":[{"expression":{"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"686:8:22","subExpression":{"id":4065,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"686:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4067,"nodeType":"ExpressionStatement","src":"686:8:22"},{"expression":{"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4068,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"708:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"716:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"708:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4071,"nodeType":"ExpressionStatement","src":"708:10:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4062,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"661:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"669:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"661:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4073,"nodeType":"WhileStatement","src":"654:75:22"},{"assignments":[4075],"declarations":[{"constant":false,"id":4075,"mutability":"mutable","name":"buffer","nameLocation":"751:6:22","nodeType":"VariableDeclaration","scope":4118,"src":"738:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4074,"name":"bytes","nodeType":"ElementaryTypeName","src":"738:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4080,"initialValue":{"arguments":[{"id":4078,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"770:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"760:9:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4076,"name":"bytes","nodeType":"ElementaryTypeName","src":"764:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"760:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"738:39:22"},{"body":{"id":4111,"nodeType":"Block","src":"806:131:22","statements":[{"expression":{"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4084,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"820:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":4085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"830:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"820:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4087,"nodeType":"ExpressionStatement","src":"820:11:22"},{"expression":{"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4088,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"845:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4090,"indexExpression":{"id":4089,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"852:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"845:14:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":4095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"875:2:22","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"888:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"896:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"888:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"880:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4096,"name":"uint256","nodeType":"ElementaryTypeName","src":"880:7:22","typeDescriptions":{}}},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"880:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"875:24:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"869:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4093,"name":"uint8","nodeType":"ElementaryTypeName","src":"869:5:22","typeDescriptions":{}}},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"869:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"862:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4091,"name":"bytes1","nodeType":"ElementaryTypeName","src":"862:6:22","typeDescriptions":{}}},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"862:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"845:56:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4106,"nodeType":"ExpressionStatement","src":"845:56:22"},{"expression":{"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"915:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"924:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"915:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4110,"nodeType":"ExpressionStatement","src":"915:11:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"794:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"803:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"794:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4112,"nodeType":"WhileStatement","src":"787:150:22"},{"expression":{"arguments":[{"id":4115,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"960:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"953:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4113,"name":"string","nodeType":"ElementaryTypeName","src":"953:6:22","typeDescriptions":{}}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"953:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4047,"id":4117,"nodeType":"Return","src":"946:21:22"}]},"documentation":{"id":4041,"nodeType":"StructuredDocumentation","src":"176:90:22","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":4119,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"280:8:22","nodeType":"FunctionDefinition","parameters":{"id":4044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4043,"mutability":"mutable","name":"value","nameLocation":"297:5:22","nodeType":"VariableDeclaration","scope":4119,"src":"289:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4042,"name":"uint256","nodeType":"ElementaryTypeName","src":"289:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"288:15:22"},"returnParameters":{"id":4047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4119,"src":"327:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4045,"name":"string","nodeType":"ElementaryTypeName","src":"327:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"326:15:22"},"scope":4237,"src":"271:703:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4159,"nodeType":"Block","src":"1153:255:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"1167:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1176:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1167:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4133,"nodeType":"IfStatement","src":"1163:54:22","trueBody":{"id":4132,"nodeType":"Block","src":"1179:38:22","statements":[{"expression":{"hexValue":"30783030","id":4130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1200:6:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":4126,"id":4131,"nodeType":"Return","src":"1193:13:22"}]}},{"assignments":[4135],"declarations":[{"constant":false,"id":4135,"mutability":"mutable","name":"temp","nameLocation":"1234:4:22","nodeType":"VariableDeclaration","scope":4159,"src":"1226:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4134,"name":"uint256","nodeType":"ElementaryTypeName","src":"1226:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4137,"initialValue":{"id":4136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"1241:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1226:20:22"},{"assignments":[4139],"declarations":[{"constant":false,"id":4139,"mutability":"mutable","name":"length","nameLocation":"1264:6:22","nodeType":"VariableDeclaration","scope":4159,"src":"1256:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4138,"name":"uint256","nodeType":"ElementaryTypeName","src":"1256:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4141,"initialValue":{"hexValue":"30","id":4140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1273:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1256:18:22"},{"body":{"id":4152,"nodeType":"Block","src":"1302:57:22","statements":[{"expression":{"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1316:8:22","subExpression":{"id":4145,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"1316:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4147,"nodeType":"ExpressionStatement","src":"1316:8:22"},{"expression":{"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4148,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"1338:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1347:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1338:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4151,"nodeType":"ExpressionStatement","src":"1338:10:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4142,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"1291:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1299:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1291:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4153,"nodeType":"WhileStatement","src":"1284:75:22"},{"expression":{"arguments":[{"id":4155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"1387:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4156,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"1394:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4154,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4160,4236],"referencedDeclaration":4236,"src":"1375:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4126,"id":4158,"nodeType":"Return","src":"1368:33:22"}]},"documentation":{"id":4120,"nodeType":"StructuredDocumentation","src":"980:94:22","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":4160,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1088:11:22","nodeType":"FunctionDefinition","parameters":{"id":4123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4122,"mutability":"mutable","name":"value","nameLocation":"1108:5:22","nodeType":"VariableDeclaration","scope":4160,"src":"1100:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1100:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1099:15:22"},"returnParameters":{"id":4126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4160,"src":"1138:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4124,"name":"string","nodeType":"ElementaryTypeName","src":"1138:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1137:15:22"},"scope":4237,"src":"1079:329:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4235,"nodeType":"Block","src":"1621:347:22","statements":[{"assignments":[4171],"declarations":[{"constant":false,"id":4171,"mutability":"mutable","name":"buffer","nameLocation":"1644:6:22","nodeType":"VariableDeclaration","scope":4235,"src":"1631:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4170,"name":"bytes","nodeType":"ElementaryTypeName","src":"1631:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4180,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1663:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4175,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"1667:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1663:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1663:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1653:9:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4172,"name":"bytes","nodeType":"ElementaryTypeName","src":"1657:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1653:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1631:47:22"},{"expression":{"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4181,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"1688:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4183,"indexExpression":{"hexValue":"30","id":4182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1695:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1688:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1700:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1688:15:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4186,"nodeType":"ExpressionStatement","src":"1688:15:22"},{"expression":{"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4187,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"1713:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4189,"indexExpression":{"hexValue":"31","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1720:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1713:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":4190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1725:3:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1713:15:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4192,"nodeType":"ExpressionStatement","src":"1713:15:22"},{"body":{"id":4221,"nodeType":"Block","src":"1783:83:22","statements":[{"expression":{"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4207,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"1797:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4209,"indexExpression":{"id":4208,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"1804:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1797:9:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4210,"name":"alphabet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"1809:8:22","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":4214,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"1818:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1826:3:22","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1818:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1809:21:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1797:33:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4216,"nodeType":"ExpressionStatement","src":"1797:33:22"},{"expression":{"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"1844:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1844:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4220,"nodeType":"ExpressionStatement","src":"1844:11:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4201,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"1771:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1775:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1771:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4222,"initializationExpression":{"assignments":[4194],"declarations":[{"constant":false,"id":4194,"mutability":"mutable","name":"i","nameLocation":"1751:1:22","nodeType":"VariableDeclaration","scope":4222,"src":"1743:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1743:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4200,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4196,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"1759:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1755:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1768:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1755:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1743:26:22"},"loopExpression":{"expression":{"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1778:3:22","subExpression":{"id":4204,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"1780:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4206,"nodeType":"ExpressionStatement","src":"1778:3:22"},"nodeType":"ForStatement","src":"1738:128:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"1883:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1892:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1883:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":4227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1895:34:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":4223,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1875:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1875:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4229,"nodeType":"ExpressionStatement","src":"1875:55:22"},{"expression":{"arguments":[{"id":4232,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"1954:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1947:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4230,"name":"string","nodeType":"ElementaryTypeName","src":"1947:6:22","typeDescriptions":{}}},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1947:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4169,"id":4234,"nodeType":"Return","src":"1940:21:22"}]},"documentation":{"id":4161,"nodeType":"StructuredDocumentation","src":"1414:112:22","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":4236,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1540:11:22","nodeType":"FunctionDefinition","parameters":{"id":4166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4163,"mutability":"mutable","name":"value","nameLocation":"1560:5:22","nodeType":"VariableDeclaration","scope":4236,"src":"1552:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4165,"mutability":"mutable","name":"length","nameLocation":"1575:6:22","nodeType":"VariableDeclaration","scope":4236,"src":"1567:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1567:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1551:31:22"},"returnParameters":{"id":4169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4236,"src":"1606:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4167,"name":"string","nodeType":"ElementaryTypeName","src":"1606:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1605:15:22"},"scope":4237,"src":"1531:437:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4238,"src":"93:1878:22","usedErrors":[]}],"src":"33:1939:22"},"id":22},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4261],"IERC165":[4273]},"id":4262,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4239,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:23"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4240,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4262,"sourceUnit":4274,"src":"58:23:23","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4242,"name":"IERC165","nameLocations":["688:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":4273,"src":"688:7:23"},"id":4243,"nodeType":"InheritanceSpecifier","src":"688:7:23"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4241,"nodeType":"StructuredDocumentation","src":"83:576:23","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":4261,"linearizedBaseContracts":[4261,4273],"name":"ERC165","nameLocation":"678:6:23","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4272],"body":{"id":4259,"nodeType":"Block","src":"854:64:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4252,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"871:11:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4254,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"891:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4273_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4273_$","typeString":"type(contract IERC165)"}],"id":4253,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"886:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"886:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4273","typeString":"type(contract IERC165)"}},"id":4256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"900:11:23","memberName":"interfaceId","nodeType":"MemberAccess","src":"886:25:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"871:40:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4251,"id":4258,"nodeType":"Return","src":"864:47:23"}]},"documentation":{"id":4244,"nodeType":"StructuredDocumentation","src":"702:56:23","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":4260,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:23","nodeType":"FunctionDefinition","overrides":{"id":4248,"nodeType":"OverrideSpecifier","overrides":[],"src":"830:8:23"},"parameters":{"id":4247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4246,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:23","nodeType":"VariableDeclaration","scope":4260,"src":"790:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4245,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:23"},"returnParameters":{"id":4251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4260,"src":"848:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4249,"name":"bool","nodeType":"ElementaryTypeName","src":"848:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"847:6:23"},"scope":4261,"src":"763:155:23","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4262,"src":"660:260:23","usedErrors":[]}],"src":"33:888:23"},"id":23},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4273]},"id":4274,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4263,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4264,"nodeType":"StructuredDocumentation","src":"58:279:24","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4273,"linearizedBaseContracts":[4273],"name":"IERC165","nameLocation":"348:7:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4265,"nodeType":"StructuredDocumentation","src":"362:340:24","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4272,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"716:17:24","nodeType":"FunctionDefinition","parameters":{"id":4268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4267,"mutability":"mutable","name":"interfaceId","nameLocation":"741:11:24","nodeType":"VariableDeclaration","scope":4272,"src":"734:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4266,"name":"bytes4","nodeType":"ElementaryTypeName","src":"734:6:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"733:20:24"},"returnParameters":{"id":4271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4272,"src":"777:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4269,"name":"bool","nodeType":"ElementaryTypeName","src":"777:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"776:6:24"},"scope":4273,"src":"707:76:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4274,"src":"338:447:24","usedErrors":[]}],"src":"33:753:24"},"id":24},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[4585]},"id":4586,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4275,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:25"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":4276,"nodeType":"StructuredDocumentation","src":"211:186:25","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":4585,"linearizedBaseContracts":[4585],"name":"SafeMath","nameLocation":"406:8:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":4307,"nodeType":"Block","src":"633:140:25","statements":[{"id":4306,"nodeType":"UncheckedBlock","src":"643:124:25","statements":[{"assignments":[4289],"declarations":[{"constant":false,"id":4289,"mutability":"mutable","name":"c","nameLocation":"675:1:25","nodeType":"VariableDeclaration","scope":4306,"src":"667:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4288,"name":"uint256","nodeType":"ElementaryTypeName","src":"667:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4293,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4290,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"679:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4291,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"683:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"679:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"667:17:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4294,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"702:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4295,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"706:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"702:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4301,"nodeType":"IfStatement","src":"698:28:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"717:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"724:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"716:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4287,"id":4300,"nodeType":"Return","src":"709:17:25"}},{"expression":{"components":[{"hexValue":"74727565","id":4302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"748:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4303,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"754:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:9:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4287,"id":4305,"nodeType":"Return","src":"740:16:25"}]}]},"documentation":{"id":4277,"nodeType":"StructuredDocumentation","src":"421:131:25","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":4308,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"566:6:25","nodeType":"FunctionDefinition","parameters":{"id":4282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4279,"mutability":"mutable","name":"a","nameLocation":"581:1:25","nodeType":"VariableDeclaration","scope":4308,"src":"573:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4278,"name":"uint256","nodeType":"ElementaryTypeName","src":"573:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4281,"mutability":"mutable","name":"b","nameLocation":"592:1:25","nodeType":"VariableDeclaration","scope":4308,"src":"584:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4280,"name":"uint256","nodeType":"ElementaryTypeName","src":"584:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"572:22:25"},"returnParameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4308,"src":"618:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4283,"name":"bool","nodeType":"ElementaryTypeName","src":"618:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4308,"src":"624:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4285,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"617:15:25"},"scope":4585,"src":"557:216:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4335,"nodeType":"Block","src":"995:113:25","statements":[{"id":4334,"nodeType":"UncheckedBlock","src":"1005:97:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4320,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"1033:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4321,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"1037:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1033:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4327,"nodeType":"IfStatement","src":"1029:28:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1048:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1055:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4325,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1047:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4319,"id":4326,"nodeType":"Return","src":"1040:17:25"}},{"expression":{"components":[{"hexValue":"74727565","id":4328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1079:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4329,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"1085:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4330,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"1089:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1085:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4332,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1078:13:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4319,"id":4333,"nodeType":"Return","src":"1071:20:25"}]}]},"documentation":{"id":4309,"nodeType":"StructuredDocumentation","src":"779:135:25","text":" @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":4336,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"928:6:25","nodeType":"FunctionDefinition","parameters":{"id":4314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4311,"mutability":"mutable","name":"a","nameLocation":"943:1:25","nodeType":"VariableDeclaration","scope":4336,"src":"935:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4310,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4313,"mutability":"mutable","name":"b","nameLocation":"954:1:25","nodeType":"VariableDeclaration","scope":4336,"src":"946:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4312,"name":"uint256","nodeType":"ElementaryTypeName","src":"946:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"934:22:25"},"returnParameters":{"id":4319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4336,"src":"980:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4315,"name":"bool","nodeType":"ElementaryTypeName","src":"980:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4336,"src":"986:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4317,"name":"uint256","nodeType":"ElementaryTypeName","src":"986:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"979:15:25"},"scope":4585,"src":"919:189:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4377,"nodeType":"Block","src":"1332:417:25","statements":[{"id":4376,"nodeType":"UncheckedBlock","src":"1342:401:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4348,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"1600:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1605:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1600:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4355,"nodeType":"IfStatement","src":"1596:28:25","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":4351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1616:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":4352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1622:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4353,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1615:9:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4347,"id":4354,"nodeType":"Return","src":"1608:16:25"}},{"assignments":[4357],"declarations":[{"constant":false,"id":4357,"mutability":"mutable","name":"c","nameLocation":"1646:1:25","nodeType":"VariableDeclaration","scope":4376,"src":"1638:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4356,"name":"uint256","nodeType":"ElementaryTypeName","src":"1638:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4361,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4358,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"1650:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4359,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"1654:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1650:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1638:17:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4362,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"1673:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4363,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"1677:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4365,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"1682:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4371,"nodeType":"IfStatement","src":"1669:33:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1693:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1700:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1692:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4347,"id":4370,"nodeType":"Return","src":"1685:17:25"}},{"expression":{"components":[{"hexValue":"74727565","id":4372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1724:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4373,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"1730:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4374,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1723:9:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4347,"id":4375,"nodeType":"Return","src":"1716:16:25"}]}]},"documentation":{"id":4337,"nodeType":"StructuredDocumentation","src":"1114:137:25","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":4378,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1265:6:25","nodeType":"FunctionDefinition","parameters":{"id":4342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4339,"mutability":"mutable","name":"a","nameLocation":"1280:1:25","nodeType":"VariableDeclaration","scope":4378,"src":"1272:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4338,"name":"uint256","nodeType":"ElementaryTypeName","src":"1272:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4341,"mutability":"mutable","name":"b","nameLocation":"1291:1:25","nodeType":"VariableDeclaration","scope":4378,"src":"1283:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4340,"name":"uint256","nodeType":"ElementaryTypeName","src":"1283:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1271:22:25"},"returnParameters":{"id":4347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4378,"src":"1317:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4343,"name":"bool","nodeType":"ElementaryTypeName","src":"1317:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4378,"src":"1323:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4345,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1316:15:25"},"scope":4585,"src":"1256:493:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4405,"nodeType":"Block","src":"1974:114:25","statements":[{"id":4404,"nodeType":"UncheckedBlock","src":"1984:98:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4390,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"2012:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2017:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2012:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4397,"nodeType":"IfStatement","src":"2008:29:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2028:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2035:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4395,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2027:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4389,"id":4396,"nodeType":"Return","src":"2020:17:25"}},{"expression":{"components":[{"hexValue":"74727565","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2059:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4399,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"2065:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4400,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"2069:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2065:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4402,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2058:13:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4389,"id":4403,"nodeType":"Return","src":"2051:20:25"}]}]},"documentation":{"id":4379,"nodeType":"StructuredDocumentation","src":"1755:138:25","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":4406,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1907:6:25","nodeType":"FunctionDefinition","parameters":{"id":4384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4381,"mutability":"mutable","name":"a","nameLocation":"1922:1:25","nodeType":"VariableDeclaration","scope":4406,"src":"1914:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4380,"name":"uint256","nodeType":"ElementaryTypeName","src":"1914:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4383,"mutability":"mutable","name":"b","nameLocation":"1933:1:25","nodeType":"VariableDeclaration","scope":4406,"src":"1925:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1925:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1913:22:25"},"returnParameters":{"id":4389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4406,"src":"1959:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4385,"name":"bool","nodeType":"ElementaryTypeName","src":"1959:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4406,"src":"1965:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4387,"name":"uint256","nodeType":"ElementaryTypeName","src":"1965:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1958:15:25"},"scope":4585,"src":"1898:190:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4433,"nodeType":"Block","src":"2323:114:25","statements":[{"id":4432,"nodeType":"UncheckedBlock","src":"2333:98:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4418,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"2361:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2366:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2361:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4425,"nodeType":"IfStatement","src":"2357:29:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2377:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4423,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2376:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4417,"id":4424,"nodeType":"Return","src":"2369:17:25"}},{"expression":{"components":[{"hexValue":"74727565","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2408:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4427,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"2414:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4428,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"2418:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2414:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4430,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2407:13:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4417,"id":4431,"nodeType":"Return","src":"2400:20:25"}]}]},"documentation":{"id":4407,"nodeType":"StructuredDocumentation","src":"2094:148:25","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":4434,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2256:6:25","nodeType":"FunctionDefinition","parameters":{"id":4412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4409,"mutability":"mutable","name":"a","nameLocation":"2271:1:25","nodeType":"VariableDeclaration","scope":4434,"src":"2263:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4408,"name":"uint256","nodeType":"ElementaryTypeName","src":"2263:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4411,"mutability":"mutable","name":"b","nameLocation":"2282:1:25","nodeType":"VariableDeclaration","scope":4434,"src":"2274:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4410,"name":"uint256","nodeType":"ElementaryTypeName","src":"2274:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2262:22:25"},"returnParameters":{"id":4417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4434,"src":"2308:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4413,"name":"bool","nodeType":"ElementaryTypeName","src":"2308:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4434,"src":"2314:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4415,"name":"uint256","nodeType":"ElementaryTypeName","src":"2314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2307:15:25"},"scope":4585,"src":"2247:190:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4448,"nodeType":"Block","src":"2739:29:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4444,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"2756:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4445,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"2760:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2756:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4443,"id":4447,"nodeType":"Return","src":"2749:12:25"}]},"documentation":{"id":4435,"nodeType":"StructuredDocumentation","src":"2443:224:25","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":4449,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2681:3:25","nodeType":"FunctionDefinition","parameters":{"id":4440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4437,"mutability":"mutable","name":"a","nameLocation":"2693:1:25","nodeType":"VariableDeclaration","scope":4449,"src":"2685:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4436,"name":"uint256","nodeType":"ElementaryTypeName","src":"2685:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4439,"mutability":"mutable","name":"b","nameLocation":"2704:1:25","nodeType":"VariableDeclaration","scope":4449,"src":"2696:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4438,"name":"uint256","nodeType":"ElementaryTypeName","src":"2696:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2684:22:25"},"returnParameters":{"id":4443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4449,"src":"2730:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4441,"name":"uint256","nodeType":"ElementaryTypeName","src":"2730:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2729:9:25"},"scope":4585,"src":"2672:96:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4463,"nodeType":"Block","src":"3106:29:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4459,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"3123:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4460,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"3127:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3123:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4458,"id":4462,"nodeType":"Return","src":"3116:12:25"}]},"documentation":{"id":4450,"nodeType":"StructuredDocumentation","src":"2774:260:25","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":4464,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3048:3:25","nodeType":"FunctionDefinition","parameters":{"id":4455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4452,"mutability":"mutable","name":"a","nameLocation":"3060:1:25","nodeType":"VariableDeclaration","scope":4464,"src":"3052:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4451,"name":"uint256","nodeType":"ElementaryTypeName","src":"3052:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4454,"mutability":"mutable","name":"b","nameLocation":"3071:1:25","nodeType":"VariableDeclaration","scope":4464,"src":"3063:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4453,"name":"uint256","nodeType":"ElementaryTypeName","src":"3063:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3051:22:25"},"returnParameters":{"id":4458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4464,"src":"3097:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4456,"name":"uint256","nodeType":"ElementaryTypeName","src":"3097:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3096:9:25"},"scope":4585,"src":"3039:96:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4478,"nodeType":"Block","src":"3449:29:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4474,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"3466:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4475,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"3470:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3466:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4473,"id":4477,"nodeType":"Return","src":"3459:12:25"}]},"documentation":{"id":4465,"nodeType":"StructuredDocumentation","src":"3141:236:25","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":4479,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3391:3:25","nodeType":"FunctionDefinition","parameters":{"id":4470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4467,"mutability":"mutable","name":"a","nameLocation":"3403:1:25","nodeType":"VariableDeclaration","scope":4479,"src":"3395:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4466,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4469,"mutability":"mutable","name":"b","nameLocation":"3414:1:25","nodeType":"VariableDeclaration","scope":4479,"src":"3406:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4468,"name":"uint256","nodeType":"ElementaryTypeName","src":"3406:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3394:22:25"},"returnParameters":{"id":4473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4479,"src":"3440:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4471,"name":"uint256","nodeType":"ElementaryTypeName","src":"3440:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3439:9:25"},"scope":4585,"src":"3382:96:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4493,"nodeType":"Block","src":"3834:29:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4489,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"3851:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4490,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"3855:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3851:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4488,"id":4492,"nodeType":"Return","src":"3844:12:25"}]},"documentation":{"id":4480,"nodeType":"StructuredDocumentation","src":"3484:278:25","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":4494,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3776:3:25","nodeType":"FunctionDefinition","parameters":{"id":4485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4482,"mutability":"mutable","name":"a","nameLocation":"3788:1:25","nodeType":"VariableDeclaration","scope":4494,"src":"3780:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4481,"name":"uint256","nodeType":"ElementaryTypeName","src":"3780:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4484,"mutability":"mutable","name":"b","nameLocation":"3799:1:25","nodeType":"VariableDeclaration","scope":4494,"src":"3791:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4483,"name":"uint256","nodeType":"ElementaryTypeName","src":"3791:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3779:22:25"},"returnParameters":{"id":4488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4494,"src":"3825:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4486,"name":"uint256","nodeType":"ElementaryTypeName","src":"3825:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3824:9:25"},"scope":4585,"src":"3767:96:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4508,"nodeType":"Block","src":"4383:29:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4504,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"4400:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4505,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"4404:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4400:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4503,"id":4507,"nodeType":"Return","src":"4393:12:25"}]},"documentation":{"id":4495,"nodeType":"StructuredDocumentation","src":"3869:442:25","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":4509,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4325:3:25","nodeType":"FunctionDefinition","parameters":{"id":4500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4497,"mutability":"mutable","name":"a","nameLocation":"4337:1:25","nodeType":"VariableDeclaration","scope":4509,"src":"4329:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4496,"name":"uint256","nodeType":"ElementaryTypeName","src":"4329:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4499,"mutability":"mutable","name":"b","nameLocation":"4348:1:25","nodeType":"VariableDeclaration","scope":4509,"src":"4340:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4498,"name":"uint256","nodeType":"ElementaryTypeName","src":"4340:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4328:22:25"},"returnParameters":{"id":4503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4509,"src":"4374:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4501,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4373:9:25"},"scope":4585,"src":"4316:96:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4533,"nodeType":"Block","src":"4971:106:25","statements":[{"id":4532,"nodeType":"UncheckedBlock","src":"4981:90:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4522,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"5013:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4523,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"5018:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5013:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4525,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"5021:12:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4521,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5005:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5005:29:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4527,"nodeType":"ExpressionStatement","src":"5005:29:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4528,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"5055:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4529,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"5059:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5055:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4520,"id":4531,"nodeType":"Return","src":"5048:12:25"}]}]},"documentation":{"id":4510,"nodeType":"StructuredDocumentation","src":"4418:453:25","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":4534,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4885:3:25","nodeType":"FunctionDefinition","parameters":{"id":4517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4512,"mutability":"mutable","name":"a","nameLocation":"4897:1:25","nodeType":"VariableDeclaration","scope":4534,"src":"4889:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4511,"name":"uint256","nodeType":"ElementaryTypeName","src":"4889:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4514,"mutability":"mutable","name":"b","nameLocation":"4908:1:25","nodeType":"VariableDeclaration","scope":4534,"src":"4900:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4513,"name":"uint256","nodeType":"ElementaryTypeName","src":"4900:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4516,"mutability":"mutable","name":"errorMessage","nameLocation":"4925:12:25","nodeType":"VariableDeclaration","scope":4534,"src":"4911:26:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4515,"name":"string","nodeType":"ElementaryTypeName","src":"4911:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4888:50:25"},"returnParameters":{"id":4520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4534,"src":"4962:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4518,"name":"uint256","nodeType":"ElementaryTypeName","src":"4962:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4961:9:25"},"scope":4585,"src":"4876:201:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4558,"nodeType":"Block","src":"5879:105:25","statements":[{"id":4557,"nodeType":"UncheckedBlock","src":"5889:89:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4547,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"5921:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5925:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5921:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4550,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4541,"src":"5928:12:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4546,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5913:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5913:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4552,"nodeType":"ExpressionStatement","src":"5913:28:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4553,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"5962:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4554,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"5966:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5962:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4545,"id":4556,"nodeType":"Return","src":"5955:12:25"}]}]},"documentation":{"id":4535,"nodeType":"StructuredDocumentation","src":"5083:696:25","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":4559,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5793:3:25","nodeType":"FunctionDefinition","parameters":{"id":4542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4537,"mutability":"mutable","name":"a","nameLocation":"5805:1:25","nodeType":"VariableDeclaration","scope":4559,"src":"5797:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4536,"name":"uint256","nodeType":"ElementaryTypeName","src":"5797:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4539,"mutability":"mutable","name":"b","nameLocation":"5816:1:25","nodeType":"VariableDeclaration","scope":4559,"src":"5808:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4538,"name":"uint256","nodeType":"ElementaryTypeName","src":"5808:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4541,"mutability":"mutable","name":"errorMessage","nameLocation":"5833:12:25","nodeType":"VariableDeclaration","scope":4559,"src":"5819:26:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4540,"name":"string","nodeType":"ElementaryTypeName","src":"5819:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5796:50:25"},"returnParameters":{"id":4545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4559,"src":"5870:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4543,"name":"uint256","nodeType":"ElementaryTypeName","src":"5870:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5869:9:25"},"scope":4585,"src":"5784:200:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4583,"nodeType":"Block","src":"6725:105:25","statements":[{"id":4582,"nodeType":"UncheckedBlock","src":"6735:89:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4572,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"6767:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6771:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6767:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4575,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"6774:12:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4571,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6759:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6759:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4577,"nodeType":"ExpressionStatement","src":"6759:28:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4578,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"6808:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4579,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"6812:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6808:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4570,"id":4581,"nodeType":"Return","src":"6801:12:25"}]}]},"documentation":{"id":4560,"nodeType":"StructuredDocumentation","src":"5990:635:25","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":4584,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6639:3:25","nodeType":"FunctionDefinition","parameters":{"id":4567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4562,"mutability":"mutable","name":"a","nameLocation":"6651:1:25","nodeType":"VariableDeclaration","scope":4584,"src":"6643:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4561,"name":"uint256","nodeType":"ElementaryTypeName","src":"6643:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4564,"mutability":"mutable","name":"b","nameLocation":"6662:1:25","nodeType":"VariableDeclaration","scope":4584,"src":"6654:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4563,"name":"uint256","nodeType":"ElementaryTypeName","src":"6654:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4566,"mutability":"mutable","name":"errorMessage","nameLocation":"6679:12:25","nodeType":"VariableDeclaration","scope":4584,"src":"6665:26:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4565,"name":"string","nodeType":"ElementaryTypeName","src":"6665:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6642:50:25"},"returnParameters":{"id":4570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4584,"src":"6716:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4568,"name":"uint256","nodeType":"ElementaryTypeName","src":"6716:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6715:9:25"},"scope":4585,"src":"6630:200:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4586,"src":"398:6434:25","usedErrors":[]}],"src":"33:6800:25"},"id":25},"contracts/AssetStruct.sol":{"ast":{"absolutePath":"contracts/AssetStruct.sol","exportedSymbols":{"Asset":[4654],"Category":[4598],"NewReward":[4622],"ProjectStatus":[4592],"Reward":[4611]},"id":4655,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4587,"literals":["solidity",">=","0.8",".0","<=","0.8",".19"],"nodeType":"PragmaDirective","src":"32:33:26"},{"canonicalName":"ProjectStatus","id":4592,"members":[{"id":4588,"name":"Started","nameLocation":"92:7:26","nodeType":"EnumValue","src":"92:7:26"},{"id":4589,"name":"Funded","nameLocation":"105:6:26","nodeType":"EnumValue","src":"105:6:26"},{"id":4590,"name":"Failed","nameLocation":"117:6:26","nodeType":"EnumValue","src":"117:6:26"},{"id":4591,"name":"Completed","nameLocation":"129:9:26","nodeType":"EnumValue","src":"129:9:26"}],"name":"ProjectStatus","nameLocation":"72:13:26","nodeType":"EnumDefinition","src":"67:73:26"},{"canonicalName":"Category","id":4598,"members":[{"id":4593,"name":"Technology","nameLocation":"162:10:26","nodeType":"EnumValue","src":"162:10:26"},{"id":4594,"name":"Gaming","nameLocation":"178:6:26","nodeType":"EnumValue","src":"178:6:26"},{"id":4595,"name":"Music","nameLocation":"190:5:26","nodeType":"EnumValue","src":"190:5:26"},{"id":4596,"name":"Movies","nameLocation":"201:6:26","nodeType":"EnumValue","src":"201:6:26"},{"id":4597,"name":"Art","nameLocation":"213:3:26","nodeType":"EnumValue","src":"213:3:26"}],"name":"Category","nameLocation":"147:8:26","nodeType":"EnumDefinition","src":"142:76:26"},{"canonicalName":"Reward","id":4611,"members":[{"constant":false,"id":4600,"mutability":"mutable","name":"title","nameLocation":"247:5:26","nodeType":"VariableDeclaration","scope":4611,"src":"240:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4599,"name":"string","nodeType":"ElementaryTypeName","src":"240:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4602,"mutability":"mutable","name":"description","nameLocation":"265:11:26","nodeType":"VariableDeclaration","scope":4611,"src":"258:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4601,"name":"string","nodeType":"ElementaryTypeName","src":"258:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4604,"mutability":"mutable","name":"tokenAmount","nameLocation":"290:11:26","nodeType":"VariableDeclaration","scope":4611,"src":"282:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4603,"name":"uint256","nodeType":"ElementaryTypeName","src":"282:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4606,"mutability":"mutable","name":"individualPrice","nameLocation":"315:15:26","nodeType":"VariableDeclaration","scope":4611,"src":"307:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4605,"name":"uint256","nodeType":"ElementaryTypeName","src":"307:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4608,"mutability":"mutable","name":"availableTokens","nameLocation":"344:15:26","nodeType":"VariableDeclaration","scope":4611,"src":"336:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4607,"name":"uint256","nodeType":"ElementaryTypeName","src":"336:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4610,"mutability":"mutable","name":"rewardTokenId","nameLocation":"373:13:26","nodeType":"VariableDeclaration","scope":4611,"src":"365:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4609,"name":"uint256","nodeType":"ElementaryTypeName","src":"365:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Reward","nameLocation":"227:6:26","nodeType":"StructDefinition","scope":4655,"src":"220:169:26","visibility":"public"},{"canonicalName":"NewReward","id":4622,"members":[{"constant":false,"id":4613,"mutability":"mutable","name":"tokenURI","nameLocation":"421:8:26","nodeType":"VariableDeclaration","scope":4622,"src":"414:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4612,"name":"string","nodeType":"ElementaryTypeName","src":"414:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4615,"mutability":"mutable","name":"title","nameLocation":"442:5:26","nodeType":"VariableDeclaration","scope":4622,"src":"435:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4614,"name":"string","nodeType":"ElementaryTypeName","src":"435:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4617,"mutability":"mutable","name":"description","nameLocation":"460:11:26","nodeType":"VariableDeclaration","scope":4622,"src":"453:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4616,"name":"string","nodeType":"ElementaryTypeName","src":"453:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4619,"mutability":"mutable","name":"tokenAmount","nameLocation":"485:11:26","nodeType":"VariableDeclaration","scope":4622,"src":"477:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4618,"name":"uint256","nodeType":"ElementaryTypeName","src":"477:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4621,"mutability":"mutable","name":"individualPrice","nameLocation":"510:15:26","nodeType":"VariableDeclaration","scope":4622,"src":"502:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4620,"name":"uint256","nodeType":"ElementaryTypeName","src":"502:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"NewReward","nameLocation":"398:9:26","nodeType":"StructDefinition","scope":4655,"src":"391:137:26","visibility":"public"},{"canonicalName":"Asset","id":4654,"members":[{"constant":false,"id":4624,"mutability":"mutable","name":"assetId","nameLocation":"557:7:26","nodeType":"VariableDeclaration","scope":4654,"src":"549:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4623,"name":"uint256","nodeType":"ElementaryTypeName","src":"549:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4626,"mutability":"mutable","name":"price","nameLocation":"578:5:26","nodeType":"VariableDeclaration","scope":4654,"src":"570:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4625,"name":"uint256","nodeType":"ElementaryTypeName","src":"570:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4628,"mutability":"mutable","name":"author","nameLocation":"596:6:26","nodeType":"VariableDeclaration","scope":4654,"src":"589:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4627,"name":"string","nodeType":"ElementaryTypeName","src":"589:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4630,"mutability":"mutable","name":"title","nameLocation":"615:5:26","nodeType":"VariableDeclaration","scope":4654,"src":"608:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4629,"name":"string","nodeType":"ElementaryTypeName","src":"608:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4632,"mutability":"mutable","name":"description","nameLocation":"633:11:26","nodeType":"VariableDeclaration","scope":4654,"src":"626:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4631,"name":"string","nodeType":"ElementaryTypeName","src":"626:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4634,"mutability":"mutable","name":"projectStartDate","nameLocation":"658:16:26","nodeType":"VariableDeclaration","scope":4654,"src":"650:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4633,"name":"uint256","nodeType":"ElementaryTypeName","src":"650:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4636,"mutability":"mutable","name":"projectEndDate","nameLocation":"688:14:26","nodeType":"VariableDeclaration","scope":4654,"src":"680:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4635,"name":"uint256","nodeType":"ElementaryTypeName","src":"680:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4640,"mutability":"mutable","name":"rewards","nameLocation":"717:7:26","nodeType":"VariableDeclaration","scope":4654,"src":"708:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Reward_$4611_storage_$dyn_storage_ptr","typeString":"struct Reward[]"},"typeName":{"baseType":{"id":4638,"nodeType":"UserDefinedTypeName","pathNode":{"id":4637,"name":"Reward","nameLocations":["708:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":4611,"src":"708:6:26"},"referencedDeclaration":4611,"src":"708:6:26","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$4611_storage_ptr","typeString":"struct Reward"}},"id":4639,"nodeType":"ArrayTypeName","src":"708:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Reward_$4611_storage_$dyn_storage_ptr","typeString":"struct Reward[]"}},"visibility":"internal"},{"constant":false,"id":4643,"mutability":"mutable","name":"status","nameLocation":"744:6:26","nodeType":"VariableDeclaration","scope":4654,"src":"730:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"},"typeName":{"id":4642,"nodeType":"UserDefinedTypeName","pathNode":{"id":4641,"name":"ProjectStatus","nameLocations":["730:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":4592,"src":"730:13:26"},"referencedDeclaration":4592,"src":"730:13:26","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"}},"visibility":"internal"},{"constant":false,"id":4645,"mutability":"mutable","name":"rewardTokenAddress","nameLocation":"764:18:26","nodeType":"VariableDeclaration","scope":4654,"src":"756:26:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4644,"name":"address","nodeType":"ElementaryTypeName","src":"756:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4647,"mutability":"mutable","name":"mainPhoto","nameLocation":"795:9:26","nodeType":"VariableDeclaration","scope":4654,"src":"788:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4646,"name":"string","nodeType":"ElementaryTypeName","src":"788:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4650,"mutability":"mutable","name":"secondaryPhotos","nameLocation":"819:15:26","nodeType":"VariableDeclaration","scope":4654,"src":"810:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4648,"name":"string","nodeType":"ElementaryTypeName","src":"810:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4649,"nodeType":"ArrayTypeName","src":"810:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4653,"mutability":"mutable","name":"category","nameLocation":"849:8:26","nodeType":"VariableDeclaration","scope":4654,"src":"840:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Category_$4598","typeString":"enum Category"},"typeName":{"id":4652,"nodeType":"UserDefinedTypeName","pathNode":{"id":4651,"name":"Category","nameLocations":["840:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":4598,"src":"840:8:26"},"referencedDeclaration":4598,"src":"840:8:26","typeDescriptions":{"typeIdentifier":"t_enum$_Category_$4598","typeString":"enum Category"}},"visibility":"internal"}],"name":"Asset","nameLocation":"537:5:26","nodeType":"StructDefinition","scope":4655,"src":"530:330:26","visibility":"public"}],"src":"32:829:26"},"id":26},"contracts/Assets.sol":{"ast":{"absolutePath":"contracts/Assets.sol","exportedSymbols":{"Address":[4011],"Asset":[4654],"Assets":[5346],"Category":[4598],"Context":[4034],"ERC165":[4261],"ERC721":[3027],"ERC721Burnable":[3191],"ERC721Enumerable":[3529],"ERC721URIStorage":[3657],"IERC165":[4273],"IERC721":[3143],"IERC721Enumerable":[3688],"IERC721Metadata":[3715],"IERC721Receiver":[3161],"NFTVenture":[7155],"NewReward":[4622],"Ownable":[109],"Pausable":[201],"ProjectStatus":[4592],"Reward":[4611],"Strings":[4237]},"id":5347,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4656,"literals":["solidity",">=","0.8",".0","<=","0.8",".19"],"nodeType":"PragmaDirective","src":"33:33:27"},{"absolutePath":"contracts/NFTVenture.sol","file":"./NFTVenture.sol","id":4657,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5347,"sourceUnit":7156,"src":"70:26:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/AssetStruct.sol","file":"./AssetStruct.sol","id":4658,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5347,"sourceUnit":4655,"src":"98:27:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Assets","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5346,"linearizedBaseContracts":[5346],"name":"Assets","nameLocation":"138:6:27","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4661,"mutability":"mutable","name":"nftContract","nameLocation":"171:11:27","nodeType":"VariableDeclaration","scope":5346,"src":"152:30:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"},"typeName":{"id":4660,"nodeType":"UserDefinedTypeName","pathNode":{"id":4659,"name":"NFTVenture","nameLocations":["152:10:27"],"nodeType":"IdentifierPath","referencedDeclaration":7155,"src":"152:10:27"},"referencedDeclaration":7155,"src":"152:10:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"visibility":"private"},{"constant":false,"functionSelector":"56e4b68b","id":4663,"mutability":"mutable","name":"supervisor","nameLocation":"204:10:27","nodeType":"VariableDeclaration","scope":5346,"src":"189:25:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4662,"name":"address","nodeType":"ElementaryTypeName","src":"189:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"f85c915ce9c62984825f2ff42dc2ac372422bebf345a567590885dc78681325d","id":4675,"name":"LogInvestment","nameLocation":"245:13:27","nodeType":"EventDefinition","parameters":{"id":4674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4665,"indexed":true,"mutability":"mutable","name":"investor","nameLocation":"285:8:27","nodeType":"VariableDeclaration","scope":4675,"src":"269:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4664,"name":"address","nodeType":"ElementaryTypeName","src":"269:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4667,"indexed":true,"mutability":"mutable","name":"assetId","nameLocation":"320:7:27","nodeType":"VariableDeclaration","scope":4675,"src":"304:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4666,"name":"uint256","nodeType":"ElementaryTypeName","src":"304:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4669,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"354:7:27","nodeType":"VariableDeclaration","scope":4675,"src":"338:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4668,"name":"uint256","nodeType":"ElementaryTypeName","src":"338:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4671,"indexed":false,"mutability":"mutable","name":"tokenAmount","nameLocation":"380:11:27","nodeType":"VariableDeclaration","scope":4675,"src":"372:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4670,"name":"uint256","nodeType":"ElementaryTypeName","src":"372:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4673,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"410:5:27","nodeType":"VariableDeclaration","scope":4675,"src":"402:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4672,"name":"uint256","nodeType":"ElementaryTypeName","src":"402:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"258:164:27"},"src":"239:184:27"},{"anonymous":false,"eventSelector":"49b4e4c6879cdc85b51d8c3b572252aaa7842edb863810854acb6d2ed420d962","id":4683,"name":"AssetCreated","nameLocation":"437:12:27","nodeType":"EventDefinition","parameters":{"id":4682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4677,"indexed":true,"mutability":"mutable","name":"assetId","nameLocation":"476:7:27","nodeType":"VariableDeclaration","scope":4683,"src":"460:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4676,"name":"uint256","nodeType":"ElementaryTypeName","src":"460:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4679,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"510:5:27","nodeType":"VariableDeclaration","scope":4683,"src":"494:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4678,"name":"address","nodeType":"ElementaryTypeName","src":"494:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4681,"indexed":false,"mutability":"mutable","name":"tokenURI","nameLocation":"533:8:27","nodeType":"VariableDeclaration","scope":4683,"src":"526:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4680,"name":"string","nodeType":"ElementaryTypeName","src":"526:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"449:99:27"},"src":"431:118:27"},{"body":{"id":4699,"nodeType":"Block","src":"609:89:27","statements":[{"expression":{"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4688,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"620:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4690,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"645:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4689,"name":"NFTVenture","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7155,"src":"634:10:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_NFTVenture_$7155_$","typeString":"type(contract NFTVenture)"}},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"634:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"src":"620:36:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":4693,"nodeType":"ExpressionStatement","src":"620:36:27"},{"expression":{"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4694,"name":"supervisor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"667:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4695,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"680:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"684:6:27","memberName":"sender","nodeType":"MemberAccess","src":"680:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"667:23:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4698,"nodeType":"ExpressionStatement","src":"667:23:27"}]},"id":4700,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4685,"mutability":"mutable","name":"nftAddress","nameLocation":"597:10:27","nodeType":"VariableDeclaration","scope":4700,"src":"589:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4684,"name":"address","nodeType":"ElementaryTypeName","src":"589:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"588:20:27"},"returnParameters":{"id":4687,"nodeType":"ParameterList","parameters":[],"src":"609:0:27"},"scope":5346,"src":"577:121:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4711,"nodeType":"Block","src":"732:143:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4703,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"765:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"769:6:27","memberName":"sender","nodeType":"MemberAccess","src":"765:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4705,"name":"supervisor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"779:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"765:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792073757065727669736f722063616e2063616c6c20746869732066756e6374696f6e","id":4707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"804:40:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d7f4340f27d55e1e41a8d5ddf87968436d7cb708d0eb99fe9fefe6b11395f2","typeString":"literal_string \"Only supervisor can call this function\""},"value":"Only supervisor can call this function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_32d7f4340f27d55e1e41a8d5ddf87968436d7cb708d0eb99fe9fefe6b11395f2","typeString":"literal_string \"Only supervisor can call this function\""}],"id":4702,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"743:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"743:112:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4709,"nodeType":"ExpressionStatement","src":"743:112:27"},{"id":4710,"nodeType":"PlaceholderStatement","src":"866:1:27"}]},"id":4712,"name":"onlySupervisor","nameLocation":"715:14:27","nodeType":"ModifierDefinition","parameters":{"id":4701,"nodeType":"ParameterList","parameters":[],"src":"729:2:27"},"src":"706:169:27","virtual":false,"visibility":"internal"},{"body":{"id":4827,"nodeType":"Block","src":"1242:949:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4740,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"1261:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1270:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1261:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726963652063616e6e6f74206265207a65726f","id":4743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1273:22:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_72dc2a71c7e1de2c7b012d07a11f8199d268b42d946f22dcef81102d123f1ba2","typeString":"literal_string \"Price cannot be zero\""},"value":"Price cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_72dc2a71c7e1de2c7b012d07a11f8199d268b42d946f22dcef81102d123f1ba2","typeString":"literal_string \"Price cannot be zero\""}],"id":4739,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1253:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1253:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4745,"nodeType":"ExpressionStatement","src":"1253:43:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4747,"name":"projectEndDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"1329:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":4748,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1347:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1353:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"1347:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6a65637420656e6420646174652073686f756c6420626520696e2074686520667574757265","id":4751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1377:42:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_e37e804dc87aac51bd37df40405c906c275af93fc80f22ad6bf98dd5d35f451c","typeString":"literal_string \"Project end date should be in the future\""},"value":"Project end date should be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e37e804dc87aac51bd37df40405c906c275af93fc80f22ad6bf98dd5d35f451c","typeString":"literal_string \"Project end date should be in the future\""}],"id":4746,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1307:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1307:123:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4753,"nodeType":"ExpressionStatement","src":"1307:123:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4755,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"1449:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1463:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4756,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:27","typeDescriptions":{}}},"id":4759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1449:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573732063616e6e6f74206265207a65726f","id":4761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1467:24:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_59b3ca4f4ff5f725ba59657612982eb6e881c63b17d02fcea1c44c9baadb095b","typeString":"literal_string \"Address cannot be zero\""},"value":"Address cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_59b3ca4f4ff5f725ba59657612982eb6e881c63b17d02fcea1c44c9baadb095b","typeString":"literal_string \"Address cannot be zero\""}],"id":4754,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1441:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1441:51:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4763,"nodeType":"ExpressionStatement","src":"1441:51:27"},{"assignments":[4765],"declarations":[{"constant":false,"id":4765,"mutability":"mutable","name":"assetId","nameLocation":"1513:7:27","nodeType":"VariableDeclaration","scope":4827,"src":"1505:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4764,"name":"uint256","nodeType":"ElementaryTypeName","src":"1505:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4769,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4766,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"1523:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:14:27","memberName":"getAssetsCount","nodeType":"MemberAccess","referencedDeclaration":6678,"src":"1523:26:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1523:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1505:46:27"},{"assignments":[4774],"declarations":[{"constant":false,"id":4774,"mutability":"mutable","name":"emptyRewards","nameLocation":"1580:12:27","nodeType":"VariableDeclaration","scope":4827,"src":"1564:28:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Reward_$4611_memory_ptr_$dyn_memory_ptr","typeString":"struct Reward[]"},"typeName":{"baseType":{"id":4772,"nodeType":"UserDefinedTypeName","pathNode":{"id":4771,"name":"Reward","nameLocations":["1564:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":4611,"src":"1564:6:27"},"referencedDeclaration":4611,"src":"1564:6:27","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$4611_storage_ptr","typeString":"struct Reward"}},"id":4773,"nodeType":"ArrayTypeName","src":"1564:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Reward_$4611_storage_$dyn_storage_ptr","typeString":"struct Reward[]"}},"visibility":"internal"}],"id":4775,"nodeType":"VariableDeclarationStatement","src":"1564:28:27"},{"assignments":[4778],"declarations":[{"constant":false,"id":4778,"mutability":"mutable","name":"newAsset","nameLocation":"1616:8:27","nodeType":"VariableDeclaration","scope":4827,"src":"1603:21:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset"},"typeName":{"id":4777,"nodeType":"UserDefinedTypeName","pathNode":{"id":4776,"name":"Asset","nameLocations":["1603:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"1603:5:27"},"referencedDeclaration":4654,"src":"1603:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"}},"visibility":"internal"}],"id":4799,"initialValue":{"arguments":[{"id":4780,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"1647:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4781,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"1669:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4782,"name":"author","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"1689:6:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4783,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"1710:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4784,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"1730:11:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":4785,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1756:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1762:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"1756:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4787,"name":"projectEndDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"1786:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4788,"name":"emptyRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"1815:12:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Reward_$4611_memory_ptr_$dyn_memory_ptr","typeString":"struct Reward memory[] memory"}},{"expression":{"id":4789,"name":"ProjectStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"1842:13:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProjectStatus_$4592_$","typeString":"type(enum ProjectStatus)"}},"id":4790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1856:7:27","memberName":"Started","nodeType":"MemberAccess","referencedDeclaration":4588,"src":"1842:21:27","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"}},{"arguments":[{"hexValue":"30","id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1886:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1878:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4791,"name":"address","nodeType":"ElementaryTypeName","src":"1878:7:27","typeDescriptions":{}}},"id":4794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1878:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4795,"name":"mainPhoto","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"1903:9:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4796,"name":"secondaryPhotos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"1927:15:27","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},{"id":4797,"name":"category","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"1957:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Category_$4598","typeString":"enum Category"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_struct$_Reward_$4611_memory_ptr_$dyn_memory_ptr","typeString":"struct Reward memory[] memory"},{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"},{"typeIdentifier":"t_enum$_Category_$4598","typeString":"enum Category"}],"id":4779,"name":"Asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"1627:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Asset_$4654_storage_ptr_$","typeString":"type(struct Asset storage pointer)"}},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1627:349:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"nodeType":"VariableDeclarationStatement","src":"1603:373:27"},{"expression":{"arguments":[{"id":4803,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"2009:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4804,"name":"newAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"2018:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},{"id":4805,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"2028:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4800,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"1987:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1999:9:27","memberName":"_addAsset","nodeType":"MemberAccess","referencedDeclaration":6642,"src":"1987:21:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_struct$_Asset_$4654_memory_ptr_$_t_address_$returns$__$","typeString":"function (uint256,struct Asset memory,address) external"}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1987:44:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4807,"nodeType":"ExpressionStatement","src":"1987:44:27"},{"expression":{"arguments":[{"id":4811,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"2061:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4812,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"2065:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4813,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"2074:8:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4808,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"2044:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2056:4:27","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":6541,"src":"2044:16:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,string memory) external"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2044:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4815,"nodeType":"ExpressionStatement","src":"2044:39:27"},{"eventCall":{"arguments":[{"id":4817,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"2114:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4818,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"2123:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4819,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"2127:8:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4816,"name":"AssetCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"2101:12:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory)"}},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2101:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4821,"nodeType":"EmitStatement","src":"2096:40:27"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4822,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"2149:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2161:20:27","memberName":"incrementAssetsCount","nodeType":"MemberAccess","referencedDeclaration":6685,"src":"2149:32:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2149:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4826,"nodeType":"ExpressionStatement","src":"2149:34:27"}]},"functionSelector":"86275c5a","id":4828,"implemented":true,"kind":"function","modifiers":[{"id":4737,"kind":"modifierInvocation","modifierName":{"id":4736,"name":"onlySupervisor","nameLocations":["1227:14:27"],"nodeType":"IdentifierPath","referencedDeclaration":4712,"src":"1227:14:27"},"nodeType":"ModifierInvocation","src":"1227:14:27"}],"name":"addAsset","nameLocation":"892:8:27","nodeType":"FunctionDefinition","parameters":{"id":4735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4714,"mutability":"mutable","name":"price","nameLocation":"919:5:27","nodeType":"VariableDeclaration","scope":4828,"src":"911:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4713,"name":"uint256","nodeType":"ElementaryTypeName","src":"911:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4716,"mutability":"mutable","name":"author","nameLocation":"949:6:27","nodeType":"VariableDeclaration","scope":4828,"src":"935:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4715,"name":"string","nodeType":"ElementaryTypeName","src":"935:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4718,"mutability":"mutable","name":"title","nameLocation":"980:5:27","nodeType":"VariableDeclaration","scope":4828,"src":"966:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4717,"name":"string","nodeType":"ElementaryTypeName","src":"966:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4720,"mutability":"mutable","name":"description","nameLocation":"1010:11:27","nodeType":"VariableDeclaration","scope":4828,"src":"996:25:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4719,"name":"string","nodeType":"ElementaryTypeName","src":"996:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4722,"mutability":"mutable","name":"projectEndDate","nameLocation":"1040:14:27","nodeType":"VariableDeclaration","scope":4828,"src":"1032:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4721,"name":"uint256","nodeType":"ElementaryTypeName","src":"1032:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4724,"mutability":"mutable","name":"to","nameLocation":"1073:2:27","nodeType":"VariableDeclaration","scope":4828,"src":"1065:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4723,"name":"address","nodeType":"ElementaryTypeName","src":"1065:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4726,"mutability":"mutable","name":"tokenURI","nameLocation":"1100:8:27","nodeType":"VariableDeclaration","scope":4828,"src":"1086:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4725,"name":"string","nodeType":"ElementaryTypeName","src":"1086:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4728,"mutability":"mutable","name":"mainPhoto","nameLocation":"1133:9:27","nodeType":"VariableDeclaration","scope":4828,"src":"1119:23:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4727,"name":"string","nodeType":"ElementaryTypeName","src":"1119:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4731,"mutability":"mutable","name":"secondaryPhotos","nameLocation":"1169:15:27","nodeType":"VariableDeclaration","scope":4828,"src":"1153:31:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4729,"name":"string","nodeType":"ElementaryTypeName","src":"1153:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4730,"nodeType":"ArrayTypeName","src":"1153:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4734,"mutability":"mutable","name":"category","nameLocation":"1204:8:27","nodeType":"VariableDeclaration","scope":4828,"src":"1195:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Category_$4598","typeString":"enum Category"},"typeName":{"id":4733,"nodeType":"UserDefinedTypeName","pathNode":{"id":4732,"name":"Category","nameLocations":["1195:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":4598,"src":"1195:8:27"},"referencedDeclaration":4598,"src":"1195:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Category_$4598","typeString":"enum Category"}},"visibility":"internal"}],"src":"900:319:27"},"returnParameters":{"id":4738,"nodeType":"ParameterList","parameters":[],"src":"1242:0:27"},"scope":5346,"src":"883:1308:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4992,"nodeType":"Block","src":"2332:1146:27","statements":[{"assignments":[4848],"declarations":[{"constant":false,"id":4848,"mutability":"mutable","name":"assetIds","nameLocation":"2360:8:27","nodeType":"VariableDeclaration","scope":4992,"src":"2343:25:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4846,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4847,"nodeType":"ArrayTypeName","src":"2343:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4849,"nodeType":"VariableDeclarationStatement","src":"2343:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4850,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"2385:6:27","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4851,"name":"ProjectStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"2395:13:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProjectStatus_$4592_$","typeString":"type(enum ProjectStatus)"}},"id":4852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2409:7:27","memberName":"Started","nodeType":"MemberAccess","referencedDeclaration":4588,"src":"2395:21:27","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"}},"src":"2385:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4861,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"2495:6:27","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4862,"name":"ProjectStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"2505:13:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProjectStatus_$4592_$","typeString":"type(enum ProjectStatus)"}},"id":4863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2519:6:27","memberName":"Funded","nodeType":"MemberAccess","referencedDeclaration":4589,"src":"2505:20:27","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"}},"src":"2495:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4872,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"2604:6:27","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4873,"name":"ProjectStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"2614:13:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProjectStatus_$4592_$","typeString":"type(enum ProjectStatus)"}},"id":4874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2628:6:27","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":4590,"src":"2614:20:27","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"}},"src":"2604:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4883,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"2713:6:27","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4884,"name":"ProjectStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"2723:13:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProjectStatus_$4592_$","typeString":"type(enum ProjectStatus)"}},"id":4885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2737:9:27","memberName":"Completed","nodeType":"MemberAccess","referencedDeclaration":4591,"src":"2723:23:27","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"}},"src":"2713:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4898,"nodeType":"Block","src":"2824:51:27","statements":[{"expression":{"arguments":[{"hexValue":"496e76616c696420737461747573","id":4895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2846:16:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857","typeString":"literal_string \"Invalid status\""},"value":"Invalid status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857","typeString":"literal_string \"Invalid status\""}],"id":4894,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2839:6:27","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2839:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4897,"nodeType":"ExpressionStatement","src":"2839:24:27"}]},"id":4899,"nodeType":"IfStatement","src":"2709:166:27","trueBody":{"id":4893,"nodeType":"Block","src":"2748:70:27","statements":[{"expression":{"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4887,"name":"assetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"2763:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4888,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"2774:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2786:18:27","memberName":"getCompletedAssets","nodeType":"MemberAccess","referencedDeclaration":7140,"src":"2774:30:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view external returns (uint256[] memory)"}},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2774:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"2763:43:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4892,"nodeType":"ExpressionStatement","src":"2763:43:27"}]}},"id":4900,"nodeType":"IfStatement","src":"2600:275:27","trueBody":{"id":4882,"nodeType":"Block","src":"2636:67:27","statements":[{"expression":{"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4876,"name":"assetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"2651:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4877,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"2662:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2674:15:27","memberName":"getFailedAssets","nodeType":"MemberAccess","referencedDeclaration":7131,"src":"2662:27:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view external returns (uint256[] memory)"}},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2662:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"2651:40:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4881,"nodeType":"ExpressionStatement","src":"2651:40:27"}]}},"id":4901,"nodeType":"IfStatement","src":"2491:384:27","trueBody":{"id":4871,"nodeType":"Block","src":"2527:67:27","statements":[{"expression":{"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4865,"name":"assetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"2542:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4866,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"2553:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2565:15:27","memberName":"getFundedAssets","nodeType":"MemberAccess","referencedDeclaration":7122,"src":"2553:27:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view external returns (uint256[] memory)"}},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2553:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"2542:40:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4870,"nodeType":"ExpressionStatement","src":"2542:40:27"}]}},"id":4902,"nodeType":"IfStatement","src":"2381:494:27","trueBody":{"id":4860,"nodeType":"Block","src":"2418:67:27","statements":[{"expression":{"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4854,"name":"assetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"2433:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4855,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"2444:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2456:15:27","memberName":"getActiveAssets","nodeType":"MemberAccess","referencedDeclaration":7113,"src":"2444:27:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view external returns (uint256[] memory)"}},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2444:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"2433:40:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4859,"nodeType":"ExpressionStatement","src":"2433:40:27"}]}},{"assignments":[4904],"declarations":[{"constant":false,"id":4904,"mutability":"mutable","name":"assetCount","nameLocation":"2895:10:27","nodeType":"VariableDeclaration","scope":4992,"src":"2887:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4903,"name":"uint256","nodeType":"ElementaryTypeName","src":"2887:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4907,"initialValue":{"expression":{"id":4905,"name":"assetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"2908:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2917:6:27","memberName":"length","nodeType":"MemberAccess","src":"2908:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2887:36:27"},{"assignments":[4912],"declarations":[{"constant":false,"id":4912,"mutability":"mutable","name":"assets","nameLocation":"2949:6:27","nodeType":"VariableDeclaration","scope":4992,"src":"2934:21:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_memory_ptr_$dyn_memory_ptr","typeString":"struct Asset[]"},"typeName":{"baseType":{"id":4910,"nodeType":"UserDefinedTypeName","pathNode":{"id":4909,"name":"Asset","nameLocations":["2934:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"2934:5:27"},"referencedDeclaration":4654,"src":"2934:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"}},"id":4911,"nodeType":"ArrayTypeName","src":"2934:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_storage_$dyn_storage_ptr","typeString":"struct Asset[]"}},"visibility":"internal"}],"id":4919,"initialValue":{"arguments":[{"id":4917,"name":"assetCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"2970:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2958:11:27","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Asset_$4654_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Asset memory[] memory)"},"typeName":{"baseType":{"id":4914,"nodeType":"UserDefinedTypeName","pathNode":{"id":4913,"name":"Asset","nameLocations":["2962:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"2962:5:27"},"referencedDeclaration":4654,"src":"2962:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"}},"id":4915,"nodeType":"ArrayTypeName","src":"2962:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_storage_$dyn_storage_ptr","typeString":"struct Asset[]"}}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2958:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_memory_ptr_$dyn_memory_ptr","typeString":"struct Asset memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2934:47:27"},{"assignments":[4924],"declarations":[{"constant":false,"id":4924,"mutability":"mutable","name":"investmentAmounts","nameLocation":"3009:17:27","nodeType":"VariableDeclaration","scope":4992,"src":"2992:34:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4922,"name":"uint256","nodeType":"ElementaryTypeName","src":"2992:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4923,"nodeType":"ArrayTypeName","src":"2992:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4930,"initialValue":{"arguments":[{"id":4928,"name":"assetCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"3043:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3029:13:27","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4925,"name":"uint256","nodeType":"ElementaryTypeName","src":"3033:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4926,"nodeType":"ArrayTypeName","src":"3033:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3029:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2992:62:27"},{"assignments":[4935],"declarations":[{"constant":false,"id":4935,"mutability":"mutable","name":"investorCounts","nameLocation":"3082:14:27","nodeType":"VariableDeclaration","scope":4992,"src":"3065:31:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4933,"name":"uint256","nodeType":"ElementaryTypeName","src":"3065:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4934,"nodeType":"ArrayTypeName","src":"3065:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4941,"initialValue":{"arguments":[{"id":4939,"name":"assetCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"3113:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3099:13:27","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4936,"name":"uint256","nodeType":"ElementaryTypeName","src":"3103:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4937,"nodeType":"ArrayTypeName","src":"3103:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3099:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3065:59:27"},{"body":{"id":4985,"nodeType":"Block","src":"3178:230:27","statements":[{"expression":{"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4952,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"3193:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_memory_ptr_$dyn_memory_ptr","typeString":"struct Asset memory[] memory"}},"id":4954,"indexExpression":{"id":4953,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"3200:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3193:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":4957,"name":"assetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"3226:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4959,"indexExpression":{"id":4958,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"3235:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3226:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4955,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"3205:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3217:8:27","memberName":"getAsset","nodeType":"MemberAccess","referencedDeclaration":6655,"src":"3205:20:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_Asset_$4654_memory_ptr_$","typeString":"function (uint256) view external returns (struct Asset memory)"}},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3205:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"src":"3193:45:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":4962,"nodeType":"ExpressionStatement","src":"3193:45:27"},{"expression":{"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4963,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"3253:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4965,"indexExpression":{"id":4964,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"3271:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3253:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":4968,"name":"assetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"3307:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4970,"indexExpression":{"id":4969,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"3316:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3307:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4966,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"3276:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3288:18:27","memberName":"getTotalInvestment","nodeType":"MemberAccess","referencedDeclaration":6855,"src":"3276:30:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3276:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3253:66:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4973,"nodeType":"ExpressionStatement","src":"3253:66:27"},{"expression":{"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4974,"name":"investorCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"3334:14:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4976,"indexExpression":{"id":4975,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"3349:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3334:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":4979,"name":"assetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"3384:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4981,"indexExpression":{"id":4980,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"3393:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3384:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4977,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"3354:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3366:17:27","memberName":"getTotalInvestors","nodeType":"MemberAccess","referencedDeclaration":6867,"src":"3354:29:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3354:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3334:62:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4984,"nodeType":"ExpressionStatement","src":"3334:62:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4946,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"3157:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4947,"name":"assetCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"3161:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3157:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4986,"initializationExpression":{"assignments":[4943],"declarations":[{"constant":false,"id":4943,"mutability":"mutable","name":"i","nameLocation":"3150:1:27","nodeType":"VariableDeclaration","scope":4986,"src":"3142:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4942,"name":"uint256","nodeType":"ElementaryTypeName","src":"3142:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4945,"initialValue":{"hexValue":"30","id":4944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3154:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3142:13:27"},"loopExpression":{"expression":{"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3173:3:27","subExpression":{"id":4949,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"3173:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4951,"nodeType":"ExpressionStatement","src":"3173:3:27"},"nodeType":"ForStatement","src":"3137:271:27"},{"expression":{"components":[{"id":4987,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"3428:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_memory_ptr_$dyn_memory_ptr","typeString":"struct Asset memory[] memory"}},{"id":4988,"name":"investmentAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"3436:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4989,"name":"investorCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"3455:14:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4990,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3427:43:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_struct$_Asset_$4654_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(struct Asset memory[] memory,uint256[] memory,uint256[] memory)"}},"functionReturnParameters":4843,"id":4991,"nodeType":"Return","src":"3420:50:27"}]},"functionSelector":"38031123","id":4993,"implemented":true,"kind":"function","modifiers":[],"name":"getAllAssets","nameLocation":"2208:12:27","nodeType":"FunctionDefinition","parameters":{"id":4832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4831,"mutability":"mutable","name":"status","nameLocation":"2245:6:27","nodeType":"VariableDeclaration","scope":4993,"src":"2231:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"},"typeName":{"id":4830,"nodeType":"UserDefinedTypeName","pathNode":{"id":4829,"name":"ProjectStatus","nameLocations":["2231:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":4592,"src":"2231:13:27"},"referencedDeclaration":4592,"src":"2231:13:27","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"}},"visibility":"internal"}],"src":"2220:38:27"},"returnParameters":{"id":4843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4993,"src":"2280:14:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_memory_ptr_$dyn_memory_ptr","typeString":"struct Asset[]"},"typeName":{"baseType":{"id":4834,"nodeType":"UserDefinedTypeName","pathNode":{"id":4833,"name":"Asset","nameLocations":["2280:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"2280:5:27"},"referencedDeclaration":4654,"src":"2280:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"}},"id":4835,"nodeType":"ArrayTypeName","src":"2280:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_storage_$dyn_storage_ptr","typeString":"struct Asset[]"}},"visibility":"internal"},{"constant":false,"id":4839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4993,"src":"2296:16:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4837,"name":"uint256","nodeType":"ElementaryTypeName","src":"2296:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4838,"nodeType":"ArrayTypeName","src":"2296:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4993,"src":"2314:16:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4840,"name":"uint256","nodeType":"ElementaryTypeName","src":"2314:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4841,"nodeType":"ArrayTypeName","src":"2314:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2279:52:27"},"scope":5346,"src":"2199:1279:27","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5177,"nodeType":"Block","src":"3621:1439:27","statements":[{"assignments":[5010],"declarations":[{"constant":false,"id":5010,"mutability":"mutable","name":"allAssetIds","nameLocation":"3649:11:27","nodeType":"VariableDeclaration","scope":5177,"src":"3632:28:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5008,"name":"uint256","nodeType":"ElementaryTypeName","src":"3632:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5009,"nodeType":"ArrayTypeName","src":"3632:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5011,"nodeType":"VariableDeclarationStatement","src":"3632:28:27"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5012,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"3677:6:27","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5013,"name":"ProjectStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"3687:13:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProjectStatus_$4592_$","typeString":"type(enum ProjectStatus)"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3701:7:27","memberName":"Started","nodeType":"MemberAccess","referencedDeclaration":4588,"src":"3687:21:27","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"}},"src":"3677:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5023,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"3790:6:27","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5024,"name":"ProjectStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"3800:13:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProjectStatus_$4592_$","typeString":"type(enum ProjectStatus)"}},"id":5025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3814:6:27","memberName":"Funded","nodeType":"MemberAccess","referencedDeclaration":4589,"src":"3800:20:27","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"}},"src":"3790:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5034,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"3902:6:27","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5035,"name":"ProjectStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"3912:13:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProjectStatus_$4592_$","typeString":"type(enum ProjectStatus)"}},"id":5036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3926:6:27","memberName":"Failed","nodeType":"MemberAccess","referencedDeclaration":4590,"src":"3912:20:27","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"}},"src":"3902:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5045,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"4014:6:27","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5046,"name":"ProjectStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"4024:13:27","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProjectStatus_$4592_$","typeString":"type(enum ProjectStatus)"}},"id":5047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4038:9:27","memberName":"Completed","nodeType":"MemberAccess","referencedDeclaration":4591,"src":"4024:23:27","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"}},"src":"4014:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5060,"nodeType":"Block","src":"4128:51:27","statements":[{"expression":{"arguments":[{"hexValue":"496e76616c696420737461747573","id":5057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4150:16:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857","typeString":"literal_string \"Invalid status\""},"value":"Invalid status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857","typeString":"literal_string \"Invalid status\""}],"id":5056,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"4143:6:27","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4143:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5059,"nodeType":"ExpressionStatement","src":"4143:24:27"}]},"id":5061,"nodeType":"IfStatement","src":"4010:169:27","trueBody":{"id":5055,"nodeType":"Block","src":"4049:73:27","statements":[{"expression":{"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5049,"name":"allAssetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"4064:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5050,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"4078:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4090:18:27","memberName":"getCompletedAssets","nodeType":"MemberAccess","referencedDeclaration":7140,"src":"4078:30:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view external returns (uint256[] memory)"}},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4078:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"4064:46:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5054,"nodeType":"ExpressionStatement","src":"4064:46:27"}]}},"id":5062,"nodeType":"IfStatement","src":"3898:281:27","trueBody":{"id":5044,"nodeType":"Block","src":"3934:70:27","statements":[{"expression":{"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5038,"name":"allAssetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"3949:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5039,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"3963:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3975:15:27","memberName":"getFailedAssets","nodeType":"MemberAccess","referencedDeclaration":7131,"src":"3963:27:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view external returns (uint256[] memory)"}},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3963:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"3949:43:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5043,"nodeType":"ExpressionStatement","src":"3949:43:27"}]}},"id":5063,"nodeType":"IfStatement","src":"3786:393:27","trueBody":{"id":5033,"nodeType":"Block","src":"3822:70:27","statements":[{"expression":{"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5027,"name":"allAssetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"3837:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5028,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"3851:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3863:15:27","memberName":"getFundedAssets","nodeType":"MemberAccess","referencedDeclaration":7122,"src":"3851:27:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view external returns (uint256[] memory)"}},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"3837:43:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5032,"nodeType":"ExpressionStatement","src":"3837:43:27"}]}},"id":5064,"nodeType":"IfStatement","src":"3673:506:27","trueBody":{"id":5022,"nodeType":"Block","src":"3710:70:27","statements":[{"expression":{"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5016,"name":"allAssetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"3725:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5017,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"3739:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3751:15:27","memberName":"getActiveAssets","nodeType":"MemberAccess","referencedDeclaration":7113,"src":"3739:27:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view external returns (uint256[] memory)"}},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"3725:43:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5021,"nodeType":"ExpressionStatement","src":"3725:43:27"}]}},{"assignments":[5069],"declarations":[{"constant":false,"id":5069,"mutability":"mutable","name":"categoryAssetIds","nameLocation":"4208:16:27","nodeType":"VariableDeclaration","scope":5177,"src":"4191:33:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5067,"name":"uint256","nodeType":"ElementaryTypeName","src":"4191:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5068,"nodeType":"ArrayTypeName","src":"4191:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5074,"initialValue":{"arguments":[{"id":5072,"name":"category","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"4273:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Category_$4598","typeString":"enum Category"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Category_$4598","typeString":"enum Category"}],"expression":{"id":5070,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"4227:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4239:19:27","memberName":"getAssetsByCategory","nodeType":"MemberAccess","referencedDeclaration":7154,"src":"4227:31:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_enum$_Category_$4598_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (enum Category) view external returns (uint256[] memory)"}},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4227:65:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4191:101:27"},{"assignments":[5079],"declarations":[{"constant":false,"id":5079,"mutability":"mutable","name":"assetIds","nameLocation":"4320:8:27","nodeType":"VariableDeclaration","scope":5177,"src":"4303:25:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5077,"name":"uint256","nodeType":"ElementaryTypeName","src":"4303:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5078,"nodeType":"ArrayTypeName","src":"4303:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5086,"initialValue":{"arguments":[{"expression":{"id":5083,"name":"categoryAssetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"4345:16:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4362:6:27","memberName":"length","nodeType":"MemberAccess","src":"4345:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4331:13:27","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":5080,"name":"uint256","nodeType":"ElementaryTypeName","src":"4335:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5081,"nodeType":"ArrayTypeName","src":"4335:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4331:38:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4303:66:27"},{"assignments":[5088],"declarations":[{"constant":false,"id":5088,"mutability":"mutable","name":"count","nameLocation":"4388:5:27","nodeType":"VariableDeclaration","scope":5177,"src":"4380:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5087,"name":"uint256","nodeType":"ElementaryTypeName","src":"4380:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5090,"initialValue":{"hexValue":"30","id":5089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4380:17:27"},{"body":{"id":5110,"nodeType":"Block","src":"4459:55:27","statements":[{"expression":{"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5102,"name":"assetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"4474:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5104,"indexExpression":{"id":5103,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"4483:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4474:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5105,"name":"allAssetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"4488:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5107,"indexExpression":{"id":5106,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"4500:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4488:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4474:28:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5109,"nodeType":"ExpressionStatement","src":"4474:28:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5095,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"4430:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5096,"name":"allAssetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"4434:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4446:6:27","memberName":"length","nodeType":"MemberAccess","src":"4434:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4430:22:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5111,"initializationExpression":{"assignments":[5092],"declarations":[{"constant":false,"id":5092,"mutability":"mutable","name":"i","nameLocation":"4423:1:27","nodeType":"VariableDeclaration","scope":5111,"src":"4415:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5091,"name":"uint256","nodeType":"ElementaryTypeName","src":"4415:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5094,"initialValue":{"hexValue":"30","id":5093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4427:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4415:13:27"},"loopExpression":{"expression":{"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4454:3:27","subExpression":{"id":5099,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"4454:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5101,"nodeType":"ExpressionStatement","src":"4454:3:27"},"nodeType":"ForStatement","src":"4410:104:27"},{"assignments":[5116],"declarations":[{"constant":false,"id":5116,"mutability":"mutable","name":"filteredAssets","nameLocation":"4541:14:27","nodeType":"VariableDeclaration","scope":5177,"src":"4526:29:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_memory_ptr_$dyn_memory_ptr","typeString":"struct Asset[]"},"typeName":{"baseType":{"id":5114,"nodeType":"UserDefinedTypeName","pathNode":{"id":5113,"name":"Asset","nameLocations":["4526:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"4526:5:27"},"referencedDeclaration":4654,"src":"4526:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"}},"id":5115,"nodeType":"ArrayTypeName","src":"4526:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_storage_$dyn_storage_ptr","typeString":"struct Asset[]"}},"visibility":"internal"}],"id":5124,"initialValue":{"arguments":[{"expression":{"id":5121,"name":"categoryAssetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"4570:16:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4587:6:27","memberName":"length","nodeType":"MemberAccess","src":"4570:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4558:11:27","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Asset_$4654_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Asset memory[] memory)"},"typeName":{"baseType":{"id":5118,"nodeType":"UserDefinedTypeName","pathNode":{"id":5117,"name":"Asset","nameLocations":["4562:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"4562:5:27"},"referencedDeclaration":4654,"src":"4562:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"}},"id":5119,"nodeType":"ArrayTypeName","src":"4562:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_storage_$dyn_storage_ptr","typeString":"struct Asset[]"}}},"id":5123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4558:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_memory_ptr_$dyn_memory_ptr","typeString":"struct Asset memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4526:68:27"},{"body":{"id":5173,"nodeType":"Block","src":"4659:360:27","statements":[{"body":{"id":5171,"nodeType":"Block","src":"4720:288:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5147,"name":"categoryAssetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"4743:16:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5149,"indexExpression":{"id":5148,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"4760:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4743:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":5150,"name":"assetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"4766:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5152,"indexExpression":{"id":5151,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"4775:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4766:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4743:34:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5170,"nodeType":"IfStatement","src":"4739:254:27","trueBody":{"id":5169,"nodeType":"Block","src":"4779:214:27","statements":[{"expression":{"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5154,"name":"filteredAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"4802:14:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_memory_ptr_$dyn_memory_ptr","typeString":"struct Asset memory[] memory"}},"id":5156,"indexExpression":{"id":5155,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"4817:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4802:21:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":5159,"name":"categoryAssetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"4873:16:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5161,"indexExpression":{"id":5160,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"4890:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4873:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5157,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"4826:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4838:8:27","memberName":"getAsset","nodeType":"MemberAccess","referencedDeclaration":6655,"src":"4826:20:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_Asset_$4654_memory_ptr_$","typeString":"function (uint256) view external returns (struct Asset memory)"}},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4826:89:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"src":"4802:113:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":5164,"nodeType":"ExpressionStatement","src":"4802:113:27"},{"expression":{"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4938:7:27","subExpression":{"id":5165,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"4938:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5167,"nodeType":"ExpressionStatement","src":"4938:7:27"},{"id":5168,"nodeType":"Break","src":"4968:5:27"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5140,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"4694:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5141,"name":"assetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"4698:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4707:6:27","memberName":"length","nodeType":"MemberAccess","src":"4698:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4694:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5172,"initializationExpression":{"assignments":[5137],"declarations":[{"constant":false,"id":5137,"mutability":"mutable","name":"j","nameLocation":"4687:1:27","nodeType":"VariableDeclaration","scope":5172,"src":"4679:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5136,"name":"uint256","nodeType":"ElementaryTypeName","src":"4679:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5139,"initialValue":{"hexValue":"30","id":5138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4691:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4679:13:27"},"loopExpression":{"expression":{"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4715:3:27","subExpression":{"id":5144,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"4715:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5146,"nodeType":"ExpressionStatement","src":"4715:3:27"},"nodeType":"ForStatement","src":"4674:334:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5129,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"4625:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5130,"name":"categoryAssetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"4629:16:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4646:6:27","memberName":"length","nodeType":"MemberAccess","src":"4629:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4625:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5174,"initializationExpression":{"assignments":[5126],"declarations":[{"constant":false,"id":5126,"mutability":"mutable","name":"i","nameLocation":"4618:1:27","nodeType":"VariableDeclaration","scope":5174,"src":"4610:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5125,"name":"uint256","nodeType":"ElementaryTypeName","src":"4610:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5128,"initialValue":{"hexValue":"30","id":5127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4622:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4610:13:27"},"loopExpression":{"expression":{"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4654:3:27","subExpression":{"id":5133,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"4654:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5135,"nodeType":"ExpressionStatement","src":"4654:3:27"},"nodeType":"ForStatement","src":"4605:414:27"},{"expression":{"id":5175,"name":"filteredAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"5038:14:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_memory_ptr_$dyn_memory_ptr","typeString":"struct Asset memory[] memory"}},"functionReturnParameters":5005,"id":5176,"nodeType":"Return","src":"5031:21:27"}]},"functionSelector":"4663a28c","id":5178,"implemented":true,"kind":"function","modifiers":[],"name":"getAllAssetsByCategory","nameLocation":"3495:22:27","nodeType":"FunctionDefinition","parameters":{"id":5000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4996,"mutability":"mutable","name":"status","nameLocation":"3542:6:27","nodeType":"VariableDeclaration","scope":5178,"src":"3528:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"},"typeName":{"id":4995,"nodeType":"UserDefinedTypeName","pathNode":{"id":4994,"name":"ProjectStatus","nameLocations":["3528:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":4592,"src":"3528:13:27"},"referencedDeclaration":4592,"src":"3528:13:27","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"}},"visibility":"internal"},{"constant":false,"id":4999,"mutability":"mutable","name":"category","nameLocation":"3568:8:27","nodeType":"VariableDeclaration","scope":5178,"src":"3559:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Category_$4598","typeString":"enum Category"},"typeName":{"id":4998,"nodeType":"UserDefinedTypeName","pathNode":{"id":4997,"name":"Category","nameLocations":["3559:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":4598,"src":"3559:8:27"},"referencedDeclaration":4598,"src":"3559:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Category_$4598","typeString":"enum Category"}},"visibility":"internal"}],"src":"3517:66:27"},"returnParameters":{"id":5005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5178,"src":"3605:14:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_memory_ptr_$dyn_memory_ptr","typeString":"struct Asset[]"},"typeName":{"baseType":{"id":5002,"nodeType":"UserDefinedTypeName","pathNode":{"id":5001,"name":"Asset","nameLocations":["3605:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"3605:5:27"},"referencedDeclaration":4654,"src":"3605:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"}},"id":5003,"nodeType":"ArrayTypeName","src":"3605:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_storage_$dyn_storage_ptr","typeString":"struct Asset[]"}},"visibility":"internal"}],"src":"3604:16:27"},"scope":5346,"src":"3486:1574:27","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5191,"nodeType":"Block","src":"5142:55:27","statements":[{"expression":{"arguments":[{"id":5188,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"5181:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5186,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"5160:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5172:8:27","memberName":"getAsset","nodeType":"MemberAccess","referencedDeclaration":6655,"src":"5160:20:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_Asset_$4654_memory_ptr_$","typeString":"function (uint256) view external returns (struct Asset memory)"}},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"functionReturnParameters":5185,"id":5190,"nodeType":"Return","src":"5153:36:27"}]},"functionSelector":"b3e444a7","id":5192,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetById","nameLocation":"5077:12:27","nodeType":"FunctionDefinition","parameters":{"id":5181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5180,"mutability":"mutable","name":"assetId","nameLocation":"5098:7:27","nodeType":"VariableDeclaration","scope":5192,"src":"5090:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5179,"name":"uint256","nodeType":"ElementaryTypeName","src":"5090:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5089:17:27"},"returnParameters":{"id":5185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5192,"src":"5128:12:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset"},"typeName":{"id":5183,"nodeType":"UserDefinedTypeName","pathNode":{"id":5182,"name":"Asset","nameLocations":["5128:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"5128:5:27"},"referencedDeclaration":4654,"src":"5128:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"}},"visibility":"internal"}],"src":"5127:14:27"},"scope":5346,"src":"5068:129:27","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5253,"nodeType":"Block","src":"5299:338:27","statements":[{"assignments":[5205],"declarations":[{"constant":false,"id":5205,"mutability":"mutable","name":"assetIds","nameLocation":"5327:8:27","nodeType":"VariableDeclaration","scope":5253,"src":"5310:25:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5203,"name":"uint256","nodeType":"ElementaryTypeName","src":"5310:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5204,"nodeType":"ArrayTypeName","src":"5310:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5210,"initialValue":{"arguments":[{"id":5208,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"5367:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5206,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"5338:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5350:16:27","memberName":"getAssetsOfOwner","nodeType":"MemberAccess","referencedDeclaration":6698,"src":"5338:28:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) view external returns (uint256[] memory)"}},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5338:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5310:63:27"},{"assignments":[5212],"declarations":[{"constant":false,"id":5212,"mutability":"mutable","name":"assetCount","nameLocation":"5392:10:27","nodeType":"VariableDeclaration","scope":5253,"src":"5384:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5211,"name":"uint256","nodeType":"ElementaryTypeName","src":"5384:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5215,"initialValue":{"expression":{"id":5213,"name":"assetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"5405:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5414:6:27","memberName":"length","nodeType":"MemberAccess","src":"5405:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5384:36:27"},{"assignments":[5220],"declarations":[{"constant":false,"id":5220,"mutability":"mutable","name":"assets","nameLocation":"5446:6:27","nodeType":"VariableDeclaration","scope":5253,"src":"5431:21:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_memory_ptr_$dyn_memory_ptr","typeString":"struct Asset[]"},"typeName":{"baseType":{"id":5218,"nodeType":"UserDefinedTypeName","pathNode":{"id":5217,"name":"Asset","nameLocations":["5431:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"5431:5:27"},"referencedDeclaration":4654,"src":"5431:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"}},"id":5219,"nodeType":"ArrayTypeName","src":"5431:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_storage_$dyn_storage_ptr","typeString":"struct Asset[]"}},"visibility":"internal"}],"id":5227,"initialValue":{"arguments":[{"id":5225,"name":"assetCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"5467:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5455:11:27","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Asset_$4654_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Asset memory[] memory)"},"typeName":{"baseType":{"id":5222,"nodeType":"UserDefinedTypeName","pathNode":{"id":5221,"name":"Asset","nameLocations":["5459:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"5459:5:27"},"referencedDeclaration":4654,"src":"5459:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"}},"id":5223,"nodeType":"ArrayTypeName","src":"5459:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_storage_$dyn_storage_ptr","typeString":"struct Asset[]"}}},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5455:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_memory_ptr_$dyn_memory_ptr","typeString":"struct Asset memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5431:47:27"},{"body":{"id":5249,"nodeType":"Block","src":"5532:72:27","statements":[{"expression":{"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5238,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5220,"src":"5547:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_memory_ptr_$dyn_memory_ptr","typeString":"struct Asset memory[] memory"}},"id":5240,"indexExpression":{"id":5239,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"5554:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5547:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":5243,"name":"assetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"5580:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5245,"indexExpression":{"id":5244,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"5589:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5580:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5241,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"5559:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5571:8:27","memberName":"getAsset","nodeType":"MemberAccess","referencedDeclaration":6655,"src":"5559:20:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_Asset_$4654_memory_ptr_$","typeString":"function (uint256) view external returns (struct Asset memory)"}},"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5559:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"src":"5547:45:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":5248,"nodeType":"ExpressionStatement","src":"5547:45:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5232,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"5511:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5233,"name":"assetCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"5515:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5511:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5250,"initializationExpression":{"assignments":[5229],"declarations":[{"constant":false,"id":5229,"mutability":"mutable","name":"i","nameLocation":"5504:1:27","nodeType":"VariableDeclaration","scope":5250,"src":"5496:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5228,"name":"uint256","nodeType":"ElementaryTypeName","src":"5496:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5231,"initialValue":{"hexValue":"30","id":5230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5508:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5496:13:27"},"loopExpression":{"expression":{"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5527:3:27","subExpression":{"id":5235,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"5527:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5237,"nodeType":"ExpressionStatement","src":"5527:3:27"},"nodeType":"ForStatement","src":"5491:113:27"},{"expression":{"id":5251,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5220,"src":"5623:6:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_memory_ptr_$dyn_memory_ptr","typeString":"struct Asset memory[] memory"}},"functionReturnParameters":5200,"id":5252,"nodeType":"Return","src":"5616:13:27"}]},"functionSelector":"f3ab880e","id":5254,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetsOfOwner","nameLocation":"5214:16:27","nodeType":"FunctionDefinition","parameters":{"id":5195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5194,"mutability":"mutable","name":"owner","nameLocation":"5249:5:27","nodeType":"VariableDeclaration","scope":5254,"src":"5241:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5193,"name":"address","nodeType":"ElementaryTypeName","src":"5241:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5230:31:27"},"returnParameters":{"id":5200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5254,"src":"5283:14:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_memory_ptr_$dyn_memory_ptr","typeString":"struct Asset[]"},"typeName":{"baseType":{"id":5197,"nodeType":"UserDefinedTypeName","pathNode":{"id":5196,"name":"Asset","nameLocations":["5283:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"5283:5:27"},"referencedDeclaration":4654,"src":"5283:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"}},"id":5198,"nodeType":"ArrayTypeName","src":"5283:7:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Asset_$4654_storage_$dyn_storage_ptr","typeString":"struct Asset[]"}},"visibility":"internal"}],"src":"5282:16:27"},"scope":5346,"src":"5205:432:27","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5344,"nodeType":"Block","src":"5818:689:27","statements":[{"expression":{"arguments":[{"arguments":[{"id":5269,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"5856:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5267,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"5837:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5849:6:27","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":6553,"src":"5837:18:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view external returns (bool)"}},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5837:27:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417373657420646f6573206e6f74206578697374","id":5271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5866:22:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_48805f8fa767ef4f6e13e9d1c424df0337974c3d4b0946f6cb5fcbae9385469f","typeString":"literal_string \"Asset does not exist\""},"value":"Asset does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48805f8fa767ef4f6e13e9d1c424df0337974c3d4b0946f6cb5fcbae9385469f","typeString":"literal_string \"Asset does not exist\""}],"id":5266,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5829:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:60:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5273,"nodeType":"ExpressionStatement","src":"5829:60:27"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":5277,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5952:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5956:6:27","memberName":"sender","nodeType":"MemberAccess","src":"5952:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5279,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"5964:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5275,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"5922:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5934:17:27","memberName":"isApprovedOrOwner","nodeType":"MemberAccess","referencedDeclaration":6587,"src":"5922:29:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view external returns (bool)"}},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5922:50:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617070726f766564206f72206f776e6572","id":5281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5987:23:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad20eef44259fa6674c5f709e0d445a5dcdc0d9709a319199d5f79829ad1ca58","typeString":"literal_string \"Not approved or owner\""},"value":"Not approved or owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad20eef44259fa6674c5f709e0d445a5dcdc0d9709a319199d5f79829ad1ca58","typeString":"literal_string \"Not approved or owner\""}],"id":5274,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5900:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5900:121:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5283,"nodeType":"ExpressionStatement","src":"5900:121:27"},{"assignments":[5286],"declarations":[{"constant":false,"id":5286,"mutability":"mutable","name":"asset","nameLocation":"6047:5:27","nodeType":"VariableDeclaration","scope":5344,"src":"6034:18:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset"},"typeName":{"id":5285,"nodeType":"UserDefinedTypeName","pathNode":{"id":5284,"name":"Asset","nameLocations":["6034:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"6034:5:27"},"referencedDeclaration":4654,"src":"6034:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"}},"visibility":"internal"}],"id":5291,"initialValue":{"arguments":[{"id":5289,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"6076:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5287,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"6055:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6067:8:27","memberName":"getAsset","nodeType":"MemberAccess","referencedDeclaration":6655,"src":"6055:20:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_Asset_$4654_memory_ptr_$","typeString":"function (uint256) view external returns (struct Asset memory)"}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6055:29:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"nodeType":"VariableDeclarationStatement","src":"6034:50:27"},{"expression":{"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5292,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"6097:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":5294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6103:9:27","memberName":"mainPhoto","nodeType":"MemberAccess","referencedDeclaration":4647,"src":"6097:15:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5297,"name":"mainPhoto","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"6121:9:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6115:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5295,"name":"bytes","nodeType":"ElementaryTypeName","src":"6115:5:27","typeDescriptions":{}}},"id":5298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6115:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6132:6:27","memberName":"length","nodeType":"MemberAccess","src":"6115:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6141:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6115:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":5303,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"6183:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":5304,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6189:9:27","memberName":"mainPhoto","nodeType":"MemberAccess","referencedDeclaration":4647,"src":"6183:15:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6115:83:27","trueExpression":{"id":5302,"name":"mainPhoto","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"6158:9:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"6097:101:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":5307,"nodeType":"ExpressionStatement","src":"6097:101:27"},{"expression":{"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5308,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"6209:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":5310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6215:15:27","memberName":"secondaryPhotos","nodeType":"MemberAccess","referencedDeclaration":4650,"src":"6209:21:27","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5311,"name":"secondaryPhotos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"6233:15:27","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6249:6:27","memberName":"length","nodeType":"MemberAccess","src":"6233:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6258:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6233:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":5316,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"6306:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":5317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6312:15:27","memberName":"secondaryPhotos","nodeType":"MemberAccess","referencedDeclaration":4650,"src":"6306:21:27","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6233:94:27","trueExpression":{"id":5315,"name":"secondaryPhotos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"6275:15:27","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"6209:118:27","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":5320,"nodeType":"ExpressionStatement","src":"6209:118:27"},{"expression":{"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5321,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"6338:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":5323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6344:11:27","memberName":"description","nodeType":"MemberAccess","referencedDeclaration":4632,"src":"6338:17:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5326,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"6364:11:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5324,"name":"bytes","nodeType":"ElementaryTypeName","src":"6358:5:27","typeDescriptions":{}}},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6377:6:27","memberName":"length","nodeType":"MemberAccess","src":"6358:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6386:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6358:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":5332,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"6430:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":5333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6436:11:27","memberName":"description","nodeType":"MemberAccess","referencedDeclaration":4632,"src":"6430:17:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6358:89:27","trueExpression":{"id":5331,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"6403:11:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"6338:109:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":5336,"nodeType":"ExpressionStatement","src":"6338:109:27"},{"expression":{"arguments":[{"id":5340,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"6484:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5341,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"6493:5:27","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}],"expression":{"id":5337,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"6460:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6472:11:27","memberName":"updateAsset","nodeType":"MemberAccess","referencedDeclaration":6670,"src":"6460:23:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_struct$_Asset_$4654_memory_ptr_$returns$__$","typeString":"function (uint256,struct Asset memory) external"}},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6460:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5343,"nodeType":"ExpressionStatement","src":"6460:39:27"}]},"functionSelector":"5563633d","id":5345,"implemented":true,"kind":"function","modifiers":[],"name":"updateAsset","nameLocation":"5654:11:27","nodeType":"FunctionDefinition","parameters":{"id":5264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5256,"mutability":"mutable","name":"assetId","nameLocation":"5684:7:27","nodeType":"VariableDeclaration","scope":5345,"src":"5676:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5255,"name":"uint256","nodeType":"ElementaryTypeName","src":"5676:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5258,"mutability":"mutable","name":"mainPhoto","nameLocation":"5716:9:27","nodeType":"VariableDeclaration","scope":5345,"src":"5702:23:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5257,"name":"string","nodeType":"ElementaryTypeName","src":"5702:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5261,"mutability":"mutable","name":"secondaryPhotos","nameLocation":"5752:15:27","nodeType":"VariableDeclaration","scope":5345,"src":"5736:31:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":5259,"name":"string","nodeType":"ElementaryTypeName","src":"5736:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":5260,"nodeType":"ArrayTypeName","src":"5736:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":5263,"mutability":"mutable","name":"description","nameLocation":"5792:11:27","nodeType":"VariableDeclaration","scope":5345,"src":"5778:25:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5262,"name":"string","nodeType":"ElementaryTypeName","src":"5778:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5665:145:27"},"returnParameters":{"id":5265,"nodeType":"ParameterList","parameters":[],"src":"5818:0:27"},"scope":5346,"src":"5645:862:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":5347,"src":"129:6381:27","usedErrors":[]}],"src":"33:6479:27"},"id":27},"contracts/FCTVToken.sol":{"ast":{"absolutePath":"contracts/FCTVToken.sol","exportedSymbols":{"Address":[4011],"Context":[4034],"ERC1155":[1234],"ERC1155Burnable":[1466],"ERC165":[4261],"FCTVToken":[5498],"IERC1155":[1356],"IERC1155MetadataURI":[1481],"IERC1155Receiver":[1397],"IERC165":[4273],"Ownable":[109]},"id":5499,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5348,"literals":["solidity",">=","0.8",".0","<=","0.8",".19"],"nodeType":"PragmaDirective","src":"32:33:28"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":5349,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5499,"sourceUnit":1235,"src":"67:59:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","file":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","id":5350,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5499,"sourceUnit":1467,"src":"127:78:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5351,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5499,"sourceUnit":110,"src":"206:52:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5352,"name":"ERC1155","nameLocations":["282:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":1234,"src":"282:7:28"},"id":5353,"nodeType":"InheritanceSpecifier","src":"282:7:28"},{"baseName":{"id":5354,"name":"ERC1155Burnable","nameLocations":["291:15:28"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"291:15:28"},"id":5355,"nodeType":"InheritanceSpecifier","src":"291:15:28"},{"baseName":{"id":5356,"name":"Ownable","nameLocations":["308:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":109,"src":"308:7:28"},"id":5357,"nodeType":"InheritanceSpecifier","src":"308:7:28"}],"canonicalName":"FCTVToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5498,"linearizedBaseContracts":[5498,109,1466,1234,1481,1356,4261,4273,4034],"name":"FCTVToken","nameLocation":"269:9:28","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"06fdde03","id":5359,"mutability":"mutable","name":"name","nameLocation":"336:4:28","nodeType":"VariableDeclaration","scope":5498,"src":"322:18:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":5358,"name":"string","nodeType":"ElementaryTypeName","src":"322:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"95d89b41","id":5361,"mutability":"mutable","name":"symbol","nameLocation":"360:6:28","nodeType":"VariableDeclaration","scope":5498,"src":"346:20:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":5360,"name":"string","nodeType":"ElementaryTypeName","src":"346:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"id":5365,"mutability":"mutable","name":"_tokenURIs","nameLocation":"407:10:28","nodeType":"VariableDeclaration","scope":5498,"src":"372:45:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":5364,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5362,"name":"uint256","nodeType":"ElementaryTypeName","src":"380:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"372:26:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5363,"name":"string","nodeType":"ElementaryTypeName","src":"391:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"body":{"id":5381,"nodeType":"Block","src":"476:73:28","statements":[{"expression":{"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5373,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"486:4:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4672616374696f6e616c2043545620546f6b656e73","id":5374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"493:23:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_4d0d39c8de024ad66bab717955e973b287f556043c5c7ea379a909c55aa313e7","typeString":"literal_string \"Fractional CTV Tokens\""},"value":"Fractional CTV Tokens"},"src":"486:30:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5376,"nodeType":"ExpressionStatement","src":"486:30:28"},{"expression":{"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5377,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"526:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4643545654","id":5378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"535:7:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_1f0f420f0e79504673fe32913038f272b37aabec02e5c246ae52ea85de40ffe4","typeString":"literal_string \"FCTVT\""},"value":"FCTVT"},"src":"526:16:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5380,"nodeType":"ExpressionStatement","src":"526:16:28"}]},"id":5382,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":5370,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"467:7:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":5371,"kind":"baseConstructorSpecifier","modifierName":{"id":5369,"name":"ERC1155","nameLocations":["459:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":1234,"src":"459:7:28"},"nodeType":"ModifierInvocation","src":"459:16:28"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5367,"mutability":"mutable","name":"baseURI","nameLocation":"450:7:28","nodeType":"VariableDeclaration","scope":5382,"src":"436:21:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5366,"name":"string","nodeType":"ElementaryTypeName","src":"436:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"435:23:28"},"returnParameters":{"id":5372,"nodeType":"ParameterList","parameters":[],"src":"476:0:28"},"scope":5498,"src":"424:125:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5397,"nodeType":"Block","src":"629:47:28","statements":[{"expression":{"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5391,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"639:10:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":5393,"indexExpression":{"id":5392,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"650:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"639:19:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5394,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"661:8:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"639:30:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5396,"nodeType":"ExpressionStatement","src":"639:30:28"}]},"functionSelector":"862440e2","id":5398,"implemented":true,"kind":"function","modifiers":[{"id":5389,"kind":"modifierInvocation","modifierName":{"id":5388,"name":"onlyOwner","nameLocations":["619:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"619:9:28"},"nodeType":"ModifierInvocation","src":"619:9:28"}],"name":"setURI","nameLocation":"564:6:28","nodeType":"FunctionDefinition","parameters":{"id":5387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5384,"mutability":"mutable","name":"tokenId","nameLocation":"579:7:28","nodeType":"VariableDeclaration","scope":5398,"src":"571:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5383,"name":"uint256","nodeType":"ElementaryTypeName","src":"571:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5386,"mutability":"mutable","name":"tokenURI","nameLocation":"602:8:28","nodeType":"VariableDeclaration","scope":5398,"src":"588:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5385,"name":"string","nodeType":"ElementaryTypeName","src":"588:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"570:41:28"},"returnParameters":{"id":5390,"nodeType":"ParameterList","parameters":[],"src":"629:0:28"},"scope":5498,"src":"555:121:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[289],"body":{"id":5410,"nodeType":"Block","src":"757:43:28","statements":[{"expression":{"baseExpression":{"id":5406,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"774:10:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":5408,"indexExpression":{"id":5407,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"785:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"774:19:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":5405,"id":5409,"nodeType":"Return","src":"767:26:28"}]},"functionSelector":"0e89341c","id":5411,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"691:3:28","nodeType":"FunctionDefinition","overrides":{"id":5402,"nodeType":"OverrideSpecifier","overrides":[],"src":"724:8:28"},"parameters":{"id":5401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5400,"mutability":"mutable","name":"tokenId","nameLocation":"703:7:28","nodeType":"VariableDeclaration","scope":5411,"src":"695:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5399,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"694:17:28"},"returnParameters":{"id":5405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5411,"src":"742:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5403,"name":"string","nodeType":"ElementaryTypeName","src":"742:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"741:15:28"},"scope":5498,"src":"682:118:28","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5438,"nodeType":"Block","src":"966:74:28","statements":[{"expression":{"arguments":[{"id":5427,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"982:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5428,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"986:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5429,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"990:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5430,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"998:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5426,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"976:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"976:27:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5432,"nodeType":"ExpressionStatement","src":"976:27:28"},{"expression":{"arguments":[{"id":5434,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"1020:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5435,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"1024:8:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5433,"name":"setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5398,"src":"1013:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1013:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5437,"nodeType":"ExpressionStatement","src":"1013:20:28"}]},"functionSelector":"a4b645eb","id":5439,"implemented":true,"kind":"function","modifiers":[{"id":5424,"kind":"modifierInvocation","modifierName":{"id":5423,"name":"onlyOwner","nameLocations":["956:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"956:9:28"},"nodeType":"ModifierInvocation","src":"956:9:28"}],"name":"mint","nameLocation":"815:4:28","nodeType":"FunctionDefinition","parameters":{"id":5422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5413,"mutability":"mutable","name":"to","nameLocation":"837:2:28","nodeType":"VariableDeclaration","scope":5439,"src":"829:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5412,"name":"address","nodeType":"ElementaryTypeName","src":"829:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5415,"mutability":"mutable","name":"id","nameLocation":"857:2:28","nodeType":"VariableDeclaration","scope":5439,"src":"849:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5414,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5417,"mutability":"mutable","name":"amount","nameLocation":"877:6:28","nodeType":"VariableDeclaration","scope":5439,"src":"869:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5416,"name":"uint256","nodeType":"ElementaryTypeName","src":"869:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5419,"mutability":"mutable","name":"tokenURI","nameLocation":"907:8:28","nodeType":"VariableDeclaration","scope":5439,"src":"893:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5418,"name":"string","nodeType":"ElementaryTypeName","src":"893:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5421,"mutability":"mutable","name":"data","nameLocation":"938:4:28","nodeType":"VariableDeclaration","scope":5439,"src":"925:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5420,"name":"bytes","nodeType":"ElementaryTypeName","src":"925:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"819:129:28"},"returnParameters":{"id":5425,"nodeType":"ParameterList","parameters":[],"src":"966:0:28"},"scope":5498,"src":"806:234:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5496,"nodeType":"Block","src":"1234:283:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5458,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"1265:3:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1269:6:28","memberName":"length","nodeType":"MemberAccess","src":"1265:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5460,"name":"tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"1279:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1289:6:28","memberName":"length","nodeType":"MemberAccess","src":"1279:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1265:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313135353a2069647320616e642075726973206c656e677468206d69736d61746368","id":5463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1309:39:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_919bd9f36f6ae4aea4fff22b7fbec9fc0365c3be358d8d9caf8d845af3f0cbe4","typeString":"literal_string \"ERC1155: ids and uris length mismatch\""},"value":"ERC1155: ids and uris length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_919bd9f36f6ae4aea4fff22b7fbec9fc0365c3be358d8d9caf8d845af3f0cbe4","typeString":"literal_string \"ERC1155: ids and uris length mismatch\""}],"id":5457,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1244:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1244:114:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5465,"nodeType":"ExpressionStatement","src":"1244:114:28"},{"expression":{"arguments":[{"id":5467,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"1379:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5468,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"1383:3:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":5469,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"1388:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":5470,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"1397:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5466,"name":"_mintBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"1368:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1368:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5472,"nodeType":"ExpressionStatement","src":"1368:34:28"},{"body":{"id":5494,"nodeType":"Block","src":"1453:58:28","statements":[{"expression":{"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5484,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"1467:10:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":5488,"indexExpression":{"baseExpression":{"id":5485,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"1478:3:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5487,"indexExpression":{"id":5486,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"1482:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1478:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1467:18:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5489,"name":"tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"1488:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":5491,"indexExpression":{"id":5490,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"1498:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1488:12:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1467:33:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5493,"nodeType":"ExpressionStatement","src":"1467:33:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5477,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"1432:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5478,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"1436:3:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1440:6:28","memberName":"length","nodeType":"MemberAccess","src":"1436:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1432:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5495,"initializationExpression":{"assignments":[5474],"declarations":[{"constant":false,"id":5474,"mutability":"mutable","name":"i","nameLocation":"1425:1:28","nodeType":"VariableDeclaration","scope":5495,"src":"1417:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5473,"name":"uint256","nodeType":"ElementaryTypeName","src":"1417:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5476,"initialValue":{"hexValue":"30","id":5475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1429:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1417:13:28"},"loopExpression":{"expression":{"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1448:3:28","subExpression":{"id":5481,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"1448:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5483,"nodeType":"ExpressionStatement","src":"1448:3:28"},"nodeType":"ForStatement","src":"1412:99:28"}]},"functionSelector":"b9571e84","id":5497,"implemented":true,"kind":"function","modifiers":[{"id":5455,"kind":"modifierInvocation","modifierName":{"id":5454,"name":"onlyOwner","nameLocations":["1224:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1224:9:28"},"nodeType":"ModifierInvocation","src":"1224:9:28"}],"name":"mintBatch","nameLocation":"1055:9:28","nodeType":"FunctionDefinition","parameters":{"id":5453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5441,"mutability":"mutable","name":"to","nameLocation":"1082:2:28","nodeType":"VariableDeclaration","scope":5497,"src":"1074:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5440,"name":"address","nodeType":"ElementaryTypeName","src":"1074:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5444,"mutability":"mutable","name":"ids","nameLocation":"1111:3:28","nodeType":"VariableDeclaration","scope":5497,"src":"1094:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5442,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5443,"nodeType":"ArrayTypeName","src":"1094:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5447,"mutability":"mutable","name":"amounts","nameLocation":"1141:7:28","nodeType":"VariableDeclaration","scope":5497,"src":"1124:24:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5445,"name":"uint256","nodeType":"ElementaryTypeName","src":"1124:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5446,"nodeType":"ArrayTypeName","src":"1124:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5450,"mutability":"mutable","name":"tokenURIs","nameLocation":"1174:9:28","nodeType":"VariableDeclaration","scope":5497,"src":"1158:25:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":5448,"name":"string","nodeType":"ElementaryTypeName","src":"1158:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":5449,"nodeType":"ArrayTypeName","src":"1158:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":5452,"mutability":"mutable","name":"data","nameLocation":"1206:4:28","nodeType":"VariableDeclaration","scope":5497,"src":"1193:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5451,"name":"bytes","nodeType":"ElementaryTypeName","src":"1193:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1064:152:28"},"returnParameters":{"id":5456,"nodeType":"ParameterList","parameters":[],"src":"1234:0:28"},"scope":5498,"src":"1046:471:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":5499,"src":"260:1259:28","usedErrors":[]}],"src":"32:1488:28"},"id":28},"contracts/Investments.sol":{"ast":{"absolutePath":"contracts/Investments.sol","exportedSymbols":{"Address":[4011],"Asset":[4654],"Category":[4598],"Context":[4034],"ERC165":[4261],"ERC721":[3027],"ERC721Burnable":[3191],"ERC721Enumerable":[3529],"ERC721URIStorage":[3657],"IERC165":[4273],"IERC721":[3143],"IERC721Enumerable":[3688],"IERC721Metadata":[3715],"IERC721Receiver":[3161],"Investments":[6101],"NFTVenture":[7155],"NewReward":[4622],"Ownable":[109],"Pausable":[201],"ProjectStatus":[4592],"Reward":[4611],"Strings":[4237]},"id":6102,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5500,"literals":["solidity",">=","0.8",".0","<=","0.8",".19"],"nodeType":"PragmaDirective","src":"32:33:29"},{"absolutePath":"contracts/NFTVenture.sol","file":"./NFTVenture.sol","id":5501,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6102,"sourceUnit":7156,"src":"67:26:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/AssetStruct.sol","file":"./AssetStruct.sol","id":5502,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6102,"sourceUnit":4655,"src":"94:27:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Investments","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6101,"linearizedBaseContracts":[6101],"name":"Investments","nameLocation":"133:11:29","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":5505,"mutability":"mutable","name":"nftContract","nameLocation":"170:11:29","nodeType":"VariableDeclaration","scope":6101,"src":"151:30:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"},"typeName":{"id":5504,"nodeType":"UserDefinedTypeName","pathNode":{"id":5503,"name":"NFTVenture","nameLocations":["151:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":7155,"src":"151:10:29"},"referencedDeclaration":7155,"src":"151:10:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"visibility":"private"},{"constant":false,"functionSelector":"09b3da2b","id":5507,"mutability":"mutable","name":"Reward_tokens","nameLocation":"202:13:29","nodeType":"VariableDeclaration","scope":6101,"src":"187:28:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5506,"name":"address","nodeType":"ElementaryTypeName","src":"187:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"56e4b68b","id":5509,"mutability":"mutable","name":"supervisor","nameLocation":"236:10:29","nodeType":"VariableDeclaration","scope":6101,"src":"221:25:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5508,"name":"address","nodeType":"ElementaryTypeName","src":"221:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"f85c915ce9c62984825f2ff42dc2ac372422bebf345a567590885dc78681325d","id":5521,"name":"LogInvestment","nameLocation":"274:13:29","nodeType":"EventDefinition","parameters":{"id":5520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5511,"indexed":true,"mutability":"mutable","name":"investor","nameLocation":"313:8:29","nodeType":"VariableDeclaration","scope":5521,"src":"297:24:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5510,"name":"address","nodeType":"ElementaryTypeName","src":"297:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5513,"indexed":true,"mutability":"mutable","name":"assetId","nameLocation":"347:7:29","nodeType":"VariableDeclaration","scope":5521,"src":"331:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5512,"name":"uint256","nodeType":"ElementaryTypeName","src":"331:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5515,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"380:7:29","nodeType":"VariableDeclaration","scope":5521,"src":"364:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5514,"name":"uint256","nodeType":"ElementaryTypeName","src":"364:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5517,"indexed":false,"mutability":"mutable","name":"tokenAmount","nameLocation":"405:11:29","nodeType":"VariableDeclaration","scope":5521,"src":"397:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5516,"name":"uint256","nodeType":"ElementaryTypeName","src":"397:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5519,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"434:5:29","nodeType":"VariableDeclaration","scope":5521,"src":"426:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5518,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"287:158:29"},"src":"268:178:29"},{"body":{"id":5543,"nodeType":"Block","src":"527:125:29","statements":[{"expression":{"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5528,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"537:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5530,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5523,"src":"562:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5529,"name":"NFTVenture","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7155,"src":"551:10:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_NFTVenture_$7155_$","typeString":"type(contract NFTVenture)"}},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"551:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"src":"537:36:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5533,"nodeType":"ExpressionStatement","src":"537:36:29"},{"expression":{"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5534,"name":"supervisor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"583:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5535,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"596:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"600:6:29","memberName":"sender","nodeType":"MemberAccess","src":"596:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"583:23:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5538,"nodeType":"ExpressionStatement","src":"583:23:29"},{"expression":{"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5539,"name":"Reward_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5507,"src":"616:13:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5540,"name":"reward_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"632:13:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"616:29:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5542,"nodeType":"ExpressionStatement","src":"616:29:29"}]},"id":5544,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5523,"mutability":"mutable","name":"nftAddress","nameLocation":"492:10:29","nodeType":"VariableDeclaration","scope":5544,"src":"484:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5522,"name":"address","nodeType":"ElementaryTypeName","src":"484:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5525,"mutability":"mutable","name":"reward_tokens","nameLocation":"512:13:29","nodeType":"VariableDeclaration","scope":5544,"src":"504:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5524,"name":"address","nodeType":"ElementaryTypeName","src":"504:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"483:43:29"},"returnParameters":{"id":5527,"nodeType":"ParameterList","parameters":[],"src":"527:0:29"},"scope":6101,"src":"472:180:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5555,"nodeType":"Block","src":"684:137:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5547,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"715:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"719:6:29","memberName":"sender","nodeType":"MemberAccess","src":"715:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5549,"name":"supervisor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"729:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"715:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792073757065727669736f722063616e2063616c6c20746869732066756e6374696f6e","id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"753:40:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d7f4340f27d55e1e41a8d5ddf87968436d7cb708d0eb99fe9fefe6b11395f2","typeString":"literal_string \"Only supervisor can call this function\""},"value":"Only supervisor can call this function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_32d7f4340f27d55e1e41a8d5ddf87968436d7cb708d0eb99fe9fefe6b11395f2","typeString":"literal_string \"Only supervisor can call this function\""}],"id":5546,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"694:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"694:109:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5553,"nodeType":"ExpressionStatement","src":"694:109:29"},{"id":5554,"nodeType":"PlaceholderStatement","src":"813:1:29"}]},"id":5556,"name":"onlySupervisor","nameLocation":"667:14:29","nodeType":"ModifierDefinition","parameters":{"id":5545,"nodeType":"ParameterList","parameters":[],"src":"681:2:29"},"src":"658:163:29","virtual":false,"visibility":"internal"},{"body":{"id":5572,"nodeType":"Block","src":"868:153:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5563,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"919:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5561,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"899:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"911:7:29","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":6412,"src":"899:19:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"899:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5565,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"931:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"935:6:29","memberName":"sender","nodeType":"MemberAccess","src":"931:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"899:42:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f7420746865206f776e6572206f6620746865206173736574","id":5568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"955:38:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd245f243f97904e9268ebb2881038f5507993675a16550f639640c5dffd310e","typeString":"literal_string \"Caller is not the owner of the asset\""},"value":"Caller is not the owner of the asset"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd245f243f97904e9268ebb2881038f5507993675a16550f639640c5dffd310e","typeString":"literal_string \"Caller is not the owner of the asset\""}],"id":5560,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"878:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"878:125:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5570,"nodeType":"ExpressionStatement","src":"878:125:29"},{"id":5571,"nodeType":"PlaceholderStatement","src":"1013:1:29"}]},"id":5573,"name":"onlyAssetOwner","nameLocation":"836:14:29","nodeType":"ModifierDefinition","parameters":{"id":5559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5558,"mutability":"mutable","name":"assetId","nameLocation":"859:7:29","nodeType":"VariableDeclaration","scope":5573,"src":"851:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5557,"name":"uint256","nodeType":"ElementaryTypeName","src":"851:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"850:17:29"},"src":"827:194:29","virtual":false,"visibility":"internal"},{"body":{"id":5786,"nodeType":"Block","src":"1326:1811:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5583,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"1344:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1358:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1344:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20616d6f756e74206d7573742062652067726561746572207468616e2030","id":5586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1361:37:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_75e2446b846bc49132300bcca7cdcb48075f5fa675dcef276f97d517cbb1a4bf","typeString":"literal_string \"Token amount must be greater than 0\""},"value":"Token amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_75e2446b846bc49132300bcca7cdcb48075f5fa675dcef276f97d517cbb1a4bf","typeString":"literal_string \"Token amount must be greater than 0\""}],"id":5582,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1336:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1336:63:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5588,"nodeType":"ExpressionStatement","src":"1336:63:29"},{"expression":{"arguments":[{"arguments":[{"id":5592,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"1436:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5590,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"1417:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1429:6:29","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":6553,"src":"1417:18:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view external returns (bool)"}},"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1417:27:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417373657420646f6573206e6f74206578697374","id":5594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1446:22:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_48805f8fa767ef4f6e13e9d1c424df0337974c3d4b0946f6cb5fcbae9385469f","typeString":"literal_string \"Asset does not exist\""},"value":"Asset does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48805f8fa767ef4f6e13e9d1c424df0337974c3d4b0946f6cb5fcbae9385469f","typeString":"literal_string \"Asset does not exist\""}],"id":5589,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1409:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1409:60:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5596,"nodeType":"ExpressionStatement","src":"1409:60:29"},{"assignments":[5599],"declarations":[{"constant":false,"id":5599,"mutability":"mutable","name":"asset","nameLocation":"1501:5:29","nodeType":"VariableDeclaration","scope":5786,"src":"1488:18:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset"},"typeName":{"id":5598,"nodeType":"UserDefinedTypeName","pathNode":{"id":5597,"name":"Asset","nameLocations":["1488:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"1488:5:29"},"referencedDeclaration":4654,"src":"1488:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"}},"visibility":"internal"}],"id":5604,"initialValue":{"arguments":[{"id":5602,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"1530:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5600,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"1509:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1521:8:29","memberName":"getAsset","nodeType":"MemberAccess","referencedDeclaration":6655,"src":"1509:20:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_Asset_$4654_memory_ptr_$","typeString":"function (uint256) view external returns (struct Asset memory)"}},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1509:29:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"nodeType":"VariableDeclarationStatement","src":"1488:50:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5606,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"1556:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":5607,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1562:6:29","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":4643,"src":"1556:12:29","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5608,"name":"ProjectStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"1572:13:29","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ProjectStatus_$4592_$","typeString":"type(enum ProjectStatus)"}},"id":5609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1586:7:29","memberName":"Started","nodeType":"MemberAccess","referencedDeclaration":4588,"src":"1572:21:29","typeDescriptions":{"typeIdentifier":"t_enum$_ProjectStatus_$4592","typeString":"enum ProjectStatus"}},"src":"1556:37:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6a656374206973206e6f7420696e205374617274656420737461747573","id":5611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1595:34:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_60e3f3c08631eb1a50438ecb128defaf349a42a79c34d2460975cf75739aa6cb","typeString":"literal_string \"Project is not in Started status\""},"value":"Project is not in Started status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_60e3f3c08631eb1a50438ecb128defaf349a42a79c34d2460975cf75739aa6cb","typeString":"literal_string \"Project is not in Started status\""}],"id":5605,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1548:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1548:82:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5613,"nodeType":"ExpressionStatement","src":"1548:82:29"},{"assignments":[5616],"declarations":[{"constant":false,"id":5616,"mutability":"mutable","name":"reward","nameLocation":"1663:6:29","nodeType":"VariableDeclaration","scope":5786,"src":"1649:20:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$4611_memory_ptr","typeString":"struct Reward"},"typeName":{"id":5615,"nodeType":"UserDefinedTypeName","pathNode":{"id":5614,"name":"Reward","nameLocations":["1649:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":4611,"src":"1649:6:29"},"referencedDeclaration":4611,"src":"1649:6:29","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$4611_storage_ptr","typeString":"struct Reward"}},"visibility":"internal"}],"id":5617,"nodeType":"VariableDeclarationStatement","src":"1649:20:29"},{"assignments":[5619],"declarations":[{"constant":false,"id":5619,"mutability":"mutable","name":"rewardFound","nameLocation":"1684:11:29","nodeType":"VariableDeclaration","scope":5786,"src":"1679:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5618,"name":"bool","nodeType":"ElementaryTypeName","src":"1679:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5621,"initialValue":{"hexValue":"66616c7365","id":5620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1698:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"1679:24:29"},{"assignments":[5623],"declarations":[{"constant":false,"id":5623,"mutability":"mutable","name":"rewardIndex","nameLocation":"1721:11:29","nodeType":"VariableDeclaration","scope":5786,"src":"1713:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5622,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5625,"initialValue":{"hexValue":"30","id":5624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1713:23:29"},{"body":{"id":5663,"nodeType":"Block","src":"1798:227:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"expression":{"id":5638,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"1816:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":5639,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1822:7:29","memberName":"rewards","nodeType":"MemberAccess","referencedDeclaration":4640,"src":"1816:13:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Reward_$4611_memory_ptr_$dyn_memory_ptr","typeString":"struct Reward memory[] memory"}},"id":5641,"indexExpression":{"id":5640,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"1830:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1816:16:29","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$4611_memory_ptr","typeString":"struct Reward memory"}},"id":5642,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1833:13:29","memberName":"rewardTokenId","nodeType":"MemberAccess","referencedDeclaration":4610,"src":"1816:30:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5643,"name":"rewardTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"1850:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1816:47:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5662,"nodeType":"IfStatement","src":"1812:203:29","trueBody":{"id":5661,"nodeType":"Block","src":"1865:150:29","statements":[{"expression":{"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5645,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"1883:6:29","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$4611_memory_ptr","typeString":"struct Reward memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":5646,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"1892:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":5647,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1898:7:29","memberName":"rewards","nodeType":"MemberAccess","referencedDeclaration":4640,"src":"1892:13:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Reward_$4611_memory_ptr_$dyn_memory_ptr","typeString":"struct Reward memory[] memory"}},"id":5649,"indexExpression":{"id":5648,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"1906:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1892:16:29","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$4611_memory_ptr","typeString":"struct Reward memory"}},"src":"1883:25:29","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$4611_memory_ptr","typeString":"struct Reward memory"}},"id":5651,"nodeType":"ExpressionStatement","src":"1883:25:29"},{"expression":{"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5652,"name":"rewardFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5619,"src":"1926:11:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1940:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1926:18:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5655,"nodeType":"ExpressionStatement","src":"1926:18:29"},{"expression":{"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5656,"name":"rewardIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"1962:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5657,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"1976:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1962:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5659,"nodeType":"ExpressionStatement","src":"1962:15:29"},{"id":5660,"nodeType":"Break","src":"1995:5:29"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5630,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"1767:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":5631,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"1771:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":5632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1777:7:29","memberName":"rewards","nodeType":"MemberAccess","referencedDeclaration":4640,"src":"1771:13:29","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Reward_$4611_memory_ptr_$dyn_memory_ptr","typeString":"struct Reward memory[] memory"}},"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1785:6:29","memberName":"length","nodeType":"MemberAccess","src":"1771:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1767:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5664,"initializationExpression":{"assignments":[5627],"declarations":[{"constant":false,"id":5627,"mutability":"mutable","name":"i","nameLocation":"1760:1:29","nodeType":"VariableDeclaration","scope":5664,"src":"1752:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5626,"name":"uint256","nodeType":"ElementaryTypeName","src":"1752:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5629,"initialValue":{"hexValue":"30","id":5628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1764:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1752:13:29"},"loopExpression":{"expression":{"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1793:3:29","subExpression":{"id":5635,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"1793:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5637,"nodeType":"ExpressionStatement","src":"1793:3:29"},"nodeType":"ForStatement","src":"1747:278:29"},{"expression":{"arguments":[{"id":5666,"name":"rewardFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5619,"src":"2043:11:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52657761726420646f6573206e6f7420657869737420666f722074686973206173736574","id":5667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2056:38:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_19125655165d632927fdbdf6f9a7fd07bea55de7c9ae26d22c26850d895ec8e1","typeString":"literal_string \"Reward does not exist for this asset\""},"value":"Reward does not exist for this asset"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_19125655165d632927fdbdf6f9a7fd07bea55de7c9ae26d22c26850d895ec8e1","typeString":"literal_string \"Reward does not exist for this asset\""}],"id":5665,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2035:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:60:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5669,"nodeType":"ExpressionStatement","src":"2035:60:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5671,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"2113:6:29","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$4611_memory_ptr","typeString":"struct Reward memory"}},"id":5672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2120:15:29","memberName":"availableTokens","nodeType":"MemberAccess","referencedDeclaration":4608,"src":"2113:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5673,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"2139:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2113:37:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f75676820617661696c61626c6520746f6b656e73","id":5675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2152:29:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_90f7ad034f8acddda498c184dc73c09845645107cd77a0b421575006f96ae510","typeString":"literal_string \"Not enough available tokens\""},"value":"Not enough available tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_90f7ad034f8acddda498c184dc73c09845645107cd77a0b421575006f96ae510","typeString":"literal_string \"Not enough available tokens\""}],"id":5670,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2105:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2105:77:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5677,"nodeType":"ExpressionStatement","src":"2105:77:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5679,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2200:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2204:5:29","memberName":"value","nodeType":"MemberAccess","src":"2200:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5681,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"2213:6:29","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$4611_memory_ptr","typeString":"struct Reward memory"}},"id":5682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2220:15:29","memberName":"individualPrice","nodeType":"MemberAccess","referencedDeclaration":4606,"src":"2213:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5683,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"2238:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2213:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2200:49:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f72726563742076616c75652073656e74","id":5686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2251:22:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1","typeString":"literal_string \"Incorrect value sent\""},"value":"Incorrect value sent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1","typeString":"literal_string \"Incorrect value sent\""}],"id":5678,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2192:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:82:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5688,"nodeType":"ExpressionStatement","src":"2192:82:29"},{"expression":{"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5689,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"2285:6:29","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$4611_memory_ptr","typeString":"struct Reward memory"}},"id":5691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2292:15:29","memberName":"availableTokens","nodeType":"MemberAccess","referencedDeclaration":4608,"src":"2285:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5692,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"2311:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2285:37:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5694,"nodeType":"ExpressionStatement","src":"2285:37:29"},{"expression":{"arguments":[{"id":5698,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"2362:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5699,"name":"rewardIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"2371:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5700,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"2384:6:29","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$4611_memory_ptr","typeString":"struct Reward memory"}},"id":5701,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2391:15:29","memberName":"availableTokens","nodeType":"MemberAccess","referencedDeclaration":4608,"src":"2384:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5695,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"2332:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2344:17:29","memberName":"updateAssetReward","nodeType":"MemberAccess","referencedDeclaration":6729,"src":"2332:29:29","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) external"}},"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2332:75:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5703,"nodeType":"ExpressionStatement","src":"2332:75:29"},{"expression":{"arguments":[{"id":5707,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"2443:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5708,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2452:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2456:6:29","memberName":"sender","nodeType":"MemberAccess","src":"2452:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5710,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2464:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2468:5:29","memberName":"value","nodeType":"MemberAccess","src":"2464:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5704,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"2417:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2429:13:29","memberName":"addInvestment","nodeType":"MemberAccess","referencedDeclaration":6843,"src":"2417:25:29","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256) external"}},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2417:57:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5713,"nodeType":"ExpressionStatement","src":"2417:57:29"},{"assignments":[5715],"declarations":[{"constant":false,"id":5715,"mutability":"mutable","name":"investorExists","nameLocation":"2490:14:29","nodeType":"VariableDeclaration","scope":5786,"src":"2485:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5714,"name":"bool","nodeType":"ElementaryTypeName","src":"2485:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5717,"initialValue":{"hexValue":"66616c7365","id":5716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2507:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"2485:27:29"},{"assignments":[5722],"declarations":[{"constant":false,"id":5722,"mutability":"mutable","name":"investors","nameLocation":"2539:9:29","nodeType":"VariableDeclaration","scope":5786,"src":"2522:26:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5720,"name":"address","nodeType":"ElementaryTypeName","src":"2522:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5721,"nodeType":"ArrayTypeName","src":"2522:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5727,"initialValue":{"arguments":[{"id":5725,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"2581:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5723,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"2551:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2563:17:29","memberName":"getAssetInvestors","nodeType":"MemberAccess","referencedDeclaration":6902,"src":"2551:29:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) view external returns (address[] memory)"}},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:38:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2522:67:29"},{"body":{"id":5752,"nodeType":"Block","src":"2647:133:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5739,"name":"investors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"2665:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5741,"indexExpression":{"id":5740,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"2675:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2665:12:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5742,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2681:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2685:6:29","memberName":"sender","nodeType":"MemberAccess","src":"2681:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2665:26:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5751,"nodeType":"IfStatement","src":"2661:109:29","trueBody":{"id":5750,"nodeType":"Block","src":"2693:77:29","statements":[{"expression":{"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5745,"name":"investorExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"2711:14:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2728:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2711:21:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5748,"nodeType":"ExpressionStatement","src":"2711:21:29"},{"id":5749,"nodeType":"Break","src":"2750:5:29"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5732,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"2620:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5733,"name":"investors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"2624:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2634:6:29","memberName":"length","nodeType":"MemberAccess","src":"2624:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2620:20:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5753,"initializationExpression":{"assignments":[5729],"declarations":[{"constant":false,"id":5729,"mutability":"mutable","name":"i","nameLocation":"2613:1:29","nodeType":"VariableDeclaration","scope":5753,"src":"2605:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5728,"name":"uint256","nodeType":"ElementaryTypeName","src":"2605:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5731,"initialValue":{"hexValue":"30","id":5730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2617:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2605:13:29"},"loopExpression":{"expression":{"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2642:3:29","subExpression":{"id":5736,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"2642:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5738,"nodeType":"ExpressionStatement","src":"2642:3:29"},"nodeType":"ForStatement","src":"2600:180:29"},{"condition":{"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2794:15:29","subExpression":{"id":5754,"name":"investorExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"2795:14:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5765,"nodeType":"IfStatement","src":"2790:90:29","trueBody":{"id":5764,"nodeType":"Block","src":"2811:69:29","statements":[{"expression":{"arguments":[{"id":5759,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"2849:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5760,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2858:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2862:6:29","memberName":"sender","nodeType":"MemberAccess","src":"2858:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5756,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"2825:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2837:11:29","memberName":"addInvestor","nodeType":"MemberAccess","referencedDeclaration":6889,"src":"2825:23:29","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address) external"}},"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2825:44:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5763,"nodeType":"ExpressionStatement","src":"2825:44:29"}]}},{"expression":{"arguments":[{"id":5769,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"2923:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5770,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2932:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2936:6:29","memberName":"sender","nodeType":"MemberAccess","src":"2932:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5772,"name":"rewardTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"2944:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5773,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"2959:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5766,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"2890:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2902:20:29","memberName":"updateInvestorTokens","nodeType":"MemberAccess","referencedDeclaration":7044,"src":"2890:32:29","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256) external"}},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2890:81:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5775,"nodeType":"ExpressionStatement","src":"2890:81:29"},{"eventCall":{"arguments":[{"expression":{"id":5777,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3014:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:29","memberName":"sender","nodeType":"MemberAccess","src":"3014:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5779,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"3038:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5780,"name":"rewardTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"3059:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5781,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"3086:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5782,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3111:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3115:5:29","memberName":"value","nodeType":"MemberAccess","src":"3111:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5776,"name":"LogInvestment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"2987:13:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256,uint256)"}},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2987:143:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5785,"nodeType":"EmitStatement","src":"2982:148:29"}]},"functionSelector":"bc4040d2","id":5787,"implemented":true,"kind":"function","modifiers":[],"name":"investAsset","nameLocation":"1238:11:29","nodeType":"FunctionDefinition","parameters":{"id":5580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5575,"mutability":"mutable","name":"assetId","nameLocation":"1258:7:29","nodeType":"VariableDeclaration","scope":5787,"src":"1250:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5574,"name":"uint256","nodeType":"ElementaryTypeName","src":"1250:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5577,"mutability":"mutable","name":"rewardTokenId","nameLocation":"1275:13:29","nodeType":"VariableDeclaration","scope":5787,"src":"1267:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5576,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5579,"mutability":"mutable","name":"tokenAmount","nameLocation":"1298:11:29","nodeType":"VariableDeclaration","scope":5787,"src":"1290:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5578,"name":"uint256","nodeType":"ElementaryTypeName","src":"1290:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1249:61:29"},"returnParameters":{"id":5581,"nodeType":"ParameterList","parameters":[],"src":"1326:0:29"},"scope":6101,"src":"1229:1908:29","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":5832,"nodeType":"Block","src":"3260:292:29","statements":[{"expression":{"arguments":[{"arguments":[{"id":5799,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"3297:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5797,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"3278:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3290:6:29","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":6553,"src":"3278:18:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view external returns (bool)"}},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3278:27:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417373657420646f6573206e6f74206578697374","id":5801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3307:22:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_48805f8fa767ef4f6e13e9d1c424df0337974c3d4b0946f6cb5fcbae9385469f","typeString":"literal_string \"Asset does not exist\""},"value":"Asset does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48805f8fa767ef4f6e13e9d1c424df0337974c3d4b0946f6cb5fcbae9385469f","typeString":"literal_string \"Asset does not exist\""}],"id":5796,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3270:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3270:60:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5803,"nodeType":"ExpressionStatement","src":"3270:60:29"},{"assignments":[5806],"declarations":[{"constant":false,"id":5806,"mutability":"mutable","name":"asset","nameLocation":"3353:5:29","nodeType":"VariableDeclaration","scope":5832,"src":"3340:18:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset"},"typeName":{"id":5805,"nodeType":"UserDefinedTypeName","pathNode":{"id":5804,"name":"Asset","nameLocations":["3340:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"3340:5:29"},"referencedDeclaration":4654,"src":"3340:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"}},"visibility":"internal"}],"id":5811,"initialValue":{"arguments":[{"id":5809,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"3382:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5807,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"3361:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3373:8:29","memberName":"getAsset","nodeType":"MemberAccess","referencedDeclaration":6655,"src":"3361:20:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_Asset_$4654_memory_ptr_$","typeString":"function (uint256) view external returns (struct Asset memory)"}},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3361:29:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"nodeType":"VariableDeclarationStatement","src":"3340:50:29"},{"expression":{"id":5817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5812,"name":"totalInvested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"3400:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5815,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"3447:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5813,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"3416:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3428:18:29","memberName":"investmentReceived","nodeType":"MemberAccess","referencedDeclaration":6178,"src":"3416:30:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3400:55:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5818,"nodeType":"ExpressionStatement","src":"3400:55:29"},{"expression":{"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5819,"name":"remainingFunding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"3465:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5820,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"3484:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":5821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3490:5:29","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":4626,"src":"3484:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5822,"name":"totalInvested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"3498:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3484:27:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3544:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3484:61:29","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5824,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"3514:5:29","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":5825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3520:5:29","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":4626,"src":"3514:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5826,"name":"totalInvested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"3528:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3514:27:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3465:80:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5831,"nodeType":"ExpressionStatement","src":"3465:80:29"}]},"functionSelector":"ce7f35b4","id":5833,"implemented":true,"kind":"function","modifiers":[],"name":"getInvestmentDetails","nameLocation":"3152:20:29","nodeType":"FunctionDefinition","parameters":{"id":5790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5789,"mutability":"mutable","name":"assetId","nameLocation":"3181:7:29","nodeType":"VariableDeclaration","scope":5833,"src":"3173:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5788,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3172:17:29"},"returnParameters":{"id":5795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5792,"mutability":"mutable","name":"totalInvested","nameLocation":"3219:13:29","nodeType":"VariableDeclaration","scope":5833,"src":"3211:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5791,"name":"uint256","nodeType":"ElementaryTypeName","src":"3211:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5794,"mutability":"mutable","name":"remainingFunding","nameLocation":"3242:16:29","nodeType":"VariableDeclaration","scope":5833,"src":"3234:24:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5793,"name":"uint256","nodeType":"ElementaryTypeName","src":"3234:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:49:29"},"scope":6101,"src":"3143:409:29","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5940,"nodeType":"Block","src":"3738:582:29","statements":[{"expression":{"arguments":[{"arguments":[{"id":5855,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"3771:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5853,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"3752:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3764:6:29","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":6553,"src":"3752:18:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view external returns (bool)"}},"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3752:27:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417373657420646f6573206e6f74206578697374","id":5857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3781:22:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_48805f8fa767ef4f6e13e9d1c424df0337974c3d4b0946f6cb5fcbae9385469f","typeString":"literal_string \"Asset does not exist\""},"value":"Asset does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48805f8fa767ef4f6e13e9d1c424df0337974c3d4b0946f6cb5fcbae9385469f","typeString":"literal_string \"Asset does not exist\""}],"id":5852,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3744:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3744:60:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5859,"nodeType":"ExpressionStatement","src":"3744:60:29"},{"expression":{"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5860,"name":"investors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"3811:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5863,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"3853:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5861,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"3823:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3835:17:29","memberName":"getAssetInvestors","nodeType":"MemberAccess","referencedDeclaration":6902,"src":"3823:29:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) view external returns (address[] memory)"}},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3823:38:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"3811:50:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5866,"nodeType":"ExpressionStatement","src":"3811:50:29"},{"assignments":[5868],"declarations":[{"constant":false,"id":5868,"mutability":"mutable","name":"investorCount","nameLocation":"3875:13:29","nodeType":"VariableDeclaration","scope":5940,"src":"3867:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5867,"name":"uint256","nodeType":"ElementaryTypeName","src":"3867:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5871,"initialValue":{"expression":{"id":5869,"name":"investors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"3891:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3901:6:29","memberName":"length","nodeType":"MemberAccess","src":"3891:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3867:40:29"},{"expression":{"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5872,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5842,"src":"3918:7:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5876,"name":"investorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5868,"src":"3942:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3928:13:29","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":5873,"name":"uint256","nodeType":"ElementaryTypeName","src":"3932:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5874,"nodeType":"ArrayTypeName","src":"3932:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3928:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"3918:38:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5879,"nodeType":"ExpressionStatement","src":"3918:38:29"},{"expression":{"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5880,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"3962:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5885,"name":"investorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5868,"src":"3989:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3973:15:29","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory[] memory)"},"typeName":{"baseType":{"baseType":{"id":5881,"name":"uint256","nodeType":"ElementaryTypeName","src":"3977:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5882,"nodeType":"ArrayTypeName","src":"3977:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":5883,"nodeType":"ArrayTypeName","src":"3977:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}}},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3973:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"src":"3962:41:29","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":5888,"nodeType":"ExpressionStatement","src":"3962:41:29"},{"expression":{"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5889,"name":"tokenAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"4009:12:29","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5894,"name":"investorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5868,"src":"4040:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4024:15:29","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory[] memory)"},"typeName":{"baseType":{"baseType":{"id":5890,"name":"uint256","nodeType":"ElementaryTypeName","src":"4028:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5891,"nodeType":"ArrayTypeName","src":"4028:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":5892,"nodeType":"ArrayTypeName","src":"4028:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}}},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4024:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"src":"4009:45:29","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":5897,"nodeType":"ExpressionStatement","src":"4009:45:29"},{"body":{"id":5938,"nodeType":"Block","src":"4105:213:29","statements":[{"assignments":[5909],"declarations":[{"constant":false,"id":5909,"mutability":"mutable","name":"investor","nameLocation":"4123:8:29","nodeType":"VariableDeclaration","scope":5938,"src":"4115:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5908,"name":"address","nodeType":"ElementaryTypeName","src":"4115:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5913,"initialValue":{"baseExpression":{"id":5910,"name":"investors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"4134:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5912,"indexExpression":{"id":5911,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"4144:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4134:12:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4115:31:29"},{"expression":{"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5914,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5842,"src":"4156:7:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5916,"indexExpression":{"id":5915,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"4164:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4156:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5919,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"4201:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5920,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"4210:8:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5917,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"4169:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4181:19:29","memberName":"getInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":7022,"src":"4169:31:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) view external returns (uint256)"}},"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4169:50:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4156:63:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5923,"nodeType":"ExpressionStatement","src":"4156:63:29"},{"expression":{"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"baseExpression":{"id":5924,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"4231:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":5926,"indexExpression":{"id":5925,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"4240:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4231:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"baseExpression":{"id":5927,"name":"tokenAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"4244:12:29","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":5929,"indexExpression":{"id":5928,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"4257:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4244:15:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":5930,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4230:30:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5933,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"4293:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5934,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"4302:8:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5931,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"4263:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4275:17:29","memberName":"getInvestorTokens","nodeType":"MemberAccess","referencedDeclaration":7006,"src":"4263:29:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,address) view external returns (uint256[] memory,uint256[] memory)"}},"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:48:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"src":"4230:81:29","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5937,"nodeType":"ExpressionStatement","src":"4230:81:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5902,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"4081:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5903,"name":"investorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5868,"src":"4085:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4081:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5939,"initializationExpression":{"assignments":[5899],"declarations":[{"constant":false,"id":5899,"mutability":"mutable","name":"i","nameLocation":"4074:1:29","nodeType":"VariableDeclaration","scope":5939,"src":"4066:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5898,"name":"uint256","nodeType":"ElementaryTypeName","src":"4066:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5901,"initialValue":{"hexValue":"30","id":5900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4078:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4066:13:29"},"loopExpression":{"expression":{"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4100:3:29","subExpression":{"id":5905,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"4100:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5907,"nodeType":"ExpressionStatement","src":"4100:3:29"},"nodeType":"ForStatement","src":"4061:257:29"}]},"functionSelector":"16bd19d4","id":5941,"implemented":true,"kind":"function","modifiers":[],"name":"getInvestmentHistory","nameLocation":"3563:20:29","nodeType":"FunctionDefinition","parameters":{"id":5836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5835,"mutability":"mutable","name":"assetId","nameLocation":"3592:7:29","nodeType":"VariableDeclaration","scope":5941,"src":"3584:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5834,"name":"uint256","nodeType":"ElementaryTypeName","src":"3584:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3583:17:29"},"returnParameters":{"id":5851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5839,"mutability":"mutable","name":"investors","nameLocation":"3639:9:29","nodeType":"VariableDeclaration","scope":5941,"src":"3622:26:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5837,"name":"address","nodeType":"ElementaryTypeName","src":"3622:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5838,"nodeType":"ArrayTypeName","src":"3622:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5842,"mutability":"mutable","name":"amounts","nameLocation":"3667:7:29","nodeType":"VariableDeclaration","scope":5941,"src":"3650:24:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5840,"name":"uint256","nodeType":"ElementaryTypeName","src":"3650:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5841,"nodeType":"ArrayTypeName","src":"3650:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5846,"mutability":"mutable","name":"tokenIds","nameLocation":"3695:8:29","nodeType":"VariableDeclaration","scope":5941,"src":"3676:27:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":5843,"name":"uint256","nodeType":"ElementaryTypeName","src":"3676:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5844,"nodeType":"ArrayTypeName","src":"3676:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":5845,"nodeType":"ArrayTypeName","src":"3676:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"},{"constant":false,"id":5850,"mutability":"mutable","name":"tokenAmounts","nameLocation":"3724:12:29","nodeType":"VariableDeclaration","scope":5941,"src":"3705:31:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":5847,"name":"uint256","nodeType":"ElementaryTypeName","src":"3705:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5848,"nodeType":"ArrayTypeName","src":"3705:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":5849,"nodeType":"ArrayTypeName","src":"3705:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"}],"src":"3621:116:29"},"scope":6101,"src":"3554:766:29","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6057,"nodeType":"Block","src":"4510:647:29","statements":[{"assignments":[5964],"declarations":[{"constant":false,"id":5964,"mutability":"mutable","name":"investorInvestments","nameLocation":"4533:19:29","nodeType":"VariableDeclaration","scope":6057,"src":"4516:36:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5962,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5963,"nodeType":"ArrayTypeName","src":"4516:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5969,"initialValue":{"arguments":[{"id":5967,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"4585:8:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5965,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"4555:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4567:17:29","memberName":"getInvestorAssets","nodeType":"MemberAccess","referencedDeclaration":6915,"src":"4555:29:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) view external returns (uint256[] memory)"}},"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4555:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4516:78:29"},{"assignments":[5971],"declarations":[{"constant":false,"id":5971,"mutability":"mutable","name":"investmentCount","nameLocation":"4608:15:29","nodeType":"VariableDeclaration","scope":6057,"src":"4600:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5970,"name":"uint256","nodeType":"ElementaryTypeName","src":"4600:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5974,"initialValue":{"expression":{"id":5972,"name":"investorInvestments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5964,"src":"4626:19:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4646:6:29","memberName":"length","nodeType":"MemberAccess","src":"4626:26:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4600:52:29"},{"expression":{"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5975,"name":"assetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"4659:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5979,"name":"investmentCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"4684:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4670:13:29","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":5976,"name":"uint256","nodeType":"ElementaryTypeName","src":"4674:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5977,"nodeType":"ArrayTypeName","src":"4674:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4670:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"4659:41:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5982,"nodeType":"ExpressionStatement","src":"4659:41:29"},{"expression":{"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5983,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"4706:7:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5987,"name":"investmentCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"4730:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4716:13:29","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":5984,"name":"uint256","nodeType":"ElementaryTypeName","src":"4720:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5985,"nodeType":"ArrayTypeName","src":"4720:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4716:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"4706:40:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5990,"nodeType":"ExpressionStatement","src":"4706:40:29"},{"expression":{"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5991,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"4752:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5996,"name":"investmentCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"4779:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4763:15:29","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory[] memory)"},"typeName":{"baseType":{"baseType":{"id":5992,"name":"uint256","nodeType":"ElementaryTypeName","src":"4767:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5993,"nodeType":"ArrayTypeName","src":"4767:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":5994,"nodeType":"ArrayTypeName","src":"4767:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}}},"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4763:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"src":"4752:43:29","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":5999,"nodeType":"ExpressionStatement","src":"4752:43:29"},{"expression":{"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6000,"name":"tokenAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"4801:12:29","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6005,"name":"investmentCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"4832:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4816:15:29","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory[] memory)"},"typeName":{"baseType":{"baseType":{"id":6001,"name":"uint256","nodeType":"ElementaryTypeName","src":"4820:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6002,"nodeType":"ArrayTypeName","src":"4820:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":6003,"nodeType":"ArrayTypeName","src":"4820:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}}},"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4816:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"src":"4801:47:29","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":6008,"nodeType":"ExpressionStatement","src":"4801:47:29"},{"body":{"id":6055,"nodeType":"Block","src":"4901:254:29","statements":[{"assignments":[6020],"declarations":[{"constant":false,"id":6020,"mutability":"mutable","name":"assetId","nameLocation":"4919:7:29","nodeType":"VariableDeclaration","scope":6055,"src":"4911:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6019,"name":"uint256","nodeType":"ElementaryTypeName","src":"4911:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6024,"initialValue":{"baseExpression":{"id":6021,"name":"investorInvestments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5964,"src":"4929:19:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6023,"indexExpression":{"id":6022,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"4949:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4929:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4911:40:29"},{"expression":{"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6025,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"4961:7:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6027,"indexExpression":{"id":6026,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"4969:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4961:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6030,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"5006:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6031,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"5015:8:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6028,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"4974:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4986:19:29","memberName":"getInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":7022,"src":"4974:31:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) view external returns (uint256)"}},"id":6032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4974:50:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4961:63:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6034,"nodeType":"ExpressionStatement","src":"4961:63:29"},{"expression":{"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"baseExpression":{"id":6035,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"5036:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":6037,"indexExpression":{"id":6036,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"5045:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5036:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"baseExpression":{"id":6038,"name":"tokenAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"5049:12:29","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":6040,"indexExpression":{"id":6039,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"5062:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5049:15:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":6041,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"5035:30:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6044,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"5098:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6045,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"5107:8:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6042,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"5068:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5080:17:29","memberName":"getInvestorTokens","nodeType":"MemberAccess","referencedDeclaration":7006,"src":"5068:29:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,address) view external returns (uint256[] memory,uint256[] memory)"}},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5068:48:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"src":"5035:81:29","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6048,"nodeType":"ExpressionStatement","src":"5035:81:29"},{"expression":{"id":6053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6049,"name":"assetIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"5127:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6051,"indexExpression":{"id":6050,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"5136:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5127:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6052,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"5141:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5127:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6054,"nodeType":"ExpressionStatement","src":"5127:21:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6013,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"4875:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6014,"name":"investmentCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"4879:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4875:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6056,"initializationExpression":{"assignments":[6010],"declarations":[{"constant":false,"id":6010,"mutability":"mutable","name":"i","nameLocation":"4868:1:29","nodeType":"VariableDeclaration","scope":6056,"src":"4860:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6009,"name":"uint256","nodeType":"ElementaryTypeName","src":"4860:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6012,"initialValue":{"hexValue":"30","id":6011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4872:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4860:13:29"},"loopExpression":{"expression":{"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4896:3:29","subExpression":{"id":6016,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"4896:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6018,"nodeType":"ExpressionStatement","src":"4896:3:29"},"nodeType":"ForStatement","src":"4855:300:29"}]},"functionSelector":"1e011b3e","id":6058,"implemented":true,"kind":"function","modifiers":[],"name":"getInvestmentsByAddress","nameLocation":"4332:23:29","nodeType":"FunctionDefinition","parameters":{"id":5944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5943,"mutability":"mutable","name":"investor","nameLocation":"4364:8:29","nodeType":"VariableDeclaration","scope":6058,"src":"4356:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5942,"name":"address","nodeType":"ElementaryTypeName","src":"4356:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4355:18:29"},"returnParameters":{"id":5959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5947,"mutability":"mutable","name":"assetIds","nameLocation":"4412:8:29","nodeType":"VariableDeclaration","scope":6058,"src":"4395:25:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5945,"name":"uint256","nodeType":"ElementaryTypeName","src":"4395:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5946,"nodeType":"ArrayTypeName","src":"4395:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5950,"mutability":"mutable","name":"amounts","nameLocation":"4439:7:29","nodeType":"VariableDeclaration","scope":6058,"src":"4422:24:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5948,"name":"uint256","nodeType":"ElementaryTypeName","src":"4422:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5949,"nodeType":"ArrayTypeName","src":"4422:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5954,"mutability":"mutable","name":"tokenIds","nameLocation":"4467:8:29","nodeType":"VariableDeclaration","scope":6058,"src":"4448:27:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":5951,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5952,"nodeType":"ArrayTypeName","src":"4448:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":5953,"nodeType":"ArrayTypeName","src":"4448:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"},{"constant":false,"id":5958,"mutability":"mutable","name":"tokenAmounts","nameLocation":"4496:12:29","nodeType":"VariableDeclaration","scope":6058,"src":"4477:31:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":5955,"name":"uint256","nodeType":"ElementaryTypeName","src":"4477:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5956,"nodeType":"ArrayTypeName","src":"4477:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":5957,"nodeType":"ArrayTypeName","src":"4477:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"}],"src":"4394:115:29"},"scope":6101,"src":"4323:834:29","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6099,"nodeType":"Block","src":"5329:223:29","statements":[{"expression":{"arguments":[{"arguments":[{"id":6076,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"5362:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6074,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"5343:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5355:6:29","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":6553,"src":"5343:18:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view external returns (bool)"}},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5343:27:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417373657420646f6573206e6f74206578697374","id":6078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5372:22:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_48805f8fa767ef4f6e13e9d1c424df0337974c3d4b0946f6cb5fcbae9385469f","typeString":"literal_string \"Asset does not exist\""},"value":"Asset does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48805f8fa767ef4f6e13e9d1c424df0337974c3d4b0946f6cb5fcbae9385469f","typeString":"literal_string \"Asset does not exist\""}],"id":6073,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5335:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5335:60:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6080,"nodeType":"ExpressionStatement","src":"5335:60:29"},{"expression":{"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6081,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"5406:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6084,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"5447:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6085,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"5456:8:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6082,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"5415:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":6083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5427:19:29","memberName":"getInvestmentAmount","nodeType":"MemberAccess","referencedDeclaration":7022,"src":"5415:31:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) view external returns (uint256)"}},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5415:50:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5406:59:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6088,"nodeType":"ExpressionStatement","src":"5406:59:29"},{"expression":{"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6089,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"5473:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":6090,"name":"tokenAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"5483:12:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":6091,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"5472:24:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6094,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"5529:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6095,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"5538:8:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6092,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"5499:11:29","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5511:17:29","memberName":"getInvestorTokens","nodeType":"MemberAccess","referencedDeclaration":7006,"src":"5499:29:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,address) view external returns (uint256[] memory,uint256[] memory)"}},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5499:48:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"src":"5472:75:29","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6098,"nodeType":"ExpressionStatement","src":"5472:75:29"}]},"functionSelector":"af330623","id":6100,"implemented":true,"kind":"function","modifiers":[],"name":"getInvestmentsByAddressInAsset","nameLocation":"5168:30:29","nodeType":"FunctionDefinition","parameters":{"id":6063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6060,"mutability":"mutable","name":"assetId","nameLocation":"5207:7:29","nodeType":"VariableDeclaration","scope":6100,"src":"5199:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6059,"name":"uint256","nodeType":"ElementaryTypeName","src":"5199:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6062,"mutability":"mutable","name":"investor","nameLocation":"5224:8:29","nodeType":"VariableDeclaration","scope":6100,"src":"5216:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6061,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5198:35:29"},"returnParameters":{"id":6072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6065,"mutability":"mutable","name":"amount","nameLocation":"5263:6:29","nodeType":"VariableDeclaration","scope":6100,"src":"5255:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6064,"name":"uint256","nodeType":"ElementaryTypeName","src":"5255:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6068,"mutability":"mutable","name":"tokenIds","nameLocation":"5288:8:29","nodeType":"VariableDeclaration","scope":6100,"src":"5271:25:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6066,"name":"uint256","nodeType":"ElementaryTypeName","src":"5271:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6067,"nodeType":"ArrayTypeName","src":"5271:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6071,"mutability":"mutable","name":"tokenAmounts","nameLocation":"5315:12:29","nodeType":"VariableDeclaration","scope":6100,"src":"5298:29:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6069,"name":"uint256","nodeType":"ElementaryTypeName","src":"5298:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6070,"nodeType":"ArrayTypeName","src":"5298:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5254:74:29"},"scope":6101,"src":"5159:393:29","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":6102,"src":"124:5433:29","usedErrors":[]}],"src":"32:5525:29"},"id":29},"contracts/NFTVenture.sol":{"ast":{"absolutePath":"contracts/NFTVenture.sol","exportedSymbols":{"Address":[4011],"Asset":[4654],"Category":[4598],"Context":[4034],"ERC165":[4261],"ERC721":[3027],"ERC721Burnable":[3191],"ERC721Enumerable":[3529],"ERC721URIStorage":[3657],"IERC165":[4273],"IERC721":[3143],"IERC721Enumerable":[3688],"IERC721Metadata":[3715],"IERC721Receiver":[3161],"NFTVenture":[7155],"NewReward":[4622],"Ownable":[109],"Pausable":[201],"ProjectStatus":[4592],"Reward":[4611],"Strings":[4237]},"id":7156,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6103,"literals":["solidity",">=","0.8",".0","<=","0.8",".19"],"nodeType":"PragmaDirective","src":"32:33:30"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":6104,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7156,"sourceUnit":3028,"src":"67:57:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol","id":6105,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7156,"sourceUnit":3530,"src":"125:78:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":6106,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7156,"sourceUnit":3658,"src":"204:78:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","file":"@openzeppelin/contracts/security/Pausable.sol","id":6107,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7156,"sourceUnit":202,"src":"283:55:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6108,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7156,"sourceUnit":110,"src":"339:52:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol","id":6109,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7156,"sourceUnit":3192,"src":"392:76:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/AssetStruct.sol","file":"./AssetStruct.sol","id":6110,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7156,"sourceUnit":4655,"src":"469:27:30","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6111,"name":"ERC721","nameLocations":["525:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":3027,"src":"525:6:30"},"id":6112,"nodeType":"InheritanceSpecifier","src":"525:6:30"},{"baseName":{"id":6113,"name":"ERC721Enumerable","nameLocations":["537:16:30"],"nodeType":"IdentifierPath","referencedDeclaration":3529,"src":"537:16:30"},"id":6114,"nodeType":"InheritanceSpecifier","src":"537:16:30"},{"baseName":{"id":6115,"name":"ERC721URIStorage","nameLocations":["559:16:30"],"nodeType":"IdentifierPath","referencedDeclaration":3657,"src":"559:16:30"},"id":6116,"nodeType":"InheritanceSpecifier","src":"559:16:30"},{"baseName":{"id":6117,"name":"Pausable","nameLocations":["581:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":201,"src":"581:8:30"},"id":6118,"nodeType":"InheritanceSpecifier","src":"581:8:30"},{"baseName":{"id":6119,"name":"Ownable","nameLocations":["595:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":109,"src":"595:7:30"},"id":6120,"nodeType":"InheritanceSpecifier","src":"595:7:30"},{"baseName":{"id":6121,"name":"ERC721Burnable","nameLocations":["608:14:30"],"nodeType":"IdentifierPath","referencedDeclaration":3191,"src":"608:14:30"},"id":6122,"nodeType":"InheritanceSpecifier","src":"608:14:30"}],"canonicalName":"NFTVenture","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7155,"linearizedBaseContracts":[7155,3191,109,201,3657,3529,3688,3027,3715,3143,4261,4273,4034],"name":"NFTVenture","nameLocation":"507:10:30","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"cd9df190","id":6124,"mutability":"mutable","name":"assetsCount","nameLocation":"658:11:30","nodeType":"VariableDeclaration","scope":7155,"src":"643:26:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6123,"name":"uint256","nodeType":"ElementaryTypeName","src":"643:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"129f9008","id":6129,"mutability":"mutable","name":"assetMap","nameLocation":"708:8:30","nodeType":"VariableDeclaration","scope":7155,"src":"675:41:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Asset_$4654_storage_$","typeString":"mapping(uint256 => struct Asset)"},"typeName":{"id":6128,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6125,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"675:25:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Asset_$4654_storage_$","typeString":"mapping(uint256 => struct Asset)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6127,"nodeType":"UserDefinedTypeName","pathNode":{"id":6126,"name":"Asset","nameLocations":["694:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"694:5:30"},"referencedDeclaration":4654,"src":"694:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"}}},"visibility":"public"},{"constant":false,"functionSelector":"518e2bdd","id":6133,"mutability":"mutable","name":"assetExists","nameLocation":"754:11:30","nodeType":"VariableDeclaration","scope":7155,"src":"722:43:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":6132,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6130,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"722:24:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6131,"name":"bool","nodeType":"ElementaryTypeName","src":"741:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"adc649e1","id":6138,"mutability":"mutable","name":"ownerToAssets","nameLocation":"809:13:30","nodeType":"VariableDeclaration","scope":7155,"src":"772:50:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":6137,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6134,"name":"address","nodeType":"ElementaryTypeName","src":"780:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"772:29:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":6135,"name":"uint256","nodeType":"ElementaryTypeName","src":"791:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6136,"nodeType":"ArrayTypeName","src":"791:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"03385770","id":6142,"mutability":"mutable","name":"assetApprovals","nameLocation":"864:14:30","nodeType":"VariableDeclaration","scope":7155,"src":"829:49:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":6141,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6139,"name":"uint256","nodeType":"ElementaryTypeName","src":"837:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"829:27:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6140,"name":"address","nodeType":"ElementaryTypeName","src":"848:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"2a0ee644","id":6146,"mutability":"mutable","name":"assetOwner","nameLocation":"919:10:30","nodeType":"VariableDeclaration","scope":7155,"src":"884:45:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":6145,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6143,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"884:27:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6144,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"77394a73","id":6150,"mutability":"mutable","name":"ownedAssetsCount","nameLocation":"970:16:30","nodeType":"VariableDeclaration","scope":7155,"src":"935:51:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6149,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6147,"name":"address","nodeType":"ElementaryTypeName","src":"943:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"935:27:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6148,"name":"uint256","nodeType":"ElementaryTypeName","src":"954:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"86887e1b","id":6153,"mutability":"mutable","name":"activeAssets","nameLocation":"1039:12:30","nodeType":"VariableDeclaration","scope":7155,"src":"1022:29:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":6151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1022:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6152,"nodeType":"ArrayTypeName","src":"1022:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":false,"functionSelector":"84bbffe7","id":6156,"mutability":"mutable","name":"fundedAssets","nameLocation":"1074:12:30","nodeType":"VariableDeclaration","scope":7155,"src":"1057:29:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":6154,"name":"uint256","nodeType":"ElementaryTypeName","src":"1057:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6155,"nodeType":"ArrayTypeName","src":"1057:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":false,"functionSelector":"f35b25a8","id":6159,"mutability":"mutable","name":"failedAssets","nameLocation":"1109:12:30","nodeType":"VariableDeclaration","scope":7155,"src":"1092:29:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":6157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6158,"nodeType":"ArrayTypeName","src":"1092:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":false,"functionSelector":"33a90c36","id":6162,"mutability":"mutable","name":"completedAssets","nameLocation":"1144:15:30","nodeType":"VariableDeclaration","scope":7155,"src":"1127:32:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":6160,"name":"uint256","nodeType":"ElementaryTypeName","src":"1127:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6161,"nodeType":"ArrayTypeName","src":"1127:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":false,"functionSelector":"68ad1c79","id":6168,"mutability":"mutable","name":"categoryAssets","nameLocation":"1236:14:30","nodeType":"VariableDeclaration","scope":7155,"src":"1198:52:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_Category_$4598_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(enum Category => uint256[])"},"typeName":{"id":6167,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6164,"nodeType":"UserDefinedTypeName","pathNode":{"id":6163,"name":"Category","nameLocations":["1206:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":4598,"src":"1206:8:30"},"referencedDeclaration":4598,"src":"1206:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Category_$4598","typeString":"enum Category"}},"nodeType":"Mapping","src":"1198:30:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_Category_$4598_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(enum Category => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":6165,"name":"uint256","nodeType":"ElementaryTypeName","src":"1218:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6166,"nodeType":"ArrayTypeName","src":"1218:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"ae908698","id":6174,"mutability":"mutable","name":"investmentAmountOf","nameLocation":"1331:18:30","nodeType":"VariableDeclaration","scope":7155,"src":"1276:73:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":6173,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6169,"name":"uint256","nodeType":"ElementaryTypeName","src":"1284:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1276:47:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6172,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6170,"name":"address","nodeType":"ElementaryTypeName","src":"1303:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1295:27:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6171,"name":"uint256","nodeType":"ElementaryTypeName","src":"1314:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"c0adb910","id":6178,"mutability":"mutable","name":"investmentReceived","nameLocation":"1390:18:30","nodeType":"VariableDeclaration","scope":7155,"src":"1355:53:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":6177,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1363:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1355:27:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6176,"name":"uint256","nodeType":"ElementaryTypeName","src":"1374:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"c619c4a2","id":6183,"mutability":"mutable","name":"assetInvestors","nameLocation":"1451:14:30","nodeType":"VariableDeclaration","scope":7155,"src":"1414:51:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"typeName":{"id":6182,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6179,"name":"uint256","nodeType":"ElementaryTypeName","src":"1422:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1414:29:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":6180,"name":"address","nodeType":"ElementaryTypeName","src":"1433:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6181,"nodeType":"ArrayTypeName","src":"1433:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"b6160915","id":6187,"mutability":"mutable","name":"isTransferAllowed","nameLocation":"1503:17:30","nodeType":"VariableDeclaration","scope":7155,"src":"1471:49:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":6186,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6184,"name":"uint256","nodeType":"ElementaryTypeName","src":"1479:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1471:24:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6185,"name":"bool","nodeType":"ElementaryTypeName","src":"1490:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"6dd501d7","id":6191,"mutability":"mutable","name":"isRefundingAllowed","nameLocation":"1558:18:30","nodeType":"VariableDeclaration","scope":7155,"src":"1526:50:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":6190,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1526:24:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6189,"name":"bool","nodeType":"ElementaryTypeName","src":"1545:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"fd27ff81","id":6195,"mutability":"mutable","name":"investmentRefunded","nameLocation":"1617:18:30","nodeType":"VariableDeclaration","scope":7155,"src":"1582:53:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":6194,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6192,"name":"uint256","nodeType":"ElementaryTypeName","src":"1590:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1582:27:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1601:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"8ddac1ef","id":6201,"mutability":"mutable","name":"pendingReturns","nameLocation":"1696:14:30","nodeType":"VariableDeclaration","scope":7155,"src":"1641:69:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":6200,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1649:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1641:47:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6199,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6197,"name":"address","nodeType":"ElementaryTypeName","src":"1668:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1660:27:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1679:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"cbeaba77","id":6209,"mutability":"mutable","name":"investorTokens","nameLocation":"1799:14:30","nodeType":"VariableDeclaration","scope":7155,"src":"1716:97:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"},"typeName":{"id":6208,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6202,"name":"uint256","nodeType":"ElementaryTypeName","src":"1724:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1716:67:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6207,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6203,"name":"address","nodeType":"ElementaryTypeName","src":"1743:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1735:47:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6206,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6204,"name":"uint256","nodeType":"ElementaryTypeName","src":"1762:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1754:27:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6205,"name":"uint256","nodeType":"ElementaryTypeName","src":"1773:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}}},"visibility":"public"},{"constant":false,"functionSelector":"5531ad6a","id":6213,"mutability":"mutable","name":"totalInvestors","nameLocation":"1854:14:30","nodeType":"VariableDeclaration","scope":7155,"src":"1819:49:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":6212,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6210,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1819:27:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6211,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"32a64370","id":6217,"mutability":"mutable","name":"totalInvestment","nameLocation":"1909:15:30","nodeType":"VariableDeclaration","scope":7155,"src":"1874:50:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":6216,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1882:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1874:27:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6215,"name":"uint256","nodeType":"ElementaryTypeName","src":"1893:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"ae7d9553","id":6222,"mutability":"mutable","name":"investorAssets","nameLocation":"1967:14:30","nodeType":"VariableDeclaration","scope":7155,"src":"1930:51:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":6221,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6218,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1930:29:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":6219,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6220,"nodeType":"ArrayTypeName","src":"1949:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"body":{"id":6229,"nodeType":"Block","src":"2053:2:30","statements":[]},"id":6230,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4672616374696f6e616c435456","id":6225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2028:15:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d2a9ccc1dacb296c347b0d2ce391b3caa9204fc37abf501ab0f4e9af97ea74b","typeString":"literal_string \"FractionalCTV\""},"value":"FractionalCTV"},{"hexValue":"46435456","id":6226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2045:6:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_63e683165d990f3cbb79623a7a2428baa527a304a0f1b8778573dcee7af196d2","typeString":"literal_string \"FCTV\""},"value":"FCTV"}],"id":6227,"kind":"baseConstructorSpecifier","modifierName":{"id":6224,"name":"ERC721","nameLocations":["2021:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":3027,"src":"2021:6:30"},"nodeType":"ModifierInvocation","src":"2021:31:30"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6223,"nodeType":"ParameterList","parameters":[],"src":"2018:2:30"},"returnParameters":{"id":6228,"nodeType":"ParameterList","parameters":[],"src":"2053:0:30"},"scope":7155,"src":"2007:48:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6238,"nodeType":"Block","src":"2095:25:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6235,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"2105:6:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2105:8:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6237,"nodeType":"ExpressionStatement","src":"2105:8:30"}]},"functionSelector":"8456cb59","id":6239,"implemented":true,"kind":"function","modifiers":[{"id":6233,"kind":"modifierInvocation","modifierName":{"id":6232,"name":"onlyOwner","nameLocations":["2085:9:30"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2085:9:30"},"nodeType":"ModifierInvocation","src":"2085:9:30"}],"name":"pause","nameLocation":"2070:5:30","nodeType":"FunctionDefinition","parameters":{"id":6231,"nodeType":"ParameterList","parameters":[],"src":"2075:2:30"},"returnParameters":{"id":6234,"nodeType":"ParameterList","parameters":[],"src":"2095:0:30"},"scope":7155,"src":"2061:59:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6247,"nodeType":"Block","src":"2162:27:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6244,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"2172:8:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2172:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6246,"nodeType":"ExpressionStatement","src":"2172:10:30"}]},"functionSelector":"3f4ba83a","id":6248,"implemented":true,"kind":"function","modifiers":[{"id":6242,"kind":"modifierInvocation","modifierName":{"id":6241,"name":"onlyOwner","nameLocations":["2152:9:30"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2152:9:30"},"nodeType":"ModifierInvocation","src":"2152:9:30"}],"name":"unpause","nameLocation":"2135:7:30","nodeType":"FunctionDefinition","parameters":{"id":6240,"nodeType":"ParameterList","parameters":[],"src":"2142:2:30"},"returnParameters":{"id":6243,"nodeType":"ParameterList","parameters":[],"src":"2162:0:30"},"scope":7155,"src":"2126:63:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2424],"body":{"id":6256,"nodeType":"Block","src":"2262:26:30","statements":[{"expression":{"hexValue":"","id":6254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2279:2:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":6253,"id":6255,"nodeType":"Return","src":"2272:9:30"}]},"id":6257,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"2204:8:30","nodeType":"FunctionDefinition","overrides":{"id":6250,"nodeType":"OverrideSpecifier","overrides":[],"src":"2229:8:30"},"parameters":{"id":6249,"nodeType":"ParameterList","parameters":[],"src":"2212:2:30"},"returnParameters":{"id":6253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6257,"src":"2247:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6251,"name":"string","nodeType":"ElementaryTypeName","src":"2247:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2246:15:30"},"scope":7155,"src":"2195:93:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6275,"nodeType":"Block","src":"2399:80:30","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":6267,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"2419:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2419:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6269,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"2433:9:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6270,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"2444:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6266,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"2409:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2409:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6272,"nodeType":"ExpressionStatement","src":"2409:42:30"},{"expression":{"hexValue":"74727565","id":6273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2468:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6265,"id":6274,"nodeType":"Return","src":"2461:11:30"}]},"functionSelector":"a9059cbb","id":6276,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"2303:8:30","nodeType":"FunctionDefinition","parameters":{"id":6262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6259,"mutability":"mutable","name":"recipient","nameLocation":"2329:9:30","nodeType":"VariableDeclaration","scope":6276,"src":"2321:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6258,"name":"address","nodeType":"ElementaryTypeName","src":"2321:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6261,"mutability":"mutable","name":"amount","nameLocation":"2356:6:30","nodeType":"VariableDeclaration","scope":6276,"src":"2348:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6260,"name":"uint256","nodeType":"ElementaryTypeName","src":"2348:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2311:57:30"},"returnParameters":{"id":6265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6276,"src":"2393:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6263,"name":"bool","nodeType":"ElementaryTypeName","src":"2393:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2392:6:30"},"scope":7155,"src":"2294:185:30","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3026,3367],"body":{"id":6298,"nodeType":"Block","src":"2646:62:30","statements":[{"expression":{"arguments":[{"id":6293,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"2683:4:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6294,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6280,"src":"2689:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6295,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6282,"src":"2693:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6290,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2656:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NFTVenture_$7155_$","typeString":"type(contract super NFTVenture)"}},"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2662:20:30","memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":3367,"src":"2656:26:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2656:45:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6297,"nodeType":"ExpressionStatement","src":"2656:45:30"}]},"id":6299,"implemented":true,"kind":"function","modifiers":[{"id":6288,"kind":"modifierInvocation","modifierName":{"id":6287,"name":"whenNotPaused","nameLocations":["2632:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":157,"src":"2632:13:30"},"nodeType":"ModifierInvocation","src":"2632:13:30"}],"name":"_beforeTokenTransfer","nameLocation":"2494:20:30","nodeType":"FunctionDefinition","overrides":{"id":6286,"nodeType":"OverrideSpecifier","overrides":[{"id":6284,"name":"ERC721","nameLocations":["2606:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":3027,"src":"2606:6:30"},{"id":6285,"name":"ERC721Enumerable","nameLocations":["2614:16:30"],"nodeType":"IdentifierPath","referencedDeclaration":3529,"src":"2614:16:30"}],"src":"2597:34:30"},"parameters":{"id":6283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6278,"mutability":"mutable","name":"from","nameLocation":"2532:4:30","nodeType":"VariableDeclaration","scope":6299,"src":"2524:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6277,"name":"address","nodeType":"ElementaryTypeName","src":"2524:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6280,"mutability":"mutable","name":"to","nameLocation":"2554:2:30","nodeType":"VariableDeclaration","scope":6299,"src":"2546:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6279,"name":"address","nodeType":"ElementaryTypeName","src":"2546:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6282,"mutability":"mutable","name":"tokenId","nameLocation":"2574:7:30","nodeType":"VariableDeclaration","scope":6299,"src":"2566:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6281,"name":"uint256","nodeType":"ElementaryTypeName","src":"2566:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2514:73:30"},"returnParameters":{"id":6289,"nodeType":"ParameterList","parameters":[],"src":"2646:0:30"},"scope":7155,"src":"2485:223:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2858,3656],"body":{"id":6313,"nodeType":"Block","src":"2804:37:30","statements":[{"expression":{"arguments":[{"id":6310,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6301,"src":"2826:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6307,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2814:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NFTVenture_$7155_$","typeString":"type(contract super NFTVenture)"}},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2820:5:30","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":3656,"src":"2814:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2814:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6312,"nodeType":"ExpressionStatement","src":"2814:20:30"}]},"id":6314,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"2723:5:30","nodeType":"FunctionDefinition","overrides":{"id":6305,"nodeType":"OverrideSpecifier","overrides":[{"id":6303,"name":"ERC721","nameLocations":["2778:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":3027,"src":"2778:6:30"},{"id":6304,"name":"ERC721URIStorage","nameLocations":["2786:16:30"],"nodeType":"IdentifierPath","referencedDeclaration":3657,"src":"2786:16:30"}],"src":"2769:34:30"},"parameters":{"id":6302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6301,"mutability":"mutable","name":"tokenId","nameLocation":"2746:7:30","nodeType":"VariableDeclaration","scope":6314,"src":"2738:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6300,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2728:31:30"},"returnParameters":{"id":6306,"nodeType":"ParameterList","parameters":[],"src":"2804:0:30"},"scope":7155,"src":"2714:127:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2415,3604],"body":{"id":6329,"nodeType":"Block","src":"2967:47:30","statements":[{"expression":{"arguments":[{"id":6326,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6316,"src":"2999:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6324,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2984:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NFTVenture_$7155_$","typeString":"type(contract super NFTVenture)"}},"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2990:8:30","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":3604,"src":"2984:14:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2984:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6323,"id":6328,"nodeType":"Return","src":"2977:30:30"}]},"functionSelector":"c87b56dd","id":6330,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2856:8:30","nodeType":"FunctionDefinition","overrides":{"id":6320,"nodeType":"OverrideSpecifier","overrides":[{"id":6318,"name":"ERC721","nameLocations":["2917:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":3027,"src":"2917:6:30"},{"id":6319,"name":"ERC721URIStorage","nameLocations":["2925:16:30"],"nodeType":"IdentifierPath","referencedDeclaration":3657,"src":"2925:16:30"}],"src":"2908:34:30"},"parameters":{"id":6317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6316,"mutability":"mutable","name":"tokenId","nameLocation":"2882:7:30","nodeType":"VariableDeclaration","scope":6330,"src":"2874:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6315,"name":"uint256","nodeType":"ElementaryTypeName","src":"2874:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2864:31:30"},"returnParameters":{"id":6323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6330,"src":"2952:13:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6321,"name":"string","nodeType":"ElementaryTypeName","src":"2952:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2951:15:30"},"scope":7155,"src":"2847:167:30","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[2301,3241],"body":{"id":6345,"nodeType":"Block","src":"3143:60:30","statements":[{"expression":{"arguments":[{"id":6342,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"3184:11:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":6340,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3160:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NFTVenture_$7155_$","typeString":"type(contract super NFTVenture)"}},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3166:17:30","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3241,"src":"3160:23:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3160:36:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6339,"id":6344,"nodeType":"Return","src":"3153:43:30"}]},"functionSelector":"01ffc9a7","id":6346,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3029:17:30","nodeType":"FunctionDefinition","overrides":{"id":6336,"nodeType":"OverrideSpecifier","overrides":[{"id":6334,"name":"ERC721","nameLocations":["3102:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":3027,"src":"3102:6:30"},{"id":6335,"name":"ERC721Enumerable","nameLocations":["3110:16:30"],"nodeType":"IdentifierPath","referencedDeclaration":3529,"src":"3110:16:30"}],"src":"3093:34:30"},"parameters":{"id":6333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6332,"mutability":"mutable","name":"interfaceId","nameLocation":"3063:11:30","nodeType":"VariableDeclaration","scope":6346,"src":"3056:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6331,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3056:6:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3046:34:30"},"returnParameters":{"id":6339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6346,"src":"3137:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6337,"name":"bool","nodeType":"ElementaryTypeName","src":"3137:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3136:6:30"},"scope":7155,"src":"3020:183:30","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6360,"nodeType":"Block","src":"3246:67:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6351,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3264:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3268:6:30","memberName":"sender","nodeType":"MemberAccess","src":"3264:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":6354,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"3286:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6353,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[6412],"referencedDeclaration":6412,"src":"3278:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3278:16:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3264:30:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6350,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3256:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3256:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6358,"nodeType":"ExpressionStatement","src":"3256:39:30"},{"id":6359,"nodeType":"PlaceholderStatement","src":"3305:1:30"}]},"id":6361,"name":"isNFTOwner","nameLocation":"3218:10:30","nodeType":"ModifierDefinition","parameters":{"id":6349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6348,"mutability":"mutable","name":"assetId","nameLocation":"3237:7:30","nodeType":"VariableDeclaration","scope":6361,"src":"3229:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6347,"name":"uint256","nodeType":"ElementaryTypeName","src":"3229:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3228:17:30"},"src":"3209:104:30","virtual":false,"visibility":"internal"},{"body":{"id":6382,"nodeType":"Block","src":"3370:175:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6367,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3401:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3405:6:30","memberName":"sender","nodeType":"MemberAccess","src":"3401:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3423:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3415:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6369,"name":"address","nodeType":"ElementaryTypeName","src":"3415:7:30","typeDescriptions":{}}},"id":6372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3401:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373","id":6374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3439:44:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","typeString":"literal_string \"ERC721: balance query for the zero address\""},"value":"ERC721: balance query for the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","typeString":"literal_string \"ERC721: balance query for the zero address\""}],"id":6366,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3380:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3380:113:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6376,"nodeType":"ExpressionStatement","src":"3380:113:30"},{"expression":{"baseExpression":{"id":6377,"name":"ownedAssetsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6150,"src":"3510:16:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6380,"indexExpression":{"expression":{"id":6378,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3527:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3531:6:30","memberName":"sender","nodeType":"MemberAccess","src":"3527:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3510:28:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6365,"id":6381,"nodeType":"Return","src":"3503:35:30"}]},"functionSelector":"722713f7","id":6383,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3328:9:30","nodeType":"FunctionDefinition","parameters":{"id":6362,"nodeType":"ParameterList","parameters":[],"src":"3337:2:30"},"returnParameters":{"id":6365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6383,"src":"3361:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6363,"name":"uint256","nodeType":"ElementaryTypeName","src":"3361:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3360:9:30"},"scope":7155,"src":"3319:226:30","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[2353,3076],"body":{"id":6411,"nodeType":"Block","src":"3655:129:30","statements":[{"assignments":[6394],"declarations":[{"constant":false,"id":6394,"mutability":"mutable","name":"owner","nameLocation":"3673:5:30","nodeType":"VariableDeclaration","scope":6411,"src":"3665:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6393,"name":"address","nodeType":"ElementaryTypeName","src":"3665:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6398,"initialValue":{"baseExpression":{"id":6395,"name":"assetOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"3681:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":6397,"indexExpression":{"id":6396,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6385,"src":"3692:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3681:19:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3665:35:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6400,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6394,"src":"3718:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3735:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3727:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6401,"name":"address","nodeType":"ElementaryTypeName","src":"3727:7:30","typeDescriptions":{}}},"id":6404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3727:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3718:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f4173736574457869737473","id":6406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3739:15:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_47ebb8a36747f9ee8b839f6a9d77dd9c0f69a1117e7ba768e56c7606d87b2519","typeString":"literal_string \"NoAssetExists\""},"value":"NoAssetExists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47ebb8a36747f9ee8b839f6a9d77dd9c0f69a1117e7ba768e56c7606d87b2519","typeString":"literal_string \"NoAssetExists\""}],"id":6399,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3710:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3710:45:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6408,"nodeType":"ExpressionStatement","src":"3710:45:30"},{"expression":{"id":6409,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6394,"src":"3772:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6392,"id":6410,"nodeType":"Return","src":"3765:12:30"}]},"functionSelector":"6352211e","id":6412,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"3560:7:30","nodeType":"FunctionDefinition","overrides":{"id":6389,"nodeType":"OverrideSpecifier","overrides":[{"id":6387,"name":"ERC721","nameLocations":["3620:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":3027,"src":"3620:6:30"},{"id":6388,"name":"IERC721","nameLocations":["3628:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":3143,"src":"3628:7:30"}],"src":"3611:25:30"},"parameters":{"id":6386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6385,"mutability":"mutable","name":"assetId","nameLocation":"3585:7:30","nodeType":"VariableDeclaration","scope":6412,"src":"3577:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6384,"name":"uint256","nodeType":"ElementaryTypeName","src":"3577:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3567:31:30"},"returnParameters":{"id":6392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6412,"src":"3646:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6390,"name":"address","nodeType":"ElementaryTypeName","src":"3646:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3645:9:30"},"scope":7155,"src":"3551:233:30","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[2468,3104],"body":{"id":6455,"nodeType":"Block","src":"3891:242:30","statements":[{"assignments":[6423],"declarations":[{"constant":false,"id":6423,"mutability":"mutable","name":"owner","nameLocation":"3909:5:30","nodeType":"VariableDeclaration","scope":6455,"src":"3901:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6422,"name":"address","nodeType":"ElementaryTypeName","src":"3901:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6427,"initialValue":{"arguments":[{"id":6425,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"3925:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6424,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[6412],"referencedDeclaration":6412,"src":"3917:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3917:16:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3901:32:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6429,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"3951:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6430,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"3957:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3951:11:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43757272656e744f776e6572417070726f76616c","id":6432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3964:22:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_163c0a06dd53f7f420a56300890f24fe532a10495a35cdee6fbdc77e3797ff1e","typeString":"literal_string \"CurrentOwnerApproval\""},"value":"CurrentOwnerApproval"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_163c0a06dd53f7f420a56300890f24fe532a10495a35cdee6fbdc77e3797ff1e","typeString":"literal_string \"CurrentOwnerApproval\""}],"id":6428,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3943:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:44:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6434,"nodeType":"ExpressionStatement","src":"3943:44:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6436,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4005:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4009:6:30","memberName":"sender","nodeType":"MemberAccess","src":"4005:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6438,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"4019:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4005:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7454686541737365744f776e6572","id":6440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4026:18:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_b1f062c4fa984b323dd0c6c41c64cb97eb7d4081b7658c74db031b8e689769d5","typeString":"literal_string \"NotTheAssetOwner\""},"value":"NotTheAssetOwner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b1f062c4fa984b323dd0c6c41c64cb97eb7d4081b7658c74db031b8e689769d5","typeString":"literal_string \"NotTheAssetOwner\""}],"id":6435,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3997:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3997:48:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6442,"nodeType":"ExpressionStatement","src":"3997:48:30"},{"expression":{"id":6447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6443,"name":"assetApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6142,"src":"4055:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":6445,"indexExpression":{"id":6444,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"4070:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4055:23:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6446,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"4081:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4055:28:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6448,"nodeType":"ExpressionStatement","src":"4055:28:30"},{"eventCall":{"arguments":[{"id":6450,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"4107:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6451,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"4114:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6452,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"4118:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6449,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"4098:8:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6454,"nodeType":"EmitStatement","src":"4093:33:30"}]},"functionSelector":"095ea7b3","id":6456,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3799:7:30","nodeType":"FunctionDefinition","overrides":{"id":6420,"nodeType":"OverrideSpecifier","overrides":[{"id":6418,"name":"ERC721","nameLocations":["3874:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":3027,"src":"3874:6:30"},{"id":6419,"name":"IERC721","nameLocations":["3882:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":3143,"src":"3882:7:30"}],"src":"3865:25:30"},"parameters":{"id":6417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6414,"mutability":"mutable","name":"to","nameLocation":"3824:2:30","nodeType":"VariableDeclaration","scope":6456,"src":"3816:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6413,"name":"address","nodeType":"ElementaryTypeName","src":"3816:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6416,"mutability":"mutable","name":"assetId","nameLocation":"3844:7:30","nodeType":"VariableDeclaration","scope":6456,"src":"3836:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6415,"name":"uint256","nodeType":"ElementaryTypeName","src":"3836:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3806:51:30"},"returnParameters":{"id":6421,"nodeType":"ParameterList","parameters":[],"src":"3891:0:30"},"scope":7155,"src":"3790:343:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2489,3112],"body":{"id":6477,"nodeType":"Block","src":"4247:164:30","statements":[{"expression":{"arguments":[{"arguments":[{"id":6468,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6458,"src":"4286:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6467,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"4278:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4278:16:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":6470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4308:46:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","typeString":"literal_string \"ERC721: approved query for nonexistent token\""},"value":"ERC721: approved query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","typeString":"literal_string \"ERC721: approved query for nonexistent token\""}],"id":6466,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4257:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4257:107:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6472,"nodeType":"ExpressionStatement","src":"4257:107:30"},{"expression":{"baseExpression":{"id":6473,"name":"assetApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6142,"src":"4381:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":6475,"indexExpression":{"id":6474,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6458,"src":"4396:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4381:23:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6465,"id":6476,"nodeType":"Return","src":"4374:30:30"}]},"functionSelector":"081812fc","id":6478,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4148:11:30","nodeType":"FunctionDefinition","overrides":{"id":6462,"nodeType":"OverrideSpecifier","overrides":[{"id":6460,"name":"ERC721","nameLocations":["4212:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":3027,"src":"4212:6:30"},{"id":6461,"name":"IERC721","nameLocations":["4220:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":3143,"src":"4220:7:30"}],"src":"4203:25:30"},"parameters":{"id":6459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6458,"mutability":"mutable","name":"assetId","nameLocation":"4177:7:30","nodeType":"VariableDeclaration","scope":6478,"src":"4169:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6457,"name":"uint256","nodeType":"ElementaryTypeName","src":"4169:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4159:31:30"},"returnParameters":{"id":6465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6478,"src":"4238:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6463,"name":"address","nodeType":"ElementaryTypeName","src":"4238:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4237:9:30"},"scope":7155,"src":"4139:272:30","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6501,"nodeType":"Block","src":"4482:118:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6485,"name":"assetApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6142,"src":"4496:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":6487,"indexExpression":{"id":6486,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"4511:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4496:23:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6488,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"4523:8:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4496:35:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6500,"nodeType":"IfStatement","src":"4492:102:30","trueBody":{"id":6499,"nodeType":"Block","src":"4533:61:30","statements":[{"expression":{"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6490,"name":"assetApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6142,"src":"4547:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":6492,"indexExpression":{"id":6491,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"4562:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4547:23:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":6495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4581:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4573:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6493,"name":"address","nodeType":"ElementaryTypeName","src":"4573:7:30","typeDescriptions":{}}},"id":6496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4573:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4547:36:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6498,"nodeType":"ExpressionStatement","src":"4547:36:30"}]}}]},"functionSelector":"daa5fe2d","id":6502,"implemented":true,"kind":"function","modifiers":[],"name":"clearApproval","nameLocation":"4426:13:30","nodeType":"FunctionDefinition","parameters":{"id":6483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6480,"mutability":"mutable","name":"assetId","nameLocation":"4448:7:30","nodeType":"VariableDeclaration","scope":6502,"src":"4440:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6479,"name":"uint256","nodeType":"ElementaryTypeName","src":"4440:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6482,"mutability":"mutable","name":"approved","nameLocation":"4465:8:30","nodeType":"VariableDeclaration","scope":6502,"src":"4457:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6481,"name":"address","nodeType":"ElementaryTypeName","src":"4457:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4439:35:30"},"returnParameters":{"id":6484,"nodeType":"ParameterList","parameters":[],"src":"4482:0:30"},"scope":7155,"src":"4417:183:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6540,"nodeType":"Block","src":"4680:186:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6512,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"4698:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4712:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4704:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6513,"name":"address","nodeType":"ElementaryTypeName","src":"4704:7:30","typeDescriptions":{}}},"id":6516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4704:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4698:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a65726f416464726573734d696e6974696e67","id":6518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4716:21:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_20aa11a75d1833cdfdc30a77903ab4f4b008fc90a4cccfa31fc5876e851e35e2","typeString":"literal_string \"ZeroAddressMiniting\""},"value":"ZeroAddressMiniting"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_20aa11a75d1833cdfdc30a77903ab4f4b008fc90a4cccfa31fc5876e851e35e2","typeString":"literal_string \"ZeroAddressMiniting\""}],"id":6511,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4690:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4690:48:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6520,"nodeType":"ExpressionStatement","src":"4690:48:30"},{"expression":{"arguments":[{"id":6522,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"4758:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6523,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6506,"src":"4762:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6521,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2721,2750],"referencedDeclaration":2721,"src":"4748:9:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4748:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6525,"nodeType":"ExpressionStatement","src":"4748:22:30"},{"expression":{"arguments":[{"id":6527,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6506,"src":"4793:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6528,"name":"asseturi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"4802:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6526,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"4780:12:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4780:31:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6530,"nodeType":"ExpressionStatement","src":"4780:31:30"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":6534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4843:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4835:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6532,"name":"address","nodeType":"ElementaryTypeName","src":"4835:7:30","typeDescriptions":{}}},"id":6535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4835:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6536,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"4847:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6537,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6506,"src":"4851:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6531,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"4826:8:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4826:33:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6539,"nodeType":"EmitStatement","src":"4821:38:30"}]},"functionSelector":"d3fc9864","id":6541,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"4615:4:30","nodeType":"FunctionDefinition","parameters":{"id":6509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6504,"mutability":"mutable","name":"to","nameLocation":"4628:2:30","nodeType":"VariableDeclaration","scope":6541,"src":"4620:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6503,"name":"address","nodeType":"ElementaryTypeName","src":"4620:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6506,"mutability":"mutable","name":"assetId","nameLocation":"4640:7:30","nodeType":"VariableDeclaration","scope":6541,"src":"4632:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6505,"name":"uint256","nodeType":"ElementaryTypeName","src":"4632:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6508,"mutability":"mutable","name":"asseturi","nameLocation":"4663:8:30","nodeType":"VariableDeclaration","scope":6541,"src":"4649:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6507,"name":"string","nodeType":"ElementaryTypeName","src":"4649:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4619:53:30"},"returnParameters":{"id":6510,"nodeType":"ParameterList","parameters":[],"src":"4680:0:30"},"scope":7155,"src":"4606:260:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6552,"nodeType":"Block","src":"4932:44:30","statements":[{"expression":{"baseExpression":{"id":6548,"name":"assetExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"4949:11:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":6550,"indexExpression":{"id":6549,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"4961:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4949:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6547,"id":6551,"nodeType":"Return","src":"4942:27:30"}]},"functionSelector":"4f558e79","id":6553,"implemented":true,"kind":"function","modifiers":[],"name":"exists","nameLocation":"4881:6:30","nodeType":"FunctionDefinition","parameters":{"id":6544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6543,"mutability":"mutable","name":"assetId","nameLocation":"4896:7:30","nodeType":"VariableDeclaration","scope":6553,"src":"4888:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6542,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:17:30"},"returnParameters":{"id":6547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6553,"src":"4926:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6545,"name":"bool","nodeType":"ElementaryTypeName","src":"4926:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4925:6:30"},"scope":7155,"src":"4872:104:30","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6586,"nodeType":"Block","src":"5094:235:30","statements":[{"expression":{"arguments":[{"arguments":[{"id":6564,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"5132:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6563,"name":"exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"5125:6:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5125:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":6566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5154:46:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","typeString":"literal_string \"ERC721: operator query for nonexistent token\""},"value":"ERC721: operator query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","typeString":"literal_string \"ERC721: operator query for nonexistent token\""}],"id":6562,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5104:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5104:106:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6568,"nodeType":"ExpressionStatement","src":"5104:106:30"},{"assignments":[6570],"declarations":[{"constant":false,"id":6570,"mutability":"mutable","name":"owner","nameLocation":"5228:5:30","nodeType":"VariableDeclaration","scope":6586,"src":"5220:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6569,"name":"address","nodeType":"ElementaryTypeName","src":"5220:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6574,"initialValue":{"arguments":[{"id":6572,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"5244:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6571,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[6412],"referencedDeclaration":6412,"src":"5236:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":6573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5236:16:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5220:32:30"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6575,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6555,"src":"5270:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6576,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"5281:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5270:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6579,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"5302:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6578,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[6478],"referencedDeclaration":6478,"src":"5290:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":6580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5290:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6581,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6555,"src":"5314:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5290:31:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5270:51:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":6584,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5269:53:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6561,"id":6585,"nodeType":"Return","src":"5262:60:30"}]},"functionSelector":"430c2081","id":6587,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedOrOwner","nameLocation":"4991:17:30","nodeType":"FunctionDefinition","parameters":{"id":6558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6555,"mutability":"mutable","name":"spender","nameLocation":"5026:7:30","nodeType":"VariableDeclaration","scope":6587,"src":"5018:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6554,"name":"address","nodeType":"ElementaryTypeName","src":"5018:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6557,"mutability":"mutable","name":"assetId","nameLocation":"5051:7:30","nodeType":"VariableDeclaration","scope":6587,"src":"5043:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6556,"name":"uint256","nodeType":"ElementaryTypeName","src":"5043:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5008:56:30"},"returnParameters":{"id":6561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6587,"src":"5088:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6559,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5087:6:30"},"scope":7155,"src":"4982:347:30","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6641,"nodeType":"Block","src":"5442:276:30","statements":[{"expression":{"id":6601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6597,"name":"assetMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"5452:8:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Asset_$4654_storage_$","typeString":"mapping(uint256 => struct Asset storage ref)"}},"id":6599,"indexExpression":{"id":6598,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"5461:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5452:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage","typeString":"struct Asset storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6600,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"5472:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"src":"5452:25:30","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage","typeString":"struct Asset storage ref"}},"id":6602,"nodeType":"ExpressionStatement","src":"5452:25:30"},{"expression":{"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6603,"name":"assetOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"5487:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":6605,"indexExpression":{"id":6604,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"5498:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5487:19:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6606,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"5509:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5487:24:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6608,"nodeType":"ExpressionStatement","src":"5487:24:30"},{"expression":{"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5521:22:30","subExpression":{"baseExpression":{"id":6609,"name":"ownedAssetsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6150,"src":"5521:16:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6611,"indexExpression":{"id":6610,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"5538:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5521:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6613,"nodeType":"ExpressionStatement","src":"5521:22:30"},{"expression":{"arguments":[{"id":6618,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"5576:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":6614,"name":"ownerToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"5553:13:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":6616,"indexExpression":{"id":6615,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"5567:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5553:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5571:4:30","memberName":"push","nodeType":"MemberAccess","src":"5553:22:30","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5553:31:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6620,"nodeType":"ExpressionStatement","src":"5553:31:30"},{"expression":{"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6621,"name":"assetExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"5594:11:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":6623,"indexExpression":{"id":6622,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"5606:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5594:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5617:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5594:27:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6626,"nodeType":"ExpressionStatement","src":"5594:27:30"},{"expression":{"arguments":[{"id":6630,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"5649:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6627,"name":"activeAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6153,"src":"5631:12:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5644:4:30","memberName":"push","nodeType":"MemberAccess","src":"5631:17:30","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":6631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6632,"nodeType":"ExpressionStatement","src":"5631:26:30"},{"expression":{"arguments":[{"id":6638,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"5703:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":6633,"name":"categoryAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"5667:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_Category_$4598_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(enum Category => uint256[] storage ref)"}},"id":6636,"indexExpression":{"expression":{"id":6634,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"5682:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":6635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5688:8:30","memberName":"category","nodeType":"MemberAccess","referencedDeclaration":4653,"src":"5682:14:30","typeDescriptions":{"typeIdentifier":"t_enum$_Category_$4598","typeString":"enum Category"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5667:30:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5698:4:30","memberName":"push","nodeType":"MemberAccess","src":"5667:35:30","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5667:44:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6640,"nodeType":"ExpressionStatement","src":"5667:44:30"}]},"functionSelector":"dc289f48","id":6642,"implemented":true,"kind":"function","modifiers":[],"name":"_addAsset","nameLocation":"5344:9:30","nodeType":"FunctionDefinition","parameters":{"id":6595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6589,"mutability":"mutable","name":"assetId","nameLocation":"5371:7:30","nodeType":"VariableDeclaration","scope":6642,"src":"5363:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6588,"name":"uint256","nodeType":"ElementaryTypeName","src":"5363:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6592,"mutability":"mutable","name":"asset","nameLocation":"5401:5:30","nodeType":"VariableDeclaration","scope":6642,"src":"5388:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset"},"typeName":{"id":6591,"nodeType":"UserDefinedTypeName","pathNode":{"id":6590,"name":"Asset","nameLocations":["5388:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"5388:5:30"},"referencedDeclaration":4654,"src":"5388:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"}},"visibility":"internal"},{"constant":false,"id":6594,"mutability":"mutable","name":"to","nameLocation":"5424:2:30","nodeType":"VariableDeclaration","scope":6642,"src":"5416:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6593,"name":"address","nodeType":"ElementaryTypeName","src":"5416:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5353:79:30"},"returnParameters":{"id":6596,"nodeType":"ParameterList","parameters":[],"src":"5442:0:30"},"scope":7155,"src":"5335:383:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6654,"nodeType":"Block","src":"5794:41:30","statements":[{"expression":{"baseExpression":{"id":6650,"name":"assetMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"5811:8:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Asset_$4654_storage_$","typeString":"mapping(uint256 => struct Asset storage ref)"}},"id":6652,"indexExpression":{"id":6651,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6644,"src":"5820:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5811:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage","typeString":"struct Asset storage ref"}},"functionReturnParameters":6649,"id":6653,"nodeType":"Return","src":"5804:24:30"}]},"functionSelector":"eac8f5b8","id":6655,"implemented":true,"kind":"function","modifiers":[],"name":"getAsset","nameLocation":"5733:8:30","nodeType":"FunctionDefinition","parameters":{"id":6645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6644,"mutability":"mutable","name":"assetId","nameLocation":"5750:7:30","nodeType":"VariableDeclaration","scope":6655,"src":"5742:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6643,"name":"uint256","nodeType":"ElementaryTypeName","src":"5742:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5741:17:30"},"returnParameters":{"id":6649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6655,"src":"5780:12:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset"},"typeName":{"id":6647,"nodeType":"UserDefinedTypeName","pathNode":{"id":6646,"name":"Asset","nameLocations":["5780:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"5780:5:30"},"referencedDeclaration":4654,"src":"5780:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"}},"visibility":"internal"}],"src":"5779:14:30"},"scope":7155,"src":"5724:111:30","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6669,"nodeType":"Block","src":"5906:42:30","statements":[{"expression":{"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6663,"name":"assetMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"5916:8:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Asset_$4654_storage_$","typeString":"mapping(uint256 => struct Asset storage ref)"}},"id":6665,"indexExpression":{"id":6664,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"5925:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5916:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage","typeString":"struct Asset storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6666,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"5936:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"src":"5916:25:30","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage","typeString":"struct Asset storage ref"}},"id":6668,"nodeType":"ExpressionStatement","src":"5916:25:30"}]},"functionSelector":"e14ca948","id":6670,"implemented":true,"kind":"function","modifiers":[],"name":"updateAsset","nameLocation":"5850:11:30","nodeType":"FunctionDefinition","parameters":{"id":6661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6657,"mutability":"mutable","name":"assetId","nameLocation":"5870:7:30","nodeType":"VariableDeclaration","scope":6670,"src":"5862:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6656,"name":"uint256","nodeType":"ElementaryTypeName","src":"5862:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6660,"mutability":"mutable","name":"asset","nameLocation":"5892:5:30","nodeType":"VariableDeclaration","scope":6670,"src":"5879:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset"},"typeName":{"id":6659,"nodeType":"UserDefinedTypeName","pathNode":{"id":6658,"name":"Asset","nameLocations":["5879:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"5879:5:30"},"referencedDeclaration":4654,"src":"5879:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"}},"visibility":"internal"}],"src":"5861:37:30"},"returnParameters":{"id":6662,"nodeType":"ParameterList","parameters":[],"src":"5906:0:30"},"scope":7155,"src":"5841:107:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6677,"nodeType":"Block","src":"6010:35:30","statements":[{"expression":{"id":6675,"name":"assetsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"6027:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6674,"id":6676,"nodeType":"Return","src":"6020:18:30"}]},"functionSelector":"0aac5dfd","id":6678,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetsCount","nameLocation":"5963:14:30","nodeType":"FunctionDefinition","parameters":{"id":6671,"nodeType":"ParameterList","parameters":[],"src":"5977:2:30"},"returnParameters":{"id":6674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6678,"src":"6001:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6672,"name":"uint256","nodeType":"ElementaryTypeName","src":"6001:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6000:9:30"},"scope":7155,"src":"5954:91:30","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6684,"nodeType":"Block","src":"6090:30:30","statements":[{"expression":{"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6100:13:30","subExpression":{"id":6681,"name":"assetsCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"6100:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6683,"nodeType":"ExpressionStatement","src":"6100:13:30"}]},"functionSelector":"2c5bdb1f","id":6685,"implemented":true,"kind":"function","modifiers":[],"name":"incrementAssetsCount","nameLocation":"6060:20:30","nodeType":"FunctionDefinition","parameters":{"id":6679,"nodeType":"ParameterList","parameters":[],"src":"6080:2:30"},"returnParameters":{"id":6680,"nodeType":"ParameterList","parameters":[],"src":"6090:0:30"},"scope":7155,"src":"6051:69:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6697,"nodeType":"Block","src":"6220:44:30","statements":[{"expression":{"baseExpression":{"id":6693,"name":"ownerToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"6237:13:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":6695,"indexExpression":{"id":6694,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"6251:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6237:20:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":6692,"id":6696,"nodeType":"Return","src":"6230:27:30"}]},"functionSelector":"f3ab880e","id":6698,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetsOfOwner","nameLocation":"6135:16:30","nodeType":"FunctionDefinition","parameters":{"id":6688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6687,"mutability":"mutable","name":"owner","nameLocation":"6169:5:30","nodeType":"VariableDeclaration","scope":6698,"src":"6161:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6686,"name":"address","nodeType":"ElementaryTypeName","src":"6161:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6151:29:30"},"returnParameters":{"id":6692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6698,"src":"6202:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6689,"name":"uint256","nodeType":"ElementaryTypeName","src":"6202:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6690,"nodeType":"ArrayTypeName","src":"6202:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6201:18:30"},"scope":7155,"src":"6126:138:30","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6728,"nodeType":"Block","src":"6402:241:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6708,"name":"rewardIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"6433:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"baseExpression":{"id":6709,"name":"assetMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"6447:8:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Asset_$4654_storage_$","typeString":"mapping(uint256 => struct Asset storage ref)"}},"id":6711,"indexExpression":{"id":6710,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"6456:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6447:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage","typeString":"struct Asset storage ref"}},"id":6712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6465:7:30","memberName":"rewards","nodeType":"MemberAccess","referencedDeclaration":4640,"src":"6447:25:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Reward_$4611_storage_$dyn_storage","typeString":"struct Reward storage ref[] storage ref"}},"id":6713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6473:6:30","memberName":"length","nodeType":"MemberAccess","src":"6447:32:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6433:46:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642072657761726420696e646578","id":6715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6493:22:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc032befe0f7c745a5e3d343dd96c9ff3ba037ee6ef236c8de38fc5a7d235b69","typeString":"literal_string \"Invalid reward index\""},"value":"Invalid reward index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc032befe0f7c745a5e3d343dd96c9ff3ba037ee6ef236c8de38fc5a7d235b69","typeString":"literal_string \"Invalid reward index\""}],"id":6707,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6412:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6412:113:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6717,"nodeType":"ExpressionStatement","src":"6412:113:30"},{"expression":{"id":6726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":6718,"name":"assetMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"6535:8:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Asset_$4654_storage_$","typeString":"mapping(uint256 => struct Asset storage ref)"}},"id":6720,"indexExpression":{"id":6719,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"6544:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6535:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage","typeString":"struct Asset storage ref"}},"id":6721,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6566:7:30","memberName":"rewards","nodeType":"MemberAccess","referencedDeclaration":4640,"src":"6535:38:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Reward_$4611_storage_$dyn_storage","typeString":"struct Reward storage ref[] storage ref"}},"id":6723,"indexExpression":{"id":6722,"name":"rewardIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"6574:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6535:51:30","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$4611_storage","typeString":"struct Reward storage ref"}},"id":6724,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6600:15:30","memberName":"availableTokens","nodeType":"MemberAccess","referencedDeclaration":4608,"src":"6535:80:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6725,"name":"newAvailableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"6618:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6535:101:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6727,"nodeType":"ExpressionStatement","src":"6535:101:30"}]},"functionSelector":"87a115e6","id":6729,"implemented":true,"kind":"function","modifiers":[],"name":"updateAssetReward","nameLocation":"6279:17:30","nodeType":"FunctionDefinition","parameters":{"id":6705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6700,"mutability":"mutable","name":"assetId","nameLocation":"6314:7:30","nodeType":"VariableDeclaration","scope":6729,"src":"6306:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6699,"name":"uint256","nodeType":"ElementaryTypeName","src":"6306:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6702,"mutability":"mutable","name":"rewardIndex","nameLocation":"6339:11:30","nodeType":"VariableDeclaration","scope":6729,"src":"6331:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6701,"name":"uint256","nodeType":"ElementaryTypeName","src":"6331:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6704,"mutability":"mutable","name":"newAvailableTokens","nameLocation":"6368:18:30","nodeType":"VariableDeclaration","scope":6729,"src":"6360:26:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6703,"name":"uint256","nodeType":"ElementaryTypeName","src":"6360:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6296:96:30"},"returnParameters":{"id":6706,"nodeType":"ParameterList","parameters":[],"src":"6402:0:30"},"scope":7155,"src":"6270:373:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6769,"nodeType":"Block","src":"6875:390:30","statements":[{"assignments":[6746],"declarations":[{"constant":false,"id":6746,"mutability":"mutable","name":"asset","nameLocation":"6899:5:30","nodeType":"VariableDeclaration","scope":6769,"src":"6885:19:30","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"},"typeName":{"id":6745,"nodeType":"UserDefinedTypeName","pathNode":{"id":6744,"name":"Asset","nameLocations":["6885:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"6885:5:30"},"referencedDeclaration":4654,"src":"6885:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"}},"visibility":"internal"}],"id":6750,"initialValue":{"baseExpression":{"id":6747,"name":"assetMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"6907:8:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Asset_$4654_storage_$","typeString":"mapping(uint256 => struct Asset storage ref)"}},"id":6749,"indexExpression":{"id":6748,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"6916:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6907:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage","typeString":"struct Asset storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6885:39:30"},{"expression":{"arguments":[{"arguments":[{"id":6757,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"6998:5:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6758,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"7034:11:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6759,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6737,"src":"7076:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6760,"name":"individualPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"7122:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6761,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6737,"src":"7172:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6764,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"7224:8:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7216:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6762,"name":"uint256","nodeType":"ElementaryTypeName","src":"7216:7:30","typeDescriptions":{}}},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7216:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6756,"name":"Reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"6966:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Reward_$4611_storage_ptr_$","typeString":"type(struct Reward storage pointer)"}},"id":6766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6991:5:30","7021:11:30","7063:11:30","7105:15:30","7155:15:30","7201:13:30"],"names":["title","description","tokenAmount","individualPrice","availableTokens","rewardTokenId"],"nodeType":"FunctionCall","src":"6966:282:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$4611_memory_ptr","typeString":"struct Reward memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Reward_$4611_memory_ptr","typeString":"struct Reward memory"}],"expression":{"expression":{"id":6751,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"6934:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset storage pointer"}},"id":6754,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6940:7:30","memberName":"rewards","nodeType":"MemberAccess","referencedDeclaration":4640,"src":"6934:13:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Reward_$4611_storage_$dyn_storage","typeString":"struct Reward storage ref[] storage ref"}},"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6948:4:30","memberName":"push","nodeType":"MemberAccess","src":"6934:18:30","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Reward_$4611_storage_$dyn_storage_ptr_$_t_struct$_Reward_$4611_storage_$returns$__$attached_to$_t_array$_t_struct$_Reward_$4611_storage_$dyn_storage_ptr_$","typeString":"function (struct Reward storage ref[] storage pointer,struct Reward storage ref)"}},"id":6767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6934:324:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6768,"nodeType":"ExpressionStatement","src":"6934:324:30"}]},"functionSelector":"3f9aa154","id":6770,"implemented":true,"kind":"function","modifiers":[],"name":"handleRewardAddedToAsset","nameLocation":"6658:24:30","nodeType":"FunctionDefinition","parameters":{"id":6742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6731,"mutability":"mutable","name":"assetId","nameLocation":"6700:7:30","nodeType":"VariableDeclaration","scope":6770,"src":"6692:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6730,"name":"uint256","nodeType":"ElementaryTypeName","src":"6692:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6733,"mutability":"mutable","name":"title","nameLocation":"6731:5:30","nodeType":"VariableDeclaration","scope":6770,"src":"6717:19:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6732,"name":"string","nodeType":"ElementaryTypeName","src":"6717:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6735,"mutability":"mutable","name":"description","nameLocation":"6760:11:30","nodeType":"VariableDeclaration","scope":6770,"src":"6746:25:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6734,"name":"string","nodeType":"ElementaryTypeName","src":"6746:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6737,"mutability":"mutable","name":"tokenAmount","nameLocation":"6789:11:30","nodeType":"VariableDeclaration","scope":6770,"src":"6781:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6736,"name":"uint256","nodeType":"ElementaryTypeName","src":"6781:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6739,"mutability":"mutable","name":"individualPrice","nameLocation":"6818:15:30","nodeType":"VariableDeclaration","scope":6770,"src":"6810:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6738,"name":"uint256","nodeType":"ElementaryTypeName","src":"6810:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6741,"mutability":"mutable","name":"rewardId","nameLocation":"6851:8:30","nodeType":"VariableDeclaration","scope":6770,"src":"6843:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6682:183:30"},"returnParameters":{"id":6743,"nodeType":"ParameterList","parameters":[],"src":"6875:0:30"},"scope":7155,"src":"6649:616:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6784,"nodeType":"Block","src":"7381:74:30","statements":[{"expression":{"id":6782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6777,"name":"assetMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"7391:8:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Asset_$4654_storage_$","typeString":"mapping(uint256 => struct Asset storage ref)"}},"id":6779,"indexExpression":{"id":6778,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"7400:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7391:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage","typeString":"struct Asset storage ref"}},"id":6780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7409:18:30","memberName":"rewardTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4645,"src":"7391:36:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6781,"name":"rewardTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"7430:18:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7391:57:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6783,"nodeType":"ExpressionStatement","src":"7391:57:30"}]},"functionSelector":"34899521","id":6785,"implemented":true,"kind":"function","modifiers":[],"name":"updateRewardTokenAddress","nameLocation":"7280:24:30","nodeType":"FunctionDefinition","parameters":{"id":6775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6772,"mutability":"mutable","name":"assetId","nameLocation":"7322:7:30","nodeType":"VariableDeclaration","scope":6785,"src":"7314:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6771,"name":"uint256","nodeType":"ElementaryTypeName","src":"7314:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6774,"mutability":"mutable","name":"rewardTokenAddress","nameLocation":"7347:18:30","nodeType":"VariableDeclaration","scope":6785,"src":"7339:26:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6773,"name":"address","nodeType":"ElementaryTypeName","src":"7339:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7304:67:30"},"returnParameters":{"id":6776,"nodeType":"ParameterList","parameters":[],"src":"7381:0:30"},"scope":7155,"src":"7271:184:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6842,"nodeType":"Block","src":"7574:372:30","statements":[{"expression":{"id":6800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6794,"name":"investmentAmountOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"7584:18:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":6797,"indexExpression":{"id":6795,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"7603:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7584:27:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6798,"indexExpression":{"id":6796,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"7612:8:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7584:37:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6799,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"7625:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7584:47:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6801,"nodeType":"ExpressionStatement","src":"7584:47:30"},{"expression":{"id":6806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6802,"name":"investmentReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"7641:18:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6804,"indexExpression":{"id":6803,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"7660:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7641:27:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6805,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"7672:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7641:37:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6807,"nodeType":"ExpressionStatement","src":"7641:37:30"},{"expression":{"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6808,"name":"totalInvestment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6217,"src":"7688:15:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6810,"indexExpression":{"id":6809,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"7704:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7688:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6811,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"7716:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7688:34:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6813,"nodeType":"ExpressionStatement","src":"7688:34:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":6814,"name":"investmentAmountOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"7736:18:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":6816,"indexExpression":{"id":6815,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"7755:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7736:27:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6818,"indexExpression":{"id":6817,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"7764:8:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7736:37:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6819,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"7777:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7736:47:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6841,"nodeType":"IfStatement","src":"7732:208:30","trueBody":{"id":6840,"nodeType":"Block","src":"7785:155:30","statements":[{"expression":{"arguments":[{"id":6825,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"7828:8:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":6821,"name":"assetInvestors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"7799:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":6823,"indexExpression":{"id":6822,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"7814:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7799:23:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7823:4:30","memberName":"push","nodeType":"MemberAccess","src":"7799:28:30","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":6826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7799:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6827,"nodeType":"ExpressionStatement","src":"7799:38:30"},{"expression":{"arguments":[{"id":6832,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"7881:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":6828,"name":"investorAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"7851:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":6830,"indexExpression":{"id":6829,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"7866:8:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7851:24:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":6831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7876:4:30","memberName":"push","nodeType":"MemberAccess","src":"7851:29:30","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7851:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6834,"nodeType":"ExpressionStatement","src":"7851:38:30"},{"expression":{"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7904:25:30","subExpression":{"baseExpression":{"id":6835,"name":"totalInvestors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"7904:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6837,"indexExpression":{"id":6836,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"7919:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7904:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6839,"nodeType":"ExpressionStatement","src":"7904:25:30"}]}}]},"functionSelector":"79f48424","id":6843,"implemented":true,"kind":"function","modifiers":[],"name":"addInvestment","nameLocation":"7470:13:30","nodeType":"FunctionDefinition","parameters":{"id":6792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6787,"mutability":"mutable","name":"assetId","nameLocation":"7501:7:30","nodeType":"VariableDeclaration","scope":6843,"src":"7493:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6786,"name":"uint256","nodeType":"ElementaryTypeName","src":"7493:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6789,"mutability":"mutable","name":"investor","nameLocation":"7526:8:30","nodeType":"VariableDeclaration","scope":6843,"src":"7518:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6788,"name":"address","nodeType":"ElementaryTypeName","src":"7518:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6791,"mutability":"mutable","name":"amount","nameLocation":"7552:6:30","nodeType":"VariableDeclaration","scope":6843,"src":"7544:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6790,"name":"uint256","nodeType":"ElementaryTypeName","src":"7544:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7483:81:30"},"returnParameters":{"id":6793,"nodeType":"ParameterList","parameters":[],"src":"7574:0:30"},"scope":7155,"src":"7461:485:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6854,"nodeType":"Block","src":"8043:48:30","statements":[{"expression":{"baseExpression":{"id":6850,"name":"totalInvestment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6217,"src":"8060:15:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6852,"indexExpression":{"id":6851,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6845,"src":"8076:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8060:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6849,"id":6853,"nodeType":"Return","src":"8053:31:30"}]},"functionSelector":"34422a47","id":6855,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalInvestment","nameLocation":"7961:18:30","nodeType":"FunctionDefinition","parameters":{"id":6846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6845,"mutability":"mutable","name":"assetId","nameLocation":"7997:7:30","nodeType":"VariableDeclaration","scope":6855,"src":"7989:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6844,"name":"uint256","nodeType":"ElementaryTypeName","src":"7989:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7979:31:30"},"returnParameters":{"id":6849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6855,"src":"8034:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6847,"name":"uint256","nodeType":"ElementaryTypeName","src":"8034:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8033:9:30"},"scope":7155,"src":"7952:139:30","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6866,"nodeType":"Block","src":"8187:47:30","statements":[{"expression":{"baseExpression":{"id":6862,"name":"totalInvestors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6213,"src":"8204:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6864,"indexExpression":{"id":6863,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"8219:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8204:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6861,"id":6865,"nodeType":"Return","src":"8197:30:30"}]},"functionSelector":"3adc860e","id":6867,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalInvestors","nameLocation":"8106:17:30","nodeType":"FunctionDefinition","parameters":{"id":6858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6857,"mutability":"mutable","name":"assetId","nameLocation":"8141:7:30","nodeType":"VariableDeclaration","scope":6867,"src":"8133:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6856,"name":"uint256","nodeType":"ElementaryTypeName","src":"8133:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8123:31:30"},"returnParameters":{"id":6861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6867,"src":"8178:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6859,"name":"uint256","nodeType":"ElementaryTypeName","src":"8178:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8177:9:30"},"scope":7155,"src":"8097:137:30","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6888,"nodeType":"Block","src":"8305:103:30","statements":[{"expression":{"arguments":[{"id":6878,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"8344:8:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":6874,"name":"assetInvestors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"8315:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":6876,"indexExpression":{"id":6875,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"8330:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8315:23:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8339:4:30","memberName":"push","nodeType":"MemberAccess","src":"8315:28:30","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":6879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8315:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6880,"nodeType":"ExpressionStatement","src":"8315:38:30"},{"expression":{"arguments":[{"id":6885,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6869,"src":"8393:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":6881,"name":"investorAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"8363:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":6883,"indexExpression":{"id":6882,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"8378:8:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8363:24:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":6884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8388:4:30","memberName":"push","nodeType":"MemberAccess","src":"8363:29:30","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8363:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6887,"nodeType":"ExpressionStatement","src":"8363:38:30"}]},"functionSelector":"bbe30722","id":6889,"implemented":true,"kind":"function","modifiers":[],"name":"addInvestor","nameLocation":"8249:11:30","nodeType":"FunctionDefinition","parameters":{"id":6872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6869,"mutability":"mutable","name":"assetId","nameLocation":"8269:7:30","nodeType":"VariableDeclaration","scope":6889,"src":"8261:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6868,"name":"uint256","nodeType":"ElementaryTypeName","src":"8261:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6871,"mutability":"mutable","name":"investor","nameLocation":"8286:8:30","nodeType":"VariableDeclaration","scope":6889,"src":"8278:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6870,"name":"address","nodeType":"ElementaryTypeName","src":"8278:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8260:35:30"},"returnParameters":{"id":6873,"nodeType":"ParameterList","parameters":[],"src":"8305:0:30"},"scope":7155,"src":"8240:168:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6901,"nodeType":"Block","src":"8513:47:30","statements":[{"expression":{"baseExpression":{"id":6897,"name":"assetInvestors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"8530:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":6899,"indexExpression":{"id":6898,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6891,"src":"8545:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8530:23:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":6896,"id":6900,"nodeType":"Return","src":"8523:30:30"}]},"functionSelector":"07c90547","id":6902,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetInvestors","nameLocation":"8423:17:30","nodeType":"FunctionDefinition","parameters":{"id":6892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6891,"mutability":"mutable","name":"assetId","nameLocation":"8458:7:30","nodeType":"VariableDeclaration","scope":6902,"src":"8450:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6890,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8440:31:30"},"returnParameters":{"id":6896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6902,"src":"8495:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6893,"name":"address","nodeType":"ElementaryTypeName","src":"8495:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6894,"nodeType":"ArrayTypeName","src":"8495:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"8494:18:30"},"scope":7155,"src":"8414:146:30","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6914,"nodeType":"Block","src":"8666:48:30","statements":[{"expression":{"baseExpression":{"id":6910,"name":"investorAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"8683:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":6912,"indexExpression":{"id":6911,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"8698:8:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8683:24:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":6909,"id":6913,"nodeType":"Return","src":"8676:31:30"}]},"functionSelector":"e9e7854c","id":6915,"implemented":true,"kind":"function","modifiers":[],"name":"getInvestorAssets","nameLocation":"8575:17:30","nodeType":"FunctionDefinition","parameters":{"id":6905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6904,"mutability":"mutable","name":"investor","nameLocation":"8610:8:30","nodeType":"VariableDeclaration","scope":6915,"src":"8602:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6903,"name":"address","nodeType":"ElementaryTypeName","src":"8602:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8592:32:30"},"returnParameters":{"id":6909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6915,"src":"8648:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6906,"name":"uint256","nodeType":"ElementaryTypeName","src":"8648:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6907,"nodeType":"ArrayTypeName","src":"8648:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8647:18:30"},"scope":7155,"src":"8566:148:30","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7005,"nodeType":"Block","src":"8860:516:30","statements":[{"assignments":[6930],"declarations":[{"constant":false,"id":6930,"mutability":"mutable","name":"asset","nameLocation":"8883:5:30","nodeType":"VariableDeclaration","scope":7005,"src":"8870:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset"},"typeName":{"id":6929,"nodeType":"UserDefinedTypeName","pathNode":{"id":6928,"name":"Asset","nameLocations":["8870:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"8870:5:30"},"referencedDeclaration":4654,"src":"8870:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"}},"visibility":"internal"}],"id":6934,"initialValue":{"baseExpression":{"id":6931,"name":"assetMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"8891:8:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Asset_$4654_storage_$","typeString":"mapping(uint256 => struct Asset storage ref)"}},"id":6933,"indexExpression":{"id":6932,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"8900:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8891:17:30","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage","typeString":"struct Asset storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8870:38:30"},{"assignments":[6936],"declarations":[{"constant":false,"id":6936,"mutability":"mutable","name":"rewardCount","nameLocation":"8926:11:30","nodeType":"VariableDeclaration","scope":7005,"src":"8918:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6935,"name":"uint256","nodeType":"ElementaryTypeName","src":"8918:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6940,"initialValue":{"expression":{"expression":{"id":6937,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"8940:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":6938,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8946:7:30","memberName":"rewards","nodeType":"MemberAccess","referencedDeclaration":4640,"src":"8940:13:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Reward_$4611_memory_ptr_$dyn_memory_ptr","typeString":"struct Reward memory[] memory"}},"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8954:6:30","memberName":"length","nodeType":"MemberAccess","src":"8940:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8918:42:30"},{"assignments":[6945],"declarations":[{"constant":false,"id":6945,"mutability":"mutable","name":"tokenIds","nameLocation":"8988:8:30","nodeType":"VariableDeclaration","scope":7005,"src":"8971:25:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6943,"name":"uint256","nodeType":"ElementaryTypeName","src":"8971:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6944,"nodeType":"ArrayTypeName","src":"8971:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6951,"initialValue":{"arguments":[{"id":6949,"name":"rewardCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"9013:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8999:13:30","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6946,"name":"uint256","nodeType":"ElementaryTypeName","src":"9003:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6947,"nodeType":"ArrayTypeName","src":"9003:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8999:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8971:54:30"},{"assignments":[6956],"declarations":[{"constant":false,"id":6956,"mutability":"mutable","name":"tokenAmounts","nameLocation":"9052:12:30","nodeType":"VariableDeclaration","scope":7005,"src":"9035:29:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6954,"name":"uint256","nodeType":"ElementaryTypeName","src":"9035:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6955,"nodeType":"ArrayTypeName","src":"9035:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6962,"initialValue":{"arguments":[{"id":6960,"name":"rewardCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"9081:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9067:13:30","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6957,"name":"uint256","nodeType":"ElementaryTypeName","src":"9071:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6958,"nodeType":"ArrayTypeName","src":"9071:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9067:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9035:58:30"},{"body":{"id":6999,"nodeType":"Block","src":"9146:182:30","statements":[{"assignments":[6974],"declarations":[{"constant":false,"id":6974,"mutability":"mutable","name":"tokenId","nameLocation":"9168:7:30","nodeType":"VariableDeclaration","scope":6999,"src":"9160:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6973,"name":"uint256","nodeType":"ElementaryTypeName","src":"9160:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6980,"initialValue":{"expression":{"baseExpression":{"expression":{"id":6975,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"9178:5:30","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":6976,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9184:7:30","memberName":"rewards","nodeType":"MemberAccess","referencedDeclaration":4640,"src":"9178:13:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Reward_$4611_memory_ptr_$dyn_memory_ptr","typeString":"struct Reward memory[] memory"}},"id":6978,"indexExpression":{"id":6977,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"9192:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9178:16:30","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$4611_memory_ptr","typeString":"struct Reward memory"}},"id":6979,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9195:13:30","memberName":"rewardTokenId","nodeType":"MemberAccess","referencedDeclaration":4610,"src":"9178:30:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9160:48:30"},{"expression":{"id":6985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6981,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"9222:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6983,"indexExpression":{"id":6982,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"9231:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9222:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6984,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"9236:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9222:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6986,"nodeType":"ExpressionStatement","src":"9222:21:30"},{"expression":{"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6987,"name":"tokenAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"9257:12:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6989,"indexExpression":{"id":6988,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"9270:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9257:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":6990,"name":"investorTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"9275:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"}},"id":6992,"indexExpression":{"id":6991,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"9290:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9275:23:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":6994,"indexExpression":{"id":6993,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6919,"src":"9299:8:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9275:33:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6996,"indexExpression":{"id":6995,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"9309:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9275:42:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9257:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6998,"nodeType":"ExpressionStatement","src":"9257:60:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6967,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"9124:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6968,"name":"rewardCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"9128:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9124:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7000,"initializationExpression":{"assignments":[6964],"declarations":[{"constant":false,"id":6964,"mutability":"mutable","name":"i","nameLocation":"9117:1:30","nodeType":"VariableDeclaration","scope":7000,"src":"9109:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6963,"name":"uint256","nodeType":"ElementaryTypeName","src":"9109:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6966,"initialValue":{"hexValue":"30","id":6965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9121:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9109:13:30"},"loopExpression":{"expression":{"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9141:3:30","subExpression":{"id":6970,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"9141:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6972,"nodeType":"ExpressionStatement","src":"9141:3:30"},"nodeType":"ForStatement","src":"9104:224:30"},{"expression":{"components":[{"id":7001,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"9346:8:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":7002,"name":"tokenAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"9356:12:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":7003,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9345:24:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"functionReturnParameters":6927,"id":7004,"nodeType":"Return","src":"9338:31:30"}]},"functionSelector":"ebcab605","id":7006,"implemented":true,"kind":"function","modifiers":[],"name":"getInvestorTokens","nameLocation":"8728:17:30","nodeType":"FunctionDefinition","parameters":{"id":6920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6917,"mutability":"mutable","name":"assetId","nameLocation":"8763:7:30","nodeType":"VariableDeclaration","scope":7006,"src":"8755:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6916,"name":"uint256","nodeType":"ElementaryTypeName","src":"8755:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6919,"mutability":"mutable","name":"investor","nameLocation":"8788:8:30","nodeType":"VariableDeclaration","scope":7006,"src":"8780:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6918,"name":"address","nodeType":"ElementaryTypeName","src":"8780:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8745:57:30"},"returnParameters":{"id":6927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7006,"src":"8824:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6921,"name":"uint256","nodeType":"ElementaryTypeName","src":"8824:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6922,"nodeType":"ArrayTypeName","src":"8824:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7006,"src":"8842:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6924,"name":"uint256","nodeType":"ElementaryTypeName","src":"8842:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6925,"nodeType":"ArrayTypeName","src":"8842:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8823:36:30"},"scope":7155,"src":"8719:657:30","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7021,"nodeType":"Block","src":"9498:61:30","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":7015,"name":"investmentAmountOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"9515:18:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":7017,"indexExpression":{"id":7016,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"9534:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9515:27:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7019,"indexExpression":{"id":7018,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"9543:8:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9515:37:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7014,"id":7020,"nodeType":"Return","src":"9508:44:30"}]},"functionSelector":"bb7e385a","id":7022,"implemented":true,"kind":"function","modifiers":[],"name":"getInvestmentAmount","nameLocation":"9391:19:30","nodeType":"FunctionDefinition","parameters":{"id":7011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7008,"mutability":"mutable","name":"assetId","nameLocation":"9428:7:30","nodeType":"VariableDeclaration","scope":7022,"src":"9420:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7007,"name":"uint256","nodeType":"ElementaryTypeName","src":"9420:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7010,"mutability":"mutable","name":"investor","nameLocation":"9453:8:30","nodeType":"VariableDeclaration","scope":7022,"src":"9445:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7009,"name":"address","nodeType":"ElementaryTypeName","src":"9445:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9410:57:30"},"returnParameters":{"id":7014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7022,"src":"9489:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7012,"name":"uint256","nodeType":"ElementaryTypeName","src":"9489:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9488:9:30"},"scope":7155,"src":"9382:177:30","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7043,"nodeType":"Block","src":"9715:73:30","statements":[{"expression":{"id":7041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":7033,"name":"investorTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"9725:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$","typeString":"mapping(uint256 => mapping(address => mapping(uint256 => uint256)))"}},"id":7037,"indexExpression":{"id":7034,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7024,"src":"9740:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9725:23:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":7038,"indexExpression":{"id":7035,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"9749:8:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9725:33:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":7039,"indexExpression":{"id":7036,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"9759:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9725:42:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7040,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7030,"src":"9770:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9725:56:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7042,"nodeType":"ExpressionStatement","src":"9725:56:30"}]},"functionSelector":"d166e4ee","id":7044,"implemented":true,"kind":"function","modifiers":[],"name":"updateInvestorTokens","nameLocation":"9574:20:30","nodeType":"FunctionDefinition","parameters":{"id":7031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7024,"mutability":"mutable","name":"assetId","nameLocation":"9612:7:30","nodeType":"VariableDeclaration","scope":7044,"src":"9604:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7023,"name":"uint256","nodeType":"ElementaryTypeName","src":"9604:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7026,"mutability":"mutable","name":"investor","nameLocation":"9637:8:30","nodeType":"VariableDeclaration","scope":7044,"src":"9629:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7025,"name":"address","nodeType":"ElementaryTypeName","src":"9629:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7028,"mutability":"mutable","name":"tokenId","nameLocation":"9663:7:30","nodeType":"VariableDeclaration","scope":7044,"src":"9655:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7027,"name":"uint256","nodeType":"ElementaryTypeName","src":"9655:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7030,"mutability":"mutable","name":"tokenAmount","nameLocation":"9688:11:30","nodeType":"VariableDeclaration","scope":7044,"src":"9680:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7029,"name":"uint256","nodeType":"ElementaryTypeName","src":"9680:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9594:111:30"},"returnParameters":{"id":7032,"nodeType":"ParameterList","parameters":[],"src":"9715:0:30"},"scope":7155,"src":"9565:223:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7057,"nodeType":"Block","src":"9858:53:30","statements":[{"expression":{"id":7055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7051,"name":"isTransferAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"9868:17:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":7053,"indexExpression":{"id":7052,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7046,"src":"9886:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9868:26:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7054,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"9897:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9868:36:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7056,"nodeType":"ExpressionStatement","src":"9868:36:30"}]},"functionSelector":"d86da278","id":7058,"implemented":true,"kind":"function","modifiers":[],"name":"allowTransfers","nameLocation":"9803:14:30","nodeType":"FunctionDefinition","parameters":{"id":7049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7046,"mutability":"mutable","name":"assetId","nameLocation":"9826:7:30","nodeType":"VariableDeclaration","scope":7058,"src":"9818:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7045,"name":"uint256","nodeType":"ElementaryTypeName","src":"9818:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7048,"mutability":"mutable","name":"allowed","nameLocation":"9840:7:30","nodeType":"VariableDeclaration","scope":7058,"src":"9835:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7047,"name":"bool","nodeType":"ElementaryTypeName","src":"9835:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9817:31:30"},"returnParameters":{"id":7050,"nodeType":"ParameterList","parameters":[],"src":"9858:0:30"},"scope":7155,"src":"9794:117:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7071,"nodeType":"Block","src":"9981:54:30","statements":[{"expression":{"id":7069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7065,"name":"isRefundingAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6191,"src":"9991:18:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":7067,"indexExpression":{"id":7066,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"10010:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9991:27:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7068,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"10021:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9991:37:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7070,"nodeType":"ExpressionStatement","src":"9991:37:30"}]},"functionSelector":"fbdc985a","id":7072,"implemented":true,"kind":"function","modifiers":[],"name":"allowRefunding","nameLocation":"9926:14:30","nodeType":"FunctionDefinition","parameters":{"id":7063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7060,"mutability":"mutable","name":"assetId","nameLocation":"9949:7:30","nodeType":"VariableDeclaration","scope":7072,"src":"9941:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7059,"name":"uint256","nodeType":"ElementaryTypeName","src":"9941:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7062,"mutability":"mutable","name":"allowed","nameLocation":"9963:7:30","nodeType":"VariableDeclaration","scope":7072,"src":"9958:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7061,"name":"bool","nodeType":"ElementaryTypeName","src":"9958:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9940:31:30"},"returnParameters":{"id":7064,"nodeType":"ParameterList","parameters":[],"src":"9981:0:30"},"scope":7155,"src":"9917:118:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7089,"nodeType":"Block","src":"10161:59:30","statements":[{"expression":{"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7081,"name":"pendingReturns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"10171:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":7084,"indexExpression":{"id":7082,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"10186:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10171:23:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7085,"indexExpression":{"id":7083,"name":"investor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"10195:8:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10171:33:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7086,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"10207:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:42:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7088,"nodeType":"ExpressionStatement","src":"10171:42:30"}]},"functionSelector":"14fcde03","id":7090,"implemented":true,"kind":"function","modifiers":[],"name":"updatePendingReturns","nameLocation":"10050:20:30","nodeType":"FunctionDefinition","parameters":{"id":7079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7074,"mutability":"mutable","name":"assetId","nameLocation":"10088:7:30","nodeType":"VariableDeclaration","scope":7090,"src":"10080:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7073,"name":"uint256","nodeType":"ElementaryTypeName","src":"10080:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7076,"mutability":"mutable","name":"investor","nameLocation":"10113:8:30","nodeType":"VariableDeclaration","scope":7090,"src":"10105:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7075,"name":"address","nodeType":"ElementaryTypeName","src":"10105:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7078,"mutability":"mutable","name":"amount","nameLocation":"10139:6:30","nodeType":"VariableDeclaration","scope":7090,"src":"10131:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7077,"name":"uint256","nodeType":"ElementaryTypeName","src":"10131:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10070:81:30"},"returnParameters":{"id":7080,"nodeType":"ParameterList","parameters":[],"src":"10161:0:30"},"scope":7155,"src":"10041:179:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7103,"nodeType":"Block","src":"10324:53:30","statements":[{"expression":{"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7097,"name":"investmentRefunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"10334:18:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":7099,"indexExpression":{"id":7098,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"10353:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10334:27:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7100,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"10364:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10334:36:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7102,"nodeType":"ExpressionStatement","src":"10334:36:30"}]},"functionSelector":"5d0dead2","id":7104,"implemented":true,"kind":"function","modifiers":[],"name":"updateInvestmentRefunded","nameLocation":"10235:24:30","nodeType":"FunctionDefinition","parameters":{"id":7095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7092,"mutability":"mutable","name":"assetId","nameLocation":"10277:7:30","nodeType":"VariableDeclaration","scope":7104,"src":"10269:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7091,"name":"uint256","nodeType":"ElementaryTypeName","src":"10269:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7094,"mutability":"mutable","name":"amount","nameLocation":"10302:6:30","nodeType":"VariableDeclaration","scope":7104,"src":"10294:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7093,"name":"uint256","nodeType":"ElementaryTypeName","src":"10294:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10259:55:30"},"returnParameters":{"id":7096,"nodeType":"ParameterList","parameters":[],"src":"10324:0:30"},"scope":7155,"src":"10226:151:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7112,"nodeType":"Block","src":"10451:36:30","statements":[{"expression":{"id":7110,"name":"activeAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6153,"src":"10468:12:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":7109,"id":7111,"nodeType":"Return","src":"10461:19:30"}]},"functionSelector":"0fd8aee8","id":7113,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveAssets","nameLocation":"10392:15:30","nodeType":"FunctionDefinition","parameters":{"id":7105,"nodeType":"ParameterList","parameters":[],"src":"10407:2:30"},"returnParameters":{"id":7109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7113,"src":"10433:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7106,"name":"uint256","nodeType":"ElementaryTypeName","src":"10433:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7107,"nodeType":"ArrayTypeName","src":"10433:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10432:18:30"},"scope":7155,"src":"10383:104:30","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7121,"nodeType":"Block","src":"10561:36:30","statements":[{"expression":{"id":7119,"name":"fundedAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"10578:12:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":7118,"id":7120,"nodeType":"Return","src":"10571:19:30"}]},"functionSelector":"01bdc460","id":7122,"implemented":true,"kind":"function","modifiers":[],"name":"getFundedAssets","nameLocation":"10502:15:30","nodeType":"FunctionDefinition","parameters":{"id":7114,"nodeType":"ParameterList","parameters":[],"src":"10517:2:30"},"returnParameters":{"id":7118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7122,"src":"10543:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7115,"name":"uint256","nodeType":"ElementaryTypeName","src":"10543:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7116,"nodeType":"ArrayTypeName","src":"10543:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10542:18:30"},"scope":7155,"src":"10493:104:30","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7130,"nodeType":"Block","src":"10671:36:30","statements":[{"expression":{"id":7128,"name":"failedAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"10688:12:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":7127,"id":7129,"nodeType":"Return","src":"10681:19:30"}]},"functionSelector":"3d3eb314","id":7131,"implemented":true,"kind":"function","modifiers":[],"name":"getFailedAssets","nameLocation":"10612:15:30","nodeType":"FunctionDefinition","parameters":{"id":7123,"nodeType":"ParameterList","parameters":[],"src":"10627:2:30"},"returnParameters":{"id":7127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7131,"src":"10653:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7124,"name":"uint256","nodeType":"ElementaryTypeName","src":"10653:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7125,"nodeType":"ArrayTypeName","src":"10653:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10652:18:30"},"scope":7155,"src":"10603:104:30","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7139,"nodeType":"Block","src":"10784:39:30","statements":[{"expression":{"id":7137,"name":"completedAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"10801:15:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":7136,"id":7138,"nodeType":"Return","src":"10794:22:30"}]},"functionSelector":"b5ff2582","id":7140,"implemented":true,"kind":"function","modifiers":[],"name":"getCompletedAssets","nameLocation":"10722:18:30","nodeType":"FunctionDefinition","parameters":{"id":7132,"nodeType":"ParameterList","parameters":[],"src":"10740:2:30"},"returnParameters":{"id":7136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7140,"src":"10766:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7133,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7134,"nodeType":"ArrayTypeName","src":"10766:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10765:18:30"},"scope":7155,"src":"10713:110:30","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7153,"nodeType":"Block","src":"10932:48:30","statements":[{"expression":{"baseExpression":{"id":7149,"name":"categoryAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"10949:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_Category_$4598_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(enum Category => uint256[] storage ref)"}},"id":7151,"indexExpression":{"id":7150,"name":"category","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7143,"src":"10964:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Category_$4598","typeString":"enum Category"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10949:24:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":7148,"id":7152,"nodeType":"Return","src":"10942:31:30"}]},"functionSelector":"a2311d5f","id":7154,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetsByCategory","nameLocation":"10838:19:30","nodeType":"FunctionDefinition","parameters":{"id":7144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7143,"mutability":"mutable","name":"category","nameLocation":"10876:8:30","nodeType":"VariableDeclaration","scope":7154,"src":"10867:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Category_$4598","typeString":"enum Category"},"typeName":{"id":7142,"nodeType":"UserDefinedTypeName","pathNode":{"id":7141,"name":"Category","nameLocations":["10867:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":4598,"src":"10867:8:30"},"referencedDeclaration":4598,"src":"10867:8:30","typeDescriptions":{"typeIdentifier":"t_enum$_Category_$4598","typeString":"enum Category"}},"visibility":"internal"}],"src":"10857:33:30"},"returnParameters":{"id":7148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7154,"src":"10914:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7145,"name":"uint256","nodeType":"ElementaryTypeName","src":"10914:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7146,"nodeType":"ArrayTypeName","src":"10914:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10913:18:30"},"scope":7155,"src":"10829:151:30","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7156,"src":"498:10484:30","usedErrors":[]}],"src":"32:10951:30"},"id":30},"contracts/ReclamarFrac.sol":{"ast":{"absolutePath":"contracts/ReclamarFrac.sol","exportedSymbols":{"Address":[4011],"Context":[4034],"ERC165":[4261],"ERC20":[2067],"ERC20Burnable":[2206],"ERC721":[3027],"IERC165":[4273],"IERC20":[2145],"IERC721":[3143],"IERC721Enumerable":[3688],"IERC721Metadata":[3715],"IERC721Receiver":[3161],"SafeMath":[4585],"Strings":[4237],"reclamarFrac":[7447]},"id":7448,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7157,"literals":["solidity",">=","0.7",".0","<=","0.8",".19"],"nodeType":"PragmaDirective","src":"185:33:31"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":7158,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7448,"sourceUnit":3028,"src":"220:57:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":7159,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7448,"sourceUnit":2068,"src":"278:55:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":7160,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7448,"sourceUnit":2207,"src":"334:74:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":7161,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7448,"sourceUnit":4586,"src":"409:57:31","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"reclamarFrac","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7447,"linearizedBaseContracts":[7447],"name":"reclamarFrac","nameLocation":"477:12:31","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7164,"libraryName":{"id":7162,"name":"SafeMath","nameLocations":["502:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":4585,"src":"502:8:31"},"nodeType":"UsingForDirective","src":"496:27:31","typeName":{"id":7163,"name":"uint256","nodeType":"ElementaryTypeName","src":"515:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"functionSelector":"8f84aa09","id":7166,"mutability":"mutable","name":"ownerAddress","nameLocation":"552:12:31","nodeType":"VariableDeclaration","scope":7447,"src":"529:35:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":7165,"name":"address","nodeType":"ElementaryTypeName","src":"529:15:31","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"public"},{"constant":false,"functionSelector":"5bf8633a","id":7168,"mutability":"mutable","name":"nftAddress","nameLocation":"585:10:31","nodeType":"VariableDeclaration","scope":7447,"src":"570:25:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7167,"name":"address","nodeType":"ElementaryTypeName","src":"570:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"9d76ea58","id":7170,"mutability":"mutable","name":"tokenAddress","nameLocation":"616:12:31","nodeType":"VariableDeclaration","scope":7447,"src":"601:27:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7169,"name":"address","nodeType":"ElementaryTypeName","src":"601:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"canonicalName":"reclamarFrac.ClaimState","id":7174,"members":[{"id":7171,"name":"initiated","nameLocation":"660:9:31","nodeType":"EnumValue","src":"660:9:31"},{"id":7172,"name":"accepting","nameLocation":"679:9:31","nodeType":"EnumValue","src":"679:9:31"},{"id":7173,"name":"closed","nameLocation":"698:6:31","nodeType":"EnumValue","src":"698:6:31"}],"name":"ClaimState","nameLocation":"639:10:31","nodeType":"EnumDefinition","src":"634:76:31"},{"constant":false,"functionSelector":"9a725809","id":7177,"mutability":"mutable","name":"claimState","nameLocation":"733:10:31","nodeType":"VariableDeclaration","scope":7447,"src":"715:28:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"},"typeName":{"id":7176,"nodeType":"UserDefinedTypeName","pathNode":{"id":7175,"name":"ClaimState","nameLocations":["715:10:31"],"nodeType":"IdentifierPath","referencedDeclaration":7174,"src":"715:10:31"},"referencedDeclaration":7174,"src":"715:10:31","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"}},"visibility":"public"},{"constant":false,"functionSelector":"c89f2ce4","id":7179,"mutability":"mutable","name":"funds","nameLocation":"764:5:31","nodeType":"VariableDeclaration","scope":7447,"src":"749:20:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7178,"name":"uint256","nodeType":"ElementaryTypeName","src":"749:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"047fc9aa","id":7181,"mutability":"mutable","name":"supply","nameLocation":"790:6:31","nodeType":"VariableDeclaration","scope":7447,"src":"775:21:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7180,"name":"uint256","nodeType":"ElementaryTypeName","src":"775:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"b8fbc896aaf3402bc9e3197c5ef680f129d53be930035e2c0f7ac85244df0c1a","id":7185,"name":"SupplyDetails","nameLocation":"808:13:31","nodeType":"EventDefinition","parameters":{"id":7184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7183,"indexed":false,"mutability":"mutable","name":"supply","nameLocation":"830:6:31","nodeType":"VariableDeclaration","scope":7185,"src":"822:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7182,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:16:31"},"src":"802:36:31"},{"anonymous":false,"eventSelector":"825c94adc2d07d7054df3df363833d04745e4d5bbfbf6349d7d3aa0ba212731f","id":7189,"name":"TokenAddressDetails","nameLocation":"849:19:31","nodeType":"EventDefinition","parameters":{"id":7188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7187,"indexed":false,"mutability":"mutable","name":"tokenAddress","nameLocation":"877:12:31","nodeType":"VariableDeclaration","scope":7189,"src":"869:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7186,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"868:22:31"},"src":"843:48:31"},{"anonymous":false,"eventSelector":"d1928025d134c8c80a2236b6a0ae96292bcaf0717ea1ab4957e636787fe8bf35","id":7193,"name":"FundsDetails","nameLocation":"902:12:31","nodeType":"EventDefinition","parameters":{"id":7192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7191,"indexed":false,"mutability":"mutable","name":"funds","nameLocation":"923:5:31","nodeType":"VariableDeclaration","scope":7193,"src":"915:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7190,"name":"uint256","nodeType":"ElementaryTypeName","src":"915:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"914:15:31"},"src":"896:34:31"},{"anonymous":false,"eventSelector":"09a3780ffd48bc4df9d4816a4c9a74f5e52518e90e2173034df5b0b140085ecc","id":7198,"name":"ClaimStateDetails","nameLocation":"941:17:31","nodeType":"EventDefinition","parameters":{"id":7197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7196,"indexed":false,"mutability":"mutable","name":"claimState","nameLocation":"970:10:31","nodeType":"VariableDeclaration","scope":7198,"src":"959:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"},"typeName":{"id":7195,"nodeType":"UserDefinedTypeName","pathNode":{"id":7194,"name":"ClaimState","nameLocations":["959:10:31"],"nodeType":"IdentifierPath","referencedDeclaration":7174,"src":"959:10:31"},"referencedDeclaration":7174,"src":"959:10:31","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"}},"visibility":"internal"}],"src":"958:23:31"},"src":"935:47:31"},{"anonymous":false,"eventSelector":"d8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a","id":7204,"name":"Claimed","nameLocation":"993:7:31","nodeType":"EventDefinition","parameters":{"id":7203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7200,"indexed":false,"mutability":"mutable","name":"reclamante","nameLocation":"1009:10:31","nodeType":"VariableDeclaration","scope":7204,"src":"1001:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7199,"name":"address","nodeType":"ElementaryTypeName","src":"1001:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7202,"indexed":false,"mutability":"mutable","name":"cantidad","nameLocation":"1029:8:31","nodeType":"VariableDeclaration","scope":7204,"src":"1021:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7201,"name":"uint256","nodeType":"ElementaryTypeName","src":"1021:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1000:38:31"},"src":"987:52:31"},{"anonymous":false,"eventSelector":"f3a504f28a34fdf555994a3bdfd3dc29f822e8684a9ef01001afb738cc3cdd0a","id":7206,"name":"funded","nameLocation":"1051:6:31","nodeType":"EventDefinition","parameters":{"id":7205,"nodeType":"ParameterList","parameters":[],"src":"1057:2:31"},"src":"1045:15:31"},{"body":{"id":7226,"nodeType":"Block","src":"1389:91:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7219,"name":"_tokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"1435:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7216,"name":"_nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"1414:11:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7215,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"1407:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$3027_$","typeString":"type(contract ERC721)"}},"id":7217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1407:19:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC721_$3027","typeString":"contract ERC721"}},"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1427:7:31","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2353,"src":"1407:27:31","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":7220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1407:37:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7221,"name":"_ownerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"1448:13:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1407:54:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7214,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1399:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1399:63:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7224,"nodeType":"ExpressionStatement","src":"1399:63:31"},{"id":7225,"nodeType":"PlaceholderStatement","src":"1472:1:31"}]},"id":7227,"name":"isOwnerOfNFT","nameLocation":"1284:12:31","nodeType":"ModifierDefinition","parameters":{"id":7213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7208,"mutability":"mutable","name":"_nftAddress","nameLocation":"1314:11:31","nodeType":"VariableDeclaration","scope":7227,"src":"1306:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7207,"name":"address","nodeType":"ElementaryTypeName","src":"1306:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7210,"mutability":"mutable","name":"_ownerAddress","nameLocation":"1343:13:31","nodeType":"VariableDeclaration","scope":7227,"src":"1335:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7209,"name":"address","nodeType":"ElementaryTypeName","src":"1335:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7212,"mutability":"mutable","name":"_tokenID","nameLocation":"1374:8:31","nodeType":"VariableDeclaration","scope":7227,"src":"1366:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7211,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1296:92:31"},"src":"1275:205:31","virtual":false,"visibility":"internal"},{"body":{"id":7236,"nodeType":"Block","src":"1522:47:31","statements":[{"expression":{"arguments":[{"id":7232,"name":"_condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"1540:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7231,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1532:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":7233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1532:19:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7234,"nodeType":"ExpressionStatement","src":"1532:19:31"},{"id":7235,"nodeType":"PlaceholderStatement","src":"1561:1:31"}]},"id":7237,"name":"condition","nameLocation":"1495:9:31","nodeType":"ModifierDefinition","parameters":{"id":7230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7229,"mutability":"mutable","name":"_condition","nameLocation":"1510:10:31","nodeType":"VariableDeclaration","scope":7237,"src":"1505:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7228,"name":"bool","nodeType":"ElementaryTypeName","src":"1505:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1504:17:31"},"src":"1486:83:31","virtual":false,"visibility":"internal"},{"body":{"id":7247,"nodeType":"Block","src":"1595:63:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7240,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1613:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1617:6:31","memberName":"sender","nodeType":"MemberAccess","src":"1613:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7242,"name":"ownerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7166,"src":"1627:12:31","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1613:26:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7239,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1605:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":7244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1605:35:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7245,"nodeType":"ExpressionStatement","src":"1605:35:31"},{"id":7246,"nodeType":"PlaceholderStatement","src":"1650:1:31"}]},"id":7248,"name":"onlyOwner","nameLocation":"1583:9:31","nodeType":"ModifierDefinition","parameters":{"id":7238,"nodeType":"ParameterList","parameters":[],"src":"1592:2:31"},"src":"1574:84:31","virtual":false,"visibility":"internal"},{"body":{"id":7260,"nodeType":"Block","src":"1705:57:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"},"id":7256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7254,"name":"claimState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"1723:10:31","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7255,"name":"_state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7251,"src":"1737:6:31","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"}},"src":"1723:20:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7253,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1715:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1715:29:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7258,"nodeType":"ExpressionStatement","src":"1715:29:31"},{"id":7259,"nodeType":"PlaceholderStatement","src":"1754:1:31"}]},"id":7261,"name":"inClaimState","nameLocation":"1673:12:31","nodeType":"ModifierDefinition","parameters":{"id":7252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7251,"mutability":"mutable","name":"_state","nameLocation":"1697:6:31","nodeType":"VariableDeclaration","scope":7261,"src":"1686:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"},"typeName":{"id":7250,"nodeType":"UserDefinedTypeName","pathNode":{"id":7249,"name":"ClaimState","nameLocations":["1686:10:31"],"nodeType":"IdentifierPath","referencedDeclaration":7174,"src":"1686:10:31"},"referencedDeclaration":7174,"src":"1686:10:31","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"}},"visibility":"internal"}],"src":"1685:19:31"},"src":"1664:98:31","virtual":false,"visibility":"internal"},{"body":{"id":7272,"nodeType":"Block","src":"1806:59:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7266,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7263,"src":"1824:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7267,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"1834:12:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1824:22:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1816:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":7269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:31:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7270,"nodeType":"ExpressionStatement","src":"1816:31:31"},{"id":7271,"nodeType":"PlaceholderStatement","src":"1857:1:31"}]},"id":7273,"name":"correctToken","nameLocation":"1777:12:31","nodeType":"ModifierDefinition","parameters":{"id":7264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7263,"mutability":"mutable","name":"_token","nameLocation":"1798:6:31","nodeType":"VariableDeclaration","scope":7273,"src":"1790:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7262,"name":"address","nodeType":"ElementaryTypeName","src":"1790:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1789:16:31"},"src":"1768:97:31","virtual":false,"visibility":"internal"},{"body":{"id":7303,"nodeType":"Block","src":"1992:128:31","statements":[{"expression":{"id":7288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7286,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"2002:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7287,"name":"_nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"2015:11:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2002:24:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7289,"nodeType":"ExpressionStatement","src":"2002:24:31"},{"expression":{"id":7296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7290,"name":"ownerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7166,"src":"2036:12:31","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":7293,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2059:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2063:6:31","memberName":"sender","nodeType":"MemberAccess","src":"2059:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2051:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7291,"name":"address","nodeType":"ElementaryTypeName","src":"2051:8:31","stateMutability":"payable","typeDescriptions":{}}},"id":7295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2051:19:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2036:34:31","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7297,"nodeType":"ExpressionStatement","src":"2036:34:31"},{"expression":{"id":7301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7298,"name":"claimState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"2080:10:31","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7299,"name":"ClaimState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7174,"src":"2093:10:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ClaimState_$7174_$","typeString":"type(enum reclamarFrac.ClaimState)"}},"id":7300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2104:9:31","memberName":"initiated","nodeType":"MemberAccess","referencedDeclaration":7171,"src":"2093:20:31","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"}},"src":"2080:33:31","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"}},"id":7302,"nodeType":"ExpressionStatement","src":"2080:33:31"}]},"id":7304,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":7280,"name":"_nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"1957:11:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7281,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1970:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1974:6:31","memberName":"sender","nodeType":"MemberAccess","src":"1970:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7283,"name":"_tokenID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7277,"src":"1982:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7284,"kind":"modifierInvocation","modifierName":{"id":7279,"name":"isOwnerOfNFT","nameLocations":["1944:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":7227,"src":"1944:12:31"},"nodeType":"ModifierInvocation","src":"1944:47:31"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7275,"mutability":"mutable","name":"_nftAddress","nameLocation":"1900:11:31","nodeType":"VariableDeclaration","scope":7304,"src":"1892:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7274,"name":"address","nodeType":"ElementaryTypeName","src":"1892:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7277,"mutability":"mutable","name":"_tokenID","nameLocation":"1929:8:31","nodeType":"VariableDeclaration","scope":7304,"src":"1921:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1921:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1882:61:31"},"returnParameters":{"id":7285,"nodeType":"ParameterList","parameters":[],"src":"1992:0:31"},"scope":7447,"src":"1871:249:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7312,"nodeType":"Block","src":"2184:26:31","statements":[{"expression":{"id":7310,"name":"claimState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"2197:10:31","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"}},"functionReturnParameters":7309,"id":7311,"nodeType":"Return","src":"2190:17:31"}]},"functionSelector":"4b43c6f9","id":7313,"implemented":true,"kind":"function","modifiers":[],"name":"getClaimState","nameLocation":"2135:13:31","nodeType":"FunctionDefinition","parameters":{"id":7305,"nodeType":"ParameterList","parameters":[],"src":"2148:2:31"},"returnParameters":{"id":7309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7313,"src":"2172:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"},"typeName":{"id":7307,"nodeType":"UserDefinedTypeName","pathNode":{"id":7306,"name":"ClaimState","nameLocations":["2172:10:31"],"nodeType":"IdentifierPath","referencedDeclaration":7174,"src":"2172:10:31"},"referencedDeclaration":7174,"src":"2172:10:31","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"}},"visibility":"internal"}],"src":"2171:12:31"},"scope":7447,"src":"2126:84:31","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7368,"nodeType":"Block","src":"2321:571:31","statements":[{"expression":{"id":7327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7324,"name":"funds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"2331:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7325,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2339:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2343:5:31","memberName":"value","nodeType":"MemberAccess","src":"2339:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2331:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7328,"nodeType":"ExpressionStatement","src":"2331:17:31"},{"expression":{"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7329,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"2456:12:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7330,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7315,"src":"2471:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2456:21:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7332,"nodeType":"ExpressionStatement","src":"2456:21:31"},{"expression":{"id":7336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7333,"name":"claimState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"2550:10:31","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7334,"name":"ClaimState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7174,"src":"2563:10:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ClaimState_$7174_$","typeString":"type(enum reclamarFrac.ClaimState)"}},"id":7335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2574:9:31","memberName":"accepting","nodeType":"MemberAccess","referencedDeclaration":7172,"src":"2563:20:31","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"}},"src":"2550:33:31","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"}},"id":7337,"nodeType":"ExpressionStatement","src":"2550:33:31"},{"expression":{"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7338,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7181,"src":"2653:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31303030303030303030303030303030303030","id":7345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2694:19:31","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1000000000000000000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":7340,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7315,"src":"2668:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7339,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"2662:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$2067_$","typeString":"type(contract ERC20)"}},"id":7341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2662:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$2067","typeString":"contract ERC20"}},"id":7342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2676:11:31","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":1645,"src":"2662:25:31","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":7343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2662:27:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2690:3:31","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":4494,"src":"2662:31:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2662:52:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2653:61:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7348,"nodeType":"ExpressionStatement","src":"2653:61:31"},{"eventCall":{"arguments":[{"id":7350,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7181,"src":"2740:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7349,"name":"SupplyDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7185,"src":"2726:13:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2726:21:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7352,"nodeType":"EmitStatement","src":"2721:26:31"},{"eventCall":{"arguments":[{"id":7354,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"2778:12:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7353,"name":"TokenAddressDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"2758:19:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2758:33:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7356,"nodeType":"EmitStatement","src":"2753:38:31"},{"eventCall":{"arguments":[{"id":7358,"name":"funds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"2815:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7357,"name":"FundsDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"2802:12:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2802:19:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7360,"nodeType":"EmitStatement","src":"2797:24:31"},{"eventCall":{"arguments":[{"id":7362,"name":"claimState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"2850:10:31","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"}],"id":7361,"name":"ClaimStateDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7198,"src":"2832:17:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_enum$_ClaimState_$7174_$returns$__$","typeString":"function (enum reclamarFrac.ClaimState)"}},"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2832:29:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7364,"nodeType":"EmitStatement","src":"2827:34:31"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7365,"name":"funded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7206,"src":"2877:6:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:8:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7367,"nodeType":"EmitStatement","src":"2872:13:31"}]},"functionSelector":"23024408","id":7369,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":7318,"name":"ClaimState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7174,"src":"2289:10:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ClaimState_$7174_$","typeString":"type(enum reclamarFrac.ClaimState)"}},"id":7319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2300:9:31","memberName":"initiated","nodeType":"MemberAccess","referencedDeclaration":7171,"src":"2289:20:31","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"}}],"id":7320,"kind":"modifierInvocation","modifierName":{"id":7317,"name":"inClaimState","nameLocations":["2276:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":7261,"src":"2276:12:31"},"nodeType":"ModifierInvocation","src":"2276:34:31"},{"id":7322,"kind":"modifierInvocation","modifierName":{"id":7321,"name":"onlyOwner","nameLocations":["2311:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":7248,"src":"2311:9:31"},"nodeType":"ModifierInvocation","src":"2311:9:31"}],"name":"fund","nameLocation":"2226:4:31","nodeType":"FunctionDefinition","parameters":{"id":7316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7315,"mutability":"mutable","name":"_token","nameLocation":"2248:6:31","nodeType":"VariableDeclaration","scope":7369,"src":"2240:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7314,"name":"address","nodeType":"ElementaryTypeName","src":"2240:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2230:30:31"},"returnParameters":{"id":7323,"nodeType":"ParameterList","parameters":[],"src":"2321:0:31"},"scope":7447,"src":"2217:675:31","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":7445,"nodeType":"Block","src":"2976:855:31","statements":[{"assignments":[7380],"declarations":[{"constant":false,"id":7380,"mutability":"mutable","name":"supplyInWei","nameLocation":"3020:11:31","nodeType":"VariableDeclaration","scope":7445,"src":"3012:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7379,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7385,"initialValue":{"arguments":[{"hexValue":"31653138","id":7383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3045:4:31","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"id":7381,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7181,"src":"3034:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3041:3:31","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":4479,"src":"3034:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3034:16:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3012:38:31"},{"assignments":[7387],"declarations":[{"constant":false,"id":7387,"mutability":"mutable","name":"cantidad","nameLocation":"3135:8:31","nodeType":"VariableDeclaration","scope":7445,"src":"3127:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7386,"name":"uint256","nodeType":"ElementaryTypeName","src":"3127:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7395,"initialValue":{"arguments":[{"id":7393,"name":"supplyInWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7380,"src":"3173:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7390,"name":"funds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"3162:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7388,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7373,"src":"3146:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3158:3:31","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":4479,"src":"3146:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3146:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3169:3:31","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":4494,"src":"3146:26:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3146:39:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3127:58:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7399,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3270:4:31","typeDescriptions":{"typeIdentifier":"t_contract$_reclamarFrac_$7447","typeString":"contract reclamarFrac"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_reclamarFrac_$7447","typeString":"contract reclamarFrac"}],"id":7398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3262:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7397,"name":"address","nodeType":"ElementaryTypeName","src":"3262:7:31","typeDescriptions":{}}},"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3262:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3276:7:31","memberName":"balance","nodeType":"MemberAccess","src":"3262:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7402,"name":"cantidad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7387,"src":"3287:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3262:33:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466f6e646f7320696e737566696369656e74657320656e20656c20636f6e747261746f","id":7404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3297:37:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e60f7978ffafbf226334e63e949c7e3dc49023ba8d903f569e1b3590030c2b4","typeString":"literal_string \"Fondos insuficientes en el contrato\""},"value":"Fondos insuficientes en el contrato"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e60f7978ffafbf226334e63e949c7e3dc49023ba8d903f569e1b3590030c2b4","typeString":"literal_string \"Fondos insuficientes en el contrato\""}],"id":7396,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3254:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3254:81:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7406,"nodeType":"ExpressionStatement","src":"3254:81:31"},{"expression":{"arguments":[{"id":7413,"name":"cantidad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7387,"src":"3431:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":7409,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3410:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3414:6:31","memberName":"sender","nodeType":"MemberAccess","src":"3410:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3402:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7407,"name":"address","nodeType":"ElementaryTypeName","src":"3402:8:31","stateMutability":"payable","typeDescriptions":{}}},"id":7411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3402:19:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3422:8:31","memberName":"transfer","nodeType":"MemberAccess","src":"3402:28:31","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3402:38:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7415,"nodeType":"ExpressionStatement","src":"3402:38:31"},{"expression":{"arguments":[{"expression":{"id":7420,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3534:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3538:6:31","memberName":"sender","nodeType":"MemberAccess","src":"3534:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7422,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7373,"src":"3546:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7417,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"3511:12:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7416,"name":"ERC20Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"3497:13:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Burnable_$2206_$","typeString":"type(contract ERC20Burnable)"}},"id":7418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3497:27:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Burnable_$2206","typeString":"contract ERC20Burnable"}},"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3525:8:31","memberName":"burnFrom","nodeType":"MemberAccess","referencedDeclaration":2205,"src":"3497:36:31","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":7423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3497:61:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7424,"nodeType":"ExpressionStatement","src":"3497:61:31"},{"eventCall":{"arguments":[{"expression":{"id":7426,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3652:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3656:6:31","memberName":"sender","nodeType":"MemberAccess","src":"3652:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7428,"name":"cantidad","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7387,"src":"3664:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7425,"name":"Claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"3644:7:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3644:29:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7430,"nodeType":"EmitStatement","src":"3639:34:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":7432,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"3747:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7431,"name":"ERC20Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"3733:13:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Burnable_$2206_$","typeString":"type(contract ERC20Burnable)"}},"id":7433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:21:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Burnable_$2206","typeString":"contract ERC20Burnable"}},"id":7434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3755:11:31","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":1645,"src":"3733:33:31","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":7435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:35:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3772:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3733:40:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7444,"nodeType":"IfStatement","src":"3729:100:31","trueBody":{"id":7443,"nodeType":"Block","src":"3774:55:31","statements":[{"expression":{"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7438,"name":"claimState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"3788:10:31","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7439,"name":"ClaimState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7174,"src":"3801:10:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ClaimState_$7174_$","typeString":"type(enum reclamarFrac.ClaimState)"}},"id":7440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3812:6:31","memberName":"closed","nodeType":"MemberAccess","referencedDeclaration":7173,"src":"3801:17:31","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"}},"src":"3788:30:31","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimState_$7174","typeString":"enum reclamarFrac.ClaimState"}},"id":7442,"nodeType":"ExpressionStatement","src":"3788:30:31"}]}}]},"functionSelector":"aad3ec96","id":7446,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7376,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"2968:6:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7377,"kind":"modifierInvocation","modifierName":{"id":7375,"name":"correctToken","nameLocations":["2955:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":7273,"src":"2955:12:31"},"nodeType":"ModifierInvocation","src":"2955:20:31"}],"name":"claim","nameLocation":"2905:5:31","nodeType":"FunctionDefinition","parameters":{"id":7374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7371,"mutability":"mutable","name":"_token","nameLocation":"2919:6:31","nodeType":"VariableDeclaration","scope":7446,"src":"2911:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7370,"name":"address","nodeType":"ElementaryTypeName","src":"2911:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7373,"mutability":"mutable","name":"tokenAmount","nameLocation":"2935:11:31","nodeType":"VariableDeclaration","scope":7446,"src":"2927:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7372,"name":"uint256","nodeType":"ElementaryTypeName","src":"2927:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2910:37:31"},"returnParameters":{"id":7378,"nodeType":"ParameterList","parameters":[],"src":"2976:0:31"},"scope":7447,"src":"2896:935:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":7448,"src":"468:3365:31","usedErrors":[]}],"src":"185:3648:31"},"id":31},"contracts/Rewards.sol":{"ast":{"absolutePath":"contracts/Rewards.sol","exportedSymbols":{"Address":[4011],"Asset":[4654],"Category":[4598],"Context":[4034],"ERC1155":[1234],"ERC1155Burnable":[1466],"ERC1155Holder":[1532],"ERC1155Receiver":[1566],"ERC165":[4261],"ERC721":[3027],"ERC721Burnable":[3191],"ERC721Enumerable":[3529],"ERC721URIStorage":[3657],"FCTVToken":[5498],"IERC1155":[1356],"IERC1155MetadataURI":[1481],"IERC1155Receiver":[1397],"IERC165":[4273],"IERC721":[3143],"IERC721Enumerable":[3688],"IERC721Metadata":[3715],"IERC721Receiver":[3161],"NFTVenture":[7155],"NewReward":[4622],"Ownable":[109],"Pausable":[201],"ProjectStatus":[4592],"Reward":[4611],"Rewards":[7668],"Strings":[4237]},"id":7669,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7449,"literals":["solidity",">=","0.8",".0","<=","0.8",".19"],"nodeType":"PragmaDirective","src":"32:33:32"},{"absolutePath":"contracts/FCTVToken.sol","file":"./FCTVToken.sol","id":7450,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7669,"sourceUnit":5499,"src":"67:25:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/NFTVenture.sol","file":"./NFTVenture.sol","id":7451,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7669,"sourceUnit":7156,"src":"93:26:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/AssetStruct.sol","file":"./AssetStruct.sol","id":7452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7669,"sourceUnit":4655,"src":"120:27:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol","file":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol","id":7453,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7669,"sourceUnit":1533,"src":"148:71:32","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7454,"name":"ERC1155Holder","nameLocations":["241:13:32"],"nodeType":"IdentifierPath","referencedDeclaration":1532,"src":"241:13:32"},"id":7455,"nodeType":"InheritanceSpecifier","src":"241:13:32"}],"canonicalName":"Rewards","contractDependencies":[5498],"contractKind":"contract","fullyImplemented":true,"id":7668,"linearizedBaseContracts":[7668,1532,1566,1397,4261,4273],"name":"Rewards","nameLocation":"230:7:32","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7458,"mutability":"mutable","name":"nftContract","nameLocation":"280:11:32","nodeType":"VariableDeclaration","scope":7668,"src":"261:30:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"},"typeName":{"id":7457,"nodeType":"UserDefinedTypeName","pathNode":{"id":7456,"name":"NFTVenture","nameLocations":["261:10:32"],"nodeType":"IdentifierPath","referencedDeclaration":7155,"src":"261:10:32"},"referencedDeclaration":7155,"src":"261:10:32","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"visibility":"private"},{"constant":false,"functionSelector":"56e4b68b","id":7460,"mutability":"mutable","name":"supervisor","nameLocation":"312:10:32","nodeType":"VariableDeclaration","scope":7668,"src":"297:25:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7459,"name":"address","nodeType":"ElementaryTypeName","src":"297:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"31055275ed1c52e3c2c906750e908d15538e6c1c01092da5ee55dfcad29da39f","id":7468,"name":"RewardsAdded","nameLocation":"349:12:32","nodeType":"EventDefinition","parameters":{"id":7467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7462,"indexed":true,"mutability":"mutable","name":"assetId","nameLocation":"378:7:32","nodeType":"VariableDeclaration","scope":7468,"src":"362:23:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7461,"name":"uint256","nodeType":"ElementaryTypeName","src":"362:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7464,"indexed":false,"mutability":"mutable","name":"rewardsCount","nameLocation":"395:12:32","nodeType":"VariableDeclaration","scope":7468,"src":"387:20:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7463,"name":"uint256","nodeType":"ElementaryTypeName","src":"387:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7466,"indexed":false,"mutability":"mutable","name":"rewardTokenAddress","nameLocation":"417:18:32","nodeType":"VariableDeclaration","scope":7468,"src":"409:26:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7465,"name":"address","nodeType":"ElementaryTypeName","src":"409:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"361:75:32"},"src":"343:94:32"},{"body":{"id":7484,"nodeType":"Block","src":"494:86:32","statements":[{"expression":{"id":7477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7473,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7458,"src":"504:11:32","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7475,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"529:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7474,"name":"NFTVenture","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7155,"src":"518:10:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_NFTVenture_$7155_$","typeString":"type(contract NFTVenture)"}},"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"518:22:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"src":"504:36:32","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":7478,"nodeType":"ExpressionStatement","src":"504:36:32"},{"expression":{"id":7482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7479,"name":"supervisor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"550:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7480,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"563:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"567:6:32","memberName":"sender","nodeType":"MemberAccess","src":"563:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"550:23:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7483,"nodeType":"ExpressionStatement","src":"550:23:32"}]},"id":7485,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7470,"mutability":"mutable","name":"nftAddress","nameLocation":"482:10:32","nodeType":"VariableDeclaration","scope":7485,"src":"474:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7469,"name":"address","nodeType":"ElementaryTypeName","src":"474:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"473:20:32"},"returnParameters":{"id":7472,"nodeType":"ParameterList","parameters":[],"src":"494:0:32"},"scope":7668,"src":"462:118:32","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7496,"nodeType":"Block","src":"612:103:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7488,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"630:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"634:6:32","memberName":"sender","nodeType":"MemberAccess","src":"630:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7490,"name":"supervisor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"644:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"630:24:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792073757065727669736f722063616e2063616c6c20746869732066756e6374696f6e","id":7492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"656:40:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d7f4340f27d55e1e41a8d5ddf87968436d7cb708d0eb99fe9fefe6b11395f2","typeString":"literal_string \"Only supervisor can call this function\""},"value":"Only supervisor can call this function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_32d7f4340f27d55e1e41a8d5ddf87968436d7cb708d0eb99fe9fefe6b11395f2","typeString":"literal_string \"Only supervisor can call this function\""}],"id":7487,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"622:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"622:75:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7494,"nodeType":"ExpressionStatement","src":"622:75:32"},{"id":7495,"nodeType":"PlaceholderStatement","src":"707:1:32"}]},"id":7497,"name":"onlySupervisor","nameLocation":"595:14:32","nodeType":"ModifierDefinition","parameters":{"id":7486,"nodeType":"ParameterList","parameters":[],"src":"609:2:32"},"src":"586:129:32","virtual":false,"visibility":"internal"},{"body":{"id":7645,"nodeType":"Block","src":"1007:1077:32","statements":[{"expression":{"arguments":[{"arguments":[{"id":7511,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"1044:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7509,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7458,"src":"1025:11:32","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":7510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1037:6:32","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":6553,"src":"1025:18:32","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view external returns (bool)"}},"id":7512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1025:27:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417373657420646f6573206e6f74206578697374","id":7513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1054:22:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_48805f8fa767ef4f6e13e9d1c424df0337974c3d4b0946f6cb5fcbae9385469f","typeString":"literal_string \"Asset does not exist\""},"value":"Asset does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48805f8fa767ef4f6e13e9d1c424df0337974c3d4b0946f6cb5fcbae9385469f","typeString":"literal_string \"Asset does not exist\""}],"id":7508,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1017:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1017:60:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7515,"nodeType":"ExpressionStatement","src":"1017:60:32"},{"assignments":[7518],"declarations":[{"constant":false,"id":7518,"mutability":"mutable","name":"asset","nameLocation":"1100:5:32","nodeType":"VariableDeclaration","scope":7645,"src":"1087:18:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset"},"typeName":{"id":7517,"nodeType":"UserDefinedTypeName","pathNode":{"id":7516,"name":"Asset","nameLocations":["1087:5:32"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"1087:5:32"},"referencedDeclaration":4654,"src":"1087:5:32","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"}},"visibility":"internal"}],"id":7523,"initialValue":{"arguments":[{"id":7521,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"1129:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7519,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7458,"src":"1108:11:32","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":7520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1120:8:32","memberName":"getAsset","nodeType":"MemberAccess","referencedDeclaration":6655,"src":"1108:20:32","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_Asset_$4654_memory_ptr_$","typeString":"function (uint256) view external returns (struct Asset memory)"}},"id":7522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1108:29:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"nodeType":"VariableDeclarationStatement","src":"1087:50:32"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7524,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"1152:5:32","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":7525,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1158:18:32","memberName":"rewardTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4645,"src":"1152:24:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1188:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1180:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7526,"name":"address","nodeType":"ElementaryTypeName","src":"1180:7:32","typeDescriptions":{}}},"id":7529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1180:10:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1152:38:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7560,"nodeType":"IfStatement","src":"1148:252:32","trueBody":{"id":7559,"nodeType":"Block","src":"1192:208:32","statements":[{"assignments":[7533],"declarations":[{"constant":false,"id":7533,"mutability":"mutable","name":"rewardToken","nameLocation":"1216:11:32","nodeType":"VariableDeclaration","scope":7559,"src":"1206:21:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_FCTVToken_$5498","typeString":"contract FCTVToken"},"typeName":{"id":7532,"nodeType":"UserDefinedTypeName","pathNode":{"id":7531,"name":"FCTVToken","nameLocations":["1206:9:32"],"nodeType":"IdentifierPath","referencedDeclaration":5498,"src":"1206:9:32"},"referencedDeclaration":5498,"src":"1206:9:32","typeDescriptions":{"typeIdentifier":"t_contract$_FCTVToken_$5498","typeString":"contract FCTVToken"}},"visibility":"internal"}],"id":7539,"initialValue":{"arguments":[{"hexValue":"","id":7537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1244:2:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1230:13:32","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_string_memory_ptr_$returns$_t_contract$_FCTVToken_$5498_$","typeString":"function (string memory) returns (contract FCTVToken)"},"typeName":{"id":7535,"nodeType":"UserDefinedTypeName","pathNode":{"id":7534,"name":"FCTVToken","nameLocations":["1234:9:32"],"nodeType":"IdentifierPath","referencedDeclaration":5498,"src":"1234:9:32"},"referencedDeclaration":5498,"src":"1234:9:32","typeDescriptions":{"typeIdentifier":"t_contract$_FCTVToken_$5498","typeString":"contract FCTVToken"}}},"id":7538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1230:17:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_FCTVToken_$5498","typeString":"contract FCTVToken"}},"nodeType":"VariableDeclarationStatement","src":"1206:41:32"},{"expression":{"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7540,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"1261:5:32","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":7542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1267:18:32","memberName":"rewardTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4645,"src":"1261:24:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7545,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"1296:11:32","typeDescriptions":{"typeIdentifier":"t_contract$_FCTVToken_$5498","typeString":"contract FCTVToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FCTVToken_$5498","typeString":"contract FCTVToken"}],"id":7544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1288:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7543,"name":"address","nodeType":"ElementaryTypeName","src":"1288:7:32","typeDescriptions":{}}},"id":7546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1288:20:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1261:47:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7548,"nodeType":"ExpressionStatement","src":"1261:47:32"},{"expression":{"arguments":[{"id":7552,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"1359:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":7555,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"1376:11:32","typeDescriptions":{"typeIdentifier":"t_contract$_FCTVToken_$5498","typeString":"contract FCTVToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FCTVToken_$5498","typeString":"contract FCTVToken"}],"id":7554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1368:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7553,"name":"address","nodeType":"ElementaryTypeName","src":"1368:7:32","typeDescriptions":{}}},"id":7556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1368:20:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7549,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7458,"src":"1322:11:32","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1334:24:32","memberName":"updateRewardTokenAddress","nodeType":"MemberAccess","referencedDeclaration":6785,"src":"1322:36:32","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address) external"}},"id":7557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:67:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7558,"nodeType":"ExpressionStatement","src":"1322:67:32"}]}},{"assignments":[7563],"declarations":[{"constant":false,"id":7563,"mutability":"mutable","name":"rewardTokenContract","nameLocation":"1420:19:32","nodeType":"VariableDeclaration","scope":7645,"src":"1410:29:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_FCTVToken_$5498","typeString":"contract FCTVToken"},"typeName":{"id":7562,"nodeType":"UserDefinedTypeName","pathNode":{"id":7561,"name":"FCTVToken","nameLocations":["1410:9:32"],"nodeType":"IdentifierPath","referencedDeclaration":5498,"src":"1410:9:32"},"referencedDeclaration":5498,"src":"1410:9:32","typeDescriptions":{"typeIdentifier":"t_contract$_FCTVToken_$5498","typeString":"contract FCTVToken"}},"visibility":"internal"}],"id":7568,"initialValue":{"arguments":[{"expression":{"id":7565,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"1452:5:32","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":7566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1458:18:32","memberName":"rewardTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4645,"src":"1452:24:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7564,"name":"FCTVToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"1442:9:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FCTVToken_$5498_$","typeString":"type(contract FCTVToken)"}},"id":7567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1442:35:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_FCTVToken_$5498","typeString":"contract FCTVToken"}},"nodeType":"VariableDeclarationStatement","src":"1410:67:32"},{"body":{"id":7643,"nodeType":"Block","src":"1533:545:32","statements":[{"assignments":[7581],"declarations":[{"constant":false,"id":7581,"mutability":"mutable","name":"rewardId","nameLocation":"1555:8:32","nodeType":"VariableDeclaration","scope":7643,"src":"1547:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1547:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7589,"initialValue":{"arguments":[{"arguments":[{"id":7585,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"1593:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7586,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"1602:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7583,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1576:3:32","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1580:12:32","memberName":"encodePacked","nodeType":"MemberAccess","src":"1576:16:32","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1576:28:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7582,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1566:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1566:39:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1547:58:32"},{"expression":{"arguments":[{"arguments":[{"id":7595,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1669:4:32","typeDescriptions":{"typeIdentifier":"t_contract$_Rewards_$7668","typeString":"contract Rewards"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Rewards_$7668","typeString":"contract Rewards"}],"id":7594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1661:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7593,"name":"address","nodeType":"ElementaryTypeName","src":"1661:7:32","typeDescriptions":{}}},"id":7596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1661:13:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7599,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"1700:8:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1692:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7597,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:32","typeDescriptions":{}}},"id":7600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1692:17:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":7601,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"1727:7:32","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NewReward_$4622_memory_ptr_$dyn_memory_ptr","typeString":"struct NewReward memory[] memory"}},"id":7603,"indexExpression":{"id":7602,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"1735:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1727:10:32","typeDescriptions":{"typeIdentifier":"t_struct$_NewReward_$4622_memory_ptr","typeString":"struct NewReward memory"}},"id":7604,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1738:11:32","memberName":"tokenAmount","nodeType":"MemberAccess","referencedDeclaration":4619,"src":"1727:22:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":7605,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"1767:7:32","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NewReward_$4622_memory_ptr_$dyn_memory_ptr","typeString":"struct NewReward memory[] memory"}},"id":7607,"indexExpression":{"id":7606,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"1775:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1767:10:32","typeDescriptions":{"typeIdentifier":"t_struct$_NewReward_$4622_memory_ptr","typeString":"struct NewReward memory"}},"id":7608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1778:8:32","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":4613,"src":"1767:19:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"","id":7609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1804:2:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":7590,"name":"rewardTokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7563,"src":"1619:19:32","typeDescriptions":{"typeIdentifier":"t_contract$_FCTVToken_$5498","typeString":"contract FCTVToken"}},"id":7592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1639:4:32","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":5439,"src":"1619:24:32","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,string memory,bytes memory) external"}},"id":7610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1619:201:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7611,"nodeType":"ExpressionStatement","src":"1619:201:32"},{"expression":{"arguments":[{"id":7615,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"1872:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":7616,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"1881:7:32","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NewReward_$4622_memory_ptr_$dyn_memory_ptr","typeString":"struct NewReward memory[] memory"}},"id":7618,"indexExpression":{"id":7617,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"1889:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1881:10:32","typeDescriptions":{"typeIdentifier":"t_struct$_NewReward_$4622_memory_ptr","typeString":"struct NewReward memory"}},"id":7619,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1892:5:32","memberName":"title","nodeType":"MemberAccess","referencedDeclaration":4615,"src":"1881:16:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"baseExpression":{"id":7620,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"1899:7:32","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NewReward_$4622_memory_ptr_$dyn_memory_ptr","typeString":"struct NewReward memory[] memory"}},"id":7622,"indexExpression":{"id":7621,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"1907:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1899:10:32","typeDescriptions":{"typeIdentifier":"t_struct$_NewReward_$4622_memory_ptr","typeString":"struct NewReward memory"}},"id":7623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1910:11:32","memberName":"description","nodeType":"MemberAccess","referencedDeclaration":4617,"src":"1899:22:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"baseExpression":{"id":7624,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"1923:7:32","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NewReward_$4622_memory_ptr_$dyn_memory_ptr","typeString":"struct NewReward memory[] memory"}},"id":7626,"indexExpression":{"id":7625,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"1931:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1923:10:32","typeDescriptions":{"typeIdentifier":"t_struct$_NewReward_$4622_memory_ptr","typeString":"struct NewReward memory"}},"id":7627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1934:11:32","memberName":"tokenAmount","nodeType":"MemberAccess","referencedDeclaration":4619,"src":"1923:22:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":7628,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"1947:7:32","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NewReward_$4622_memory_ptr_$dyn_memory_ptr","typeString":"struct NewReward memory[] memory"}},"id":7630,"indexExpression":{"id":7629,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"1955:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1947:10:32","typeDescriptions":{"typeIdentifier":"t_struct$_NewReward_$4622_memory_ptr","typeString":"struct NewReward memory"}},"id":7631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1958:15:32","memberName":"individualPrice","nodeType":"MemberAccess","referencedDeclaration":4621,"src":"1947:26:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7632,"name":"rewardId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"1975:8:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7612,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7458,"src":"1835:11:32","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":7614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:24:32","memberName":"handleRewardAddedToAsset","nodeType":"MemberAccess","referencedDeclaration":6770,"src":"1835:36:32","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,string memory,string memory,uint256,uint256,bytes32) external"}},"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1835:149:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7634,"nodeType":"ExpressionStatement","src":"1835:149:32"},{"eventCall":{"arguments":[{"id":7636,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"2017:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7637,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"2026:7:32","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NewReward_$4622_memory_ptr_$dyn_memory_ptr","typeString":"struct NewReward memory[] memory"}},"id":7638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2034:6:32","memberName":"length","nodeType":"MemberAccess","src":"2026:14:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7639,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"2042:5:32","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":7640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2048:18:32","memberName":"rewardTokenAddress","nodeType":"MemberAccess","referencedDeclaration":4645,"src":"2042:24:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7635,"name":"RewardsAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"2004:12:32","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":7641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2004:63:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7642,"nodeType":"EmitStatement","src":"1999:68:32"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7573,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"1508:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7574,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"1512:7:32","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NewReward_$4622_memory_ptr_$dyn_memory_ptr","typeString":"struct NewReward memory[] memory"}},"id":7575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1520:6:32","memberName":"length","nodeType":"MemberAccess","src":"1512:14:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1508:18:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7644,"initializationExpression":{"assignments":[7570],"declarations":[{"constant":false,"id":7570,"mutability":"mutable","name":"i","nameLocation":"1501:1:32","nodeType":"VariableDeclaration","scope":7644,"src":"1493:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7572,"initialValue":{"hexValue":"30","id":7571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1505:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1493:13:32"},"loopExpression":{"expression":{"id":7578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1528:3:32","subExpression":{"id":7577,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"1528:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7579,"nodeType":"ExpressionStatement","src":"1528:3:32"},"nodeType":"ForStatement","src":"1488:590:32"}]},"functionSelector":"660486ff","id":7646,"implemented":true,"kind":"function","modifiers":[{"id":7506,"kind":"modifierInvocation","modifierName":{"id":7505,"name":"onlySupervisor","nameLocations":["992:14:32"],"nodeType":"IdentifierPath","referencedDeclaration":7497,"src":"992:14:32"},"nodeType":"ModifierInvocation","src":"992:14:32"}],"name":"addRewards","nameLocation":"929:10:32","nodeType":"FunctionDefinition","parameters":{"id":7504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7499,"mutability":"mutable","name":"assetId","nameLocation":"948:7:32","nodeType":"VariableDeclaration","scope":7646,"src":"940:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7498,"name":"uint256","nodeType":"ElementaryTypeName","src":"940:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7503,"mutability":"mutable","name":"rewards","nameLocation":"976:7:32","nodeType":"VariableDeclaration","scope":7646,"src":"957:26:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NewReward_$4622_memory_ptr_$dyn_memory_ptr","typeString":"struct NewReward[]"},"typeName":{"baseType":{"id":7501,"nodeType":"UserDefinedTypeName","pathNode":{"id":7500,"name":"NewReward","nameLocations":["957:9:32"],"nodeType":"IdentifierPath","referencedDeclaration":4622,"src":"957:9:32"},"referencedDeclaration":4622,"src":"957:9:32","typeDescriptions":{"typeIdentifier":"t_struct$_NewReward_$4622_storage_ptr","typeString":"struct NewReward"}},"id":7502,"nodeType":"ArrayTypeName","src":"957:11:32","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NewReward_$4622_storage_$dyn_storage_ptr","typeString":"struct NewReward[]"}},"visibility":"internal"}],"src":"939:45:32"},"returnParameters":{"id":7507,"nodeType":"ParameterList","parameters":[],"src":"1007:0:32"},"scope":7668,"src":"920:1164:32","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7666,"nodeType":"Block","src":"2173:97:32","statements":[{"assignments":[7657],"declarations":[{"constant":false,"id":7657,"mutability":"mutable","name":"asset","nameLocation":"2196:5:32","nodeType":"VariableDeclaration","scope":7666,"src":"2183:18:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset"},"typeName":{"id":7656,"nodeType":"UserDefinedTypeName","pathNode":{"id":7655,"name":"Asset","nameLocations":["2183:5:32"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"2183:5:32"},"referencedDeclaration":4654,"src":"2183:5:32","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_storage_ptr","typeString":"struct Asset"}},"visibility":"internal"}],"id":7662,"initialValue":{"arguments":[{"id":7660,"name":"assetId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7648,"src":"2225:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7658,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7458,"src":"2204:11:32","typeDescriptions":{"typeIdentifier":"t_contract$_NFTVenture_$7155","typeString":"contract NFTVenture"}},"id":7659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2216:8:32","memberName":"getAsset","nodeType":"MemberAccess","referencedDeclaration":6655,"src":"2204:20:32","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_struct$_Asset_$4654_memory_ptr_$","typeString":"function (uint256) view external returns (struct Asset memory)"}},"id":7661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2204:29:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"nodeType":"VariableDeclarationStatement","src":"2183:50:32"},{"expression":{"expression":{"id":7663,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7657,"src":"2250:5:32","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$4654_memory_ptr","typeString":"struct Asset memory"}},"id":7664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2256:7:32","memberName":"rewards","nodeType":"MemberAccess","referencedDeclaration":4640,"src":"2250:13:32","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Reward_$4611_memory_ptr_$dyn_memory_ptr","typeString":"struct Reward memory[] memory"}},"functionReturnParameters":7654,"id":7665,"nodeType":"Return","src":"2243:20:32"}]},"functionSelector":"8bfa795d","id":7667,"implemented":true,"kind":"function","modifiers":[],"name":"getRewardsForAsset","nameLocation":"2099:18:32","nodeType":"FunctionDefinition","parameters":{"id":7649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7648,"mutability":"mutable","name":"assetId","nameLocation":"2126:7:32","nodeType":"VariableDeclaration","scope":7667,"src":"2118:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7647,"name":"uint256","nodeType":"ElementaryTypeName","src":"2118:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2117:17:32"},"returnParameters":{"id":7654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7667,"src":"2156:15:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Reward_$4611_memory_ptr_$dyn_memory_ptr","typeString":"struct Reward[]"},"typeName":{"baseType":{"id":7651,"nodeType":"UserDefinedTypeName","pathNode":{"id":7650,"name":"Reward","nameLocations":["2156:6:32"],"nodeType":"IdentifierPath","referencedDeclaration":4611,"src":"2156:6:32"},"referencedDeclaration":4611,"src":"2156:6:32","typeDescriptions":{"typeIdentifier":"t_struct$_Reward_$4611_storage_ptr","typeString":"struct Reward"}},"id":7652,"nodeType":"ArrayTypeName","src":"2156:8:32","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Reward_$4611_storage_$dyn_storage_ptr","typeString":"struct Reward[]"}},"visibility":"internal"}],"src":"2155:17:32"},"scope":7668,"src":"2090:180:32","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":7669,"src":"221:2051:32","usedErrors":[]}],"src":"32:2241:32"},"id":32}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/security/Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.","events":{"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"constructor":{"details":"Initializes the contract in unpaused state."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor () {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xab1f67e4c96dfe0e3875d22883c3dee5411914f40ce0c54ef407f030d803512e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":127,"contract":"@openzeppelin/contracts/security/Pausable.sol:Pausable","label":"_paused","offset":0,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"string","name":"uri_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._","events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"constructor":{"details":"See {_setURI}."},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"uri(uint256)":{"details":"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":540,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"608060405234620002175762001252803803806200001d816200021c565b92833981019060208082840312620002175781516001600160401b039283821162000217570192601f9080828601121562000217578451848111620001ec57601f199562000071828501881686016200021c565b928284528583830101116200021757849060005b83811062000202575050600091830101528051938411620001ec57600254926001938481811c91168015620001e1575b82821014620001cb578381116200017f575b50809285116001146200011457508394509083929160009462000108575b50501b916000199060031b1c1916176002555b60405161100f9081620002438239f35b015192503880620000e5565b929484908116600260005284600020946000905b888383106200016457505050106200014a575b505050811b01600255620000f8565b015160001960f88460031b161c191690553880806200013b565b85870151885590960195948501948793509081019062000128565b6002600052816000208480880160051c820192848910620001c1575b0160051c019085905b828110620001b4575050620000c7565b60008155018590620001a4565b925081926200019b565b634e487b7160e01b600052602260045260246000fd5b90607f1690620000b5565b634e487b7160e01b600052604160045260246000fd5b81810183015185820184015286920162000085565b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620001ec5760405256fe60406080815260048036101561001457600080fd5b600091823560e01c8062fdd58e14610b7457806301ffc9a714610b065780630e89341c14610a0c5780632eb2c2d6146106a55780634e1273f414610504578063a22cb46514610424578063e985e9c5146103d25763f242432a1461007757600080fd5b346103ce5760a03660031901126103ce57610090610ba4565b610098610bbf565b906044356064356084356001600160401b0381116103ca576100bd9036908801610cc3565b926001600160a01b03858116916100d5831515610e22565b169233841480156103ac575b156103575790816100f58a96959493610fa4565b506100ff83610fa4565b50808652602096868852888720858852885261012a848a89205461012582821015610e7c565b610edb565b8288528789528988208689528952898820558187528688528887208388528852888720610158858254610ee8565b905582858a51848152868b8201527fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628c3392a43b610194578580f35b889587946101d58a519788968795869463f23a6e6160e01b9c8d8752339087015260248601526044850152606484015260a0608484015260a4830190610bd5565b03925af1869181610328575b506102b35750506001906101f3610f15565b6308c379a014610280575b506102135750505b3880808381808080808580f35b5162461bcd60e51b81529150819061027c90820160809060208152603460208201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356040820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60608201520190565b0390fd5b610288610f33565b8061029357506101fe565b61027c8591855193849362461bcd60e51b85528401526024830190610bd5565b6001600160e01b0319160390506102cb575050610206565b5162461bcd60e51b81529150819061027c90820160809060208152602860208201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b60608201520190565b610349919250843d8611610350575b6103418183610c15565b810190610ef5565b90386101e1565b503d610337565b865162461bcd60e51b81526020818a0152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608490fd5b508389526001602052868920338a5260205260ff878a2054166100e1565b8780fd5b8280fd5b83823461042057806003193601126104205760ff816020936103f2610ba4565b6103fa610bbf565b6001600160a01b0391821683526001875283832091168252855220549151911615158152f35b5080fd5b50346103ce57806003193601126103ce5761043d610ba4565b9060243591821515809303610500576001600160a01b0316923384146104ac5750338452600160205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020608492519162461bcd60e51b8352820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152fd5b8480fd5b5090346103ce57816003193601126103ce5780356001600160401b03808211610500573660238301121561050057818301359061054082610c4e565b9261054d86519485610c15565b82845260209260248486019160051b830101913683116106a157602401905b82821061067e5750505060243590811161067a5761058d9036908501610c65565b92825184510361062757508151946105a486610c4e565b956105b186519788610c15565b8087526105c0601f1991610c4e565b0136838801375b82518110156106115761060c906105fc6001600160a01b036105e98387610df8565b51166105f58388610df8565b5190610d4d565b6106068289610df8565b52610dd3565b6105c7565b84518281528061062381850189610d19565b0390f35b60849185519162461bcd60e51b8352820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152fd5b8580fd5b81356001600160a01b038116810361069d57815290840190840161056c565b8980fd5b8880fd5b5090346103ce576003199160a036840112610a08576106c2610ba4565b6106ca610bbf565b936001600160401b03936044358581116103ca576106eb9036908301610c65565b906064358681116106a1576107039036908301610c65565b956084359081116106a15761071b9036908301610cc3565b9282518751036109b4576001600160a01b038881169561073c871515610e22565b16933385148015610996575b1561093857895b8a85518210156107d45790896107c88a6107cf9461077885610771818d610df8565b5195610df8565b51938082526020908282528383208d8452825261079f868585205461012582821015610e7c565b8184528383528d8585209085528352848420558252818152828220908d83525220918254610ee8565b9055610dd3565b61074f565b50509094939596929197848789518a81527f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb6108128c830188610d19565b9180830360208201528061082733948b610d19565b0390a43b610833578880f35b8651948593849363bc197c8160e01b98898652338c87015260248601526044850160a0905260a4850161086591610d19565b8285820301606486015261087891610d19565b9083820301608484015261088b91610bd5565b0381885a94602095f1859181610918575b5061090257505060016108ad610f15565b6308c379a0146108cb575b6102135750505b38808080808080808880f35b6108d3610f33565b806108de57506108b8565b905061027c91602094505193849362461bcd60e51b85528401526024830190610bd5565b6001600160e01b031916036102cb5750506108bf565b61093191925060203d8111610350576103418183610c15565b903861089c565b865162461bcd60e51b8152602081850152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608490fd5b50848a526001602052868a20338b5260205260ff878b205416610748565b855162461bcd60e51b8152602081840152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608490fd5b8380fd5b5082903461042057602090816003193601126103ce57805192806002549060019082821c928281168015610afc575b8785108114610ae9578899509688969785829a529182600014610ac2575050600114610a84575b5050506106239291610a75910385610c15565b51928284938452830190610bd5565b9190869350600283528383205b828410610aaa5750505082010181610a75610623610a62565b8054848a018601528895508794909301928101610a91565b60ff19168782015293151560051b86019093019350849250610a7591506106239050610a62565b634e487b7160e01b835260228a52602483fd5b93607f1693610a3b565b5090346103ce5760203660031901126103ce57359063ffffffff60e01b82168092036103ce5760209250636cdb3d1360e11b8214918215610b63575b8215610b52575b50519015158152f35b6301ffc9a760e01b14915038610b49565b6303a24d0760e21b81149250610b42565b838234610420578060031936011261042057602090610b9d610b94610ba4565b60243590610d4d565b9051908152f35b600435906001600160a01b0382168203610bba57565b600080fd5b602435906001600160a01b0382168203610bba57565b919082519283825260005b848110610c01575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610be0565b601f909101601f19168101906001600160401b03821190821017610c3857604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b038111610c385760051b60200190565b81601f82011215610bba57803591610c7c83610c4e565b92610c8a6040519485610c15565b808452602092838086019260051b820101928311610bba578301905b828210610cb4575050505090565b81358152908301908301610ca6565b81601f82011215610bba578035906001600160401b038211610c385760405192610cf7601f8401601f191660200185610c15565b82845260208383010111610bba57816000926020809301838601378301015290565b90815180825260208080930193019160005b828110610d39575050505090565b835185529381019392810192600101610d2b565b6001600160a01b0316908115610d7a57600052600060205260406000209060005260205260406000205490565b60405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b6064820152608490fd5b6000198114610de25760010190565b634e487b7160e01b600052601160045260246000fd5b8051821015610e0c5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b15610e2957565b60405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b15610e8357565b60405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608490fd5b91908203918211610de257565b91908201809211610de257565b90816020910312610bba57516001600160e01b031981168103610bba5790565b60009060033d11610f2257565b905060046000803e60005160e01c90565b600060443d10610f9057604051600319913d83016004833e81516001600160401b03918282113d602484011117610f9357818401948551938411610f9b573d85010160208487010111610f935750610f9092910160200190610c15565b90565b949350505050565b50949350505050565b60408051919082016001600160401b03811183821017610c385760405260018252602082016020368237825115610e0c57529056fea2646970667358221220001e07230620d49e0050ae9b4849101fa614f31ec6a9133f613328c74502b8ee64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x217 JUMPI PUSH3 0x1252 DUP1 CODESIZE SUB DUP1 PUSH3 0x1D DUP2 PUSH3 0x21C JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x20 DUP1 DUP3 DUP5 SUB SLT PUSH3 0x217 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH3 0x217 JUMPI ADD SWAP3 PUSH1 0x1F SWAP1 DUP1 DUP3 DUP7 ADD SLT ISZERO PUSH3 0x217 JUMPI DUP5 MLOAD DUP5 DUP2 GT PUSH3 0x1EC JUMPI PUSH1 0x1F NOT SWAP6 PUSH3 0x71 DUP3 DUP6 ADD DUP9 AND DUP7 ADD PUSH3 0x21C JUMP JUMPDEST SWAP3 DUP3 DUP5 MSTORE DUP6 DUP4 DUP4 ADD ADD GT PUSH3 0x217 JUMPI DUP5 SWAP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0x202 JUMPI POP POP PUSH1 0x0 SWAP2 DUP4 ADD ADD MSTORE DUP1 MLOAD SWAP4 DUP5 GT PUSH3 0x1EC JUMPI PUSH1 0x2 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x1E1 JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH3 0x1CB JUMPI DUP4 DUP2 GT PUSH3 0x17F JUMPI JUMPDEST POP DUP1 SWAP3 DUP6 GT PUSH1 0x1 EQ PUSH3 0x114 JUMPI POP DUP4 SWAP5 POP SWAP1 DUP4 SWAP3 SWAP2 PUSH1 0x0 SWAP5 PUSH3 0x108 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100F SWAP1 DUP2 PUSH3 0x243 DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0xE5 JUMP JUMPDEST SWAP3 SWAP5 DUP5 SWAP1 DUP2 AND PUSH1 0x2 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0x164 JUMPI POP POP POP LT PUSH3 0x14A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE PUSH3 0xF8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x13B JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x128 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP9 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP5 DUP10 LT PUSH3 0x1C1 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x1B4 JUMPI POP POP PUSH3 0xC7 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0x1A4 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x19B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xB5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD DUP5 ADD MSTORE DUP7 SWAP3 ADD PUSH3 0x85 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x1EC JUMPI PUSH1 0x40 MSTORE JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0xB74 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB06 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xA0C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x6A5 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3D2 JUMPI PUSH4 0xF242432A EQ PUSH2 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3CE JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3CE JUMPI PUSH2 0x90 PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0x98 PUSH2 0xBBF JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3CA JUMPI PUSH2 0xBD SWAP1 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0xCC3 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 PUSH2 0xD5 DUP4 ISZERO ISZERO PUSH2 0xE22 JUMP JUMPDEST AND SWAP3 CALLER DUP5 EQ DUP1 ISZERO PUSH2 0x3AC JUMPI JUMPDEST ISZERO PUSH2 0x357 JUMPI SWAP1 DUP2 PUSH2 0xF5 DUP11 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0xFA4 JUMP JUMPDEST POP PUSH2 0xFF DUP4 PUSH2 0xFA4 JUMP JUMPDEST POP DUP1 DUP7 MSTORE PUSH1 0x20 SWAP7 DUP7 DUP9 MSTORE DUP9 DUP8 KECCAK256 DUP6 DUP9 MSTORE DUP9 MSTORE PUSH2 0x12A DUP5 DUP11 DUP10 KECCAK256 SLOAD PUSH2 0x125 DUP3 DUP3 LT ISZERO PUSH2 0xE7C JUMP JUMPDEST PUSH2 0xEDB JUMP JUMPDEST DUP3 DUP9 MSTORE DUP8 DUP10 MSTORE DUP10 DUP9 KECCAK256 DUP7 DUP10 MSTORE DUP10 MSTORE DUP10 DUP9 KECCAK256 SSTORE DUP2 DUP8 MSTORE DUP7 DUP9 MSTORE DUP9 DUP8 KECCAK256 DUP4 DUP9 MSTORE DUP9 MSTORE DUP9 DUP8 KECCAK256 PUSH2 0x158 DUP6 DUP3 SLOAD PUSH2 0xEE8 JUMP JUMPDEST SWAP1 SSTORE DUP3 DUP6 DUP11 MLOAD DUP5 DUP2 MSTORE DUP7 DUP12 DUP3 ADD MSTORE PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP13 CALLER SWAP3 LOG4 EXTCODESIZE PUSH2 0x194 JUMPI DUP6 DUP1 RETURN JUMPDEST DUP9 SWAP6 DUP8 SWAP5 PUSH2 0x1D5 DUP11 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP13 DUP14 DUP8 MSTORE CALLER SWAP1 DUP8 ADD MSTORE PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD SWAP1 PUSH2 0xBD5 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP7 SWAP2 DUP2 PUSH2 0x328 JUMPI JUMPDEST POP PUSH2 0x2B3 JUMPI POP POP PUSH1 0x1 SWAP1 PUSH2 0x1F3 PUSH2 0xF15 JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x280 JUMPI JUMPDEST POP PUSH2 0x213 JUMPI POP POP JUMPDEST CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 DUP1 DUP1 DUP6 DUP1 RETURN JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 POP DUP2 SWAP1 PUSH2 0x27C SWAP1 DUP3 ADD PUSH1 0x80 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x40 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x288 PUSH2 0xF33 JUMP JUMPDEST DUP1 PUSH2 0x293 JUMPI POP PUSH2 0x1FE JUMP JUMPDEST PUSH2 0x27C DUP6 SWAP2 DUP6 MLOAD SWAP4 DUP5 SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB SWAP1 POP PUSH2 0x2CB JUMPI POP POP PUSH2 0x206 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 POP DUP2 SWAP1 PUSH2 0x27C SWAP1 DUP3 ADD PUSH1 0x80 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x28 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH2 0x349 SWAP2 SWAP3 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x350 JUMPI JUMPDEST PUSH2 0x341 DUP2 DUP4 PUSH2 0xC15 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xEF5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1E1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x337 JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP11 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP4 DUP10 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP10 KECCAK256 CALLER DUP11 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP8 DUP11 KECCAK256 SLOAD AND PUSH2 0xE1 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x420 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x420 JUMPI PUSH1 0xFF DUP2 PUSH1 0x20 SWAP4 PUSH2 0x3F2 PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0x3FA PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP8 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3CE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3CE JUMPI PUSH2 0x43D PUSH2 0xBA4 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0x500 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 CALLER DUP5 EQ PUSH2 0x4AC JUMPI POP CALLER DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 DUP5 KECCAK256 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE DUP1 DUP5 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x3CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3CE JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT PUSH2 0x500 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x500 JUMPI DUP2 DUP4 ADD CALLDATALOAD SWAP1 PUSH2 0x540 DUP3 PUSH2 0xC4E JUMP JUMPDEST SWAP3 PUSH2 0x54D DUP7 MLOAD SWAP5 DUP6 PUSH2 0xC15 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x24 DUP5 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x6A1 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x67E JUMPI POP POP POP PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x67A JUMPI PUSH2 0x58D SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0xC65 JUMP JUMPDEST SWAP3 DUP3 MLOAD DUP5 MLOAD SUB PUSH2 0x627 JUMPI POP DUP2 MLOAD SWAP5 PUSH2 0x5A4 DUP7 PUSH2 0xC4E JUMP JUMPDEST SWAP6 PUSH2 0x5B1 DUP7 MLOAD SWAP8 DUP9 PUSH2 0xC15 JUMP JUMPDEST DUP1 DUP8 MSTORE PUSH2 0x5C0 PUSH1 0x1F NOT SWAP2 PUSH2 0xC4E JUMP JUMPDEST ADD CALLDATASIZE DUP4 DUP9 ADD CALLDATACOPY JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x611 JUMPI PUSH2 0x60C SWAP1 PUSH2 0x5FC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x5E9 DUP4 DUP8 PUSH2 0xDF8 JUMP JUMPDEST MLOAD AND PUSH2 0x5F5 DUP4 DUP9 PUSH2 0xDF8 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x606 DUP3 DUP10 PUSH2 0xDF8 JUMP JUMPDEST MSTORE PUSH2 0xDD3 JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST DUP5 MLOAD DUP3 DUP2 MSTORE DUP1 PUSH2 0x623 DUP2 DUP6 ADD DUP10 PUSH2 0xD19 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x84 SWAP2 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x69D JUMPI DUP2 MSTORE SWAP1 DUP5 ADD SWAP1 DUP5 ADD PUSH2 0x56C JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x3CE JUMPI PUSH1 0x3 NOT SWAP2 PUSH1 0xA0 CALLDATASIZE DUP5 ADD SLT PUSH2 0xA08 JUMPI PUSH2 0x6C2 PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0x6CA PUSH2 0xBBF JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 PUSH1 0x44 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x3CA JUMPI PUSH2 0x6EB SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0xC65 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x6A1 JUMPI PUSH2 0x703 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0xC65 JUMP JUMPDEST SWAP6 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x6A1 JUMPI PUSH2 0x71B SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0xCC3 JUMP JUMPDEST SWAP3 DUP3 MLOAD DUP8 MLOAD SUB PUSH2 0x9B4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP6 PUSH2 0x73C DUP8 ISZERO ISZERO PUSH2 0xE22 JUMP JUMPDEST AND SWAP4 CALLER DUP6 EQ DUP1 ISZERO PUSH2 0x996 JUMPI JUMPDEST ISZERO PUSH2 0x938 JUMPI DUP10 JUMPDEST DUP11 DUP6 MLOAD DUP3 LT ISZERO PUSH2 0x7D4 JUMPI SWAP1 DUP10 PUSH2 0x7C8 DUP11 PUSH2 0x7CF SWAP5 PUSH2 0x778 DUP6 PUSH2 0x771 DUP2 DUP14 PUSH2 0xDF8 JUMP JUMPDEST MLOAD SWAP6 PUSH2 0xDF8 JUMP JUMPDEST MLOAD SWAP4 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP1 DUP3 DUP3 MSTORE DUP4 DUP4 KECCAK256 DUP14 DUP5 MSTORE DUP3 MSTORE PUSH2 0x79F DUP7 DUP6 DUP6 KECCAK256 SLOAD PUSH2 0x125 DUP3 DUP3 LT ISZERO PUSH2 0xE7C JUMP JUMPDEST DUP2 DUP5 MSTORE DUP4 DUP4 MSTORE DUP14 DUP6 DUP6 KECCAK256 SWAP1 DUP6 MSTORE DUP4 MSTORE DUP5 DUP5 KECCAK256 SSTORE DUP3 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP14 DUP4 MSTORE MSTORE KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0xEE8 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xDD3 JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST POP POP SWAP1 SWAP5 SWAP4 SWAP6 SWAP7 SWAP3 SWAP2 SWAP8 DUP5 DUP8 DUP10 MLOAD DUP11 DUP2 MSTORE PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB PUSH2 0x812 DUP13 DUP4 ADD DUP9 PUSH2 0xD19 JUMP JUMPDEST SWAP2 DUP1 DUP4 SUB PUSH1 0x20 DUP3 ADD MSTORE DUP1 PUSH2 0x827 CALLER SWAP5 DUP12 PUSH2 0xD19 JUMP JUMPDEST SUB SWAP1 LOG4 EXTCODESIZE PUSH2 0x833 JUMPI DUP9 DUP1 RETURN JUMPDEST DUP7 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE CALLER DUP13 DUP8 ADD MSTORE PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD PUSH1 0xA0 SWAP1 MSTORE PUSH1 0xA4 DUP6 ADD PUSH2 0x865 SWAP2 PUSH2 0xD19 JUMP JUMPDEST DUP3 DUP6 DUP3 SUB ADD PUSH1 0x64 DUP7 ADD MSTORE PUSH2 0x878 SWAP2 PUSH2 0xD19 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB ADD PUSH1 0x84 DUP5 ADD MSTORE PUSH2 0x88B SWAP2 PUSH2 0xBD5 JUMP JUMPDEST SUB DUP2 DUP9 GAS SWAP5 PUSH1 0x20 SWAP6 CALL DUP6 SWAP2 DUP2 PUSH2 0x918 JUMPI JUMPDEST POP PUSH2 0x902 JUMPI POP POP PUSH1 0x1 PUSH2 0x8AD PUSH2 0xF15 JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x8CB JUMPI JUMPDEST PUSH2 0x213 JUMPI POP POP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP9 DUP1 RETURN JUMPDEST PUSH2 0x8D3 PUSH2 0xF33 JUMP JUMPDEST DUP1 PUSH2 0x8DE JUMPI POP PUSH2 0x8B8 JUMP JUMPDEST SWAP1 POP PUSH2 0x27C SWAP2 PUSH1 0x20 SWAP5 POP MLOAD SWAP4 DUP5 SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x2CB JUMPI POP POP PUSH2 0x8BF JUMP JUMPDEST PUSH2 0x931 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x350 JUMPI PUSH2 0x341 DUP2 DUP4 PUSH2 0xC15 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x89C JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP5 DUP11 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP11 KECCAK256 CALLER DUP12 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP8 DUP12 KECCAK256 SLOAD AND PUSH2 0x748 JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x420 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3CE JUMPI DUP1 MLOAD SWAP3 DUP1 PUSH1 0x2 SLOAD SWAP1 PUSH1 0x1 SWAP1 DUP3 DUP3 SHR SWAP3 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0xAFC JUMPI JUMPDEST DUP8 DUP6 LT DUP2 EQ PUSH2 0xAE9 JUMPI DUP9 SWAP10 POP SWAP7 DUP9 SWAP7 SWAP8 DUP6 DUP3 SWAP11 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0xAC2 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0xA84 JUMPI JUMPDEST POP POP POP PUSH2 0x623 SWAP3 SWAP2 PUSH2 0xA75 SWAP2 SUB DUP6 PUSH2 0xC15 JUMP JUMPDEST MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0xBD5 JUMP JUMPDEST SWAP2 SWAP1 DUP7 SWAP4 POP PUSH1 0x2 DUP4 MSTORE DUP4 DUP4 KECCAK256 JUMPDEST DUP3 DUP5 LT PUSH2 0xAAA JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0xA75 PUSH2 0x623 PUSH2 0xA62 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0xA91 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP3 ADD MSTORE SWAP4 ISZERO ISZERO PUSH1 0x5 SHL DUP7 ADD SWAP1 SWAP4 ADD SWAP4 POP DUP5 SWAP3 POP PUSH2 0xA75 SWAP2 POP PUSH2 0x623 SWAP1 POP PUSH2 0xA62 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xA3B JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x3CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3CE JUMPI CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x3CE JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0xB63 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0xB52 JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 POP CODESIZE PUSH2 0xB49 JUMP JUMPDEST PUSH4 0x3A24D07 PUSH1 0xE2 SHL DUP2 EQ SWAP3 POP PUSH2 0xB42 JUMP JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x420 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x420 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xB9D PUSH2 0xB94 PUSH2 0xBA4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xD4D JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xBBA JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xBBA JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xC01 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0xC38 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xC38 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xBBA JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0xC7C DUP4 PUSH2 0xC4E JUMP JUMPDEST SWAP3 PUSH2 0xC8A PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xC15 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0xBBA JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xCB4 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0xCA6 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xBBA JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xC38 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xCF7 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0xC15 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0xBBA JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xD39 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xD7A JUMPI PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xDE2 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xE0C JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0xE29 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xE83 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xDE2 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xDE2 JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xBBA JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0xBBA JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x3 RETURNDATASIZE GT PUSH2 0xF22 JUMPI JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0xF90 JUMPI PUSH1 0x40 MLOAD PUSH1 0x3 NOT SWAP2 RETURNDATASIZE DUP4 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 DUP3 GT RETURNDATASIZE PUSH1 0x24 DUP5 ADD GT OR PUSH2 0xF93 JUMPI DUP2 DUP5 ADD SWAP5 DUP6 MLOAD SWAP4 DUP5 GT PUSH2 0xF9B JUMPI RETURNDATASIZE DUP6 ADD ADD PUSH1 0x20 DUP5 DUP8 ADD ADD GT PUSH2 0xF93 JUMPI POP PUSH2 0xF90 SWAP3 SWAP2 ADD PUSH1 0x20 ADD SWAP1 PUSH2 0xC15 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0xC38 JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x20 CALLDATASIZE DUP3 CALLDATACOPY DUP3 MLOAD ISZERO PUSH2 0xE0C JUMPI MSTORE SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0x1E SMOD 0x23 MOD KECCAK256 0xD4 SWAP15 STOP POP 0xAE SWAP12 BASEFEE 0x49 LT 0x1F 0xA6 EQ RETURN 0x1E 0xC6 0xA9 SGT EXTCODEHASH PUSH2 0x3328 0xC7 GASLIMIT MUL 0xB8 0xEE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"497:13043:2:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;497:13043:2;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;497:13043:2;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;497:13043:2;;;;;;;;-1:-1:-1;497:13043:2;;;;;;;;;;;;6812:13;497:13043;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;497:13043:2;;;;;;;;;;;;;;;;;6812:13;497:13043;;;;;;;;;;;;;;;-1:-1:-1;497:13043:2;;;;;;;;;;;6812:13;-1:-1:-1;497:13043:2;;-1:-1:-1;497:13043:2;;-1:-1:-1;497:13043:2;;;;;;;;;;;;;;;;;;;;;6812:13;497:13043;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;497:13043:2;;;;;;;6812:13;-1:-1:-1;497:13043:2;;-1:-1:-1;497:13043:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;497:13043:2;;;;;;;;;;;;;;;;;;-1:-1:-1;497:13043:2;;;;;-1:-1:-1;497:13043:2;;;;;;;;;;;;-1:-1:-1;497:13043:2;;;;;-1:-1:-1;497:13043:2;;;;;;;;;;;;;;;;;;;;-1:-1:-1;497:13043:2;;;;;;;;;-1:-1:-1;;497:13043:2;;;-1:-1:-1;;;;;497:13043:2;;;;;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":3007,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_8908":{"entryPoint":2980,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":3173,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":3267,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes4_fromMemory":{"entryPoint":3829,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":3353,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":3029,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_00aa":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":3150,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":3816,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":3803,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":3093,"id":null,"parameterSlots":2,"returnSlots":0},"fun_asSingletonArray":{"entryPoint":4004,"id":1233,"parameterSlots":1,"returnSlots":1},"fun_balanceOf":{"entryPoint":3405,"id":317,"parameterSlots":2,"returnSlots":1},"increment_uint256":{"entryPoint":3539,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_address_dyn":{"entryPoint":3576,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral_6faf":{"entryPoint":3618,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_8ac7":{"entryPoint":3708,"id":null,"parameterSlots":1,"returnSlots":0},"return_data_selector":{"entryPoint":3861,"id":null,"parameterSlots":0,"returnSlots":1},"try_decode_error_message":{"entryPoint":3891,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60406080815260048036101561001457600080fd5b600091823560e01c8062fdd58e14610b7457806301ffc9a714610b065780630e89341c14610a0c5780632eb2c2d6146106a55780634e1273f414610504578063a22cb46514610424578063e985e9c5146103d25763f242432a1461007757600080fd5b346103ce5760a03660031901126103ce57610090610ba4565b610098610bbf565b906044356064356084356001600160401b0381116103ca576100bd9036908801610cc3565b926001600160a01b03858116916100d5831515610e22565b169233841480156103ac575b156103575790816100f58a96959493610fa4565b506100ff83610fa4565b50808652602096868852888720858852885261012a848a89205461012582821015610e7c565b610edb565b8288528789528988208689528952898820558187528688528887208388528852888720610158858254610ee8565b905582858a51848152868b8201527fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628c3392a43b610194578580f35b889587946101d58a519788968795869463f23a6e6160e01b9c8d8752339087015260248601526044850152606484015260a0608484015260a4830190610bd5565b03925af1869181610328575b506102b35750506001906101f3610f15565b6308c379a014610280575b506102135750505b3880808381808080808580f35b5162461bcd60e51b81529150819061027c90820160809060208152603460208201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356040820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60608201520190565b0390fd5b610288610f33565b8061029357506101fe565b61027c8591855193849362461bcd60e51b85528401526024830190610bd5565b6001600160e01b0319160390506102cb575050610206565b5162461bcd60e51b81529150819061027c90820160809060208152602860208201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b60608201520190565b610349919250843d8611610350575b6103418183610c15565b810190610ef5565b90386101e1565b503d610337565b865162461bcd60e51b81526020818a0152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608490fd5b508389526001602052868920338a5260205260ff878a2054166100e1565b8780fd5b8280fd5b83823461042057806003193601126104205760ff816020936103f2610ba4565b6103fa610bbf565b6001600160a01b0391821683526001875283832091168252855220549151911615158152f35b5080fd5b50346103ce57806003193601126103ce5761043d610ba4565b9060243591821515809303610500576001600160a01b0316923384146104ac5750338452600160205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020608492519162461bcd60e51b8352820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152fd5b8480fd5b5090346103ce57816003193601126103ce5780356001600160401b03808211610500573660238301121561050057818301359061054082610c4e565b9261054d86519485610c15565b82845260209260248486019160051b830101913683116106a157602401905b82821061067e5750505060243590811161067a5761058d9036908501610c65565b92825184510361062757508151946105a486610c4e565b956105b186519788610c15565b8087526105c0601f1991610c4e565b0136838801375b82518110156106115761060c906105fc6001600160a01b036105e98387610df8565b51166105f58388610df8565b5190610d4d565b6106068289610df8565b52610dd3565b6105c7565b84518281528061062381850189610d19565b0390f35b60849185519162461bcd60e51b8352820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152fd5b8580fd5b81356001600160a01b038116810361069d57815290840190840161056c565b8980fd5b8880fd5b5090346103ce576003199160a036840112610a08576106c2610ba4565b6106ca610bbf565b936001600160401b03936044358581116103ca576106eb9036908301610c65565b906064358681116106a1576107039036908301610c65565b956084359081116106a15761071b9036908301610cc3565b9282518751036109b4576001600160a01b038881169561073c871515610e22565b16933385148015610996575b1561093857895b8a85518210156107d45790896107c88a6107cf9461077885610771818d610df8565b5195610df8565b51938082526020908282528383208d8452825261079f868585205461012582821015610e7c565b8184528383528d8585209085528352848420558252818152828220908d83525220918254610ee8565b9055610dd3565b61074f565b50509094939596929197848789518a81527f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb6108128c830188610d19565b9180830360208201528061082733948b610d19565b0390a43b610833578880f35b8651948593849363bc197c8160e01b98898652338c87015260248601526044850160a0905260a4850161086591610d19565b8285820301606486015261087891610d19565b9083820301608484015261088b91610bd5565b0381885a94602095f1859181610918575b5061090257505060016108ad610f15565b6308c379a0146108cb575b6102135750505b38808080808080808880f35b6108d3610f33565b806108de57506108b8565b905061027c91602094505193849362461bcd60e51b85528401526024830190610bd5565b6001600160e01b031916036102cb5750506108bf565b61093191925060203d8111610350576103418183610c15565b903861089c565b865162461bcd60e51b8152602081850152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608490fd5b50848a526001602052868a20338b5260205260ff878b205416610748565b855162461bcd60e51b8152602081840152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608490fd5b8380fd5b5082903461042057602090816003193601126103ce57805192806002549060019082821c928281168015610afc575b8785108114610ae9578899509688969785829a529182600014610ac2575050600114610a84575b5050506106239291610a75910385610c15565b51928284938452830190610bd5565b9190869350600283528383205b828410610aaa5750505082010181610a75610623610a62565b8054848a018601528895508794909301928101610a91565b60ff19168782015293151560051b86019093019350849250610a7591506106239050610a62565b634e487b7160e01b835260228a52602483fd5b93607f1693610a3b565b5090346103ce5760203660031901126103ce57359063ffffffff60e01b82168092036103ce5760209250636cdb3d1360e11b8214918215610b63575b8215610b52575b50519015158152f35b6301ffc9a760e01b14915038610b49565b6303a24d0760e21b81149250610b42565b838234610420578060031936011261042057602090610b9d610b94610ba4565b60243590610d4d565b9051908152f35b600435906001600160a01b0382168203610bba57565b600080fd5b602435906001600160a01b0382168203610bba57565b919082519283825260005b848110610c01575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610be0565b601f909101601f19168101906001600160401b03821190821017610c3857604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b038111610c385760051b60200190565b81601f82011215610bba57803591610c7c83610c4e565b92610c8a6040519485610c15565b808452602092838086019260051b820101928311610bba578301905b828210610cb4575050505090565b81358152908301908301610ca6565b81601f82011215610bba578035906001600160401b038211610c385760405192610cf7601f8401601f191660200185610c15565b82845260208383010111610bba57816000926020809301838601378301015290565b90815180825260208080930193019160005b828110610d39575050505090565b835185529381019392810192600101610d2b565b6001600160a01b0316908115610d7a57600052600060205260406000209060005260205260406000205490565b60405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b6064820152608490fd5b6000198114610de25760010190565b634e487b7160e01b600052601160045260246000fd5b8051821015610e0c5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b15610e2957565b60405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b15610e8357565b60405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608490fd5b91908203918211610de257565b91908201809211610de257565b90816020910312610bba57516001600160e01b031981168103610bba5790565b60009060033d11610f2257565b905060046000803e60005160e01c90565b600060443d10610f9057604051600319913d83016004833e81516001600160401b03918282113d602484011117610f9357818401948551938411610f9b573d85010160208487010111610f935750610f9092910160200190610c15565b90565b949350505050565b50949350505050565b60408051919082016001600160401b03811183821017610c385760405260018252602082016020368237825115610e0c57529056fea2646970667358221220001e07230620d49e0050ae9b4849101fa614f31ec6a9133f613328c74502b8ee64736f6c63430008130033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0xB74 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB06 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xA0C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x6A5 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3D2 JUMPI PUSH4 0xF242432A EQ PUSH2 0x77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x3CE JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3CE JUMPI PUSH2 0x90 PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0x98 PUSH2 0xBBF JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3CA JUMPI PUSH2 0xBD SWAP1 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0xCC3 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 PUSH2 0xD5 DUP4 ISZERO ISZERO PUSH2 0xE22 JUMP JUMPDEST AND SWAP3 CALLER DUP5 EQ DUP1 ISZERO PUSH2 0x3AC JUMPI JUMPDEST ISZERO PUSH2 0x357 JUMPI SWAP1 DUP2 PUSH2 0xF5 DUP11 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0xFA4 JUMP JUMPDEST POP PUSH2 0xFF DUP4 PUSH2 0xFA4 JUMP JUMPDEST POP DUP1 DUP7 MSTORE PUSH1 0x20 SWAP7 DUP7 DUP9 MSTORE DUP9 DUP8 KECCAK256 DUP6 DUP9 MSTORE DUP9 MSTORE PUSH2 0x12A DUP5 DUP11 DUP10 KECCAK256 SLOAD PUSH2 0x125 DUP3 DUP3 LT ISZERO PUSH2 0xE7C JUMP JUMPDEST PUSH2 0xEDB JUMP JUMPDEST DUP3 DUP9 MSTORE DUP8 DUP10 MSTORE DUP10 DUP9 KECCAK256 DUP7 DUP10 MSTORE DUP10 MSTORE DUP10 DUP9 KECCAK256 SSTORE DUP2 DUP8 MSTORE DUP7 DUP9 MSTORE DUP9 DUP8 KECCAK256 DUP4 DUP9 MSTORE DUP9 MSTORE DUP9 DUP8 KECCAK256 PUSH2 0x158 DUP6 DUP3 SLOAD PUSH2 0xEE8 JUMP JUMPDEST SWAP1 SSTORE DUP3 DUP6 DUP11 MLOAD DUP5 DUP2 MSTORE DUP7 DUP12 DUP3 ADD MSTORE PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP13 CALLER SWAP3 LOG4 EXTCODESIZE PUSH2 0x194 JUMPI DUP6 DUP1 RETURN JUMPDEST DUP9 SWAP6 DUP8 SWAP5 PUSH2 0x1D5 DUP11 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP13 DUP14 DUP8 MSTORE CALLER SWAP1 DUP8 ADD MSTORE PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD SWAP1 PUSH2 0xBD5 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP7 SWAP2 DUP2 PUSH2 0x328 JUMPI JUMPDEST POP PUSH2 0x2B3 JUMPI POP POP PUSH1 0x1 SWAP1 PUSH2 0x1F3 PUSH2 0xF15 JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x280 JUMPI JUMPDEST POP PUSH2 0x213 JUMPI POP POP JUMPDEST CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 DUP1 DUP1 DUP6 DUP1 RETURN JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 POP DUP2 SWAP1 PUSH2 0x27C SWAP1 DUP3 ADD PUSH1 0x80 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x40 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x288 PUSH2 0xF33 JUMP JUMPDEST DUP1 PUSH2 0x293 JUMPI POP PUSH2 0x1FE JUMP JUMPDEST PUSH2 0x27C DUP6 SWAP2 DUP6 MLOAD SWAP4 DUP5 SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB SWAP1 POP PUSH2 0x2CB JUMPI POP POP PUSH2 0x206 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 POP DUP2 SWAP1 PUSH2 0x27C SWAP1 DUP3 ADD PUSH1 0x80 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x28 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH2 0x349 SWAP2 SWAP3 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x350 JUMPI JUMPDEST PUSH2 0x341 DUP2 DUP4 PUSH2 0xC15 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xEF5 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1E1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x337 JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP11 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP4 DUP10 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP10 KECCAK256 CALLER DUP11 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP8 DUP11 KECCAK256 SLOAD AND PUSH2 0xE1 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x420 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x420 JUMPI PUSH1 0xFF DUP2 PUSH1 0x20 SWAP4 PUSH2 0x3F2 PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0x3FA PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP8 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x3CE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3CE JUMPI PUSH2 0x43D PUSH2 0xBA4 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0x500 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 CALLER DUP5 EQ PUSH2 0x4AC JUMPI POP CALLER DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 DUP5 KECCAK256 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE DUP1 DUP5 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x3CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3CE JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT PUSH2 0x500 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x500 JUMPI DUP2 DUP4 ADD CALLDATALOAD SWAP1 PUSH2 0x540 DUP3 PUSH2 0xC4E JUMP JUMPDEST SWAP3 PUSH2 0x54D DUP7 MLOAD SWAP5 DUP6 PUSH2 0xC15 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x24 DUP5 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x6A1 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x67E JUMPI POP POP POP PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x67A JUMPI PUSH2 0x58D SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0xC65 JUMP JUMPDEST SWAP3 DUP3 MLOAD DUP5 MLOAD SUB PUSH2 0x627 JUMPI POP DUP2 MLOAD SWAP5 PUSH2 0x5A4 DUP7 PUSH2 0xC4E JUMP JUMPDEST SWAP6 PUSH2 0x5B1 DUP7 MLOAD SWAP8 DUP9 PUSH2 0xC15 JUMP JUMPDEST DUP1 DUP8 MSTORE PUSH2 0x5C0 PUSH1 0x1F NOT SWAP2 PUSH2 0xC4E JUMP JUMPDEST ADD CALLDATASIZE DUP4 DUP9 ADD CALLDATACOPY JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x611 JUMPI PUSH2 0x60C SWAP1 PUSH2 0x5FC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x5E9 DUP4 DUP8 PUSH2 0xDF8 JUMP JUMPDEST MLOAD AND PUSH2 0x5F5 DUP4 DUP9 PUSH2 0xDF8 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x606 DUP3 DUP10 PUSH2 0xDF8 JUMP JUMPDEST MSTORE PUSH2 0xDD3 JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST DUP5 MLOAD DUP3 DUP2 MSTORE DUP1 PUSH2 0x623 DUP2 DUP6 ADD DUP10 PUSH2 0xD19 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x84 SWAP2 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x69D JUMPI DUP2 MSTORE SWAP1 DUP5 ADD SWAP1 DUP5 ADD PUSH2 0x56C JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x3CE JUMPI PUSH1 0x3 NOT SWAP2 PUSH1 0xA0 CALLDATASIZE DUP5 ADD SLT PUSH2 0xA08 JUMPI PUSH2 0x6C2 PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0x6CA PUSH2 0xBBF JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 PUSH1 0x44 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x3CA JUMPI PUSH2 0x6EB SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0xC65 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x6A1 JUMPI PUSH2 0x703 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0xC65 JUMP JUMPDEST SWAP6 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x6A1 JUMPI PUSH2 0x71B SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0xCC3 JUMP JUMPDEST SWAP3 DUP3 MLOAD DUP8 MLOAD SUB PUSH2 0x9B4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP6 PUSH2 0x73C DUP8 ISZERO ISZERO PUSH2 0xE22 JUMP JUMPDEST AND SWAP4 CALLER DUP6 EQ DUP1 ISZERO PUSH2 0x996 JUMPI JUMPDEST ISZERO PUSH2 0x938 JUMPI DUP10 JUMPDEST DUP11 DUP6 MLOAD DUP3 LT ISZERO PUSH2 0x7D4 JUMPI SWAP1 DUP10 PUSH2 0x7C8 DUP11 PUSH2 0x7CF SWAP5 PUSH2 0x778 DUP6 PUSH2 0x771 DUP2 DUP14 PUSH2 0xDF8 JUMP JUMPDEST MLOAD SWAP6 PUSH2 0xDF8 JUMP JUMPDEST MLOAD SWAP4 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP1 DUP3 DUP3 MSTORE DUP4 DUP4 KECCAK256 DUP14 DUP5 MSTORE DUP3 MSTORE PUSH2 0x79F DUP7 DUP6 DUP6 KECCAK256 SLOAD PUSH2 0x125 DUP3 DUP3 LT ISZERO PUSH2 0xE7C JUMP JUMPDEST DUP2 DUP5 MSTORE DUP4 DUP4 MSTORE DUP14 DUP6 DUP6 KECCAK256 SWAP1 DUP6 MSTORE DUP4 MSTORE DUP5 DUP5 KECCAK256 SSTORE DUP3 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP14 DUP4 MSTORE MSTORE KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0xEE8 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xDD3 JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST POP POP SWAP1 SWAP5 SWAP4 SWAP6 SWAP7 SWAP3 SWAP2 SWAP8 DUP5 DUP8 DUP10 MLOAD DUP11 DUP2 MSTORE PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB PUSH2 0x812 DUP13 DUP4 ADD DUP9 PUSH2 0xD19 JUMP JUMPDEST SWAP2 DUP1 DUP4 SUB PUSH1 0x20 DUP3 ADD MSTORE DUP1 PUSH2 0x827 CALLER SWAP5 DUP12 PUSH2 0xD19 JUMP JUMPDEST SUB SWAP1 LOG4 EXTCODESIZE PUSH2 0x833 JUMPI DUP9 DUP1 RETURN JUMPDEST DUP7 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE CALLER DUP13 DUP8 ADD MSTORE PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD PUSH1 0xA0 SWAP1 MSTORE PUSH1 0xA4 DUP6 ADD PUSH2 0x865 SWAP2 PUSH2 0xD19 JUMP JUMPDEST DUP3 DUP6 DUP3 SUB ADD PUSH1 0x64 DUP7 ADD MSTORE PUSH2 0x878 SWAP2 PUSH2 0xD19 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB ADD PUSH1 0x84 DUP5 ADD MSTORE PUSH2 0x88B SWAP2 PUSH2 0xBD5 JUMP JUMPDEST SUB DUP2 DUP9 GAS SWAP5 PUSH1 0x20 SWAP6 CALL DUP6 SWAP2 DUP2 PUSH2 0x918 JUMPI JUMPDEST POP PUSH2 0x902 JUMPI POP POP PUSH1 0x1 PUSH2 0x8AD PUSH2 0xF15 JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x8CB JUMPI JUMPDEST PUSH2 0x213 JUMPI POP POP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP9 DUP1 RETURN JUMPDEST PUSH2 0x8D3 PUSH2 0xF33 JUMP JUMPDEST DUP1 PUSH2 0x8DE JUMPI POP PUSH2 0x8B8 JUMP JUMPDEST SWAP1 POP PUSH2 0x27C SWAP2 PUSH1 0x20 SWAP5 POP MLOAD SWAP4 DUP5 SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x2CB JUMPI POP POP PUSH2 0x8BF JUMP JUMPDEST PUSH2 0x931 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x350 JUMPI PUSH2 0x341 DUP2 DUP4 PUSH2 0xC15 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x89C JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP5 DUP11 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP11 KECCAK256 CALLER DUP12 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP8 DUP12 KECCAK256 SLOAD AND PUSH2 0x748 JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x420 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3CE JUMPI DUP1 MLOAD SWAP3 DUP1 PUSH1 0x2 SLOAD SWAP1 PUSH1 0x1 SWAP1 DUP3 DUP3 SHR SWAP3 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0xAFC JUMPI JUMPDEST DUP8 DUP6 LT DUP2 EQ PUSH2 0xAE9 JUMPI DUP9 SWAP10 POP SWAP7 DUP9 SWAP7 SWAP8 DUP6 DUP3 SWAP11 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0xAC2 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0xA84 JUMPI JUMPDEST POP POP POP PUSH2 0x623 SWAP3 SWAP2 PUSH2 0xA75 SWAP2 SUB DUP6 PUSH2 0xC15 JUMP JUMPDEST MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0xBD5 JUMP JUMPDEST SWAP2 SWAP1 DUP7 SWAP4 POP PUSH1 0x2 DUP4 MSTORE DUP4 DUP4 KECCAK256 JUMPDEST DUP3 DUP5 LT PUSH2 0xAAA JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0xA75 PUSH2 0x623 PUSH2 0xA62 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0xA91 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP3 ADD MSTORE SWAP4 ISZERO ISZERO PUSH1 0x5 SHL DUP7 ADD SWAP1 SWAP4 ADD SWAP4 POP DUP5 SWAP3 POP PUSH2 0xA75 SWAP2 POP PUSH2 0x623 SWAP1 POP PUSH2 0xA62 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xA3B JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x3CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3CE JUMPI CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x3CE JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0xB63 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0xB52 JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 POP CODESIZE PUSH2 0xB49 JUMP JUMPDEST PUSH4 0x3A24D07 PUSH1 0xE2 SHL DUP2 EQ SWAP3 POP PUSH2 0xB42 JUMP JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x420 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x420 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xB9D PUSH2 0xB94 PUSH2 0xBA4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xD4D JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xBBA JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xBBA JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xC01 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0xC38 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xC38 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xBBA JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0xC7C DUP4 PUSH2 0xC4E JUMP JUMPDEST SWAP3 PUSH2 0xC8A PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xC15 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0xBBA JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xCB4 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0xCA6 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xBBA JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xC38 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xCF7 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0xC15 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0xBBA JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xD39 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xD7A JUMPI PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xDE2 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xE0C JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0xE29 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xE83 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xDE2 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xDE2 JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xBBA JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0xBBA JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x3 RETURNDATASIZE GT PUSH2 0xF22 JUMPI JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0xF90 JUMPI PUSH1 0x40 MLOAD PUSH1 0x3 NOT SWAP2 RETURNDATASIZE DUP4 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 DUP3 GT RETURNDATASIZE PUSH1 0x24 DUP5 ADD GT OR PUSH2 0xF93 JUMPI DUP2 DUP5 ADD SWAP5 DUP6 MLOAD SWAP4 DUP5 GT PUSH2 0xF9B JUMPI RETURNDATASIZE DUP6 ADD ADD PUSH1 0x20 DUP5 DUP8 ADD ADD GT PUSH2 0xF93 JUMPI POP PUSH2 0xF90 SWAP3 SWAP2 ADD PUSH1 0x20 ADD SWAP1 PUSH2 0xC15 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0xC38 JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x20 CALLDATASIZE DUP3 CALLDATACOPY DUP3 MLOAD ISZERO PUSH2 0xE0C JUMPI MSTORE SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0x1E SMOD 0x23 MOD KECCAK256 0xD4 SWAP15 STOP POP 0xAE SWAP12 BASEFEE 0x49 LT 0x1F 0xA6 EQ RETURN 0x1E 0xC6 0xA9 SGT EXTCODEHASH PUSH2 0x3328 0xC7 GASLIMIT MUL 0xB8 0xEE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"497:13043:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;497:13043:2;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;497:13043:2;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;497:13043:2;;;;3899:66;3907:16;;;3899:66;:::i;:::-;497:13043;665:10:21;;3996:20:2;;:60;;;;497:13043;;;;4217:21;;;;;;;;;:::i;:::-;;4240:25;;;:::i;:::-;;497:13043;;;;;;;;;;;;;;;;4442:20;497:13043;;;;;4334:76;4342:21;;;;4334:76;:::i;:::-;4442:20;:::i;:::-;497:13043;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4472:27;497:13043;;;4472:27;:::i;:::-;497:13043;;;;;;;;;;;;;;4515:46;665:10:21;;4515:46:2;;1059:41:20;12029:520:2;;497:13043;;;12029:520;497:13043;;;;;;;;;;;;;;;;;12068:72;;;;665:10:21;12068:72:2;;;497:13043;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12068:72;;;;;;;;;12029:520;-1:-1:-1;12064:475:2;;;;497:13043;12064:475;;;:::i;:::-;;;;;;;;;;;;12029:520;;;;;;;;;497:13043;;;12064:475;497:13043;-1:-1:-1;;;12462:62:2;;497:13043;-1:-1:-1;497:13043:2;;12462:62;;;;497:13043;;;;;;;;;;;;;;;-1:-1:-1;;;497:13043:2;;;;;;;12462:62;;;;12064:475;12356:81;;:::i;:::-;;;;12064:475;;;12356:81;497:13043;12356:81;;;497:13043;;;;;;;12408:14;;;;497:13043;;;;;;:::i;12064:475::-;-1:-1:-1;;;;;;497:13043:2;12189:59;;-1:-1:-1;12185:156:2;;12064:475;;;;12185:156;497:13043;-1:-1:-1;;;12272:50:2;;497:13043;-1:-1:-1;497:13043:2;;12272:50;;;;497:13043;;;;;;;;;;;;;;;-1:-1:-1;;;497:13043:2;;;;;;;12068:72;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;497:13043;;;-1:-1:-1;;;497:13043:2;;;;;;;;;;;;;;;;;-1:-1:-1;;;497:13043:2;;;;;;;3996:60;497:13043;;;;;;;;;;665:10:21;497:13043:2;;;;;;;;;;3996:60;;497:13043;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;497:13043:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;497:13043:2;;665:10:21;3188:24:2;;497:13043;;665:10:21;;497:13043:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3337:48;497:13043;665:10:21;3337:48:2;;497:13043;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;497:13043:2;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;497:13043:2;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;2701:29;497:13043;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;2902:3;497:13043;;2881:19;;;;;2902:3;;2940:30;-1:-1:-1;;;;;2950:11:2;497:13043;2950:11;;:::i;:::-;497:13043;;2963:6;;;;:::i;:::-;497:13043;2940:30;;:::i;:::-;2921:49;;;;:::i;:::-;497:13043;2902:3;:::i;:::-;2866:13;;2881:19;497:13043;;;;;;;;;;2881:19;497:13043;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;497:13043:2;;;;;;;;;;;;-1:-1:-1;;;;;497:13043:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;497:13043:2;;;;;;;;;;:::i;:::-;;;:::i;:::-;;-1:-1:-1;;;;;497:13043:2;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;4959:28;497:13043;;-1:-1:-1;;;;;497:13043:2;;;;5042:66;5050:16;;;5042:66;:::i;:::-;497:13043;665:10:21;;5139:20:2;;:60;;;;497:13043;;;;5404:13;5435:3;497:13043;;;5419:14;;;;;5467:6;;5730:27;5467:6;5435:3;5467:6;5504:10;5467:6;;;;;:::i;:::-;497:13043;5504:10;;:::i;:::-;497:13043;;;;;;;;;;;;;;;;;;5696:20;497:13043;;;;;5584:76;5592:21;;;;5584:76;:::i;5696:20::-;497:13043;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5730:27;:::i;:::-;497:13043;;5435:3;:::i;:::-;5404:13;;5419:14;;;;;;;;;;;497:13043;;;;;;;5783:47;497:13043;;;;;;:::i;:::-;;;;;;;;;665:10:21;497:13043:2;665:10:21;497:13043:2;;;:::i;:::-;5783:47;;;1059:41:20;12801:532:2;;497:13043;;;12801:532;497:13043;;;;;;;;;;12840:79;;;;665:10:21;12840:79:2;;;497:13043;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;12840:79;;;;;497:13043;12840:79;;;;;;;12801:532;-1:-1:-1;12836:487:2;;;;497:13043;12836:487;;:::i;:::-;;;;;;;;;;;12801:532;;;;;;;;497:13043;;;12836:487;13140:81;;:::i;:::-;;;;12836:487;;;13140:81;;;497:13043;13140:81;497:13043;13140:81;497:13043;;;;;;;;13192:14;;;;497:13043;;;;;;:::i;12836:487::-;-1:-1:-1;;;;;;497:13043:2;12968:64;12964:161;;12836:487;;;;12840:79;;;;;497:13043;12840:79;;;;;;;;;:::i;:::-;;;;;497:13043;;;-1:-1:-1;;;497:13043:2;;;;;;;;;;;;;;;;;-1:-1:-1;;;497:13043:2;;;;;;;5139:60;497:13043;;;;;;;;;;665:10:21;497:13043:2;;;;;;;;;;5139:60;;497:13043;;;-1:-1:-1;;;497:13043:2;;;;;;;;;;;;;;;;;-1:-1:-1;;;497:13043:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1950:4;497:13043;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;1950:4;497:13043;;;;;;;;;;;-1:-1:-1;;;497:13043:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;497:13043:2;;;;;;;;;;;-1:-1:-1;;497:13043:2;;;;;;;;;;;;;;;;-1:-1:-1;497:13043:2;;-1:-1:-1;497:13043:2;;-1:-1:-1;497:13043:2;;-1:-1:-1;497:13043:2;;;-1:-1:-1;;;497:13043:2;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;497:13043:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1291:41:2;;;:109;;;;497:13043;1291:161;;;;497:13043;;;;;;;;;1291:161;-1:-1:-1;;;871:40:23;;-1:-1:-1;1291:161:2;;;:109;-1:-1:-1;;;1348:52:2;;;-1:-1:-1;1291:109:2;;497:13043;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;497:13043:2;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;497:13043:2;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;497:13043:2;;;;-1:-1:-1;;;;;497:13043:2;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;497:13043:2;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;497:13043:2;;;;;;;;;;;-1:-1:-1;;497:13043:2;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;497:13043:2;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;497:13043:2;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;2103:228;-1:-1:-1;;;;;497:13043:2;;2216:21;;497:13043;;2235:1;497:13043;2235:1;497:13043;;;2235:1;497:13043;;2235:1;497:13043;;;;2235:1;497:13043;;2103:228;:::o;497:13043::-;;;-1:-1:-1;;;497:13043:2;;;;;;;;;;;;;;;;;-1:-1:-1;;;497:13043:2;;;;;;;;-1:-1:-1;;497:13043:2;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;497:13043:2;;;;;;;;;;;;;;;;;-1:-1:-1;;;497:13043:2;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;497:13043:2;;;;;;;;;;;;;;;;;-1:-1:-1;;;497:13043:2;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;;497:13043:2;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;497:13043:2;;;;;;;;;-1:-1:-1;;;;;497:13043:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;497:13043:2;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;:::o;13345:193::-;497:13043;;;;;;;-1:-1:-1;;;;;497:13043:2;;;;;;;;;;;;;;;;;;;;;;;;;;13345:193;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"822200","executionCost":"infinite","totalCost":"infinite"},"external":{"balanceOf(address,uint256)":"2543","balanceOfBatch(address[],uint256[])":"infinite","isApprovedForAll(address,address)":"2708","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"infinite","safeTransferFrom(address,address,uint256,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26550","supportsInterface(bytes4)":"360","uri(uint256)":"infinite"},"internal":{"_asSingletonArray(uint256)":"infinite","_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_burn(address,uint256,uint256)":"infinite","_burnBatch(address,uint256[] memory,uint256[] memory)":"infinite","_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)":"infinite","_mint(address,uint256,uint256,bytes memory)":"infinite","_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)":"infinite","_setURI(string memory)":"infinite"}},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC1155.sol\\\";\\nimport \\\"./IERC1155Receiver.sol\\\";\\nimport \\\"./extensions/IERC1155MetadataURI.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n *\\n * @dev Implementation of the basic standard multi-token.\\n * See https://eips.ethereum.org/EIPS/eip-1155\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\n *\\n * _Available since v3.1._\\n */\\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\\n    using Address for address;\\n\\n    // Mapping from token ID to account balances\\n    mapping (uint256 => mapping(address => uint256)) private _balances;\\n\\n    // Mapping from account to operator approvals\\n    mapping (address => mapping(address => bool)) private _operatorApprovals;\\n\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\n    string private _uri;\\n\\n    /**\\n     * @dev See {_setURI}.\\n     */\\n    constructor (string memory uri_) {\\n        _setURI(uri_);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IERC1155).interfaceId\\n            || interfaceId == type(IERC1155MetadataURI).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155MetadataURI-uri}.\\n     *\\n     * This implementation returns the same URI for *all* token types. It relies\\n     * on the token type ID substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the\\n     * actual token type ID.\\n     */\\n    function uri(uint256) public view virtual override returns (string memory) {\\n        return _uri;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\\n        require(account != address(0), \\\"ERC1155: balance query for the zero address\\\");\\n        return _balances[id][account];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] memory accounts,\\n        uint256[] memory ids\\n    )\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256[] memory)\\n    {\\n        require(accounts.length == ids.length, \\\"ERC1155: accounts and ids length mismatch\\\");\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        require(_msgSender() != operator, \\\"ERC1155: setting approval status for self\\\");\\n\\n        _operatorApprovals[_msgSender()][operator] = approved;\\n        emit ApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    )\\n        public\\n        virtual\\n        override\\n    {\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not owner nor approved\\\"\\n        );\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n        _balances[id][from] = fromBalance - amount;\\n        _balances[id][to] += amount;\\n\\n        emit TransferSingle(operator, from, to, id, amount);\\n\\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    )\\n        public\\n        virtual\\n        override\\n    {\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: transfer caller is not owner nor approved\\\"\\n        );\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n            _balances[id][from] = fromBalance - amount;\\n            _balances[id][to] += amount;\\n        }\\n\\n        emit TransferBatch(operator, from, to, ids, amounts);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\n     * substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * By this mechanism, any occurrence of the `\\\\{id\\\\}` substring in either the\\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\\n     * clients with the token type ID.\\n     *\\n     * For example, the `https://token-cdn-domain/\\\\{id\\\\}.json` URI would be\\n     * interpreted by clients as\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\n     * for token type ID 0x4cce0.\\n     *\\n     * See {uri}.\\n     *\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\n     * this function emits no events.\\n     */\\n    function _setURI(string memory newuri) internal virtual {\\n        _uri = newuri;\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _mint(address account, uint256 id, uint256 amount, bytes memory data) internal virtual {\\n        require(account != address(0), \\\"ERC1155: mint to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data);\\n\\n        _balances[id][account] += amount;\\n        emit TransferSingle(operator, address(0), account, id, amount);\\n\\n        _doSafeTransferAcceptanceCheck(operator, address(0), account, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        for (uint i = 0; i < ids.length; i++) {\\n            _balances[ids[i]][to] += amounts[i];\\n        }\\n\\n        emit TransferBatch(operator, address(0), to, ids, amounts);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens of token type `id` from `account`\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens of token type `id`.\\n     */\\n    function _burn(address account, uint256 id, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC1155: burn from the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, account, address(0), _asSingletonArray(id), _asSingletonArray(amount), \\\"\\\");\\n\\n        uint256 accountBalance = _balances[id][account];\\n        require(accountBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n        _balances[id][account] = accountBalance - amount;\\n\\n        emit TransferSingle(operator, account, address(0), id, amount);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     */\\n    function _burnBatch(address account, uint256[] memory ids, uint256[] memory amounts) internal virtual {\\n        require(account != address(0), \\\"ERC1155: burn from the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, account, address(0), ids, amounts, \\\"\\\");\\n\\n        for (uint i = 0; i < ids.length; i++) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 accountBalance = _balances[id][account];\\n            require(accountBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n            _balances[id][account] = accountBalance - amount;\\n        }\\n\\n        emit TransferBatch(operator, account, address(0), ids, amounts);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `id` and `amount` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    )\\n        internal\\n        virtual\\n    { }\\n\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    )\\n        private\\n    {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\\n                if (response != IERC1155Receiver(to).onERC1155Received.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    )\\n        private\\n    {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {\\n                if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\\n        uint256[] memory array = new uint256[](1);\\n        array[0] = element;\\n\\n        return array;\\n    }\\n}\\n\",\"keccak256\":\"0x8d0a3d2756dc8eff2b2563b52a6dcd3ab36e07b57211d3ac7c76efee6c4682e4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x249bc2a6d919da5f5145950664134cfcf2f66874bda801fd3b8fb861783da079\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n\\n    /**\\n        @dev Handles the receipt of a single ERC1155 token type. This function is\\n        called at the end of a `safeTransferFrom` after the balance has been updated.\\n        To accept the transfer, this must return\\n        `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n        (i.e. 0xf23a6e61, or its own function selector).\\n        @param operator The address which initiated the transfer (i.e. msg.sender)\\n        @param from The address which previously owned the token\\n        @param id The ID of the token being transferred\\n        @param value The amount of tokens being transferred\\n        @param data Additional data with no specified format\\n        @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n    */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    )\\n        external\\n        returns(bytes4);\\n\\n    /**\\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\\n        is called at the end of a `safeBatchTransferFrom` after the balances have\\n        been updated. To accept the transfer(s), this must return\\n        `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n        (i.e. 0xbc197c81, or its own function selector).\\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n        @param from The address which previously owned the token\\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n        @param data Additional data with no specified format\\n        @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n    */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    )\\n        external\\n        returns(bytes4);\\n}\\n\",\"keccak256\":\"0xc7aa8a96aaeb7e1672a3d5fd37582136ff46b6a6cafabcc40ec0e00a42915e1c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x6ba0564f6970414d1166ee83127b834bbe7dbf699241a3005eb7ae64a2211975\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":227,"contract":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":233,"contract":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155","label":"_operatorApprovals","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":235,"contract":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155","label":"_uri","offset":0,"slot":"2","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._","events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."},"setApprovalForAll(address,bool)":{"details":"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x249bc2a6d919da5f5145950664134cfcf2f66874bda801fd3b8fb861783da079\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"details":"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","ids":"An array containing ids of each token being transferred (order and length must match values array)","operator":"The address which initiated the batch transfer (i.e. msg.sender)","values":"An array containing amounts of each token being transferred (order and length must match ids array)"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"}},"onERC1155Received(address,address,uint256,uint256,bytes)":{"details":"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","id":"The ID of the token being transferred","operator":"The address which initiated the transfer (i.e. msg.sender)","value":"The amount of tokens being transferred"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"_Available since v3.1._\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n\\n    /**\\n        @dev Handles the receipt of a single ERC1155 token type. This function is\\n        called at the end of a `safeTransferFrom` after the balance has been updated.\\n        To accept the transfer, this must return\\n        `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n        (i.e. 0xf23a6e61, or its own function selector).\\n        @param operator The address which initiated the transfer (i.e. msg.sender)\\n        @param from The address which previously owned the token\\n        @param id The ID of the token being transferred\\n        @param value The amount of tokens being transferred\\n        @param data Additional data with no specified format\\n        @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n    */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    )\\n        external\\n        returns(bytes4);\\n\\n    /**\\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\\n        is called at the end of a `safeBatchTransferFrom` after the balances have\\n        been updated. To accept the transfer(s), this must return\\n        `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n        (i.e. 0xbc197c81, or its own function selector).\\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n        @param from The address which previously owned the token\\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n        @param data Additional data with no specified format\\n        @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n    */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    )\\n        external\\n        returns(bytes4);\\n}\\n\",\"keccak256\":\"0xc7aa8a96aaeb7e1672a3d5fd37582136ff46b6a6cafabcc40ec0e00a42915e1c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"_Available since v3.1._","version":1}}},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"ERC1155Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._","events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"uri(uint256)":{"details":"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burn(address,uint256,uint256)":"f5298aca","burnBatch(address,uint256[],uint256[])":"6b20c454","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":\"ERC1155Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC1155.sol\\\";\\nimport \\\"./IERC1155Receiver.sol\\\";\\nimport \\\"./extensions/IERC1155MetadataURI.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n *\\n * @dev Implementation of the basic standard multi-token.\\n * See https://eips.ethereum.org/EIPS/eip-1155\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\n *\\n * _Available since v3.1._\\n */\\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\\n    using Address for address;\\n\\n    // Mapping from token ID to account balances\\n    mapping (uint256 => mapping(address => uint256)) private _balances;\\n\\n    // Mapping from account to operator approvals\\n    mapping (address => mapping(address => bool)) private _operatorApprovals;\\n\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\n    string private _uri;\\n\\n    /**\\n     * @dev See {_setURI}.\\n     */\\n    constructor (string memory uri_) {\\n        _setURI(uri_);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IERC1155).interfaceId\\n            || interfaceId == type(IERC1155MetadataURI).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155MetadataURI-uri}.\\n     *\\n     * This implementation returns the same URI for *all* token types. It relies\\n     * on the token type ID substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the\\n     * actual token type ID.\\n     */\\n    function uri(uint256) public view virtual override returns (string memory) {\\n        return _uri;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\\n        require(account != address(0), \\\"ERC1155: balance query for the zero address\\\");\\n        return _balances[id][account];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] memory accounts,\\n        uint256[] memory ids\\n    )\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256[] memory)\\n    {\\n        require(accounts.length == ids.length, \\\"ERC1155: accounts and ids length mismatch\\\");\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        require(_msgSender() != operator, \\\"ERC1155: setting approval status for self\\\");\\n\\n        _operatorApprovals[_msgSender()][operator] = approved;\\n        emit ApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    )\\n        public\\n        virtual\\n        override\\n    {\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not owner nor approved\\\"\\n        );\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n        _balances[id][from] = fromBalance - amount;\\n        _balances[id][to] += amount;\\n\\n        emit TransferSingle(operator, from, to, id, amount);\\n\\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    )\\n        public\\n        virtual\\n        override\\n    {\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: transfer caller is not owner nor approved\\\"\\n        );\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n            _balances[id][from] = fromBalance - amount;\\n            _balances[id][to] += amount;\\n        }\\n\\n        emit TransferBatch(operator, from, to, ids, amounts);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\n     * substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * By this mechanism, any occurrence of the `\\\\{id\\\\}` substring in either the\\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\\n     * clients with the token type ID.\\n     *\\n     * For example, the `https://token-cdn-domain/\\\\{id\\\\}.json` URI would be\\n     * interpreted by clients as\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\n     * for token type ID 0x4cce0.\\n     *\\n     * See {uri}.\\n     *\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\n     * this function emits no events.\\n     */\\n    function _setURI(string memory newuri) internal virtual {\\n        _uri = newuri;\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _mint(address account, uint256 id, uint256 amount, bytes memory data) internal virtual {\\n        require(account != address(0), \\\"ERC1155: mint to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data);\\n\\n        _balances[id][account] += amount;\\n        emit TransferSingle(operator, address(0), account, id, amount);\\n\\n        _doSafeTransferAcceptanceCheck(operator, address(0), account, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        for (uint i = 0; i < ids.length; i++) {\\n            _balances[ids[i]][to] += amounts[i];\\n        }\\n\\n        emit TransferBatch(operator, address(0), to, ids, amounts);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens of token type `id` from `account`\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens of token type `id`.\\n     */\\n    function _burn(address account, uint256 id, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC1155: burn from the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, account, address(0), _asSingletonArray(id), _asSingletonArray(amount), \\\"\\\");\\n\\n        uint256 accountBalance = _balances[id][account];\\n        require(accountBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n        _balances[id][account] = accountBalance - amount;\\n\\n        emit TransferSingle(operator, account, address(0), id, amount);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     */\\n    function _burnBatch(address account, uint256[] memory ids, uint256[] memory amounts) internal virtual {\\n        require(account != address(0), \\\"ERC1155: burn from the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, account, address(0), ids, amounts, \\\"\\\");\\n\\n        for (uint i = 0; i < ids.length; i++) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 accountBalance = _balances[id][account];\\n            require(accountBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n            _balances[id][account] = accountBalance - amount;\\n        }\\n\\n        emit TransferBatch(operator, account, address(0), ids, amounts);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `id` and `amount` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    )\\n        internal\\n        virtual\\n    { }\\n\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    )\\n        private\\n    {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\\n                if (response != IERC1155Receiver(to).onERC1155Received.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    )\\n        private\\n    {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {\\n                if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\\n        uint256[] memory array = new uint256[](1);\\n        array[0] = element;\\n\\n        return array;\\n    }\\n}\\n\",\"keccak256\":\"0x8d0a3d2756dc8eff2b2563b52a6dcd3ab36e07b57211d3ac7c76efee6c4682e4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x249bc2a6d919da5f5145950664134cfcf2f66874bda801fd3b8fb861783da079\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n\\n    /**\\n        @dev Handles the receipt of a single ERC1155 token type. This function is\\n        called at the end of a `safeTransferFrom` after the balance has been updated.\\n        To accept the transfer, this must return\\n        `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n        (i.e. 0xf23a6e61, or its own function selector).\\n        @param operator The address which initiated the transfer (i.e. msg.sender)\\n        @param from The address which previously owned the token\\n        @param id The ID of the token being transferred\\n        @param value The amount of tokens being transferred\\n        @param data Additional data with no specified format\\n        @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n    */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    )\\n        external\\n        returns(bytes4);\\n\\n    /**\\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\\n        is called at the end of a `safeBatchTransferFrom` after the balances have\\n        been updated. To accept the transfer(s), this must return\\n        `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n        (i.e. 0xbc197c81, or its own function selector).\\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n        @param from The address which previously owned the token\\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n        @param data Additional data with no specified format\\n        @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n    */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    )\\n        external\\n        returns(bytes4);\\n}\\n\",\"keccak256\":\"0xc7aa8a96aaeb7e1672a3d5fd37582136ff46b6a6cafabcc40ec0e00a42915e1c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1155.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\\n * own tokens and those that they have been approved to use.\\n *\\n * _Available since v3.1._\\n */\\nabstract contract ERC1155Burnable is ERC1155 {\\n    function burn(address account, uint256 id, uint256 value) public virtual {\\n        require(\\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\\n            \\\"ERC1155: caller is not owner nor approved\\\"\\n        );\\n\\n        _burn(account, id, value);\\n    }\\n\\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\\n        require(\\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\\n            \\\"ERC1155: caller is not owner nor approved\\\"\\n        );\\n\\n        _burnBatch(account, ids, values);\\n    }\\n}\\n\",\"keccak256\":\"0xf37ec99085370fa75da56456d21f8410423e64e6bc4ef31fed4884f70e5e40cb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x6ba0564f6970414d1166ee83127b834bbe7dbf699241a3005eb7ae64a2211975\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":227,"contract":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":233,"contract":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable","label":"_operatorApprovals","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":235,"contract":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable","label":"_uri","offset":0,"slot":"2","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._","events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."},"setApprovalForAll(address,bool)":{"details":"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"uri(uint256)":{"details":"Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x249bc2a6d919da5f5145950664134cfcf2f66874bda801fd3b8fb861783da079\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x6ba0564f6970414d1166ee83127b834bbe7dbf699241a3005eb7ae64a2211975\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol":{"ERC1155Holder":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"_Available since v3.1._","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234610016576102d2908161001c8239f35b600080fdfe60808060405260048036101561001457600080fd5b600091823560e01c90816301ffc9a71461012957508063bc197c811461009f5763f23a6e611461004357600080fd5b3461009b5760a036600319011261009b5761005c61017d565b50610065610198565b506084356001600160401b03811161009757610084925036910161024a565b5060405163f23a6e6160e01b8152602090f35b8280fd5b5080fd5b503461009b5760a036600319011261009b576100b961017d565b506100c2610198565b506001600160401b03604435818111610125576100e290369084016101e9565b50606435818111610125576100fa90369084016101e9565b5060843590811161009757610112925036910161024a565b5060405163bc197c8160e01b8152602090f35b8380fd5b91905034610097576020366003190112610097573563ffffffff60e01b81168091036100975760209250630271189760e51b811490811561016c575b5015158152f35b6301ffc9a760e01b14905038610165565b600435906001600160a01b038216820361019357565b600080fd5b602435906001600160a01b038216820361019357565b6040519190601f01601f191682016001600160401b038111838210176101d357604052565b634e487b7160e01b600052604160045260246000fd5b81601f82011215610193578035916001600160401b0383116101d3578260051b60209283806102198185016101ae565b809781520192820101928311610193578301905b82821061023b575050505090565b8135815290830190830161022d565b81601f82011215610193578035906001600160401b0382116101d357610279601f8301601f19166020016101ae565b92828452602083830101116101935781600092602080930183860137830101529056fea2646970667358221220c8860de0873044f2ff5bbd964041018a45635a2eab38a8cab5015df8b6c5d33664736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x2D2 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x129 JUMPI POP DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x9F JUMPI PUSH4 0xF23A6E61 EQ PUSH2 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x9B JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x9B JUMPI PUSH2 0x5C PUSH2 0x17D JUMP JUMPDEST POP PUSH2 0x65 PUSH2 0x198 JUMP JUMPDEST POP PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x97 JUMPI PUSH2 0x84 SWAP3 POP CALLDATASIZE SWAP2 ADD PUSH2 0x24A JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x9B JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x9B JUMPI PUSH2 0xB9 PUSH2 0x17D JUMP JUMPDEST POP PUSH2 0xC2 PUSH2 0x198 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x125 JUMPI PUSH2 0xE2 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x1E9 JUMP JUMPDEST POP PUSH1 0x64 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x125 JUMPI PUSH2 0xFA SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x1E9 JUMP JUMPDEST POP PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x97 JUMPI PUSH2 0x112 SWAP3 POP CALLDATASIZE SWAP2 ADD PUSH2 0x24A JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x97 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x97 JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x97 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x2711897 PUSH1 0xE5 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x16C JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x165 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x193 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x193 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x1D3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x193 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x1D3 JUMPI DUP3 PUSH1 0x5 SHL PUSH1 0x20 SWAP3 DUP4 DUP1 PUSH2 0x219 DUP2 DUP6 ADD PUSH2 0x1AE JUMP JUMPDEST DUP1 SWAP8 DUP2 MSTORE ADD SWAP3 DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x193 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x23B JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x22D JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x193 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1D3 JUMPI PUSH2 0x279 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1AE JUMP JUMPDEST SWAP3 DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x193 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 DUP7 0xD 0xE0 DUP8 ADDRESS PREVRANDAO CALLCODE SELFDESTRUCT JUMPDEST 0xBD SWAP7 BLOCKHASH COINBASE ADD DUP11 GASLIMIT PUSH4 0x5A2EAB38 0xA8 0xCA 0xB5 ADD 0x5D 0xF8 0xB6 0xC5 0xD3 CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"131:430:7:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":381,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_1381":{"entryPoint":408,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":489,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":586,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":430,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60808060405260048036101561001457600080fd5b600091823560e01c90816301ffc9a71461012957508063bc197c811461009f5763f23a6e611461004357600080fd5b3461009b5760a036600319011261009b5761005c61017d565b50610065610198565b506084356001600160401b03811161009757610084925036910161024a565b5060405163f23a6e6160e01b8152602090f35b8280fd5b5080fd5b503461009b5760a036600319011261009b576100b961017d565b506100c2610198565b506001600160401b03604435818111610125576100e290369084016101e9565b50606435818111610125576100fa90369084016101e9565b5060843590811161009757610112925036910161024a565b5060405163bc197c8160e01b8152602090f35b8380fd5b91905034610097576020366003190112610097573563ffffffff60e01b81168091036100975760209250630271189760e51b811490811561016c575b5015158152f35b6301ffc9a760e01b14905038610165565b600435906001600160a01b038216820361019357565b600080fd5b602435906001600160a01b038216820361019357565b6040519190601f01601f191682016001600160401b038111838210176101d357604052565b634e487b7160e01b600052604160045260246000fd5b81601f82011215610193578035916001600160401b0383116101d3578260051b60209283806102198185016101ae565b809781520192820101928311610193578301905b82821061023b575050505090565b8135815290830190830161022d565b81601f82011215610193578035906001600160401b0382116101d357610279601f8301601f19166020016101ae565b92828452602083830101116101935781600092602080930183860137830101529056fea2646970667358221220c8860de0873044f2ff5bbd964041018a45635a2eab38a8cab5015df8b6c5d33664736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x129 JUMPI POP DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x9F JUMPI PUSH4 0xF23A6E61 EQ PUSH2 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x9B JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x9B JUMPI PUSH2 0x5C PUSH2 0x17D JUMP JUMPDEST POP PUSH2 0x65 PUSH2 0x198 JUMP JUMPDEST POP PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x97 JUMPI PUSH2 0x84 SWAP3 POP CALLDATASIZE SWAP2 ADD PUSH2 0x24A JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x9B JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x9B JUMPI PUSH2 0xB9 PUSH2 0x17D JUMP JUMPDEST POP PUSH2 0xC2 PUSH2 0x198 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x125 JUMPI PUSH2 0xE2 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x1E9 JUMP JUMPDEST POP PUSH1 0x64 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x125 JUMPI PUSH2 0xFA SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x1E9 JUMP JUMPDEST POP PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x97 JUMPI PUSH2 0x112 SWAP3 POP CALLDATASIZE SWAP2 ADD PUSH2 0x24A JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x97 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x97 JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x97 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x2711897 PUSH1 0xE5 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x16C JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x165 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x193 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x193 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x1D3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x193 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x1D3 JUMPI DUP3 PUSH1 0x5 SHL PUSH1 0x20 SWAP3 DUP4 DUP1 PUSH2 0x219 DUP2 DUP6 ADD PUSH2 0x1AE JUMP JUMPDEST DUP1 SWAP8 DUP2 MSTORE ADD SWAP3 DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x193 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x23B JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x22D JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x193 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1D3 JUMPI PUSH2 0x279 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1AE JUMP JUMPDEST SWAP3 DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x193 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 DUP7 0xD 0xE0 DUP8 ADDRESS PREVRANDAO CALLCODE SELFDESTRUCT JUMPDEST 0xBD SWAP7 BLOCKHASH COINBASE ADD DUP11 GASLIMIT PUSH4 0x5A2EAB38 0xA8 0xCA 0xB5 ADD 0x5D 0xF8 0xB6 0xC5 0xD3 CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"131:430:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;131:430:7;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;131:430:7;;-1:-1:-1;;;;;131:430:7;;;;;;;;;;;:::i;:::-;-1:-1:-1;131:430:7;;-1:-1:-1;;;131:430:7;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;131:430:7;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;;131:430:7;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;131:430:7;;-1:-1:-1;;;131:430:7;;;;;;;;;;;;;;;;;;-1:-1:-1;;131:430:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;;437:49:8;;;:101;;;;131:430:7;;;;;;;437:101:8;-1:-1:-1;;;871:40:23;;-1:-1:-1;437:101:8;;;131:430:7;;;;-1:-1:-1;;;;;131:430:7;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;131:430:7;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;131:430:7;;;-1:-1:-1;;;;;131:430:7;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;131:430:7;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;131:430:7;;;;;;;;-1:-1:-1;;131:430:7;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;131:430:7;;;;;;;;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"144400","executionCost":"196","totalCost":"144596"},"external":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"infinite","onERC1155Received(address,address,uint256,uint256,bytes)":"infinite","supportsInterface(bytes4)":"283"}},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":\"ERC1155Holder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n\\n    /**\\n        @dev Handles the receipt of a single ERC1155 token type. This function is\\n        called at the end of a `safeTransferFrom` after the balance has been updated.\\n        To accept the transfer, this must return\\n        `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n        (i.e. 0xf23a6e61, or its own function selector).\\n        @param operator The address which initiated the transfer (i.e. msg.sender)\\n        @param from The address which previously owned the token\\n        @param id The ID of the token being transferred\\n        @param value The amount of tokens being transferred\\n        @param data Additional data with no specified format\\n        @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n    */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    )\\n        external\\n        returns(bytes4);\\n\\n    /**\\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\\n        is called at the end of a `safeBatchTransferFrom` after the balances have\\n        been updated. To accept the transfer(s), this must return\\n        `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n        (i.e. 0xbc197c81, or its own function selector).\\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n        @param from The address which previously owned the token\\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n        @param data Additional data with no specified format\\n        @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n    */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    )\\n        external\\n        returns(bytes4);\\n}\\n\",\"keccak256\":\"0xc7aa8a96aaeb7e1672a3d5fd37582136ff46b6a6cafabcc40ec0e00a42915e1c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ERC1155Receiver.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ncontract ERC1155Holder is ERC1155Receiver {\\n    function onERC1155Received(address, address, uint256, uint256, bytes memory) public virtual override returns (bytes4) {\\n        return this.onERC1155Received.selector;\\n    }\\n\\n    function onERC1155BatchReceived(address, address, uint256[] memory, uint256[] memory, bytes memory) public virtual override returns (bytes4) {\\n        return this.onERC1155BatchReceived.selector;\\n    }\\n}\\n\",\"keccak256\":\"0x2ccdc162657b677334eb08a60bb50a0dd74b22eff7150abb06487f58dbebd5e5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155Receiver.sol\\\";\\nimport \\\"../../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IERC1155Receiver).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n}\\n\",\"keccak256\":\"0xfb1161632a10d0bd366c80db583246fa490183b45ec4f59acb43b97d1a7437b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol":{"ERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"_Available since v3.1._","kind":"dev","methods":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"details":"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","ids":"An array containing ids of each token being transferred (order and length must match values array)","operator":"The address which initiated the batch transfer (i.e. msg.sender)","values":"An array containing amounts of each token being transferred (order and length must match ids array)"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"}},"onERC1155Received(address,address,uint256,uint256,bytes)":{"details":"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","id":"The ID of the token being transferred","operator":"The address which initiated the transfer (i.e. msg.sender)","value":"The amount of tokens being transferred"},"returns":{"_0":"`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"}},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":\"ERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n\\n    /**\\n        @dev Handles the receipt of a single ERC1155 token type. This function is\\n        called at the end of a `safeTransferFrom` after the balance has been updated.\\n        To accept the transfer, this must return\\n        `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n        (i.e. 0xf23a6e61, or its own function selector).\\n        @param operator The address which initiated the transfer (i.e. msg.sender)\\n        @param from The address which previously owned the token\\n        @param id The ID of the token being transferred\\n        @param value The amount of tokens being transferred\\n        @param data Additional data with no specified format\\n        @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n    */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    )\\n        external\\n        returns(bytes4);\\n\\n    /**\\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\\n        is called at the end of a `safeBatchTransferFrom` after the balances have\\n        been updated. To accept the transfer(s), this must return\\n        `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n        (i.e. 0xbc197c81, or its own function selector).\\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n        @param from The address which previously owned the token\\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n        @param data Additional data with no specified format\\n        @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n    */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    )\\n        external\\n        returns(bytes4);\\n}\\n\",\"keccak256\":\"0xc7aa8a96aaeb7e1672a3d5fd37582136ff46b6a6cafabcc40ec0e00a42915e1c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155Receiver.sol\\\";\\nimport \\\"../../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IERC1155Receiver).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n}\\n\",\"keccak256\":\"0xfb1161632a10d0bd366c80db583246fa490183b45ec4f59acb43b97d1a7437b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. The defaut value of {decimals} is 18. To select a different value for {decimals} you should overload it. All three of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_string_fromMemory":{"entryPoint":840,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":802,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080604052346200031d5762000c4d803803806200001d8162000322565b9283398101906040818303126200031d5780516001600160401b03908181116200031d57836200004f91840162000348565b91602093848201518381116200031d576200006b920162000348565b82518281116200021d576003918254916001958684811c9416801562000312575b88851014620002fc578190601f94858111620002a6575b5088908583116001146200023f5760009262000233575b505060001982861b1c191690861b1783555b80519384116200021d5760049586548681811c9116801562000212575b82821014620001fd57838111620001b2575b508092851160011462000144575093839491849260009562000138575b50501b92600019911b1c19161790555b6040516108929081620003bb8239f35b01519350388062000118565b92919084601f1981168860005285600020956000905b898383106200019757505050106200017c575b50505050811b01905562000128565b01519060f884600019921b161c19169055388080806200016d565b8587015189559097019694850194889350908101906200015a565b87600052816000208480880160051c820192848910620001f3575b0160051c019087905b828110620001e6575050620000fb565b60008155018790620001d6565b92508192620001cd565b602288634e487b7160e01b6000525260246000fd5b90607f1690620000e9565b634e487b7160e01b600052604160045260246000fd5b015190503880620000ba565b90889350601f19831691876000528a6000209260005b8c8282106200028f575050841162000276575b505050811b018355620000cc565b015160001983881b60f8161c1916905538808062000268565b8385015186558c9790950194938401930162000255565b90915085600052886000208580850160051c8201928b8610620002f2575b918a91869594930160051c01915b828110620002e2575050620000a3565b600081558594508a9101620002d2565b92508192620002c4565b634e487b7160e01b600052602260045260246000fd5b93607f16936200008c565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200021d57604052565b919080601f840112156200031d5782516001600160401b0381116200021d576020906200037e601f8201601f1916830162000322565b928184528282870101116200031d5760005b818110620003a657508260009394955001015290565b85810183015184820184015282016200039056fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461047657508163095ea7b31461044c57816318160ddd1461042d57816323b872dd14610366578163313ce5671461034a578163395093511461030157816370a08231146102ca57816395d89b41146101c9578163a457c2d71461011957508063a9059cbb146100e95763dd62ed3e1461009e57600080fd5b346100e557806003193601126100e557806020926100ba61057d565b6100c2610598565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100e557806003193601126100e55760209061011261010861057d565b60243590336105de565b5160018152f35b905082346101c657826003193601126101c65761013461057d565b918360243592338152600160205281812060018060a01b0386168252602052205490828210610175576020856101128661016e87876105ae565b903361075a565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b8383346100e557816003193601126100e557805190828454600181811c908083169283156102c0575b60209384841081146102ad578388529081156102915750600114610259575b505050829003601f01601f19168201926001600160401b038411838510176102465750829182610242925282610534565b0390f35b634e487b7160e01b815260418552602490fd5b919250868652828620918387935b83851061027d5750505050830101858080610211565b805488860183015293019284908201610267565b60ff1916878501525050151560051b8401019050858080610211565b634e487b7160e01b895260228a52602489fd5b91607f16916101f2565b5050346100e55760203660031901126100e55760209181906001600160a01b036102f261057d565b16815280845220549051908152f35b5050346100e557806003193601126100e55761011260209261016e61032461057d565b338352600186528483206001600160a01b038216845286529184902054602435906105d1565b5050346100e557816003193601126100e5576020905160128152f35b905082346101c65760603660031901126101c65761038261057d565b918361038c610598565b9261039b6044358095876105de565b6001600160a01b03851681526001602090815282822033835290522054908282106103d957602085610112866103d187876105ae565b90339061075a565b608490602086519162461bcd60e51b8352820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152fd5b5050346100e557816003193601126100e5576020906002549051908152f35b5050346100e557806003193601126100e55760209061011261046c61057d565b602435903361075a565b8490843461053057826003193601126105305782600354600181811c90808316928315610526575b60209384841081146102ad5783885290811561029157506001146104ed57505050829003601f01601f19168201926001600160401b038411838510176102465750829182610242925282610534565b91925060038652828620918387935b8385106105125750505050830101858080610211565b8054888601830152930192849082016104fc565b91607f169161049e565b8280fd5b6020808252825181830181905290939260005b82811061056957505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610547565b600435906001600160a01b038216820361059357565b600080fd5b602435906001600160a01b038216820361059357565b919082039182116105bb57565b634e487b7160e01b600052601160045260246000fd5b919082018092116105bb57565b6001600160a01b0390811691821561070757169182156106b65760008281528060205260408120549180831061066257604060209261063e837fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef966105ae565b86825281855282822055868152206106578282546105d1565b9055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0390811691821561080b57169182156107bb5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fdfea2646970667358221220dfa9b9de778101746636b3e677900d438e0467913342c0d4aec4433b20f5a03d64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x31D JUMPI PUSH3 0xC4D DUP1 CODESIZE SUB DUP1 PUSH3 0x1D DUP2 PUSH3 0x322 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x40 DUP2 DUP4 SUB SLT PUSH3 0x31D JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 GT PUSH3 0x31D JUMPI DUP4 PUSH3 0x4F SWAP2 DUP5 ADD PUSH3 0x348 JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP4 DUP5 DUP3 ADD MLOAD DUP4 DUP2 GT PUSH3 0x31D JUMPI PUSH3 0x6B SWAP3 ADD PUSH3 0x348 JUMP JUMPDEST DUP3 MLOAD DUP3 DUP2 GT PUSH3 0x21D JUMPI PUSH1 0x3 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x1 SWAP6 DUP7 DUP5 DUP2 SHR SWAP5 AND DUP1 ISZERO PUSH3 0x312 JUMPI JUMPDEST DUP9 DUP6 LT EQ PUSH3 0x2FC JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP5 DUP6 DUP2 GT PUSH3 0x2A6 JUMPI JUMPDEST POP DUP9 SWAP1 DUP6 DUP4 GT PUSH1 0x1 EQ PUSH3 0x23F JUMPI PUSH1 0x0 SWAP3 PUSH3 0x233 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP7 SHL SHR NOT AND SWAP1 DUP7 SHL OR DUP4 SSTORE JUMPDEST DUP1 MLOAD SWAP4 DUP5 GT PUSH3 0x21D JUMPI PUSH1 0x4 SWAP6 DUP7 SLOAD DUP7 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x212 JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH3 0x1FD JUMPI DUP4 DUP2 GT PUSH3 0x1B2 JUMPI JUMPDEST POP DUP1 SWAP3 DUP6 GT PUSH1 0x1 EQ PUSH3 0x144 JUMPI POP SWAP4 DUP4 SWAP5 SWAP2 DUP5 SWAP3 PUSH1 0x0 SWAP6 PUSH3 0x138 JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x892 SWAP1 DUP2 PUSH3 0x3BB DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH3 0x118 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1F NOT DUP2 AND DUP9 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 SWAP6 PUSH1 0x0 SWAP1 JUMPDEST DUP10 DUP4 DUP4 LT PUSH3 0x197 JUMPI POP POP POP LT PUSH3 0x17C JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x128 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x16D JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP10 SSTORE SWAP1 SWAP8 ADD SWAP7 SWAP5 DUP6 ADD SWAP5 DUP9 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x15A JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP9 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP5 DUP10 LT PUSH3 0x1F3 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP8 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x1E6 JUMPI POP POP PUSH3 0xFB JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP8 SWAP1 PUSH3 0x1D6 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x1CD JUMP JUMPDEST PUSH1 0x22 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xE9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xBA JUMP JUMPDEST SWAP1 DUP9 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP8 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP13 DUP3 DUP3 LT PUSH3 0x28F JUMPI POP POP DUP5 GT PUSH3 0x276 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH3 0xCC JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x268 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP13 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x255 JUMP JUMPDEST SWAP1 SWAP2 POP DUP6 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP12 DUP7 LT PUSH3 0x2F2 JUMPI JUMPDEST SWAP2 DUP11 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x2E2 JUMPI POP POP PUSH3 0xA3 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP11 SWAP2 ADD PUSH3 0x2D2 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x2C4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH3 0x8C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x21D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0x31D JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x21D JUMPI PUSH1 0x20 SWAP1 PUSH3 0x37E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD PUSH3 0x322 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH3 0x31D JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x3A6 JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0x390 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x476 JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x44C JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x42D JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x366 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x34A JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x301 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x2CA JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x1C9 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0x119 JUMPI POP DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xE9 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xBA PUSH2 0x57D JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x108 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x5DE JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x1C6 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH2 0x134 PUSH2 0x57D JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x175 JUMPI PUSH1 0x20 DUP6 PUSH2 0x112 DUP7 PUSH2 0x16E DUP8 DUP8 PUSH2 0x5AE JUMP JUMPDEST SWAP1 CALLER PUSH2 0x75A JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 MLOAD SWAP1 DUP3 DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x2C0 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2AD JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x291 JUMPI POP PUSH1 0x1 EQ PUSH2 0x259 JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT DUP4 DUP6 LT OR PUSH2 0x246 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x242 SWAP3 MSTORE DUP3 PUSH2 0x534 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 POP DUP7 DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP2 DUP4 DUP8 SWAP4 JUMPDEST DUP4 DUP6 LT PUSH2 0x27D JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x211 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x267 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP DUP6 DUP1 DUP1 PUSH2 0x211 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1F2 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2F2 PUSH2 0x57D JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH2 0x112 PUSH1 0x20 SWAP3 PUSH2 0x16E PUSH2 0x324 PUSH2 0x57D JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP5 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP5 MSTORE DUP7 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x5D1 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x1C6 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C6 JUMPI PUSH2 0x382 PUSH2 0x57D JUMP JUMPDEST SWAP2 DUP4 PUSH2 0x38C PUSH2 0x598 JUMP JUMPDEST SWAP3 PUSH2 0x39B PUSH1 0x44 CALLDATALOAD DUP1 SWAP6 DUP8 PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x3D9 JUMPI PUSH1 0x20 DUP6 PUSH2 0x112 DUP7 PUSH2 0x3D1 DUP8 DUP8 PUSH2 0x5AE JUMP JUMPDEST SWAP1 CALLER SWAP1 PUSH2 0x75A JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x46C PUSH2 0x57D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x75A JUMP JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x530 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x530 JUMPI DUP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x526 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2AD JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x291 JUMPI POP PUSH1 0x1 EQ PUSH2 0x4ED JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT DUP4 DUP6 LT OR PUSH2 0x246 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x242 SWAP3 MSTORE DUP3 PUSH2 0x534 JUMP JUMPDEST SWAP2 SWAP3 POP PUSH1 0x3 DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP2 DUP4 DUP8 SWAP4 JUMPDEST DUP4 DUP6 LT PUSH2 0x512 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x211 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x4FC JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x49E JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x569 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x547 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x593 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x593 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x5BB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x5BB JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x707 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x6B6 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x662 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH2 0x63E DUP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP7 PUSH2 0x5AE JUMP JUMPDEST DUP7 DUP3 MSTORE DUP2 DUP6 MSTORE DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 PUSH2 0x657 DUP3 DUP3 SLOAD PUSH2 0x5D1 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x80B JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x7BB JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xA9 0xB9 0xDE PUSH24 0x8101746636B3E677900D438E0467913342C0D4AEC4433B20 CREATE2 LOG0 RETURNDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1279:9238:9:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1279:9238:9;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1909:13;1279:9238;;;;;;;;;;;;;;;;-1:-1:-1;1279:9238:9;;;;;;;;;;;;;;;-1:-1:-1;1279:9238:9;;;;;;;;;;-1:-1:-1;1279:9238:9;;;;-1:-1:-1;;;;1279:9238:9;;;;;;;;;;;;;;;;;;;;1932:17;1279:9238;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1279:9238:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1279:9238:9;;;;;;;;;;;;;;-1:-1:-1;1279:9238:9;;-1:-1:-1;1279:9238:9;;-1:-1:-1;1279:9238:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1279:9238:9;;;;;;;;-1:-1:-1;1279:9238:9;;-1:-1:-1;1279:9238:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1279:9238:9;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1279:9238:9;;;-1:-1:-1;1279:9238:9;;;;;;;;;;;;-1:-1:-1;1279:9238:9;;1932:17;1279:9238;;-1:-1:-1;1279:9238:9;;;;;-1:-1:-1;1279:9238:9;;;;;;;;;;;;;;;-1:-1:-1;1279:9238:9;;-1:-1:-1;1279:9238:9;;-1:-1:-1;1279:9238:9;;;;;;;;;;-1:-1:-1;1279:9238:9;;;;;;;;;;;;;;;;-1:-1:-1;;1279:9238:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1279:9238:9;;-1:-1:-1;1279:9238:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1279:9238:9;;;;-1:-1:-1;1279:9238:9;;;;;;;;;;;;;;;;-1:-1:-1;1279:9238:9;;;;;-1:-1:-1;1279:9238:9;;;;;;;;;-1:-1:-1;1279:9238:9;;;;;;;;;-1:-1:-1;;1279:9238:9;;;-1:-1:-1;;;;;1279:9238:9;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1279:9238:9;;;;;;;;;;-1:-1:-1;;1279:9238:9;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1279:9238:9;;;;;;;;-1:-1:-1;1279:9238:9;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1432,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_4655":{"entryPoint":1405,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_string":{"entryPoint":1332,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":1489,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":1454,"id":null,"parameterSlots":2,"returnSlots":1},"fun_approve":{"entryPoint":1882,"id":2055,"parameterSlots":3,"returnSlots":0},"fun_transfer":{"entryPoint":1502,"id":1901,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461047657508163095ea7b31461044c57816318160ddd1461042d57816323b872dd14610366578163313ce5671461034a578163395093511461030157816370a08231146102ca57816395d89b41146101c9578163a457c2d71461011957508063a9059cbb146100e95763dd62ed3e1461009e57600080fd5b346100e557806003193601126100e557806020926100ba61057d565b6100c2610598565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100e557806003193601126100e55760209061011261010861057d565b60243590336105de565b5160018152f35b905082346101c657826003193601126101c65761013461057d565b918360243592338152600160205281812060018060a01b0386168252602052205490828210610175576020856101128661016e87876105ae565b903361075a565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b8383346100e557816003193601126100e557805190828454600181811c908083169283156102c0575b60209384841081146102ad578388529081156102915750600114610259575b505050829003601f01601f19168201926001600160401b038411838510176102465750829182610242925282610534565b0390f35b634e487b7160e01b815260418552602490fd5b919250868652828620918387935b83851061027d5750505050830101858080610211565b805488860183015293019284908201610267565b60ff1916878501525050151560051b8401019050858080610211565b634e487b7160e01b895260228a52602489fd5b91607f16916101f2565b5050346100e55760203660031901126100e55760209181906001600160a01b036102f261057d565b16815280845220549051908152f35b5050346100e557806003193601126100e55761011260209261016e61032461057d565b338352600186528483206001600160a01b038216845286529184902054602435906105d1565b5050346100e557816003193601126100e5576020905160128152f35b905082346101c65760603660031901126101c65761038261057d565b918361038c610598565b9261039b6044358095876105de565b6001600160a01b03851681526001602090815282822033835290522054908282106103d957602085610112866103d187876105ae565b90339061075a565b608490602086519162461bcd60e51b8352820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152fd5b5050346100e557816003193601126100e5576020906002549051908152f35b5050346100e557806003193601126100e55760209061011261046c61057d565b602435903361075a565b8490843461053057826003193601126105305782600354600181811c90808316928315610526575b60209384841081146102ad5783885290811561029157506001146104ed57505050829003601f01601f19168201926001600160401b038411838510176102465750829182610242925282610534565b91925060038652828620918387935b8385106105125750505050830101858080610211565b8054888601830152930192849082016104fc565b91607f169161049e565b8280fd5b6020808252825181830181905290939260005b82811061056957505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610547565b600435906001600160a01b038216820361059357565b600080fd5b602435906001600160a01b038216820361059357565b919082039182116105bb57565b634e487b7160e01b600052601160045260246000fd5b919082018092116105bb57565b6001600160a01b0390811691821561070757169182156106b65760008281528060205260408120549180831061066257604060209261063e837fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef966105ae565b86825281855282822055868152206106578282546105d1565b9055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0390811691821561080b57169182156107bb5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fdfea2646970667358221220dfa9b9de778101746636b3e677900d438e0467913342c0d4aec4433b20f5a03d64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x476 JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x44C JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x42D JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x366 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x34A JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x301 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x2CA JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x1C9 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0x119 JUMPI POP DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xE9 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xBA PUSH2 0x57D JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x108 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x5DE JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x1C6 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C6 JUMPI PUSH2 0x134 PUSH2 0x57D JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x175 JUMPI PUSH1 0x20 DUP6 PUSH2 0x112 DUP7 PUSH2 0x16E DUP8 DUP8 PUSH2 0x5AE JUMP JUMPDEST SWAP1 CALLER PUSH2 0x75A JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 MLOAD SWAP1 DUP3 DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x2C0 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2AD JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x291 JUMPI POP PUSH1 0x1 EQ PUSH2 0x259 JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT DUP4 DUP6 LT OR PUSH2 0x246 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x242 SWAP3 MSTORE DUP3 PUSH2 0x534 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 POP DUP7 DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP2 DUP4 DUP8 SWAP4 JUMPDEST DUP4 DUP6 LT PUSH2 0x27D JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x211 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x267 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP DUP6 DUP1 DUP1 PUSH2 0x211 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1F2 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2F2 PUSH2 0x57D JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH2 0x112 PUSH1 0x20 SWAP3 PUSH2 0x16E PUSH2 0x324 PUSH2 0x57D JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP5 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP5 MSTORE DUP7 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x5D1 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x1C6 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C6 JUMPI PUSH2 0x382 PUSH2 0x57D JUMP JUMPDEST SWAP2 DUP4 PUSH2 0x38C PUSH2 0x598 JUMP JUMPDEST SWAP3 PUSH2 0x39B PUSH1 0x44 CALLDATALOAD DUP1 SWAP6 DUP8 PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x3D9 JUMPI PUSH1 0x20 DUP6 PUSH2 0x112 DUP7 PUSH2 0x3D1 DUP8 DUP8 PUSH2 0x5AE JUMP JUMPDEST SWAP1 CALLER SWAP1 PUSH2 0x75A JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x46C PUSH2 0x57D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x75A JUMP JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x530 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x530 JUMPI DUP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x526 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2AD JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x291 JUMPI POP PUSH1 0x1 EQ PUSH2 0x4ED JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT DUP4 DUP6 LT OR PUSH2 0x246 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x242 SWAP3 MSTORE DUP3 PUSH2 0x534 JUMP JUMPDEST SWAP2 SWAP3 POP PUSH1 0x3 DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP2 DUP4 DUP8 SWAP4 JUMPDEST DUP4 DUP6 LT PUSH2 0x512 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x211 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x4FC JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x49E JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x569 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x547 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x593 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x593 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x5BB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x5BB JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x707 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x6B6 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x662 JUMPI PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH2 0x63E DUP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP7 PUSH2 0x5AE JUMP JUMPDEST DUP7 DUP3 MSTORE DUP2 DUP6 MSTORE DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 PUSH2 0x657 DUP3 DUP3 SLOAD PUSH2 0x5D1 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x80B JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x7BB JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xA9 0xB9 0xDE PUSH24 0x8101746636B3E677900D438E0467913342C0D4AEC4433B20 CREATE2 LOG0 RETURNDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1279:9238:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1279:9238:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:6;1279:9238;;:::i;:::-;;;665:10:21;;3711:6:9;:::i;:::-;1279:9238;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;665:10:21;;1279:9238:9;;;;;;;;;;;;;;;;;;;;;6420:35;;;;1279:9238;;;6539:34;;;;;;;:::i;:::-;665:10:21;;6539:34:9;:::i;1279:9238::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1279:9238:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1279:9238:9;;;;;-1:-1:-1;;1279:9238:9;;;;-1:-1:-1;;;;;1279:9238:9;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;1279:9238:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1279:9238:9;;;;;-1:-1:-1;;1279:9238:9;;;;;;;;-1:-1:-1;1279:9238:9;;;;;;-1:-1:-1;;;1279:9238:9;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1279:9238:9;;;;;;;;-1:-1:-1;;;;;1279:9238:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5669:47;1279:9238;;5669:47;1279:9238;;:::i;:::-;665:10:21;1279:9238:9;;;;;;;;-1:-1:-1;;;;;1279:9238:9;;;;;;;;;;;;;;5669:47;:::i;1279:9238::-;;;;;;;;;;;;;;;;;3013:2;1279:9238;;;;;;;;;;;;-1:-1:-1;;1279:9238:9;;;;;;:::i;:::-;;;;;:::i;:::-;;4875:6;1279:9238;;4875:6;;;;:::i;:::-;-1:-1:-1;;;;;1279:9238:9;;;;;;;;;;;;665:10:21;1279:9238:9;;;;;;;4971:26;;;1279:9238;;;5083:25;;;;;;;:::i;:::-;665:10:21;;5083:25:9;;:::i;1279:9238::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1279:9238:9;;;;;;;;;;;;;;;;;;;;;3169:12;1279:9238;;;;;;;;;;;;;;;;;;;;;;;4222:6;1279:9238;;:::i;:::-;;;665:10:21;;4222:6:9;:::i;1279:9238::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1279:9238:9;;;;;-1:-1:-1;;1279:9238:9;;;;-1:-1:-1;;;;;1279:9238:9;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1279:9238:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1279:9238:9;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;1279:9238:9;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;7077:592::-;-1:-1:-1;;;;;1279:9238:9;;;;7182:20;;1279:9238;;;7262:23;;;1279:9238;;7200:1;1279:9238;;;;;;;;;;7453:23;;;;1279:9238;;;;7549:22;;;7627:35;7549:22;;:::i;:::-;1279:9238;;;;;;;;;;;;;;7581:30;1279:9238;;;7581:30;:::i;:::-;1279:9238;;;;;;;7627:35;7077:592::o;1279:9238::-;;;-1:-1:-1;;;1279:9238:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;1279:9238:9;;;;;;;;;;-1:-1:-1;;;1279:9238:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;1279:9238:9;;;;;;;;;;-1:-1:-1;;;1279:9238:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;1279:9238:9;;;;;;;9496:340;-1:-1:-1;;;;;1279:9238:9;;;;9597:19;;1279:9238;;;9675:21;;;1279:9238;;;9797:32;1279:9238;;9614:1;1279:9238;;;;;9614:1;1279:9238;;9614:1;1279:9238;;;;;9614:1;1279:9238;;;;;;;9797:32;9496:340::o;1279:9238::-;;;-1:-1:-1;;;1279:9238:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;1279:9238:9;;;;;;;;;;-1:-1:-1;;;1279:9238:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;1279:9238:9;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"438800","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"2788","approve(address,uint256)":"24387","balanceOf(address)":"2563","decimals()":"262","decreaseAllowance(address,uint256)":"26886","increaseAllowance(address,uint256)":"26785","name()":"infinite","symbol()":"infinite","totalSupply()":"2324","transfer(address,uint256)":"51076","transferFrom(address,address,uint256)":"infinite"},"internal":{"_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The defaut value of {decimals} is 18. To select a different value for {decimals} you should overload it. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The defaut value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overloaded;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        _approve(sender, _msgSender(), currentAllowance - amount);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[sender] = senderBalance - amount;\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _balances[account] = accountBalance - amount;\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1579,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1585,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1587,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1589,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1591,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burn(uint256)":{"details":"Destroys `amount` tokens from the caller. See {ERC20-_burn}."},"burnFrom(address,uint256)":{"details":"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The defaut value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overloaded;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        _approve(sender, _msgSender(), currentAllowance - amount);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[sender] = senderBalance - amount;\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _balances[account] = accountBalance - amount;\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20.sol\\\";\\nimport \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        uint256 currentAllowance = allowance(account, _msgSender());\\n        require(currentAllowance >= amount, \\\"ERC20: burn amount exceeds allowance\\\");\\n        _approve(account, _msgSender(), currentAllowance - amount);\\n        _burn(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0xb8cc16fa5514ccbff1123c566ec0a21682f1ded0ca7e5df719c6bd0b7429390a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1579,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1585,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1587,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1589,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1591,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_string_fromMemory":{"entryPoint":836,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":798,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60806040523462000319576200155d803803806200001d816200031e565b928339810190604081830312620003195780516001600160401b03908181116200031957836200004f91840162000344565b916020938482015183811162000319576200006b920162000344565b825190828211620003035760008054926001958685811c95168015620002f8575b88861014620002e4578190601f9586811162000291575b5088908683116001146200022d57849262000221575b5050600019600383901b1c191690861b1781555b81519384116200020d5784548581811c9116801562000202575b87821014620001ee57838111620001a6575b50859284116001146200014157839495509262000135575b5050600019600383901b1c191690821b1790555b6040516111a69081620003b78239f35b01519050388062000111565b9190601f1984169585845280842093905b8782106200018e5750508385961062000174575b505050811b01905562000125565b015160001960f88460031b161c1916905538808062000166565b80878596829496860151815501950193019062000152565b8582528682208480870160051c820192898810620001e4575b0160051c019086905b828110620001d8575050620000f9565b838155018690620001c8565b92508192620001bf565b634e487b7160e01b82526022600452602482fd5b90607f1690620000e7565b634e487b7160e01b81526041600452602490fd5b015190503880620000b9565b8480528985208994509190601f198416865b8c8282106200027a575050841162000260575b505050811b018155620000cd565b015160001960f88460031b161c1916905538808062000252565b8385015186558c979095019493840193016200023f565b9091508380528884208680850160051c8201928b8610620002da575b918a91869594930160051c01915b828110620002cb575050620000a3565b8681558594508a9101620002bb565b92508192620002ad565b634e487b7160e01b83526022600452602483fd5b94607f16946200008c565b634e487b7160e01b600052604160045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200030357604052565b919080601f84011215620003195782516001600160401b03811162000303576020906200037a601f8201601f191683016200031e565b92818452828287010111620003195760005b818110620003a257508260009394955001015290565b85810183015184820184015282016200038c56fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146100e757806306fdde03146100e2578063081812fc146100dd578063095ea7b3146100d857806323b872dd146100d357806342842e0e146100ce5780636352211e146100c957806370a08231146100c457806395d89b41146100bf578063a22cb465146100ba578063b88d4fde146100b5578063c87b56dd146100b05763e985e9c5146100ab57600080fd5b6108b3565b6107d9565b610751565b610607565b610546565b6104a4565b610486565b61045e565b610435565b610333565b6102d7565b6101cd565b610103565b6001600160e01b03198116036100fe57565b600080fd5b346100fe5760203660031901126100fe576020600435610122816100ec565b63ffffffff60e01b166380ac58cd60e01b8114908115610160575b811561014f575b506040519015158152f35b6301ffc9a760e01b14905038610144565b635b5e139f60e01b8114915061013d565b60005b8381106101845750506000910152565b8181015183820152602001610174565b906020916101ad81518092818552858086019101610171565b601f01601f1916010190565b9060206101ca928181520190610194565b90565b346100fe576000806003193601126102d457604051908080549060019180831c928082169283156102ca575b60209283861085146102b6578588526020880194908115610295575060011461023d575b6102398761022d81890382610713565b604051918291826101b9565b0390f35b6000805294509192917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b838610610284575050509101905061022d82610239388061021d565b805485870152948201948101610268565b60ff191685525050505090151560051b01905061022d82610239388061021d565b634e487b7160e01b82526022600452602482fd5b93607f16936101f9565b80fd5b346100fe5760203660031901126100fe5760206102f5600435610a5e565b6040516001600160a01b039091168152f35b600435906001600160a01b03821682036100fe57565b602435906001600160a01b03821682036100fe57565b346100fe5760403660031901126100fe5761034c610307565b6024356103588161094f565b916001600160a01b0380841690821681146103b15761038a9361038591331490811561038c575b506109f1565b610ec2565b005b6103ab91506103a49061039f3391610904565b610938565b5460ff1690565b3861037f565b60405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608490fd5b60609060031901126100fe576001600160a01b039060043582811681036100fe579160243590811681036100fe579060443590565b346100fe5761038a61044636610400565b916104596104548433610bff565b610ae1565b610d84565b346100fe5761038a61046f36610400565b906040519261047d846106f3565b60008452610b47565b346100fe5760203660031901126100fe5760206102f560043561094f565b346100fe5760203660031901126100fe576001600160a01b036104c5610307565b1680156104ee576000526003602052610239604060002054604051918291829190602083019252565b60405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608490fd5b346100fe576000806003193601126102d4576040519080600190815480831c928082169283156105fd575b60209283861085146102b657858852602088019490811561029557506001146105a4576102398761022d81890382610713565b600160005294509192917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8386106105ec575050509101905061022d82610239388061021d565b8054858701529482019481016105d0565b93607f1693610571565b346100fe5760403660031901126100fe57610620610307565b60243580151581036100fe576001600160a01b0382169133831461069c578161065961066a923360005260056020526040600020610938565b9060ff801983541691151516179055565b604051901515815233907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190602090a3005b60405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606490fd5b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b0382111761070e57604052565b6106dd565b601f909101601f19168101906001600160401b0382119082101761070e57604052565b6001600160401b03811161070e57601f01601f191660200190565b346100fe5760803660031901126100fe5761076a610307565b61077261031d565b606435916001600160401b0383116100fe57366023840112156100fe5782600401359161079e83610736565b926107ac6040519485610713565b80845236602482870101116100fe57602081600092602461038a9801838801378501015260443591610b47565b346100fe5760203660031901126100fe576004356107f681610be2565b15610856576108036109c7565b8051156108445761022d6108309161083661082061023995611096565b60405194859360208501906109da565b906109da565b03601f198101835282610713565b50506102396108516109c7565b61022d565b60405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608490fd5b346100fe5760403660031901126100fe57602060ff6108f86108d3610307565b6108db61031d565b6001600160a01b0390911660009081526005855260409020610938565b54166040519015158152f35b6001600160a01b0316600090815260056020526040902090565b6001600160a01b0316600090815260036020526040902090565b9060018060a01b0316600052602052604060002090565b6000908152600260205260409020546001600160a01b031680156109705790565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608490fd5b604051906109d4826106f3565b60008252565b906109ed60209282815194859201610171565b0190565b156109f857565b60405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b6064820152608490fd5b610a6781610be2565b15610a87576000908152600460205260409020546001600160a01b031690565b60405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608490fd5b15610ae857565b60405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6044820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b6064820152608490fd5b90610b6b939291610b5b6104548433610bff565b610b66838383610d84565b610f7a565b15610b7257565b60405162461bcd60e51b815280610b8b60048201610b8f565b0390fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b6000908152600260205260409020546001600160a01b0316151590565b610c0882610be2565b15610c6d57610c168261094f565b6001600160a01b038281168282168114949091908515610c55575b5050508215610c3f57505090565b60ff92509061039f610c5092610904565b541690565b610c629192939550610a5e565b161491388080610c31565b60405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608490fd5b15610cce57565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b634e487b7160e01b600052601160045260246000fd5b600019810191908211610d4457565b610d1f565b9060018201809211610d4457565b6030019081603011610d4457565b80546001600160a01b0319166001600160a01b03909216919091179055565b90610d8e8361094f565b6001600160a01b038381169290918216839003610e2957610dc8610e0292821694610dba861515610cc7565b610dc387610e80565b61091e565b610dd28154610d35565b9055610ddd8161091e565b610de78154610d49565b9055610dfd856000526002602052604060002090565b610d65565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608490fd5b600081815260046020526040812080546001600160a01b03191690556001600160a01b03610ead8361094f565b166000805160206111518339815191528280a4565b816000526004602052610ed9816040600020610d65565b6001600160a01b0380610eeb8461094f565b16911690600080516020611151833981519152600080a4565b908160209103126100fe57516101ca816100ec565b6001600160a01b0391821681529116602082015260408101919091526080606082018190526101ca92910190610194565b3d15610f75573d90610f5b82610736565b91610f696040519384610713565b82523d6000602084013e565b606090565b92909190823b1561103457610fad926020926000604051809681958294630a85bd0160e11b9a8b85523360048601610f19565b03926001600160a01b03165af160009181611004575b50610ff657610fd0610f4a565b80519081610ff15760405162461bcd60e51b815280610b8b60048201610b8f565b602001fd5b6001600160e01b0319161490565b61102691925060203d811161102d575b61101e8183610713565b810190610f04565b9038610fc3565b503d611014565b50505050600190565b9061104782610736565b6110546040519182610713565b8281528092611065601f1991610736565b0190602036910137565b908151811015611080570160200190565b634e487b7160e01b600052603260045260246000fd5b8015611122576000818181805b61110657506110b18161103d565b935b6110bd5750505090565b6110c690610d35565b90600a906110f16110e16110db848406610d57565b60ff1690565b60f81b6001600160f81b03191690565b841a6110fd848761106f565b530490816110b3565b91506000198114610d44576001600a91019104808492916110a3565b50604080519081016001600160401b0381118282101761070e5760405260018152600360fc1b60208201529056fe8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a2646970667358221220e3a88addaddbeb8ef1c872d09eff84ad06032c0257cb6e5911d425bc9981200264736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x319 JUMPI PUSH3 0x155D DUP1 CODESIZE SUB DUP1 PUSH3 0x1D DUP2 PUSH3 0x31E JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x40 DUP2 DUP4 SUB SLT PUSH3 0x319 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 GT PUSH3 0x319 JUMPI DUP4 PUSH3 0x4F SWAP2 DUP5 ADD PUSH3 0x344 JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP4 DUP5 DUP3 ADD MLOAD DUP4 DUP2 GT PUSH3 0x319 JUMPI PUSH3 0x6B SWAP3 ADD PUSH3 0x344 JUMP JUMPDEST DUP3 MLOAD SWAP1 DUP3 DUP3 GT PUSH3 0x303 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP3 PUSH1 0x1 SWAP6 DUP7 DUP6 DUP2 SHR SWAP6 AND DUP1 ISZERO PUSH3 0x2F8 JUMPI JUMPDEST DUP9 DUP7 LT EQ PUSH3 0x2E4 JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP6 DUP7 DUP2 GT PUSH3 0x291 JUMPI JUMPDEST POP DUP9 SWAP1 DUP7 DUP4 GT PUSH1 0x1 EQ PUSH3 0x22D JUMPI DUP5 SWAP3 PUSH3 0x221 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP7 SHL OR DUP2 SSTORE JUMPDEST DUP2 MLOAD SWAP4 DUP5 GT PUSH3 0x20D JUMPI DUP5 SLOAD DUP6 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x202 JUMPI JUMPDEST DUP8 DUP3 LT EQ PUSH3 0x1EE JUMPI DUP4 DUP2 GT PUSH3 0x1A6 JUMPI JUMPDEST POP DUP6 SWAP3 DUP5 GT PUSH1 0x1 EQ PUSH3 0x141 JUMPI DUP4 SWAP5 SWAP6 POP SWAP3 PUSH3 0x135 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP3 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A6 SWAP1 DUP2 PUSH3 0x3B7 DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x111 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND SWAP6 DUP6 DUP5 MSTORE DUP1 DUP5 KECCAK256 SWAP4 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x18E JUMPI POP POP DUP4 DUP6 SWAP7 LT PUSH3 0x174 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x125 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x166 JUMP JUMPDEST DUP1 DUP8 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x152 JUMP JUMPDEST DUP6 DUP3 MSTORE DUP7 DUP3 KECCAK256 DUP5 DUP1 DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP10 DUP9 LT PUSH3 0x1E4 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP7 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x1D8 JUMPI POP POP PUSH3 0xF9 JUMP JUMPDEST DUP4 DUP2 SSTORE ADD DUP7 SWAP1 PUSH3 0x1C8 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x1BF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xE7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xB9 JUMP JUMPDEST DUP5 DUP1 MSTORE DUP10 DUP6 KECCAK256 DUP10 SWAP5 POP SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP7 JUMPDEST DUP13 DUP3 DUP3 LT PUSH3 0x27A JUMPI POP POP DUP5 GT PUSH3 0x260 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH3 0xCD JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x252 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP13 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x23F JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 DUP1 MSTORE DUP9 DUP5 KECCAK256 DUP7 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP12 DUP7 LT PUSH3 0x2DA JUMPI JUMPDEST SWAP2 DUP11 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x2CB JUMPI POP POP PUSH3 0xA3 JUMP JUMPDEST DUP7 DUP2 SSTORE DUP6 SWAP5 POP DUP11 SWAP2 ADD PUSH3 0x2BB JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x2AD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP5 PUSH1 0x7F AND SWAP5 PUSH3 0x8C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x303 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0x319 JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x303 JUMPI PUSH1 0x20 SWAP1 PUSH3 0x37A PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD PUSH3 0x31E JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH3 0x319 JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x3A2 JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0x38C JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0xB0 JUMPI PUSH4 0xE985E9C5 EQ PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST PUSH2 0x607 JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0x486 JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH2 0x435 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x103 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0xFE JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFE JUMPI PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x122 DUP2 PUSH2 0xEC JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x160 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x14F JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x144 JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x13D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x184 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x174 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1AD DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x171 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x1CA SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x194 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D4 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 DUP1 SLOAD SWAP1 PUSH1 0x1 SWAP2 DUP1 DUP4 SHR SWAP3 DUP1 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x2CA JUMPI JUMPDEST PUSH1 0x20 SWAP3 DUP4 DUP7 LT DUP6 EQ PUSH2 0x2B6 JUMPI DUP6 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 SWAP1 DUP2 ISZERO PUSH2 0x295 JUMPI POP PUSH1 0x1 EQ PUSH2 0x23D JUMPI JUMPDEST PUSH2 0x239 DUP8 PUSH2 0x22D DUP2 DUP10 SUB DUP3 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1B9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 MSTORE SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP4 DUP7 LT PUSH2 0x284 JUMPI POP POP POP SWAP2 ADD SWAP1 POP PUSH2 0x22D DUP3 PUSH2 0x239 CODESIZE DUP1 PUSH2 0x21D JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD MSTORE SWAP5 DUP3 ADD SWAP5 DUP2 ADD PUSH2 0x268 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 MSTORE POP POP POP POP SWAP1 ISZERO ISZERO PUSH1 0x5 SHL ADD SWAP1 POP PUSH2 0x22D DUP3 PUSH2 0x239 CODESIZE DUP1 PUSH2 0x21D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x1F9 JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFE JUMPI PUSH1 0x20 PUSH2 0x2F5 PUSH1 0x4 CALLDATALOAD PUSH2 0xA5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xFE JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xFE JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFE JUMPI PUSH2 0x34C PUSH2 0x307 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x358 DUP2 PUSH2 0x94F JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP1 DUP3 AND DUP2 EQ PUSH2 0x3B1 JUMPI PUSH2 0x38A SWAP4 PUSH2 0x385 SWAP2 CALLER EQ SWAP1 DUP2 ISZERO PUSH2 0x38C JUMPI JUMPDEST POP PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0xEC2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AB SWAP2 POP PUSH2 0x3A4 SWAP1 PUSH2 0x39F CALLER SWAP2 PUSH2 0x904 JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CODESIZE PUSH2 0x37F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xFE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0xFE JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0xFE JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH2 0x38A PUSH2 0x446 CALLDATASIZE PUSH2 0x400 JUMP JUMPDEST SWAP2 PUSH2 0x459 PUSH2 0x454 DUP5 CALLER PUSH2 0xBFF JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0xD84 JUMP JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH2 0x38A PUSH2 0x46F CALLDATASIZE PUSH2 0x400 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x47D DUP5 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0xB47 JUMP JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFE JUMPI PUSH1 0x20 PUSH2 0x2F5 PUSH1 0x4 CALLDATALOAD PUSH2 0x94F JUMP JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x4C5 PUSH2 0x307 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x239 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP3 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D4 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x1 SWAP1 DUP2 SLOAD DUP1 DUP4 SHR SWAP3 DUP1 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x5FD JUMPI JUMPDEST PUSH1 0x20 SWAP3 DUP4 DUP7 LT DUP6 EQ PUSH2 0x2B6 JUMPI DUP6 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 SWAP1 DUP2 ISZERO PUSH2 0x295 JUMPI POP PUSH1 0x1 EQ PUSH2 0x5A4 JUMPI PUSH2 0x239 DUP8 PUSH2 0x22D DUP2 DUP10 SUB DUP3 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 MSTORE SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 JUMPDEST DUP4 DUP7 LT PUSH2 0x5EC JUMPI POP POP POP SWAP2 ADD SWAP1 POP PUSH2 0x22D DUP3 PUSH2 0x239 CODESIZE DUP1 PUSH2 0x21D JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD MSTORE SWAP5 DUP3 ADD SWAP5 DUP2 ADD PUSH2 0x5D0 JUMP JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x571 JUMP JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFE JUMPI PUSH2 0x620 PUSH2 0x307 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xFE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 CALLER DUP4 EQ PUSH2 0x69C JUMPI DUP2 PUSH2 0x659 PUSH2 0x66A SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x938 JUMP JUMPDEST SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE CALLER SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP1 PUSH1 0x20 SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x22A9219B99189D1030B8383937BB32903A379031B0B63632B9 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x70E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x70E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x70E JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFE JUMPI PUSH2 0x76A PUSH2 0x307 JUMP JUMPDEST PUSH2 0x772 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0xFE JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0xFE JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0x79E DUP4 PUSH2 0x736 JUMP JUMPDEST SWAP3 PUSH2 0x7AC PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x713 JUMP JUMPDEST DUP1 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP8 ADD ADD GT PUSH2 0xFE JUMPI PUSH1 0x20 DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH2 0x38A SWAP9 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0xB47 JUMP JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFE JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x7F6 DUP2 PUSH2 0xBE2 JUMP JUMPDEST ISZERO PUSH2 0x856 JUMPI PUSH2 0x803 PUSH2 0x9C7 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x844 JUMPI PUSH2 0x22D PUSH2 0x830 SWAP2 PUSH2 0x836 PUSH2 0x820 PUSH2 0x239 SWAP6 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x9DA JUMP JUMPDEST SWAP1 PUSH2 0x9DA JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x713 JUMP JUMPDEST POP POP PUSH2 0x239 PUSH2 0x851 PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFE JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x8F8 PUSH2 0x8D3 PUSH2 0x307 JUMP JUMPDEST PUSH2 0x8DB PUSH2 0x31D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x938 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x970 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x9D4 DUP3 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x9ED PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x171 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x9F8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1B995C881B9BDC88185C1C1C9BDD995908199BDC88185B1B PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0xA67 DUP2 PUSH2 0xBE2 JUMP JUMPDEST ISZERO PUSH2 0xA87 JUMPI PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xAE8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0xB6B SWAP4 SWAP3 SWAP2 PUSH2 0xB5B PUSH2 0x454 DUP5 CALLER PUSH2 0xBFF JUMP JUMPDEST PUSH2 0xB66 DUP4 DUP4 DUP4 PUSH2 0xD84 JUMP JUMPDEST PUSH2 0xF7A JUMP JUMPDEST ISZERO PUSH2 0xB72 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xB8B PUSH1 0x4 DUP3 ADD PUSH2 0xB8F JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xC08 DUP3 PUSH2 0xBE2 JUMP JUMPDEST ISZERO PUSH2 0xC6D JUMPI PUSH2 0xC16 DUP3 PUSH2 0x94F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND DUP3 DUP3 AND DUP2 EQ SWAP5 SWAP1 SWAP2 SWAP1 DUP6 ISZERO PUSH2 0xC55 JUMPI JUMPDEST POP POP POP DUP3 ISZERO PUSH2 0xC3F JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP3 POP SWAP1 PUSH2 0x39F PUSH2 0xC50 SWAP3 PUSH2 0x904 JUMP JUMPDEST SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0xC62 SWAP2 SWAP3 SWAP4 SWAP6 POP PUSH2 0xA5E JUMP JUMPDEST AND EQ SWAP2 CODESIZE DUP1 DUP1 PUSH2 0xC31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xCCE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0xD44 JUMPI JUMP JUMPDEST PUSH2 0xD1F JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xD44 JUMPI JUMP JUMPDEST PUSH1 0x30 ADD SWAP1 DUP2 PUSH1 0x30 GT PUSH2 0xD44 JUMPI JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0xD8E DUP4 PUSH2 0x94F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP3 SWAP1 SWAP2 DUP3 AND DUP4 SWAP1 SUB PUSH2 0xE29 JUMPI PUSH2 0xDC8 PUSH2 0xE02 SWAP3 DUP3 AND SWAP5 PUSH2 0xDBA DUP7 ISZERO ISZERO PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0xDC3 DUP8 PUSH2 0xE80 JUMP JUMPDEST PUSH2 0x91E JUMP JUMPDEST PUSH2 0xDD2 DUP2 SLOAD PUSH2 0xD35 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xDDD DUP2 PUSH2 0x91E JUMP JUMPDEST PUSH2 0xDE7 DUP2 SLOAD PUSH2 0xD49 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xDFD DUP6 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xD65 JUMP JUMPDEST PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xEAD DUP4 PUSH2 0x94F JUMP JUMPDEST AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1151 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP1 LOG4 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0xED9 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0xEEB DUP5 PUSH2 0x94F JUMP JUMPDEST AND SWAP2 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1151 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 LOG4 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xFE JUMPI MLOAD PUSH2 0x1CA DUP2 PUSH2 0xEC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x1CA SWAP3 SWAP2 ADD SWAP1 PUSH2 0x194 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xF75 JUMPI RETURNDATASIZE SWAP1 PUSH2 0xF5B DUP3 PUSH2 0x736 JUMP JUMPDEST SWAP2 PUSH2 0xF69 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x713 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP1 DUP3 EXTCODESIZE ISZERO PUSH2 0x1034 JUMPI PUSH2 0xFAD SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP11 DUP12 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD PUSH2 0xF19 JUMP JUMPDEST SUB SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1004 JUMPI JUMPDEST POP PUSH2 0xFF6 JUMPI PUSH2 0xFD0 PUSH2 0xF4A JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0xFF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xB8B PUSH1 0x4 DUP3 ADD PUSH2 0xB8F JUMP JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ SWAP1 JUMP JUMPDEST PUSH2 0x1026 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x102D JUMPI JUMPDEST PUSH2 0x101E DUP2 DUP4 PUSH2 0x713 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xF04 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xFC3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1014 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1047 DUP3 PUSH2 0x736 JUMP JUMPDEST PUSH2 0x1054 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x713 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1065 PUSH1 0x1F NOT SWAP2 PUSH2 0x736 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1080 JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x1122 JUMPI PUSH1 0x0 DUP2 DUP2 DUP2 DUP1 JUMPDEST PUSH2 0x1106 JUMPI POP PUSH2 0x10B1 DUP2 PUSH2 0x103D JUMP JUMPDEST SWAP4 JUMPDEST PUSH2 0x10BD JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x10C6 SWAP1 PUSH2 0xD35 JUMP JUMPDEST SWAP1 PUSH1 0xA SWAP1 PUSH2 0x10F1 PUSH2 0x10E1 PUSH2 0x10DB DUP5 DUP5 MOD PUSH2 0xD57 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST DUP5 BYTE PUSH2 0x10FD DUP5 DUP8 PUSH2 0x106F JUMP JUMPDEST MSTORE8 DIV SWAP1 DUP2 PUSH2 0x10B3 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xD44 JUMPI PUSH1 0x1 PUSH1 0xA SWAP2 ADD SWAP2 DIV DUP1 DUP5 SWAP3 SWAP2 PUSH2 0x10A3 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x70E JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP INVALID DUP13 JUMPDEST 0xE1 0xE5 0xEB 0xEC PUSH30 0x5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925A264697066 PUSH20 0x58221220E3A88ADDADDBEB8EF1C872D09EFF84AD MOD SUB 0x2C MUL JUMPI 0xCB PUSH15 0x5911D425BC9981200264736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"599:12437:12:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;599:12437:12;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;599:12437:12;;;;;;;;;;;;;;;-1:-1:-1;599:12437:12;;;;;;;;;;;;;;;-1:-1:-1;599:12437:12;;;;;;;;;;;;;;;-1:-1:-1;;;;599:12437:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;599:12437:12;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;599:12437:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;;;;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;;-1:-1:-1;599:12437:12;;;;;;;;;;;;;-1:-1:-1;599:12437:12;;-1:-1:-1;;599:12437:12;;;;;;;;;;;;;-1:-1:-1;599:12437:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;599:12437:12;;;;;;;;;;;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;599:12437:12;;;;;-1:-1:-1;599:12437:12;;-1:-1:-1;599:12437:12;;;;;;;;;-1:-1:-1;;599:12437:12;;;-1:-1:-1;;;;;599:12437:12;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;599:12437:12;;;;;;;;;;-1:-1:-1;;599:12437:12;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;599:12437:12;;;;;;;;-1:-1:-1;599:12437:12;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":797,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_5273":{"entryPoint":775,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":1024,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_bytes4_fromMemory":{"entryPoint":3844,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_address_uint256_bytes":{"entryPoint":3865,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":441,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":2522,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_to_string":{"entryPoint":404,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral_1e76":{"entryPoint":2959,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_bytes":{"entryPoint":4157,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":2503,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":1846,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_string_storage_5281":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":3415,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256_5301":{"entryPoint":3401,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_uint256":{"entryPoint":3381,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint8_to_bytes1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":369,"id":null,"parameterSlots":3,"returnSlots":0},"external_fun_approve":{"entryPoint":819,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOf":{"entryPoint":1188,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getApproved":{"entryPoint":727,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isApprovedForAll":{"entryPoint":2227,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_name":{"entryPoint":461,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_ownerOf":{"entryPoint":1158,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom":{"entryPoint":1118,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom_2617":{"entryPoint":1873,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setApprovalForAll":{"entryPoint":1543,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_supportsInterface":{"entryPoint":259,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_symbol":{"entryPoint":1350,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_tokenURI":{"entryPoint":2009,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferFrom":{"entryPoint":1077,"id":null,"parameterSlots":0,"returnSlots":0},"extract_from_storage_value_offsett_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":3914,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":1811,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_7739":{"entryPoint":1779,"id":null,"parameterSlots":1,"returnSlots":0},"fun_approve":{"entryPoint":3778,"id":2951,"parameterSlots":2,"returnSlots":0},"fun_approve_5297":{"entryPoint":3712,"id":2951,"parameterSlots":1,"returnSlots":0},"fun_checkOnERC721Received":{"entryPoint":3962,"id":3015,"parameterSlots":4,"returnSlots":1},"fun_exists":{"entryPoint":3042,"id":2664,"parameterSlots":1,"returnSlots":1},"fun_getApproved":{"entryPoint":2654,"id":2489,"parameterSlots":1,"returnSlots":1},"fun_isApprovedOrOwner":{"entryPoint":3071,"id":2706,"parameterSlots":2,"returnSlots":1},"fun_ownerOf":{"entryPoint":2383,"id":2353,"parameterSlots":1,"returnSlots":1},"fun_safeTransferFrom":{"entryPoint":2887,"id":2617,"parameterSlots":4,"returnSlots":0},"fun_toString":{"entryPoint":4246,"id":4119,"parameterSlots":1,"returnSlots":1},"fun_transfer":{"entryPoint":3460,"id":2927,"parameterSlots":3,"returnSlots":0},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":2360,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_5275":{"entryPoint":2308,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_5298":{"entryPoint":2334,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_address_of_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_bytes":{"entryPoint":4207,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3359,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1757,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_split_offset_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_455f":{"entryPoint":3271,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_6d83":{"entryPoint":2545,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c868":{"entryPoint":2785,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":3429,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":236,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0xB0 JUMPI PUSH4 0xE985E9C5 EQ PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST PUSH2 0x607 JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0x486 JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH2 0x435 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x103 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0xFE JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFE JUMPI PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x122 DUP2 PUSH2 0xEC JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x160 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x14F JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x144 JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x13D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x184 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x174 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1AD DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x171 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x1CA SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x194 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D4 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 DUP1 SLOAD SWAP1 PUSH1 0x1 SWAP2 DUP1 DUP4 SHR SWAP3 DUP1 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x2CA JUMPI JUMPDEST PUSH1 0x20 SWAP3 DUP4 DUP7 LT DUP6 EQ PUSH2 0x2B6 JUMPI DUP6 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 SWAP1 DUP2 ISZERO PUSH2 0x295 JUMPI POP PUSH1 0x1 EQ PUSH2 0x23D JUMPI JUMPDEST PUSH2 0x239 DUP8 PUSH2 0x22D DUP2 DUP10 SUB DUP3 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1B9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 MSTORE SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP4 DUP7 LT PUSH2 0x284 JUMPI POP POP POP SWAP2 ADD SWAP1 POP PUSH2 0x22D DUP3 PUSH2 0x239 CODESIZE DUP1 PUSH2 0x21D JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD MSTORE SWAP5 DUP3 ADD SWAP5 DUP2 ADD PUSH2 0x268 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 MSTORE POP POP POP POP SWAP1 ISZERO ISZERO PUSH1 0x5 SHL ADD SWAP1 POP PUSH2 0x22D DUP3 PUSH2 0x239 CODESIZE DUP1 PUSH2 0x21D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x1F9 JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFE JUMPI PUSH1 0x20 PUSH2 0x2F5 PUSH1 0x4 CALLDATALOAD PUSH2 0xA5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xFE JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xFE JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFE JUMPI PUSH2 0x34C PUSH2 0x307 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x358 DUP2 PUSH2 0x94F JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP1 DUP3 AND DUP2 EQ PUSH2 0x3B1 JUMPI PUSH2 0x38A SWAP4 PUSH2 0x385 SWAP2 CALLER EQ SWAP1 DUP2 ISZERO PUSH2 0x38C JUMPI JUMPDEST POP PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0xEC2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AB SWAP2 POP PUSH2 0x3A4 SWAP1 PUSH2 0x39F CALLER SWAP2 PUSH2 0x904 JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CODESIZE PUSH2 0x37F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xFE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0xFE JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0xFE JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH2 0x38A PUSH2 0x446 CALLDATASIZE PUSH2 0x400 JUMP JUMPDEST SWAP2 PUSH2 0x459 PUSH2 0x454 DUP5 CALLER PUSH2 0xBFF JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0xD84 JUMP JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH2 0x38A PUSH2 0x46F CALLDATASIZE PUSH2 0x400 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x47D DUP5 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0xB47 JUMP JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFE JUMPI PUSH1 0x20 PUSH2 0x2F5 PUSH1 0x4 CALLDATALOAD PUSH2 0x94F JUMP JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x4C5 PUSH2 0x307 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x239 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP3 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2D4 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x1 SWAP1 DUP2 SLOAD DUP1 DUP4 SHR SWAP3 DUP1 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x5FD JUMPI JUMPDEST PUSH1 0x20 SWAP3 DUP4 DUP7 LT DUP6 EQ PUSH2 0x2B6 JUMPI DUP6 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 SWAP1 DUP2 ISZERO PUSH2 0x295 JUMPI POP PUSH1 0x1 EQ PUSH2 0x5A4 JUMPI PUSH2 0x239 DUP8 PUSH2 0x22D DUP2 DUP10 SUB DUP3 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 MSTORE SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 JUMPDEST DUP4 DUP7 LT PUSH2 0x5EC JUMPI POP POP POP SWAP2 ADD SWAP1 POP PUSH2 0x22D DUP3 PUSH2 0x239 CODESIZE DUP1 PUSH2 0x21D JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD MSTORE SWAP5 DUP3 ADD SWAP5 DUP2 ADD PUSH2 0x5D0 JUMP JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x571 JUMP JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFE JUMPI PUSH2 0x620 PUSH2 0x307 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xFE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 CALLER DUP4 EQ PUSH2 0x69C JUMPI DUP2 PUSH2 0x659 PUSH2 0x66A SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x938 JUMP JUMPDEST SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE CALLER SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP1 PUSH1 0x20 SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x22A9219B99189D1030B8383937BB32903A379031B0B63632B9 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x70E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x70E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x70E JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFE JUMPI PUSH2 0x76A PUSH2 0x307 JUMP JUMPDEST PUSH2 0x772 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0xFE JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0xFE JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0x79E DUP4 PUSH2 0x736 JUMP JUMPDEST SWAP3 PUSH2 0x7AC PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x713 JUMP JUMPDEST DUP1 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP8 ADD ADD GT PUSH2 0xFE JUMPI PUSH1 0x20 DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH2 0x38A SWAP9 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0xB47 JUMP JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFE JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x7F6 DUP2 PUSH2 0xBE2 JUMP JUMPDEST ISZERO PUSH2 0x856 JUMPI PUSH2 0x803 PUSH2 0x9C7 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x844 JUMPI PUSH2 0x22D PUSH2 0x830 SWAP2 PUSH2 0x836 PUSH2 0x820 PUSH2 0x239 SWAP6 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x9DA JUMP JUMPDEST SWAP1 PUSH2 0x9DA JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x713 JUMP JUMPDEST POP POP PUSH2 0x239 PUSH2 0x851 PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xFE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xFE JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x8F8 PUSH2 0x8D3 PUSH2 0x307 JUMP JUMPDEST PUSH2 0x8DB PUSH2 0x31D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x938 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x970 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x9D4 DUP3 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x9ED PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x171 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x9F8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1B995C881B9BDC88185C1C1C9BDD995908199BDC88185B1B PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0xA67 DUP2 PUSH2 0xBE2 JUMP JUMPDEST ISZERO PUSH2 0xA87 JUMPI PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xAE8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0xB6B SWAP4 SWAP3 SWAP2 PUSH2 0xB5B PUSH2 0x454 DUP5 CALLER PUSH2 0xBFF JUMP JUMPDEST PUSH2 0xB66 DUP4 DUP4 DUP4 PUSH2 0xD84 JUMP JUMPDEST PUSH2 0xF7A JUMP JUMPDEST ISZERO PUSH2 0xB72 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xB8B PUSH1 0x4 DUP3 ADD PUSH2 0xB8F JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xC08 DUP3 PUSH2 0xBE2 JUMP JUMPDEST ISZERO PUSH2 0xC6D JUMPI PUSH2 0xC16 DUP3 PUSH2 0x94F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND DUP3 DUP3 AND DUP2 EQ SWAP5 SWAP1 SWAP2 SWAP1 DUP6 ISZERO PUSH2 0xC55 JUMPI JUMPDEST POP POP POP DUP3 ISZERO PUSH2 0xC3F JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP3 POP SWAP1 PUSH2 0x39F PUSH2 0xC50 SWAP3 PUSH2 0x904 JUMP JUMPDEST SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0xC62 SWAP2 SWAP3 SWAP4 SWAP6 POP PUSH2 0xA5E JUMP JUMPDEST AND EQ SWAP2 CODESIZE DUP1 DUP1 PUSH2 0xC31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xCCE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0xD44 JUMPI JUMP JUMPDEST PUSH2 0xD1F JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xD44 JUMPI JUMP JUMPDEST PUSH1 0x30 ADD SWAP1 DUP2 PUSH1 0x30 GT PUSH2 0xD44 JUMPI JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0xD8E DUP4 PUSH2 0x94F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP3 SWAP1 SWAP2 DUP3 AND DUP4 SWAP1 SUB PUSH2 0xE29 JUMPI PUSH2 0xDC8 PUSH2 0xE02 SWAP3 DUP3 AND SWAP5 PUSH2 0xDBA DUP7 ISZERO ISZERO PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0xDC3 DUP8 PUSH2 0xE80 JUMP JUMPDEST PUSH2 0x91E JUMP JUMPDEST PUSH2 0xDD2 DUP2 SLOAD PUSH2 0xD35 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xDDD DUP2 PUSH2 0x91E JUMP JUMPDEST PUSH2 0xDE7 DUP2 SLOAD PUSH2 0xD49 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xDFD DUP6 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xD65 JUMP JUMPDEST PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xEAD DUP4 PUSH2 0x94F JUMP JUMPDEST AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1151 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP1 LOG4 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0xED9 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0xEEB DUP5 PUSH2 0x94F JUMP JUMPDEST AND SWAP2 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1151 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 LOG4 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xFE JUMPI MLOAD PUSH2 0x1CA DUP2 PUSH2 0xEC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x1CA SWAP3 SWAP2 ADD SWAP1 PUSH2 0x194 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xF75 JUMPI RETURNDATASIZE SWAP1 PUSH2 0xF5B DUP3 PUSH2 0x736 JUMP JUMPDEST SWAP2 PUSH2 0xF69 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x713 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP1 DUP3 EXTCODESIZE ISZERO PUSH2 0x1034 JUMPI PUSH2 0xFAD SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP11 DUP12 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD PUSH2 0xF19 JUMP JUMPDEST SUB SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1004 JUMPI JUMPDEST POP PUSH2 0xFF6 JUMPI PUSH2 0xFD0 PUSH2 0xF4A JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0xFF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xB8B PUSH1 0x4 DUP3 ADD PUSH2 0xB8F JUMP JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ SWAP1 JUMP JUMPDEST PUSH2 0x1026 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x102D JUMPI JUMPDEST PUSH2 0x101E DUP2 DUP4 PUSH2 0x713 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xF04 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xFC3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1014 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1047 DUP3 PUSH2 0x736 JUMP JUMPDEST PUSH2 0x1054 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x713 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1065 PUSH1 0x1F NOT SWAP2 PUSH2 0x736 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1080 JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x1122 JUMPI PUSH1 0x0 DUP2 DUP2 DUP2 DUP1 JUMPDEST PUSH2 0x1106 JUMPI POP PUSH2 0x10B1 DUP2 PUSH2 0x103D JUMP JUMPDEST SWAP4 JUMPDEST PUSH2 0x10BD JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x10C6 SWAP1 PUSH2 0xD35 JUMP JUMPDEST SWAP1 PUSH1 0xA SWAP1 PUSH2 0x10F1 PUSH2 0x10E1 PUSH2 0x10DB DUP5 DUP5 MOD PUSH2 0xD57 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST DUP5 BYTE PUSH2 0x10FD DUP5 DUP8 PUSH2 0x106F JUMP JUMPDEST MSTORE8 DIV SWAP1 DUP2 PUSH2 0x10B3 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xD44 JUMPI PUSH1 0x1 PUSH1 0xA SWAP2 ADD SWAP2 DIV DUP1 DUP5 SWAP3 SWAP2 PUSH2 0x10A3 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x70E JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP INVALID DUP13 JUMPDEST 0xE1 0xE5 0xEB 0xEC PUSH30 0x5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925A264697066 PUSH20 0x58221220E3A88ADDADDBEB8EF1C872D09EFF84AD MOD SUB 0x2C MUL JUMPI 0xCB PUSH15 0x5911D425BC9981200264736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"599:12437:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;-1:-1:-1;;;;;;599:12437:12;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;599:12437:12;;;;;;;;;;:::i;:::-;;;;;1687:25;;;1672:40;;:104;;;;;599:12437;1672:156;;;;599:12437;;;;;;;;;;1672:156;-1:-1:-1;;;871:40:23;;-1:-1:-1;1672:156:12;;;:104;-1:-1:-1;;;1728:48:12;;;-1:-1:-1;1672:104:12;;599:12437;;;;;;;;-1:-1:-1;;599:12437:12;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;599:12437:12;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;599:12437:12;;;;;;;;;;-1:-1:-1;;;599:12437:12;;;-1:-1:-1;599:12437:12;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;599:12437:12;;;-1:-1:-1;;;;599:12437:12;;;;;;;-1:-1:-1;599:12437:12;;;;;;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;599:12437:12;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;599:12437:12;;;;;;;;;;-1:-1:-1;;;;;599:12437:12;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;599:12437:12;;;;;;:::o;:::-;;;;;;-1:-1:-1;;599:12437:12;;;;;;:::i;:::-;;;3512:23;;;:::i;:::-;599:12437;-1:-1:-1;;;;;599:12437:12;;;;;;3553:11;;599:12437;;3796:7;665:10:21;3613:159:12;665:10:21;;3621:21:12;:69;;;;;599:12437;3613:159;;:::i;:::-;3796:7;:::i;:::-;599:12437;3621:69;4632:35;665:10:21;;4632:35:12;665:10:21;4632:25:12;665:10:21;4632:25:12;;:::i;:::-;:35;:::i;:::-;599:12437;;;;;4632:35;3621:69;;;599:12437;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;;;;;;-1:-1:-1;;;;;599:12437:12;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;5021:7;599:12437;;;:::i;:::-;665:10:21;4887:103:12;4895:41;665:10:21;;4895:41:12;:::i;:::-;4887:103;:::i;:::-;5021:7;:::i;599:12437::-;;;;5205:39;599:12437;;;:::i;:::-;;;;;;;;:::i;:::-;;;;5205:39;:::i;599:12437::-;;;;;;-1:-1:-1;;599:12437:12;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;599:12437:12;;;;-1:-1:-1;;;;;599:12437:12;;:::i;:::-;;1993:19;;599:12437;;-1:-1:-1;599:12437:12;;;;;;-1:-1:-1;599:12437:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;;;;;;;;;;;;;;2703:7;599:12437;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2703:7;599:12437;;;-1:-1:-1;599:12437:12;;;;;;;;;;-1:-1:-1;;;599:12437:12;;;-1:-1:-1;599:12437:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;599:12437:12;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;599:12437:12;;;665:10:21;4258:24:12;;599:12437;;665:10:21;4323:42:12;:53;665:10:21;;-1:-1:-1;599:12437:12;4323:18;599:12437;;;-1:-1:-1;599:12437:12;4323:42;:::i;:::-;599:12437;;;;;;;;;;;;;;;4323:53;599:12437;;;;;;;665:10:21;;4391:48:12;;599:12437;;4391:48;599:12437;;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;599:12437:12;;;;;;;:::o;:::-;;:::i;:::-;;;;;-1:-1:-1;;599:12437:12;;;;-1:-1:-1;;;;;599:12437:12;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;599:12437:12;;;;;;-1:-1:-1;;599:12437:12;;;;:::o;:::-;;;;;;-1:-1:-1;;599:12437:12;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;599:12437:12;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;599:12437:12;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;599:12437:12;;;;;;2889:16;;;:::i;:::-;599:12437;;;;;:::i;:::-;;;3019:25;:110;;3066:45;599:12437;3092:18;599:12437;3092:18;599:12437;3092:18;;:::i;:::-;599:12437;;3066:45;;;599:12437;3066:45;;599:12437;;:::i;:::-;;;:::i;:::-;3066:45;599:12437;;3066:45;;;;;;:::i;3019:110::-;599:12437;;;;;:::i;:::-;3019:110;;599:12437;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;;;-1:-1:-1;;599:12437:12;;;;;;4632:35;599:12437;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;599:12437:12;;;-1:-1:-1;599:12437:12;;;4632:18;599:12437;;;;;4632:35;:::i;:::-;599:12437;;;;;;;;;;;-1:-1:-1;;;;;599:12437:12;;;;;4632:18;599:12437;;;;;;:::o;:::-;-1:-1:-1;;;;;599:12437:12;;;;;10557:9;599:12437;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;2156:235::-;-1:-1:-1;599:12437:12;;;2263:7;599:12437;;;;;;-1:-1:-1;;;;;599:12437:12;2297:19;;599:12437;;2156:235;:::o;599:12437::-;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;599:12437:12;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;599:12437:12;;;;;;;3872:217;3975:16;;;:::i;:::-;599:12437;;;-1:-1:-1;599:12437:12;;;4058:15;599:12437;;;;;;-1:-1:-1;;;;;599:12437:12;;3872:217::o;599:12437::-;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;599:12437:12;;;;;;;5317:282;;6620:48;5317:282;;;5440:103;5448:41;665:10:21;;5448:41:12;:::i;5440:103::-;6594:7;;;;;:::i;:::-;6620:48;:::i;:::-;599:12437;;;5317:282::o;599:12437::-;;;-1:-1:-1;;;599:12437:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;599:12437:12;;;;;;:::o;7033:125::-;-1:-1:-1;599:12437:12;;;7121:7;599:12437;;;;;;-1:-1:-1;;;;;599:12437:12;7121:30;;;7033:125::o;7316:351::-;7433:16;;;:::i;:::-;599:12437;;;7524:23;;;:::i;:::-;-1:-1:-1;;;;;599:12437:12;;;;;;7565:16;;;599:12437;;;7565:51;;;;7316:351;7565:94;;;;;;;7557:103;;7316:351;:::o;7565:94::-;599:12437;4632:25;;;;:35;:25;;:::i;:35::-;599:12437;;7316:351;:::o;7565:51::-;7585:20;;;;;;;:::i;:::-;599:12437;7585:31;7565:51;;;;;;599:12437;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;599:12437:12;;;;;;;;:::o;:::-;;:::i;:::-;;10576:1;599:12437;;;;;;;:::o;:::-;875:2:22;599:12437:12;;;875:2:22;599:12437:12;;;:::o;:::-;;;-1:-1:-1;;;;;;599:12437:12;-1:-1:-1;;;;;599:12437:12;;;;;;;;;:::o;10156:530::-;;10253:23;;;:::i;:::-;-1:-1:-1;;;;;599:12437:12;;;;;;;;10253:31;;;599:12437;;10557:15;10615:21;599:12437;;;10348:16;10340:65;10348:16;;;10340:65;:::i;:::-;10538:7;;;:::i;:::-;10557:15;:::i;:::-;:20;599:12437;;10557:20;:::i;:::-;599:12437;;10587:13;;;:::i;:::-;:18;599:12437;;10587:18;:::i;:::-;599:12437;;10615:16;;599:12437;;10615:7;599:12437;;;;;;;10615:16;:21;:::i;:::-;10652:27;10362:1;10652:27;;10156:530::o;599:12437::-;;;-1:-1:-1;;;599:12437:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;599:12437:12;;;;;;;10797:171;599:12437;;;;10871:15;599:12437;;;;;;;-1:-1:-1;;;;;;599:12437:12;;;-1:-1:-1;;;;;10924:23:12;599:12437;10924:23;:::i;:::-;599:12437;-1:-1:-1;;;;;;;;;;;10915:46:12;;;10797:171::o;:::-;599:12437;-1:-1:-1;599:12437:12;10871:15;599:12437;;10871:29;599:12437;;-1:-1:-1;599:12437:12;10871:29;:::i;:::-;-1:-1:-1;;;;;599:12437:12;10924:23;;;:::i;:::-;599:12437;;;10915:46;-1:-1:-1;;;;;;;;;;;;10915:46:12;;10797:171::o;599:12437::-;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;599:12437:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;599:12437:12;;;;:::o;:::-;;;:::o;11521:824::-;;;;;1059:41:20;;1116:8;11665:15:12;;11700:72;599:12437;11700:72;599:12437;;;;;;;;;;;;;11700:72;;;;665:10:21;11700:72:12;;;;:::i;:::-;;;-1:-1:-1;;;;;599:12437:12;11700:72;;599:12437;;11700:72;;;11661:678;-1:-1:-1;11696:591:12;;11893:394;;:::i;:::-;599:12437;;;11943:18;;;599:12437;;-1:-1:-1;;;11985:60:12;;599:12437;11985:60;11700:72;11985:60;;;:::i;11939:334::-;11700:72;12160:95;;11696:591;-1:-1:-1;;;;;;599:12437:12;11822:55;;11815:62::o;11700:72::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;11661:678;12317:11;;;;12324:4;12317:11;:::o;599:12437::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;271:703:22;544:10;;540:51;;553:1;600:20;553:1;600:20;;661:9;;;760:17;;;;:::i;:::-;787:150;794:10;;;946:21;;;271:703;:::o;787:150::-;820:11;;;:::i;:::-;716:2;;599:12437:12;862:39:22;869:31;875:24;599:12437:12;;;875:24:22;:::i;:::-;599:12437:12;;;;869:31:22;599:12437:12;;-1:-1:-1;;;;;;599:12437:12;;;862:39:22;845:56;;;;;;:::i;:::-;;599:12437:12;787:150:22;;;;654:75;599:12437:12;-1:-1:-1;;;599:12437:12;;;;;716:2:22;599:12437:12;;;;654:75:22;;;;;;540:51;-1:-1:-1;599:12437:12;;;;;;-1:-1:-1;;;;;599:12437:12;;;;;;;;;;;;;-1:-1:-1;;;599:12437:12;;;;570:10:22;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"903600","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2625","getApproved(uint256)":"4683","isApprovedForAll(address,address)":"2879","name()":"infinite","ownerOf(uint256)":"2609","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26712","supportsInterface(bytes4)":"373","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"2211","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"./extensions/IERC721Enumerable.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping (uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping (address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping (uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IERC721).interfaceId\\n            || interfaceId == type(IERC721Metadata).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: balance query for the zero address\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0\\n            ? string(abi.encodePacked(baseURI, tokenId.toString()))\\n            : '';\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\\n     * in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(_msgSender() == owner || ERC721.isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"ERC721: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        require(operator != _msgSender(), \\\"ERC721: approve to caller\\\");\\n\\n        _operatorApprovals[_msgSender()][operator] = approved;\\n        emit ApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"ERC721: operator query for nonexistent token\\\");\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || ERC721.isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {\\n        _mint(to, tokenId);\\n        require(_checkOnERC721Received(address(0), to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer of token that is not own\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\\n        private returns (bool)\\n    {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver(to).onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    // solhint-disable-next-line no-inline-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual { }\\n}\\n\",\"keccak256\":\"0x8d1cabca557cb77d97d801d674f0dacc33659e1430cdd34f91ae5d033fc3d93f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xccb7e6475afcb1c5cb13b3fbf1329c10b93620a9b66393388066683915271a78\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant alphabet = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = alphabet[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n}\\n\",\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2233,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2235,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2239,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":2243,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":2247,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":2253,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol":{"ERC721Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"ERC721 Token that can be irreversibly burned (destroyed).","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"burn(uint256)":{"details":"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"title":"ERC721 Burnable Token","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 Token that can be irreversibly burned (destroyed).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"ERC721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":\"ERC721Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"./extensions/IERC721Enumerable.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping (uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping (address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping (uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IERC721).interfaceId\\n            || interfaceId == type(IERC721Metadata).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: balance query for the zero address\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0\\n            ? string(abi.encodePacked(baseURI, tokenId.toString()))\\n            : '';\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\\n     * in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(_msgSender() == owner || ERC721.isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"ERC721: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        require(operator != _msgSender(), \\\"ERC721: approve to caller\\\");\\n\\n        _operatorApprovals[_msgSender()][operator] = approved;\\n        emit ApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"ERC721: operator query for nonexistent token\\\");\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || ERC721.isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {\\n        _mint(to, tokenId);\\n        require(_checkOnERC721Received(address(0), to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer of token that is not own\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\\n        private returns (bool)\\n    {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver(to).onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    // solhint-disable-next-line no-inline-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual { }\\n}\\n\",\"keccak256\":\"0x8d1cabca557cb77d97d801d674f0dacc33659e1430cdd34f91ae5d033fc3d93f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @title ERC721 Burnable Token\\n * @dev ERC721 Token that can be irreversibly burned (destroyed).\\n */\\nabstract contract ERC721Burnable is Context, ERC721 {\\n    /**\\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own `tokenId` or be an approved operator.\\n     */\\n    function burn(uint256 tokenId) public virtual {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721Burnable: caller is not owner nor approved\\\");\\n        _burn(tokenId);\\n    }\\n}\\n\",\"keccak256\":\"0x7481c284b0ff5983d3f1784f0ceae1ec397f8c8938bc60552b19889cc057aee8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xccb7e6475afcb1c5cb13b3fbf1329c10b93620a9b66393388066683915271a78\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant alphabet = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = alphabet[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n}\\n\",\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2233,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2235,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2239,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":2243,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":2247,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":2253,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol":{"ERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenByIndex(uint256)":{"details":"See {IERC721Enumerable-tokenByIndex}."},"tokenOfOwnerByIndex(address,uint256)":{"details":"See {IERC721Enumerable-tokenOfOwnerByIndex}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"totalSupply()":{"details":"See {IERC721Enumerable-totalSupply}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"./extensions/IERC721Enumerable.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping (uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping (address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping (uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IERC721).interfaceId\\n            || interfaceId == type(IERC721Metadata).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: balance query for the zero address\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0\\n            ? string(abi.encodePacked(baseURI, tokenId.toString()))\\n            : '';\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\\n     * in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(_msgSender() == owner || ERC721.isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"ERC721: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        require(operator != _msgSender(), \\\"ERC721: approve to caller\\\");\\n\\n        _operatorApprovals[_msgSender()][operator] = approved;\\n        emit ApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"ERC721: operator query for nonexistent token\\\");\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || ERC721.isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {\\n        _mint(to, tokenId);\\n        require(_checkOnERC721Received(address(0), to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer of token that is not own\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\\n        private returns (bool)\\n    {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver(to).onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    // solhint-disable-next-line no-inline-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual { }\\n}\\n\",\"keccak256\":\"0x8d1cabca557cb77d97d801d674f0dacc33659e1430cdd34f91ae5d033fc3d93f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"./IERC721Enumerable.sol\\\";\\n\\n/**\\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\\n * enumerability of all the token ids in the contract as well as all token ids owned by each\\n * account.\\n */\\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\\n    // Mapping from owner to list of owned token IDs\\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\\n\\n    // Mapping from token ID to index of the owner tokens list\\n    mapping(uint256 => uint256) private _ownedTokensIndex;\\n\\n    // Array with all token ids, used for enumeration\\n    uint256[] private _allTokens;\\n\\n    // Mapping from token id to position in the allTokens array\\n    mapping(uint256 => uint256) private _allTokensIndex;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\\n        return interfaceId == type(IERC721Enumerable).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721.balanceOf(owner), \\\"ERC721Enumerable: owner index out of bounds\\\");\\n        return _ownedTokens[owner][index];\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _allTokens.length;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenByIndex}.\\n     */\\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721Enumerable.totalSupply(), \\\"ERC721Enumerable: global index out of bounds\\\");\\n        return _allTokens[index];\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual override {\\n        super._beforeTokenTransfer(from, to, tokenId);\\n\\n        if (from == address(0)) {\\n            _addTokenToAllTokensEnumeration(tokenId);\\n        } else if (from != to) {\\n            _removeTokenFromOwnerEnumeration(from, tokenId);\\n        }\\n        if (to == address(0)) {\\n            _removeTokenFromAllTokensEnumeration(tokenId);\\n        } else if (to != from) {\\n            _addTokenToOwnerEnumeration(to, tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\\n     * @param to address representing the new owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\\n     */\\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\\n        uint256 length = ERC721.balanceOf(to);\\n        _ownedTokens[to][length] = tokenId;\\n        _ownedTokensIndex[tokenId] = length;\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's token tracking data structures.\\n     * @param tokenId uint256 ID of the token to be added to the tokens list\\n     */\\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\\n        _allTokensIndex[tokenId] = _allTokens.length;\\n        _allTokens.push(tokenId);\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\\n     * @param from address representing the previous owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\\n     */\\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary\\n        if (tokenIndex != lastTokenIndex) {\\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\\n\\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n        }\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _ownedTokensIndex[tokenId];\\n        delete _ownedTokens[from][lastTokenIndex];\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's token tracking data structures.\\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\\n     */\\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = _allTokens.length - 1;\\n        uint256 tokenIndex = _allTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\\n\\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _allTokensIndex[tokenId];\\n        _allTokens.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x3dce5847e70c056ef0f7cf91cb9a0067cf90784794017a45c1211cde7ed1c08c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xccb7e6475afcb1c5cb13b3fbf1329c10b93620a9b66393388066683915271a78\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant alphabet = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = alphabet[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n}\\n\",\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2233,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2235,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2239,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":2243,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":2247,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":2253,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":3206,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_ownedTokens","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_uint256,t_uint256))"},{"astId":3210,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_ownedTokensIndex","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_uint256)"},{"astId":3213,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_allTokens","offset":0,"slot":"8","type":"t_array(t_uint256)dyn_storage"},{"astId":3217,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable","label":"_allTokensIndex","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"ERC721 token with storage based token URI management.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"./extensions/IERC721Enumerable.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping (uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping (address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping (uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IERC721).interfaceId\\n            || interfaceId == type(IERC721Metadata).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: balance query for the zero address\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0\\n            ? string(abi.encodePacked(baseURI, tokenId.toString()))\\n            : '';\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\\n     * in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(_msgSender() == owner || ERC721.isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"ERC721: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        require(operator != _msgSender(), \\\"ERC721: approve to caller\\\");\\n\\n        _operatorApprovals[_msgSender()][operator] = approved;\\n        emit ApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"ERC721: operator query for nonexistent token\\\");\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || ERC721.isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {\\n        _mint(to, tokenId);\\n        require(_checkOnERC721Received(address(0), to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer of token that is not own\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\\n        private returns (bool)\\n    {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver(to).onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    // solhint-disable-next-line no-inline-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual { }\\n}\\n\",\"keccak256\":\"0x8d1cabca557cb77d97d801d674f0dacc33659e1430cdd34f91ae5d033fc3d93f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping (uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI query for nonexistent token\\\");\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd03f5c3d258a9b0f751a3246e0802106585561ab5909b808368759364fc786f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xccb7e6475afcb1c5cb13b3fbf1329c10b93620a9b66393388066683915271a78\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant alphabet = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = alphabet[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n}\\n\",\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2233,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2235,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2239,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":2243,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":2247,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":2253,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":3542,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"IERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"tokenByIndex(uint256)":{"details":"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."},"tokenOfOwnerByIndex(address,uint256)":{"details":"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"totalSupply()":{"details":"Returns the total amount of tokens stored by the contract."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional enumeration extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xccb7e6475afcb1c5cb13b3fbf1329c10b93620a9b66393388066683915271a78\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212209d008cceb3e0cb8a8b88da07aa1f50f500e887b8fed39a4c57de2487eae7e6c664736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 STOP DUP13 0xCE 0xB3 0xE0 0xCB DUP11 DUP12 DUP9 0xDA SMOD 0xAA 0x1F POP CREATE2 STOP 0xE8 DUP8 0xB8 INVALID 0xD3 SWAP11 0x4C JUMPI 0xDE 0x24 DUP8 0xEA 0xE7 0xE6 0xC6 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"126:7684:20:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212209d008cceb3e0cb8a8b88da07aa1f50f500e887b8fed39a4c57de2487eae7e6c664736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 STOP DUP13 0xCE 0xB3 0xE0 0xCB DUP11 DUP12 DUP9 0xDA SMOD 0xAA 0x1F POP CREATE2 STOP 0xE8 DUP8 0xB8 INVALID 0xD3 SWAP11 0x4C JUMPI 0xDE 0x24 DUP8 0xEA 0xE7 0xE6 0xC6 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"126:7684:20:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_verifyCallResult(bool,bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212201aa9beaf79cfe3e7ae0b846dcca3ad4af0b50c47ca40e42e0e7eff5b92fb380564736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xA9 0xBE 0xAF PUSH26 0xCFE3E7AE0B846DCCA3AD4AF0B50C47CA40E42E0E7EFF5B92FB38 SDIV PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"93:1878:22:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212201aa9beaf79cfe3e7ae0b846dcca3ad4af0b50c47ca40e42e0e7eff5b92fb380564736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xA9 0xBE 0xAF PUSH26 0xCFE3E7AE0B846DCCA3AD4AF0B50C47CA40E42E0E7EFF5B92FB38 SDIV PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"93:1878:22:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant alphabet = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = alphabet[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n}\\n\",\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"devdoc":{"details":"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122023ca342fb61bb575401bd2f244b1b31a95fd5ed1991a53386092f08322ac0ec264736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0xCA CALLVALUE 0x2F 0xB6 SHL 0xB5 PUSH22 0x401BD2F244B1B31A95FD5ED1991A53386092F08322AC 0xE 0xC2 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"398:6434:25:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122023ca342fb61bb575401bd2f244b1b31a95fd5ed1991a53386092f08322ac0ec264736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0xCA CALLVALUE 0x2F 0xB6 SHL 0xB5 PUSH22 0x401BD2F244B1B31A95FD5ED1991A53386092F08322AC 0xE 0xC2 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"398:6434:25:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Assets.sol":{"Assets":{"abi":[{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"assetId","type":"uint256"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"string","name":"tokenURI","type":"string"}],"name":"AssetCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"investor","type":"address"},{"indexed":true,"internalType":"uint256","name":"assetId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"LogInvestment","type":"event"},{"inputs":[{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"author","type":"string"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"projectEndDate","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"string","name":"tokenURI","type":"string"},{"internalType":"string","name":"mainPhoto","type":"string"},{"internalType":"string[]","name":"secondaryPhotos","type":"string[]"},{"internalType":"enum Category","name":"category","type":"uint8"}],"name":"addAsset","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum ProjectStatus","name":"status","type":"uint8"}],"name":"getAllAssets","outputs":[{"components":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"author","type":"string"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"projectStartDate","type":"uint256"},{"internalType":"uint256","name":"projectEndDate","type":"uint256"},{"components":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"internalType":"uint256","name":"individualPrice","type":"uint256"},{"internalType":"uint256","name":"availableTokens","type":"uint256"},{"internalType":"uint256","name":"rewardTokenId","type":"uint256"}],"internalType":"struct Reward[]","name":"rewards","type":"tuple[]"},{"internalType":"enum ProjectStatus","name":"status","type":"uint8"},{"internalType":"address","name":"rewardTokenAddress","type":"address"},{"internalType":"string","name":"mainPhoto","type":"string"},{"internalType":"string[]","name":"secondaryPhotos","type":"string[]"},{"internalType":"enum Category","name":"category","type":"uint8"}],"internalType":"struct Asset[]","name":"","type":"tuple[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum ProjectStatus","name":"status","type":"uint8"},{"internalType":"enum Category","name":"category","type":"uint8"}],"name":"getAllAssetsByCategory","outputs":[{"components":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"author","type":"string"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"projectStartDate","type":"uint256"},{"internalType":"uint256","name":"projectEndDate","type":"uint256"},{"components":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"internalType":"uint256","name":"individualPrice","type":"uint256"},{"internalType":"uint256","name":"availableTokens","type":"uint256"},{"internalType":"uint256","name":"rewardTokenId","type":"uint256"}],"internalType":"struct Reward[]","name":"rewards","type":"tuple[]"},{"internalType":"enum ProjectStatus","name":"status","type":"uint8"},{"internalType":"address","name":"rewardTokenAddress","type":"address"},{"internalType":"string","name":"mainPhoto","type":"string"},{"internalType":"string[]","name":"secondaryPhotos","type":"string[]"},{"internalType":"enum Category","name":"category","type":"uint8"}],"internalType":"struct Asset[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"}],"name":"getAssetById","outputs":[{"components":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"author","type":"string"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"projectStartDate","type":"uint256"},{"internalType":"uint256","name":"projectEndDate","type":"uint256"},{"components":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"internalType":"uint256","name":"individualPrice","type":"uint256"},{"internalType":"uint256","name":"availableTokens","type":"uint256"},{"internalType":"uint256","name":"rewardTokenId","type":"uint256"}],"internalType":"struct Reward[]","name":"rewards","type":"tuple[]"},{"internalType":"enum ProjectStatus","name":"status","type":"uint8"},{"internalType":"address","name":"rewardTokenAddress","type":"address"},{"internalType":"string","name":"mainPhoto","type":"string"},{"internalType":"string[]","name":"secondaryPhotos","type":"string[]"},{"internalType":"enum Category","name":"category","type":"uint8"}],"internalType":"struct Asset","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"getAssetsOfOwner","outputs":[{"components":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"author","type":"string"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"projectStartDate","type":"uint256"},{"internalType":"uint256","name":"projectEndDate","type":"uint256"},{"components":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"internalType":"uint256","name":"individualPrice","type":"uint256"},{"internalType":"uint256","name":"availableTokens","type":"uint256"},{"internalType":"uint256","name":"rewardTokenId","type":"uint256"}],"internalType":"struct Reward[]","name":"rewards","type":"tuple[]"},{"internalType":"enum ProjectStatus","name":"status","type":"uint8"},{"internalType":"address","name":"rewardTokenAddress","type":"address"},{"internalType":"string","name":"mainPhoto","type":"string"},{"internalType":"string[]","name":"secondaryPhotos","type":"string[]"},{"internalType":"enum Category","name":"category","type":"uint8"}],"internalType":"struct Asset[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"supervisor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"string","name":"mainPhoto","type":"string"},{"internalType":"string[]","name":"secondaryPhotos","type":"string[]"},{"internalType":"string","name":"description","type":"string"}],"name":"updateAsset","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60803461007c57601f6119a238819003918201601f19168301916001600160401b038311848410176100815780849260209460405283398101031261007c57516001600160a01b0381169081900361007c5760018060a01b0319908160005416176000553390600154161760015560405161190a90816100988239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c9081633803112314610c94575080634663a28c146109855780635563633d146106f257806356e4b68b146106c957806386275c5a14610248578063b3e444a7146101b35763f3ab880e1461006e57600080fd5b346101b05760203660031901126101b0576004356001600160a01b0381811692918390036101ab57815416604051926379d5c40760e11b8452600484015260249082848381845afa9384156101a057839461017c575b508351916100d1836114fe565b94845b8481106100f557604051602080825281906100f19082018a61120a565b0390f35b6100ff81836115a5565b5160405190631d591eb760e31b8252600482015286818581885afa908115610171579061014a9291889161014f575b50610139828a6115a5565b5261014481896115a5565b50611580565b6100d4565b61016b91503d808a833e61016381836112df565b810190611611565b3861012e565b6040513d89823e3d90fd5b6101999194503d8085833e61019181836112df565b810190611424565b92386100c4565b6040513d85823e3d90fd5b600080fd5b80fd5b50346101b05760203660031901126101b0576101cd61149d565b508054604051631d591eb760e31b81526004803590820152908290829060249082906001600160a01b03165afa90811561023d57826100f19392610222575b5050604051918291602083526020830190611034565b61023692503d8091833e61016381836112df565b388061020c565b6040513d84823e3d90fd5b50346101b0576101403660031901126101b0576001600160401b0360243581811161055e5761027b90369060040161131d565b6044358281116105425761029390369060040161131d565b906064358381116106c5576102ac90369060040161131d565b9260a435916001600160a01b03831683036101ab5760c4358281116106c1576102d990369060040161131d565b9460e4358381116106bd576102f290369060040161131d565b92610104359081116106bd5761030c90369060040161137b565b60056101243510156106bd576001546001600160a01b03163303610669576004351561062d5742608435106105d7576001600160a01b03851615610599578754604051630aac5dfd60e01b81529689956001600160a01b039092169390602089600481885afa988915610171578799610562575b506040519561038e876112c3565b89875260043560208801526040870152606086015260808501524260a085015260843560c0850152606060e0850152846101008501528461012085015261014084015261016083015261012435610180830152803b1561055e5761041a8392918392604051948580948193631b8513e960e31b83528b6004840152606060248401526064830190611034565b6001600160a01b038a16604483015203925af1801561023d5761054a575b5080546001600160a01b0316803b15610546576040516334ff261960e21b81526001600160a01b03841660048201526024810185905260606044820152908290829081838161048a606482018c610fec565b03925af1801561023d5761052e575b505060405160208082526001600160a01b03909216937f49b4e4c6879cdc85b51d8c3b572252aaa7842edb863810854acb6d2ed420d9629282916104df91830190610fec565b0390a3805481906001600160a01b0316803b1561052b57818091600460405180948193632c5bdb1f60e01b83525af1801561023d5761051b5750f35b6105249061129a565b6101b05780f35b50fd5b6105379061129a565b610542578338610499565b8380fd5b5080fd5b6105539061129a565b610542578338610438565b8280fd5b965097506020863d602011610591575b8161057f602093836112df565b810103126101ab578995519738610380565b3d9150610572565b60405162461bcd60e51b8152602060048201526016602482015275416464726573732063616e6e6f74206265207a65726f60501b6044820152606490fd5b60405162461bcd60e51b815260206004820152602860248201527f50726f6a65637420656e6420646174652073686f756c6420626520696e207468604482015267652066757475726560c01b6064820152608490fd5b60405162461bcd60e51b815260206004820152601460248201527350726963652063616e6e6f74206265207a65726f60601b6044820152606490fd5b60405162461bcd60e51b815260206004820152602660248201527f4f6e6c792073757065727669736f722063616e2063616c6c20746869732066756044820152653731ba34b7b760d11b6064820152608490fd5b8780fd5b8680fd5b8480fd5b50346101b057806003193601126101b0576001546040516001600160a01b039091168152602090f35b50346101b05760803660031901126101b0576024906001600160401b0360043583358281116105425761072990369060040161131d565b916044358181116106c55761074290369060040161137b565b906064359081116106c55761075b90369060040161131d565b8454604051634f558e7960e01b8152600481018590526001600160a01b03909116929060209081818a81885afa908115610923578891610968575b501561092e5760405163430c208160e01b81523360048201528881018690528181604481885afa9081156109235788916108f6575b50156108bb575085939291879160405196631d591eb760e31b885285600489015286888581885afa97881561017157879861089f575b50805115610893575b610140880152805115610887575b61016087015280511561087c575b6080860152813b15610542578360409361085e855197889687958694631c29952960e31b865260048601528401526044830190611034565b03925af1801561023d57610870575080f35b6108799061129a565b80f35b506080850151610826565b50610160860151610818565b5061014087015161080a565b6108b49198503d8089833e61016381836112df565b9689610801565b6064906015896040519262461bcd60e51b84526004840152820152742737ba1030b8383937bb32b21037b91037bbb732b960591b6044820152fd5b6109169150823d841161091c575b61090e81836112df565b8101906118bc565b386107cb565b503d610904565b6040513d8a823e3d90fd5b6064906014896040519262461bcd60e51b8452600484015282015273105cdcd95d08191bd95cc81b9bdd08195e1a5cdd60621b6044820152fd5b61097f9150823d841161091c5761090e81836112df565b38610796565b50346101b05760403660031901126101b057600435600481101561054657602480359160058310156105425780610b9c575082546040516301fb15dd60e31b8152908490829060049082906001600160a01b03165afa908115610b91578491610b77575b50925b805460405163a2311d5f60e01b81526001600160a01b0390911693610a15906004830190611011565b81818481875afa90811561023d578291610b5d575b50610a35815161154e565b928290835b8751811015610a675780610a51610a62928a6115a5565b51610a5c82896115a5565b52611580565b610a3a565b5090919294610a7684516114fe565b9186945b8051861015610b4757875b8751811015610b3c57610a9887836115a5565b51610aa3828a6115a5565b5114610ab757610ab290611580565b610a85565b509493610ac485876115a5565b5160405190631d591eb760e31b8252600482015288818481875afa918215610b3157610b1192610b0b928b91610b17575b50610b0082886115a5565b5261014481876115a5565b94611580565b94610a7a565b610b2b91503d808d833e61016381836112df565b8b610af5565b6040513d8b823e3d90fd5b5094610b1190611580565b604051602080825281906100f19082018761120a565b610b7191503d8084833e61019181836112df565b38610a2a565b610b8b91503d8086833e61019181836112df565b386109e9565b6040513d86823e3d90fd5b60018103610bf757508254604051620dee2360e51b8152908490829060049082906001600160a01b03165afa908115610b91578491610bdd575b50926109ec565b610bf191503d8086833e61019181836112df565b38610bd6565b60028103610c3857508254604051630f4facc560e21b8152908490829060049082906001600160a01b03165afa908115610b91578491610bdd5750926109ec565b600303610c77578254604051635aff92c160e11b8152908490829060049082906001600160a01b03165afa908115610b91578491610bdd5750926109ec565b60405162461bcd60e51b815280610c90600482016113fb565b0390fd5b82346101b0576020918260031936011261054657600435600481101561055e5780610ed557505080546040516301fb15dd60e31b8152908290829060049082906001600160a01b03165afa90811561023d578291610ebb575b50905b815191610cfc836114fe565b92610d068161154e565b91610d108261154e565b845490946001600160a01b0390911691815b848110610d6557610d4a886100f189610d578d8b60405196879660608852606088019061120a565b9186830390870152611266565b908382036040850152611266565b610d6f81836115a5565b519060405191631d591eb760e31b8352600483015260249184818481895afa908115610e96578591610ea1575b50610da7828b6115a5565b52610db2818a6115a5565b50610dbd81846115a5565b51604051906334422a4760e01b825260048201528a818481895afa908115610e96578591610e69575b50610df182896115a5565b5289610dfd82856115a5565b51604051938491631d6e430760e11b8352600483015281885afa8015610b91578490610e38575b610e339250610a5c828a6115a5565b610d22565b50908981813d8311610e62575b610e4f81836112df565b810103126105425790610e339151610e24565b503d610e45565b90508a81813d8311610e8f575b610e8081836112df565b810103126106c557518b610de6565b503d610e76565b6040513d87823e3d90fd5b610eb591503d8087833e61016381836112df565b8b610d9c565b610ecf91503d8084833e61019181836112df565b83610ced565b60018103610f315750508054604051620dee2360e51b8152908290829060049082906001600160a01b03165afa90811561023d578291610f17575b5090610cf0565b610f2b91503d8084833e61019181836112df565b83610f10565b60028103610f735750508054604051630f4facc560e21b8152908290829060049082906001600160a01b03165afa90811561023d578291610f17575090610cf0565b600303610fb357508054604051635aff92c160e11b8152908290829060049082906001600160a01b03165afa90811561023d578291610f17575090610cf0565b62461bcd60e51b815280610c90600482016113fb565b60005b838110610fdc5750506000910152565b8181015183820152602001610fcc565b9060209161100581518092818552858086019101610fc9565b601f01601f1916010190565b90600582101561101e5752565b634e487b7160e01b600052602160045260246000fd5b9190825181526020908184015182820152604061105e818601516101a08084860152840190610fec565b6110746060918288015185820384870152610fec565b9161108b6080938489015186820386880152610fec565b60a093848901518587015260c092838a01518488015260e08a01519587840360e0890152865194858552898501938a808860051b8801019901976000965b8c8989106111975750505050505050505050506101009081860151600481101561101e5761111b9284015261012060018060a01b03818801511690840152610140808701519084830390850152610fec565b936101609283820151938387039084015283518087528187019180808360051b8a01019601926000905b83821061116a5750505050506111679293945061018080910151910190611011565b90565b909192939683806111886001938d601f199082030186528b51610fec565b99019201920190939291611145565b80600192939495969798999a9b9c601f19858203018b528d519089806111d76111c785518d86528d860190610fec565b8686015185820388870152610fec565b938d8082015190850152898101518a8501528a8101518b85015201519101529c01980198019698979594939291906110c9565b908082519081815260208091019281808460051b8301019501936000915b8483106112385750505050505090565b9091929394958480611256600193601f198682030187528a51611034565b9801930193019194939290611228565b90815180825260208080930193019160005b828110611286575050505090565b835185529381019392810192600101611278565b6001600160401b0381116112ad57604052565b634e487b7160e01b600052604160045260246000fd5b6101a081019081106001600160401b038211176112ad57604052565b601f909101601f19168101906001600160401b038211908210176112ad57604052565b6001600160401b0381116112ad57601f01601f191660200190565b81601f820112156101ab5780359061133482611302565b9261134260405194856112df565b828452602083830101116101ab57816000926020809301838601378301015290565b6001600160401b0381116112ad5760051b60200190565b9080601f830112156101ab5781359061139382611364565b926113a160405194856112df565b828452602092838086019160051b830101928084116101ab57848301915b8483106113cf5750505050505090565b82356001600160401b0381116101ab5786916113f08484809489010161131d565b8152019201916113bf565b60609060208152600e60208201526d496e76616c69642073746174757360901b60408201520190565b60209081818403126101ab578051906001600160401b0382116101ab57019180601f840112156101ab57825161145981611364565b9361146760405195866112df565b818552838086019260051b8201019283116101ab578301905b82821061148e575050505090565b81518152908301908301611480565b604051906114aa826112c3565b81610180600091828152826020820152606080604083015280808301528060808301528360a08301528360c08301528060e08301528361010083015283610120830152806101408301526101608201520152565b9061150882611364565b61151560405191826112df565b8281528092611526601f1991611364565b019060005b82811061153757505050565b60209061154261149d565b8282850101520161152b565b9061155882611364565b61156560405191826112df565b8281528092611576601f1991611364565b0190602036910137565b600019811461158f5760010190565b634e487b7160e01b600052601160045260246000fd5b80518210156115b95760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b81601f820112156101ab5780516115e581611302565b926115f360405194856112df565b818452602082840101116101ab576111679160208085019101610fc9565b602080828403126101ab5781516001600160401b03928382116101ab5701916101a0838503126101ab5760409182519461164a866112c3565b845186528185015182870152838501518381116101ab578161166d9187016115cf565b848701526060808601518481116101ab578261168a9188016115cf565b818801526080808701518581116101ab57836116a79189016115cf565b8189015260a09081880151828a015260c09182890151838b015260e08901518781116101ab5789019285601f850112156101ab578351926116e784611364565b956116f48b5197886112df565b848752888088019560051b870101958887116101ab57898101955b87871061180d57505050505050505060e0870152610100808601519060048210156101ab5787015261012085810151906001600160a01b03821682036101ab57870152610140808601518481116101ab578261176c9188016115cf565b9087015261016092838601518181116101ab5786019082601f830112156101ab578151906117a561179c83611364565b975197886112df565b818752848088019260051b840101938085116101ab57858401925b8584106117e85750505050505050830152610180809101519060058210156101ab5782015290565b83518381116101ab578791611802848480948a01016115cf565b8152019301926117c0565b86518c81116101ab57820185601f19828d0301126101ab578d5186810192908e8411818510176118a757928f52818d0151928e84116101ab578f8f948f8f90611858928701016115cf565b82528301519384116101ab578f838f95918f61187a90888d95819901016115cf565b86850152888201519084015288810151888401528a8101518984015201518982015281520196019561170f565b60246000634e487b7160e01b81526041600452fd5b908160209103126101ab575180151581036101ab579056fea2646970667358221220c7ef6d38c6a1fc5f2261734b79d582d2f9ddb4de8debdc97f69db8d31cbc94da64736f6c63430008130033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0x7C JUMPI PUSH1 0x1F PUSH2 0x19A2 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x81 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x7C JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x7C JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE CALLER SWAP1 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x190A SWAP1 DUP2 PUSH2 0x98 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x38031123 EQ PUSH2 0xC94 JUMPI POP DUP1 PUSH4 0x4663A28C EQ PUSH2 0x985 JUMPI DUP1 PUSH4 0x5563633D EQ PUSH2 0x6F2 JUMPI DUP1 PUSH4 0x56E4B68B EQ PUSH2 0x6C9 JUMPI DUP1 PUSH4 0x86275C5A EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xB3E444A7 EQ PUSH2 0x1B3 JUMPI PUSH4 0xF3AB880E EQ PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP3 SWAP2 DUP4 SWAP1 SUB PUSH2 0x1AB JUMPI DUP2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 PUSH4 0x79D5C407 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 SWAP1 DUP3 DUP5 DUP4 DUP2 DUP5 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x1A0 JUMPI DUP4 SWAP5 PUSH2 0x17C JUMPI JUMPDEST POP DUP4 MLOAD SWAP2 PUSH2 0xD1 DUP4 PUSH2 0x14FE JUMP JUMPDEST SWAP5 DUP5 JUMPDEST DUP5 DUP2 LT PUSH2 0xF5 JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0xF1 SWAP1 DUP3 ADD DUP11 PUSH2 0x120A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF DUP2 DUP4 PUSH2 0x15A5 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x1D591EB7 PUSH1 0xE3 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP7 DUP2 DUP6 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x171 JUMPI SWAP1 PUSH2 0x14A SWAP3 SWAP2 DUP9 SWAP2 PUSH2 0x14F JUMPI JUMPDEST POP PUSH2 0x139 DUP3 DUP11 PUSH2 0x15A5 JUMP JUMPDEST MSTORE PUSH2 0x144 DUP2 DUP10 PUSH2 0x15A5 JUMP JUMPDEST POP PUSH2 0x1580 JUMP JUMPDEST PUSH2 0xD4 JUMP JUMPDEST PUSH2 0x16B SWAP2 POP RETURNDATASIZE DUP1 DUP11 DUP4 RETURNDATACOPY PUSH2 0x163 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1611 JUMP JUMPDEST CODESIZE PUSH2 0x12E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x199 SWAP2 SWAP5 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x191 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1424 JUMP JUMPDEST SWAP3 CODESIZE PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B0 JUMPI PUSH2 0x1CD PUSH2 0x149D JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1D591EB7 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x23D JUMPI DUP3 PUSH2 0xF1 SWAP4 SWAP3 PUSH2 0x222 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1034 JUMP JUMPDEST PUSH2 0x236 SWAP3 POP RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x163 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B0 JUMPI PUSH2 0x140 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x55E JUMPI PUSH2 0x27B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x131D JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x542 JUMPI PUSH2 0x293 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x131D JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x6C5 JUMPI PUSH2 0x2AC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x131D JUMP JUMPDEST SWAP3 PUSH1 0xA4 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x1AB JUMPI PUSH1 0xC4 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x6C1 JUMPI PUSH2 0x2D9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x131D JUMP JUMPDEST SWAP5 PUSH1 0xE4 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x6BD JUMPI PUSH2 0x2F2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x131D JUMP JUMPDEST SWAP3 PUSH2 0x104 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x6BD JUMPI PUSH2 0x30C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x137B JUMP JUMPDEST PUSH1 0x5 PUSH2 0x124 CALLDATALOAD LT ISZERO PUSH2 0x6BD JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x669 JUMPI PUSH1 0x4 CALLDATALOAD ISZERO PUSH2 0x62D JUMPI TIMESTAMP PUSH1 0x84 CALLDATALOAD LT PUSH2 0x5D7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x599 JUMPI DUP8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xAAC5DFD PUSH1 0xE0 SHL DUP2 MSTORE SWAP7 DUP10 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 SWAP1 PUSH1 0x20 DUP10 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP9 DUP10 ISZERO PUSH2 0x171 JUMPI DUP8 SWAP10 PUSH2 0x562 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP6 PUSH2 0x38E DUP8 PUSH2 0x12C3 JUMP JUMPDEST DUP10 DUP8 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x60 PUSH1 0xE0 DUP6 ADD MSTORE DUP5 PUSH2 0x100 DUP6 ADD MSTORE DUP5 PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x124 CALLDATALOAD PUSH2 0x180 DUP4 ADD MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0x55E JUMPI PUSH2 0x41A DUP4 SWAP3 SWAP2 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1B8513E9 PUSH1 0xE3 SHL DUP4 MSTORE DUP12 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD SWAP1 PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x44 DUP4 ADD MSTORE SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x23D JUMPI PUSH2 0x54A JUMPI JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH4 0x34FF2619 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 DUP2 DUP4 DUP2 PUSH2 0x48A PUSH1 0x64 DUP3 ADD DUP13 PUSH2 0xFEC JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x23D JUMPI PUSH2 0x52E JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 PUSH32 0x49B4E4C6879CDC85B51D8C3B572252AAA7842EDB863810854ACB6D2ED420D962 SWAP3 DUP3 SWAP2 PUSH2 0x4DF SWAP2 DUP4 ADD SWAP1 PUSH2 0xFEC JUMP JUMPDEST SUB SWAP1 LOG3 DUP1 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x52B JUMPI DUP2 DUP1 SWAP2 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x2C5BDB1F PUSH1 0xE0 SHL DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x23D JUMPI PUSH2 0x51B JUMPI POP RETURN JUMPDEST PUSH2 0x524 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH2 0x1B0 JUMPI DUP1 RETURN JUMPDEST POP REVERT JUMPDEST PUSH2 0x537 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH2 0x542 JUMPI DUP4 CODESIZE PUSH2 0x499 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH2 0x553 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH2 0x542 JUMPI DUP4 CODESIZE PUSH2 0x438 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP7 POP SWAP8 POP PUSH1 0x20 DUP7 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x591 JUMPI JUMPDEST DUP2 PUSH2 0x57F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x12DF JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1AB JUMPI DUP10 SWAP6 MLOAD SWAP8 CODESIZE PUSH2 0x380 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x572 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x416464726573732063616E6E6F74206265207A65726F PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A65637420656E6420646174652073686F756C6420626520696E207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6520667574757265 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x50726963652063616E6E6F74206265207A65726F PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792073757065727669736F722063616E2063616C6C2074686973206675 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x3731BA34B7B7 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B0 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B0 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B0 JUMPI PUSH1 0x24 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP4 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x542 JUMPI PUSH2 0x729 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x131D JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x6C5 JUMPI PUSH2 0x742 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x137B JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x6C5 JUMPI PUSH2 0x75B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x131D JUMP JUMPDEST DUP5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4F558E79 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 PUSH1 0x20 SWAP1 DUP2 DUP2 DUP11 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x923 JUMPI DUP9 SWAP2 PUSH2 0x968 JUMPI JUMPDEST POP ISZERO PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD PUSH4 0x430C2081 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP9 DUP2 ADD DUP7 SWAP1 MSTORE DUP2 DUP2 PUSH1 0x44 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x923 JUMPI DUP9 SWAP2 PUSH2 0x8F6 JUMPI JUMPDEST POP ISZERO PUSH2 0x8BB JUMPI POP DUP6 SWAP4 SWAP3 SWAP2 DUP8 SWAP2 PUSH1 0x40 MLOAD SWAP7 PUSH4 0x1D591EB7 PUSH1 0xE3 SHL DUP9 MSTORE DUP6 PUSH1 0x4 DUP10 ADD MSTORE DUP7 DUP9 DUP6 DUP2 DUP9 GAS STATICCALL SWAP8 DUP9 ISZERO PUSH2 0x171 JUMPI DUP8 SWAP9 PUSH2 0x89F JUMPI JUMPDEST POP DUP1 MLOAD ISZERO PUSH2 0x893 JUMPI JUMPDEST PUSH2 0x140 DUP9 ADD MSTORE DUP1 MLOAD ISZERO PUSH2 0x887 JUMPI JUMPDEST PUSH2 0x160 DUP8 ADD MSTORE DUP1 MLOAD ISZERO PUSH2 0x87C JUMPI JUMPDEST PUSH1 0x80 DUP7 ADD MSTORE DUP2 EXTCODESIZE ISZERO PUSH2 0x542 JUMPI DUP4 PUSH1 0x40 SWAP4 PUSH2 0x85E DUP6 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x1C299529 PUSH1 0xE3 SHL DUP7 MSTORE PUSH1 0x4 DUP7 ADD MSTORE DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x1034 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x23D JUMPI PUSH2 0x870 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x879 SWAP1 PUSH2 0x129A JUMP JUMPDEST DUP1 RETURN JUMPDEST POP PUSH1 0x80 DUP6 ADD MLOAD PUSH2 0x826 JUMP JUMPDEST POP PUSH2 0x160 DUP7 ADD MLOAD PUSH2 0x818 JUMP JUMPDEST POP PUSH2 0x140 DUP8 ADD MLOAD PUSH2 0x80A JUMP JUMPDEST PUSH2 0x8B4 SWAP2 SWAP9 POP RETURNDATASIZE DUP1 DUP10 DUP4 RETURNDATACOPY PUSH2 0x163 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST SWAP7 DUP10 PUSH2 0x801 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x15 DUP10 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH21 0x2737BA1030B8383937BB32B21037B91037BBB732B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x916 SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x91C JUMPI JUMPDEST PUSH2 0x90E DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x18BC JUMP JUMPDEST CODESIZE PUSH2 0x7CB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x904 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x14 DUP10 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH20 0x105CDCD95D08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x97F SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x91C JUMPI PUSH2 0x90E DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST CODESIZE PUSH2 0x796 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x546 JUMPI PUSH1 0x24 DUP1 CALLDATALOAD SWAP2 PUSH1 0x5 DUP4 LT ISZERO PUSH2 0x542 JUMPI DUP1 PUSH2 0xB9C JUMPI POP DUP3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1FB15DD PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB91 JUMPI DUP5 SWAP2 PUSH2 0xB77 JUMPI JUMPDEST POP SWAP3 JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA2311D5F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 PUSH2 0xA15 SWAP1 PUSH1 0x4 DUP4 ADD SWAP1 PUSH2 0x1011 JUMP JUMPDEST DUP2 DUP2 DUP5 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x23D JUMPI DUP3 SWAP2 PUSH2 0xB5D JUMPI JUMPDEST POP PUSH2 0xA35 DUP2 MLOAD PUSH2 0x154E JUMP JUMPDEST SWAP3 DUP3 SWAP1 DUP4 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0xA67 JUMPI DUP1 PUSH2 0xA51 PUSH2 0xA62 SWAP3 DUP11 PUSH2 0x15A5 JUMP JUMPDEST MLOAD PUSH2 0xA5C DUP3 DUP10 PUSH2 0x15A5 JUMP JUMPDEST MSTORE PUSH2 0x1580 JUMP JUMPDEST PUSH2 0xA3A JUMP JUMPDEST POP SWAP1 SWAP2 SWAP3 SWAP5 PUSH2 0xA76 DUP5 MLOAD PUSH2 0x14FE JUMP JUMPDEST SWAP2 DUP7 SWAP5 JUMPDEST DUP1 MLOAD DUP7 LT ISZERO PUSH2 0xB47 JUMPI DUP8 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0xB3C JUMPI PUSH2 0xA98 DUP8 DUP4 PUSH2 0x15A5 JUMP JUMPDEST MLOAD PUSH2 0xAA3 DUP3 DUP11 PUSH2 0x15A5 JUMP JUMPDEST MLOAD EQ PUSH2 0xAB7 JUMPI PUSH2 0xAB2 SWAP1 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST POP SWAP5 SWAP4 PUSH2 0xAC4 DUP6 DUP8 PUSH2 0x15A5 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x1D591EB7 PUSH1 0xE3 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP9 DUP2 DUP5 DUP2 DUP8 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xB31 JUMPI PUSH2 0xB11 SWAP3 PUSH2 0xB0B SWAP3 DUP12 SWAP2 PUSH2 0xB17 JUMPI JUMPDEST POP PUSH2 0xB00 DUP3 DUP9 PUSH2 0x15A5 JUMP JUMPDEST MSTORE PUSH2 0x144 DUP2 DUP8 PUSH2 0x15A5 JUMP JUMPDEST SWAP5 PUSH2 0x1580 JUMP JUMPDEST SWAP5 PUSH2 0xA7A JUMP JUMPDEST PUSH2 0xB2B SWAP2 POP RETURNDATASIZE DUP1 DUP14 DUP4 RETURNDATACOPY PUSH2 0x163 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST DUP12 PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP5 PUSH2 0xB11 SWAP1 PUSH2 0x1580 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0xF1 SWAP1 DUP3 ADD DUP8 PUSH2 0x120A JUMP JUMPDEST PUSH2 0xB71 SWAP2 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x191 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST CODESIZE PUSH2 0xA2A JUMP JUMPDEST PUSH2 0xB8B SWAP2 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x191 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST CODESIZE PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0xBF7 JUMPI POP DUP3 SLOAD PUSH1 0x40 MLOAD PUSH3 0xDEE23 PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB91 JUMPI DUP5 SWAP2 PUSH2 0xBDD JUMPI JUMPDEST POP SWAP3 PUSH2 0x9EC JUMP JUMPDEST PUSH2 0xBF1 SWAP2 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x191 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST CODESIZE PUSH2 0xBD6 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0xC38 JUMPI POP DUP3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xF4FACC5 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB91 JUMPI DUP5 SWAP2 PUSH2 0xBDD JUMPI POP SWAP3 PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x3 SUB PUSH2 0xC77 JUMPI DUP3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5AFF92C1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB91 JUMPI DUP5 SWAP2 PUSH2 0xBDD JUMPI POP SWAP3 PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xC90 PUSH1 0x4 DUP3 ADD PUSH2 0x13FB JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x1B0 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x546 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x55E JUMPI DUP1 PUSH2 0xED5 JUMPI POP POP DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1FB15DD PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x23D JUMPI DUP3 SWAP2 PUSH2 0xEBB JUMPI JUMPDEST POP SWAP1 JUMPDEST DUP2 MLOAD SWAP2 PUSH2 0xCFC DUP4 PUSH2 0x14FE JUMP JUMPDEST SWAP3 PUSH2 0xD06 DUP2 PUSH2 0x154E JUMP JUMPDEST SWAP2 PUSH2 0xD10 DUP3 PUSH2 0x154E JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP2 JUMPDEST DUP5 DUP2 LT PUSH2 0xD65 JUMPI PUSH2 0xD4A DUP9 PUSH2 0xF1 DUP10 PUSH2 0xD57 DUP14 DUP12 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH1 0x60 DUP9 MSTORE PUSH1 0x60 DUP9 ADD SWAP1 PUSH2 0x120A JUMP JUMPDEST SWAP2 DUP7 DUP4 SUB SWAP1 DUP8 ADD MSTORE PUSH2 0x1266 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x1266 JUMP JUMPDEST PUSH2 0xD6F DUP2 DUP4 PUSH2 0x15A5 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x1D591EB7 PUSH1 0xE3 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 SWAP2 DUP5 DUP2 DUP5 DUP2 DUP10 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xE96 JUMPI DUP6 SWAP2 PUSH2 0xEA1 JUMPI JUMPDEST POP PUSH2 0xDA7 DUP3 DUP12 PUSH2 0x15A5 JUMP JUMPDEST MSTORE PUSH2 0xDB2 DUP2 DUP11 PUSH2 0x15A5 JUMP JUMPDEST POP PUSH2 0xDBD DUP2 DUP5 PUSH2 0x15A5 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x34422A47 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP11 DUP2 DUP5 DUP2 DUP10 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xE96 JUMPI DUP6 SWAP2 PUSH2 0xE69 JUMPI JUMPDEST POP PUSH2 0xDF1 DUP3 DUP10 PUSH2 0x15A5 JUMP JUMPDEST MSTORE DUP10 PUSH2 0xDFD DUP3 DUP6 PUSH2 0x15A5 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH4 0x1D6E4307 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0xB91 JUMPI DUP5 SWAP1 PUSH2 0xE38 JUMPI JUMPDEST PUSH2 0xE33 SWAP3 POP PUSH2 0xA5C DUP3 DUP11 PUSH2 0x15A5 JUMP JUMPDEST PUSH2 0xD22 JUMP JUMPDEST POP SWAP1 DUP10 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xE62 JUMPI JUMPDEST PUSH2 0xE4F DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x542 JUMPI SWAP1 PUSH2 0xE33 SWAP2 MLOAD PUSH2 0xE24 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE45 JUMP JUMPDEST SWAP1 POP DUP11 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xE8F JUMPI JUMPDEST PUSH2 0xE80 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6C5 JUMPI MLOAD DUP12 PUSH2 0xDE6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE76 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xEB5 SWAP2 POP RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0x163 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST DUP12 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xECF SWAP2 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x191 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST DUP4 PUSH2 0xCED JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0xF31 JUMPI POP POP DUP1 SLOAD PUSH1 0x40 MLOAD PUSH3 0xDEE23 PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x23D JUMPI DUP3 SWAP2 PUSH2 0xF17 JUMPI JUMPDEST POP SWAP1 PUSH2 0xCF0 JUMP JUMPDEST PUSH2 0xF2B SWAP2 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x191 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST DUP4 PUSH2 0xF10 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0xF73 JUMPI POP POP DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xF4FACC5 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x23D JUMPI DUP3 SWAP2 PUSH2 0xF17 JUMPI POP SWAP1 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x3 SUB PUSH2 0xFB3 JUMPI POP DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5AFF92C1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x23D JUMPI DUP3 SWAP2 PUSH2 0xF17 JUMPI POP SWAP1 PUSH2 0xCF0 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xC90 PUSH1 0x4 DUP3 ADD PUSH2 0x13FB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xFDC JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFCC JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1005 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x101E JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 DUP5 ADD MLOAD DUP3 DUP3 ADD MSTORE PUSH1 0x40 PUSH2 0x105E DUP2 DUP7 ADD MLOAD PUSH2 0x1A0 DUP1 DUP5 DUP7 ADD MSTORE DUP5 ADD SWAP1 PUSH2 0xFEC JUMP JUMPDEST PUSH2 0x1074 PUSH1 0x60 SWAP2 DUP3 DUP9 ADD MLOAD DUP6 DUP3 SUB DUP5 DUP8 ADD MSTORE PUSH2 0xFEC JUMP JUMPDEST SWAP2 PUSH2 0x108B PUSH1 0x80 SWAP4 DUP5 DUP10 ADD MLOAD DUP7 DUP3 SUB DUP7 DUP9 ADD MSTORE PUSH2 0xFEC JUMP JUMPDEST PUSH1 0xA0 SWAP4 DUP5 DUP10 ADD MLOAD DUP6 DUP8 ADD MSTORE PUSH1 0xC0 SWAP3 DUP4 DUP11 ADD MLOAD DUP5 DUP9 ADD MSTORE PUSH1 0xE0 DUP11 ADD MLOAD SWAP6 DUP8 DUP5 SUB PUSH1 0xE0 DUP10 ADD MSTORE DUP7 MLOAD SWAP5 DUP6 DUP6 MSTORE DUP10 DUP6 ADD SWAP4 DUP11 DUP1 DUP9 PUSH1 0x5 SHL DUP9 ADD ADD SWAP10 ADD SWAP8 PUSH1 0x0 SWAP7 JUMPDEST DUP13 DUP10 DUP10 LT PUSH2 0x1197 JUMPI POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x100 SWAP1 DUP2 DUP7 ADD MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x101E JUMPI PUSH2 0x111B SWAP3 DUP5 ADD MSTORE PUSH2 0x120 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 DUP9 ADD MLOAD AND SWAP1 DUP5 ADD MSTORE PUSH2 0x140 DUP1 DUP8 ADD MLOAD SWAP1 DUP5 DUP4 SUB SWAP1 DUP6 ADD MSTORE PUSH2 0xFEC JUMP JUMPDEST SWAP4 PUSH2 0x160 SWAP3 DUP4 DUP3 ADD MLOAD SWAP4 DUP4 DUP8 SUB SWAP1 DUP5 ADD MSTORE DUP4 MLOAD DUP1 DUP8 MSTORE DUP2 DUP8 ADD SWAP2 DUP1 DUP1 DUP4 PUSH1 0x5 SHL DUP11 ADD ADD SWAP7 ADD SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x116A JUMPI POP POP POP POP POP PUSH2 0x1167 SWAP3 SWAP4 SWAP5 POP PUSH2 0x180 DUP1 SWAP2 ADD MLOAD SWAP2 ADD SWAP1 PUSH2 0x1011 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP7 DUP4 DUP1 PUSH2 0x1188 PUSH1 0x1 SWAP4 DUP14 PUSH1 0x1F NOT SWAP1 DUP3 SUB ADD DUP7 MSTORE DUP12 MLOAD PUSH2 0xFEC JUMP JUMPDEST SWAP10 ADD SWAP3 ADD SWAP3 ADD SWAP1 SWAP4 SWAP3 SWAP2 PUSH2 0x1145 JUMP JUMPDEST DUP1 PUSH1 0x1 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 SWAP12 SWAP13 PUSH1 0x1F NOT DUP6 DUP3 SUB ADD DUP12 MSTORE DUP14 MLOAD SWAP1 DUP10 DUP1 PUSH2 0x11D7 PUSH2 0x11C7 DUP6 MLOAD DUP14 DUP7 MSTORE DUP14 DUP7 ADD SWAP1 PUSH2 0xFEC JUMP JUMPDEST DUP7 DUP7 ADD MLOAD DUP6 DUP3 SUB DUP9 DUP8 ADD MSTORE PUSH2 0xFEC JUMP JUMPDEST SWAP4 DUP14 DUP1 DUP3 ADD MLOAD SWAP1 DUP6 ADD MSTORE DUP10 DUP2 ADD MLOAD DUP11 DUP6 ADD MSTORE DUP11 DUP2 ADD MLOAD DUP12 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP13 ADD SWAP9 ADD SWAP9 ADD SWAP7 SWAP9 SWAP8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST SWAP1 DUP1 DUP3 MLOAD SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 DUP2 DUP1 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x1238 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x1256 PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x1034 JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x1228 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1286 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1278 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12AD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1A0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x12AD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x12AD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12AD JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1AB JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x1334 DUP3 PUSH2 0x1302 JUMP JUMPDEST SWAP3 PUSH2 0x1342 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x12DF JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x1AB JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12AD JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1AB JUMPI DUP2 CALLDATALOAD SWAP1 PUSH2 0x1393 DUP3 PUSH2 0x1364 JUMP JUMPDEST SWAP3 PUSH2 0x13A1 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x12DF JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 DUP1 DUP5 GT PUSH2 0x1AB JUMPI DUP5 DUP4 ADD SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x13CF JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1AB JUMPI DUP7 SWAP2 PUSH2 0x13F0 DUP5 DUP5 DUP1 SWAP5 DUP10 ADD ADD PUSH2 0x131D JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 DUP3 ADD MSTORE PUSH14 0x496E76616C696420737461747573 PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x1AB JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1AB JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x1AB JUMPI DUP3 MLOAD PUSH2 0x1459 DUP2 PUSH2 0x1364 JUMP JUMPDEST SWAP4 PUSH2 0x1467 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x12DF JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x1AB JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x148E JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x1480 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x14AA DUP3 PUSH2 0x12C3 JUMP JUMPDEST DUP2 PUSH2 0x180 PUSH1 0x0 SWAP2 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP1 PUSH1 0x40 DUP4 ADD MSTORE DUP1 DUP1 DUP4 ADD MSTORE DUP1 PUSH1 0x80 DUP4 ADD MSTORE DUP4 PUSH1 0xA0 DUP4 ADD MSTORE DUP4 PUSH1 0xC0 DUP4 ADD MSTORE DUP1 PUSH1 0xE0 DUP4 ADD MSTORE DUP4 PUSH2 0x100 DUP4 ADD MSTORE DUP4 PUSH2 0x120 DUP4 ADD MSTORE DUP1 PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x160 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1508 DUP3 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0x1515 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x12DF JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1526 PUSH1 0x1F NOT SWAP2 PUSH2 0x1364 JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1537 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1542 PUSH2 0x149D JUMP JUMPDEST DUP3 DUP3 DUP6 ADD ADD MSTORE ADD PUSH2 0x152B JUMP JUMPDEST SWAP1 PUSH2 0x1558 DUP3 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0x1565 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x12DF JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1576 PUSH1 0x1F NOT SWAP2 PUSH2 0x1364 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x158F JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x15B9 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1AB JUMPI DUP1 MLOAD PUSH2 0x15E5 DUP2 PUSH2 0x1302 JUMP JUMPDEST SWAP3 PUSH2 0x15F3 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x12DF JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x1AB JUMPI PUSH2 0x1167 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 DUP5 SUB SLT PUSH2 0x1AB JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH2 0x1AB JUMPI ADD SWAP2 PUSH2 0x1A0 DUP4 DUP6 SUB SLT PUSH2 0x1AB JUMPI PUSH1 0x40 SWAP2 DUP3 MLOAD SWAP5 PUSH2 0x164A DUP7 PUSH2 0x12C3 JUMP JUMPDEST DUP5 MLOAD DUP7 MSTORE DUP2 DUP6 ADD MLOAD DUP3 DUP8 ADD MSTORE DUP4 DUP6 ADD MLOAD DUP4 DUP2 GT PUSH2 0x1AB JUMPI DUP2 PUSH2 0x166D SWAP2 DUP8 ADD PUSH2 0x15CF JUMP JUMPDEST DUP5 DUP8 ADD MSTORE PUSH1 0x60 DUP1 DUP7 ADD MLOAD DUP5 DUP2 GT PUSH2 0x1AB JUMPI DUP3 PUSH2 0x168A SWAP2 DUP9 ADD PUSH2 0x15CF JUMP JUMPDEST DUP2 DUP9 ADD MSTORE PUSH1 0x80 DUP1 DUP8 ADD MLOAD DUP6 DUP2 GT PUSH2 0x1AB JUMPI DUP4 PUSH2 0x16A7 SWAP2 DUP10 ADD PUSH2 0x15CF JUMP JUMPDEST DUP2 DUP10 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 DUP9 ADD MLOAD DUP3 DUP11 ADD MSTORE PUSH1 0xC0 SWAP2 DUP3 DUP10 ADD MLOAD DUP4 DUP12 ADD MSTORE PUSH1 0xE0 DUP10 ADD MLOAD DUP8 DUP2 GT PUSH2 0x1AB JUMPI DUP10 ADD SWAP3 DUP6 PUSH1 0x1F DUP6 ADD SLT ISZERO PUSH2 0x1AB JUMPI DUP4 MLOAD SWAP3 PUSH2 0x16E7 DUP5 PUSH2 0x1364 JUMP JUMPDEST SWAP6 PUSH2 0x16F4 DUP12 MLOAD SWAP8 DUP9 PUSH2 0x12DF JUMP JUMPDEST DUP5 DUP8 MSTORE DUP9 DUP1 DUP9 ADD SWAP6 PUSH1 0x5 SHL DUP8 ADD ADD SWAP6 DUP9 DUP8 GT PUSH2 0x1AB JUMPI DUP10 DUP2 ADD SWAP6 JUMPDEST DUP8 DUP8 LT PUSH2 0x180D JUMPI POP POP POP POP POP POP POP POP PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP1 DUP7 ADD MLOAD SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x1AB JUMPI DUP8 ADD MSTORE PUSH2 0x120 DUP6 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1AB JUMPI DUP8 ADD MSTORE PUSH2 0x140 DUP1 DUP7 ADD MLOAD DUP5 DUP2 GT PUSH2 0x1AB JUMPI DUP3 PUSH2 0x176C SWAP2 DUP9 ADD PUSH2 0x15CF JUMP JUMPDEST SWAP1 DUP8 ADD MSTORE PUSH2 0x160 SWAP3 DUP4 DUP7 ADD MLOAD DUP2 DUP2 GT PUSH2 0x1AB JUMPI DUP7 ADD SWAP1 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1AB JUMPI DUP2 MLOAD SWAP1 PUSH2 0x17A5 PUSH2 0x179C DUP4 PUSH2 0x1364 JUMP JUMPDEST SWAP8 MLOAD SWAP8 DUP9 PUSH2 0x12DF JUMP JUMPDEST DUP2 DUP8 MSTORE DUP5 DUP1 DUP9 ADD SWAP3 PUSH1 0x5 SHL DUP5 ADD ADD SWAP4 DUP1 DUP6 GT PUSH2 0x1AB JUMPI DUP6 DUP5 ADD SWAP3 JUMPDEST DUP6 DUP5 LT PUSH2 0x17E8 JUMPI POP POP POP POP POP POP POP DUP4 ADD MSTORE PUSH2 0x180 DUP1 SWAP2 ADD MLOAD SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x1AB JUMPI DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP4 DUP2 GT PUSH2 0x1AB JUMPI DUP8 SWAP2 PUSH2 0x1802 DUP5 DUP5 DUP1 SWAP5 DUP11 ADD ADD PUSH2 0x15CF JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP3 PUSH2 0x17C0 JUMP JUMPDEST DUP7 MLOAD DUP13 DUP2 GT PUSH2 0x1AB JUMPI DUP3 ADD DUP6 PUSH1 0x1F NOT DUP3 DUP14 SUB ADD SLT PUSH2 0x1AB JUMPI DUP14 MLOAD DUP7 DUP2 ADD SWAP3 SWAP1 DUP15 DUP5 GT DUP2 DUP6 LT OR PUSH2 0x18A7 JUMPI SWAP3 DUP16 MSTORE DUP2 DUP14 ADD MLOAD SWAP3 DUP15 DUP5 GT PUSH2 0x1AB JUMPI DUP16 DUP16 SWAP5 DUP16 DUP16 SWAP1 PUSH2 0x1858 SWAP3 DUP8 ADD ADD PUSH2 0x15CF JUMP JUMPDEST DUP3 MSTORE DUP4 ADD MLOAD SWAP4 DUP5 GT PUSH2 0x1AB JUMPI DUP16 DUP4 DUP16 SWAP6 SWAP2 DUP16 PUSH2 0x187A SWAP1 DUP9 DUP14 SWAP6 DUP2 SWAP10 ADD ADD PUSH2 0x15CF JUMP JUMPDEST DUP7 DUP6 ADD MSTORE DUP9 DUP3 ADD MLOAD SWAP1 DUP5 ADD MSTORE DUP9 DUP2 ADD MLOAD DUP9 DUP5 ADD MSTORE DUP11 DUP2 ADD MLOAD DUP10 DUP5 ADD MSTORE ADD MLOAD DUP10 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP7 ADD SWAP6 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1AB JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1AB JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xEF PUSH14 0x38C6A1FC5F2261734B79D582D2F9 0xDD 0xB4 0xDE DUP14 0xEB 0xDC SWAP8 0xF6 SWAP14 0xB8 0xD3 SHR 0xBC SWAP5 0xDA PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"129:6381:27:-:0;;;;;;;;;;;;;-1:-1:-1;;129:6381:27;;;;-1:-1:-1;;;;;129:6381:27;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;129:6381:27;;;;;;;;;;;;;;;;-1:-1:-1;129:6381:27;;;-1:-1:-1;129:6381:27;680:10;129:6381;;;;;;;;;;;;;;;;;-1:-1:-1;129:6381:27;;;;;;-1:-1:-1;129:6381:27;;;;;-1:-1:-1;129:6381:27"},"deployedBytecode":{"functionDebugData":{"abi_decode_array_string_dyn":{"entryPoint":4987,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_dyn_fromMemory":{"entryPoint":5156,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":6332,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string":{"entryPoint":4893,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":5583,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_Asset_fromMemory":{"entryPoint":5649,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_struct_Asset_dyn":{"entryPoint":4618,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":4710,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_enum_Category":{"entryPoint":4113,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":4076,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral_5daf":{"entryPoint":5115,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_Asset":{"entryPoint":4148,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_struct_Asset_dyn":{"entryPoint":5374,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":5454,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Asset":{"entryPoint":5277,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_string_dyn":{"entryPoint":4964,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":4866,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4041,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":4831,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_16119":{"entryPoint":4762,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_16121":{"entryPoint":4803,"id":null,"parameterSlots":1,"returnSlots":0},"increment_uint256":{"entryPoint":5504,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":5541,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b600090813560e01c9081633803112314610c94575080634663a28c146109855780635563633d146106f257806356e4b68b146106c957806386275c5a14610248578063b3e444a7146101b35763f3ab880e1461006e57600080fd5b346101b05760203660031901126101b0576004356001600160a01b0381811692918390036101ab57815416604051926379d5c40760e11b8452600484015260249082848381845afa9384156101a057839461017c575b508351916100d1836114fe565b94845b8481106100f557604051602080825281906100f19082018a61120a565b0390f35b6100ff81836115a5565b5160405190631d591eb760e31b8252600482015286818581885afa908115610171579061014a9291889161014f575b50610139828a6115a5565b5261014481896115a5565b50611580565b6100d4565b61016b91503d808a833e61016381836112df565b810190611611565b3861012e565b6040513d89823e3d90fd5b6101999194503d8085833e61019181836112df565b810190611424565b92386100c4565b6040513d85823e3d90fd5b600080fd5b80fd5b50346101b05760203660031901126101b0576101cd61149d565b508054604051631d591eb760e31b81526004803590820152908290829060249082906001600160a01b03165afa90811561023d57826100f19392610222575b5050604051918291602083526020830190611034565b61023692503d8091833e61016381836112df565b388061020c565b6040513d84823e3d90fd5b50346101b0576101403660031901126101b0576001600160401b0360243581811161055e5761027b90369060040161131d565b6044358281116105425761029390369060040161131d565b906064358381116106c5576102ac90369060040161131d565b9260a435916001600160a01b03831683036101ab5760c4358281116106c1576102d990369060040161131d565b9460e4358381116106bd576102f290369060040161131d565b92610104359081116106bd5761030c90369060040161137b565b60056101243510156106bd576001546001600160a01b03163303610669576004351561062d5742608435106105d7576001600160a01b03851615610599578754604051630aac5dfd60e01b81529689956001600160a01b039092169390602089600481885afa988915610171578799610562575b506040519561038e876112c3565b89875260043560208801526040870152606086015260808501524260a085015260843560c0850152606060e0850152846101008501528461012085015261014084015261016083015261012435610180830152803b1561055e5761041a8392918392604051948580948193631b8513e960e31b83528b6004840152606060248401526064830190611034565b6001600160a01b038a16604483015203925af1801561023d5761054a575b5080546001600160a01b0316803b15610546576040516334ff261960e21b81526001600160a01b03841660048201526024810185905260606044820152908290829081838161048a606482018c610fec565b03925af1801561023d5761052e575b505060405160208082526001600160a01b03909216937f49b4e4c6879cdc85b51d8c3b572252aaa7842edb863810854acb6d2ed420d9629282916104df91830190610fec565b0390a3805481906001600160a01b0316803b1561052b57818091600460405180948193632c5bdb1f60e01b83525af1801561023d5761051b5750f35b6105249061129a565b6101b05780f35b50fd5b6105379061129a565b610542578338610499565b8380fd5b5080fd5b6105539061129a565b610542578338610438565b8280fd5b965097506020863d602011610591575b8161057f602093836112df565b810103126101ab578995519738610380565b3d9150610572565b60405162461bcd60e51b8152602060048201526016602482015275416464726573732063616e6e6f74206265207a65726f60501b6044820152606490fd5b60405162461bcd60e51b815260206004820152602860248201527f50726f6a65637420656e6420646174652073686f756c6420626520696e207468604482015267652066757475726560c01b6064820152608490fd5b60405162461bcd60e51b815260206004820152601460248201527350726963652063616e6e6f74206265207a65726f60601b6044820152606490fd5b60405162461bcd60e51b815260206004820152602660248201527f4f6e6c792073757065727669736f722063616e2063616c6c20746869732066756044820152653731ba34b7b760d11b6064820152608490fd5b8780fd5b8680fd5b8480fd5b50346101b057806003193601126101b0576001546040516001600160a01b039091168152602090f35b50346101b05760803660031901126101b0576024906001600160401b0360043583358281116105425761072990369060040161131d565b916044358181116106c55761074290369060040161137b565b906064359081116106c55761075b90369060040161131d565b8454604051634f558e7960e01b8152600481018590526001600160a01b03909116929060209081818a81885afa908115610923578891610968575b501561092e5760405163430c208160e01b81523360048201528881018690528181604481885afa9081156109235788916108f6575b50156108bb575085939291879160405196631d591eb760e31b885285600489015286888581885afa97881561017157879861089f575b50805115610893575b610140880152805115610887575b61016087015280511561087c575b6080860152813b15610542578360409361085e855197889687958694631c29952960e31b865260048601528401526044830190611034565b03925af1801561023d57610870575080f35b6108799061129a565b80f35b506080850151610826565b50610160860151610818565b5061014087015161080a565b6108b49198503d8089833e61016381836112df565b9689610801565b6064906015896040519262461bcd60e51b84526004840152820152742737ba1030b8383937bb32b21037b91037bbb732b960591b6044820152fd5b6109169150823d841161091c575b61090e81836112df565b8101906118bc565b386107cb565b503d610904565b6040513d8a823e3d90fd5b6064906014896040519262461bcd60e51b8452600484015282015273105cdcd95d08191bd95cc81b9bdd08195e1a5cdd60621b6044820152fd5b61097f9150823d841161091c5761090e81836112df565b38610796565b50346101b05760403660031901126101b057600435600481101561054657602480359160058310156105425780610b9c575082546040516301fb15dd60e31b8152908490829060049082906001600160a01b03165afa908115610b91578491610b77575b50925b805460405163a2311d5f60e01b81526001600160a01b0390911693610a15906004830190611011565b81818481875afa90811561023d578291610b5d575b50610a35815161154e565b928290835b8751811015610a675780610a51610a62928a6115a5565b51610a5c82896115a5565b52611580565b610a3a565b5090919294610a7684516114fe565b9186945b8051861015610b4757875b8751811015610b3c57610a9887836115a5565b51610aa3828a6115a5565b5114610ab757610ab290611580565b610a85565b509493610ac485876115a5565b5160405190631d591eb760e31b8252600482015288818481875afa918215610b3157610b1192610b0b928b91610b17575b50610b0082886115a5565b5261014481876115a5565b94611580565b94610a7a565b610b2b91503d808d833e61016381836112df565b8b610af5565b6040513d8b823e3d90fd5b5094610b1190611580565b604051602080825281906100f19082018761120a565b610b7191503d8084833e61019181836112df565b38610a2a565b610b8b91503d8086833e61019181836112df565b386109e9565b6040513d86823e3d90fd5b60018103610bf757508254604051620dee2360e51b8152908490829060049082906001600160a01b03165afa908115610b91578491610bdd575b50926109ec565b610bf191503d8086833e61019181836112df565b38610bd6565b60028103610c3857508254604051630f4facc560e21b8152908490829060049082906001600160a01b03165afa908115610b91578491610bdd5750926109ec565b600303610c77578254604051635aff92c160e11b8152908490829060049082906001600160a01b03165afa908115610b91578491610bdd5750926109ec565b60405162461bcd60e51b815280610c90600482016113fb565b0390fd5b82346101b0576020918260031936011261054657600435600481101561055e5780610ed557505080546040516301fb15dd60e31b8152908290829060049082906001600160a01b03165afa90811561023d578291610ebb575b50905b815191610cfc836114fe565b92610d068161154e565b91610d108261154e565b845490946001600160a01b0390911691815b848110610d6557610d4a886100f189610d578d8b60405196879660608852606088019061120a565b9186830390870152611266565b908382036040850152611266565b610d6f81836115a5565b519060405191631d591eb760e31b8352600483015260249184818481895afa908115610e96578591610ea1575b50610da7828b6115a5565b52610db2818a6115a5565b50610dbd81846115a5565b51604051906334422a4760e01b825260048201528a818481895afa908115610e96578591610e69575b50610df182896115a5565b5289610dfd82856115a5565b51604051938491631d6e430760e11b8352600483015281885afa8015610b91578490610e38575b610e339250610a5c828a6115a5565b610d22565b50908981813d8311610e62575b610e4f81836112df565b810103126105425790610e339151610e24565b503d610e45565b90508a81813d8311610e8f575b610e8081836112df565b810103126106c557518b610de6565b503d610e76565b6040513d87823e3d90fd5b610eb591503d8087833e61016381836112df565b8b610d9c565b610ecf91503d8084833e61019181836112df565b83610ced565b60018103610f315750508054604051620dee2360e51b8152908290829060049082906001600160a01b03165afa90811561023d578291610f17575b5090610cf0565b610f2b91503d8084833e61019181836112df565b83610f10565b60028103610f735750508054604051630f4facc560e21b8152908290829060049082906001600160a01b03165afa90811561023d578291610f17575090610cf0565b600303610fb357508054604051635aff92c160e11b8152908290829060049082906001600160a01b03165afa90811561023d578291610f17575090610cf0565b62461bcd60e51b815280610c90600482016113fb565b60005b838110610fdc5750506000910152565b8181015183820152602001610fcc565b9060209161100581518092818552858086019101610fc9565b601f01601f1916010190565b90600582101561101e5752565b634e487b7160e01b600052602160045260246000fd5b9190825181526020908184015182820152604061105e818601516101a08084860152840190610fec565b6110746060918288015185820384870152610fec565b9161108b6080938489015186820386880152610fec565b60a093848901518587015260c092838a01518488015260e08a01519587840360e0890152865194858552898501938a808860051b8801019901976000965b8c8989106111975750505050505050505050506101009081860151600481101561101e5761111b9284015261012060018060a01b03818801511690840152610140808701519084830390850152610fec565b936101609283820151938387039084015283518087528187019180808360051b8a01019601926000905b83821061116a5750505050506111679293945061018080910151910190611011565b90565b909192939683806111886001938d601f199082030186528b51610fec565b99019201920190939291611145565b80600192939495969798999a9b9c601f19858203018b528d519089806111d76111c785518d86528d860190610fec565b8686015185820388870152610fec565b938d8082015190850152898101518a8501528a8101518b85015201519101529c01980198019698979594939291906110c9565b908082519081815260208091019281808460051b8301019501936000915b8483106112385750505050505090565b9091929394958480611256600193601f198682030187528a51611034565b9801930193019194939290611228565b90815180825260208080930193019160005b828110611286575050505090565b835185529381019392810192600101611278565b6001600160401b0381116112ad57604052565b634e487b7160e01b600052604160045260246000fd5b6101a081019081106001600160401b038211176112ad57604052565b601f909101601f19168101906001600160401b038211908210176112ad57604052565b6001600160401b0381116112ad57601f01601f191660200190565b81601f820112156101ab5780359061133482611302565b9261134260405194856112df565b828452602083830101116101ab57816000926020809301838601378301015290565b6001600160401b0381116112ad5760051b60200190565b9080601f830112156101ab5781359061139382611364565b926113a160405194856112df565b828452602092838086019160051b830101928084116101ab57848301915b8483106113cf5750505050505090565b82356001600160401b0381116101ab5786916113f08484809489010161131d565b8152019201916113bf565b60609060208152600e60208201526d496e76616c69642073746174757360901b60408201520190565b60209081818403126101ab578051906001600160401b0382116101ab57019180601f840112156101ab57825161145981611364565b9361146760405195866112df565b818552838086019260051b8201019283116101ab578301905b82821061148e575050505090565b81518152908301908301611480565b604051906114aa826112c3565b81610180600091828152826020820152606080604083015280808301528060808301528360a08301528360c08301528060e08301528361010083015283610120830152806101408301526101608201520152565b9061150882611364565b61151560405191826112df565b8281528092611526601f1991611364565b019060005b82811061153757505050565b60209061154261149d565b8282850101520161152b565b9061155882611364565b61156560405191826112df565b8281528092611576601f1991611364565b0190602036910137565b600019811461158f5760010190565b634e487b7160e01b600052601160045260246000fd5b80518210156115b95760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b81601f820112156101ab5780516115e581611302565b926115f360405194856112df565b818452602082840101116101ab576111679160208085019101610fc9565b602080828403126101ab5781516001600160401b03928382116101ab5701916101a0838503126101ab5760409182519461164a866112c3565b845186528185015182870152838501518381116101ab578161166d9187016115cf565b848701526060808601518481116101ab578261168a9188016115cf565b818801526080808701518581116101ab57836116a79189016115cf565b8189015260a09081880151828a015260c09182890151838b015260e08901518781116101ab5789019285601f850112156101ab578351926116e784611364565b956116f48b5197886112df565b848752888088019560051b870101958887116101ab57898101955b87871061180d57505050505050505060e0870152610100808601519060048210156101ab5787015261012085810151906001600160a01b03821682036101ab57870152610140808601518481116101ab578261176c9188016115cf565b9087015261016092838601518181116101ab5786019082601f830112156101ab578151906117a561179c83611364565b975197886112df565b818752848088019260051b840101938085116101ab57858401925b8584106117e85750505050505050830152610180809101519060058210156101ab5782015290565b83518381116101ab578791611802848480948a01016115cf565b8152019301926117c0565b86518c81116101ab57820185601f19828d0301126101ab578d5186810192908e8411818510176118a757928f52818d0151928e84116101ab578f8f948f8f90611858928701016115cf565b82528301519384116101ab578f838f95918f61187a90888d95819901016115cf565b86850152888201519084015288810151888401528a8101518984015201518982015281520196019561170f565b60246000634e487b7160e01b81526041600452fd5b908160209103126101ab575180151581036101ab579056fea2646970667358221220c7ef6d38c6a1fc5f2261734b79d582d2f9ddb4de8debdc97f69db8d31cbc94da64736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x38031123 EQ PUSH2 0xC94 JUMPI POP DUP1 PUSH4 0x4663A28C EQ PUSH2 0x985 JUMPI DUP1 PUSH4 0x5563633D EQ PUSH2 0x6F2 JUMPI DUP1 PUSH4 0x56E4B68B EQ PUSH2 0x6C9 JUMPI DUP1 PUSH4 0x86275C5A EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xB3E444A7 EQ PUSH2 0x1B3 JUMPI PUSH4 0xF3AB880E EQ PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP3 SWAP2 DUP4 SWAP1 SUB PUSH2 0x1AB JUMPI DUP2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 PUSH4 0x79D5C407 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 SWAP1 DUP3 DUP5 DUP4 DUP2 DUP5 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x1A0 JUMPI DUP4 SWAP5 PUSH2 0x17C JUMPI JUMPDEST POP DUP4 MLOAD SWAP2 PUSH2 0xD1 DUP4 PUSH2 0x14FE JUMP JUMPDEST SWAP5 DUP5 JUMPDEST DUP5 DUP2 LT PUSH2 0xF5 JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0xF1 SWAP1 DUP3 ADD DUP11 PUSH2 0x120A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF DUP2 DUP4 PUSH2 0x15A5 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x1D591EB7 PUSH1 0xE3 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP7 DUP2 DUP6 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x171 JUMPI SWAP1 PUSH2 0x14A SWAP3 SWAP2 DUP9 SWAP2 PUSH2 0x14F JUMPI JUMPDEST POP PUSH2 0x139 DUP3 DUP11 PUSH2 0x15A5 JUMP JUMPDEST MSTORE PUSH2 0x144 DUP2 DUP10 PUSH2 0x15A5 JUMP JUMPDEST POP PUSH2 0x1580 JUMP JUMPDEST PUSH2 0xD4 JUMP JUMPDEST PUSH2 0x16B SWAP2 POP RETURNDATASIZE DUP1 DUP11 DUP4 RETURNDATACOPY PUSH2 0x163 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1611 JUMP JUMPDEST CODESIZE PUSH2 0x12E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x199 SWAP2 SWAP5 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x191 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1424 JUMP JUMPDEST SWAP3 CODESIZE PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B0 JUMPI PUSH2 0x1CD PUSH2 0x149D JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1D591EB7 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x23D JUMPI DUP3 PUSH2 0xF1 SWAP4 SWAP3 PUSH2 0x222 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1034 JUMP JUMPDEST PUSH2 0x236 SWAP3 POP RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x163 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B0 JUMPI PUSH2 0x140 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x55E JUMPI PUSH2 0x27B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x131D JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x542 JUMPI PUSH2 0x293 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x131D JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x6C5 JUMPI PUSH2 0x2AC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x131D JUMP JUMPDEST SWAP3 PUSH1 0xA4 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x1AB JUMPI PUSH1 0xC4 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x6C1 JUMPI PUSH2 0x2D9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x131D JUMP JUMPDEST SWAP5 PUSH1 0xE4 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x6BD JUMPI PUSH2 0x2F2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x131D JUMP JUMPDEST SWAP3 PUSH2 0x104 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x6BD JUMPI PUSH2 0x30C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x137B JUMP JUMPDEST PUSH1 0x5 PUSH2 0x124 CALLDATALOAD LT ISZERO PUSH2 0x6BD JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x669 JUMPI PUSH1 0x4 CALLDATALOAD ISZERO PUSH2 0x62D JUMPI TIMESTAMP PUSH1 0x84 CALLDATALOAD LT PUSH2 0x5D7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x599 JUMPI DUP8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xAAC5DFD PUSH1 0xE0 SHL DUP2 MSTORE SWAP7 DUP10 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 SWAP1 PUSH1 0x20 DUP10 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP9 DUP10 ISZERO PUSH2 0x171 JUMPI DUP8 SWAP10 PUSH2 0x562 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP6 PUSH2 0x38E DUP8 PUSH2 0x12C3 JUMP JUMPDEST DUP10 DUP8 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x60 PUSH1 0xE0 DUP6 ADD MSTORE DUP5 PUSH2 0x100 DUP6 ADD MSTORE DUP5 PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x124 CALLDATALOAD PUSH2 0x180 DUP4 ADD MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0x55E JUMPI PUSH2 0x41A DUP4 SWAP3 SWAP2 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1B8513E9 PUSH1 0xE3 SHL DUP4 MSTORE DUP12 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD SWAP1 PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x44 DUP4 ADD MSTORE SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x23D JUMPI PUSH2 0x54A JUMPI JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH4 0x34FF2619 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 DUP2 DUP4 DUP2 PUSH2 0x48A PUSH1 0x64 DUP3 ADD DUP13 PUSH2 0xFEC JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x23D JUMPI PUSH2 0x52E JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 PUSH32 0x49B4E4C6879CDC85B51D8C3B572252AAA7842EDB863810854ACB6D2ED420D962 SWAP3 DUP3 SWAP2 PUSH2 0x4DF SWAP2 DUP4 ADD SWAP1 PUSH2 0xFEC JUMP JUMPDEST SUB SWAP1 LOG3 DUP1 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x52B JUMPI DUP2 DUP1 SWAP2 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x2C5BDB1F PUSH1 0xE0 SHL DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x23D JUMPI PUSH2 0x51B JUMPI POP RETURN JUMPDEST PUSH2 0x524 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH2 0x1B0 JUMPI DUP1 RETURN JUMPDEST POP REVERT JUMPDEST PUSH2 0x537 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH2 0x542 JUMPI DUP4 CODESIZE PUSH2 0x499 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH2 0x553 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH2 0x542 JUMPI DUP4 CODESIZE PUSH2 0x438 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP7 POP SWAP8 POP PUSH1 0x20 DUP7 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x591 JUMPI JUMPDEST DUP2 PUSH2 0x57F PUSH1 0x20 SWAP4 DUP4 PUSH2 0x12DF JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1AB JUMPI DUP10 SWAP6 MLOAD SWAP8 CODESIZE PUSH2 0x380 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x572 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x416464726573732063616E6E6F74206265207A65726F PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A65637420656E6420646174652073686F756C6420626520696E207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6520667574757265 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x50726963652063616E6E6F74206265207A65726F PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792073757065727669736F722063616E2063616C6C2074686973206675 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x3731BA34B7B7 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1B0 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1B0 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1B0 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B0 JUMPI PUSH1 0x24 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP4 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x542 JUMPI PUSH2 0x729 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x131D JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x6C5 JUMPI PUSH2 0x742 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x137B JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x6C5 JUMPI PUSH2 0x75B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x131D JUMP JUMPDEST DUP5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4F558E79 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 PUSH1 0x20 SWAP1 DUP2 DUP2 DUP11 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x923 JUMPI DUP9 SWAP2 PUSH2 0x968 JUMPI JUMPDEST POP ISZERO PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD PUSH4 0x430C2081 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP9 DUP2 ADD DUP7 SWAP1 MSTORE DUP2 DUP2 PUSH1 0x44 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x923 JUMPI DUP9 SWAP2 PUSH2 0x8F6 JUMPI JUMPDEST POP ISZERO PUSH2 0x8BB JUMPI POP DUP6 SWAP4 SWAP3 SWAP2 DUP8 SWAP2 PUSH1 0x40 MLOAD SWAP7 PUSH4 0x1D591EB7 PUSH1 0xE3 SHL DUP9 MSTORE DUP6 PUSH1 0x4 DUP10 ADD MSTORE DUP7 DUP9 DUP6 DUP2 DUP9 GAS STATICCALL SWAP8 DUP9 ISZERO PUSH2 0x171 JUMPI DUP8 SWAP9 PUSH2 0x89F JUMPI JUMPDEST POP DUP1 MLOAD ISZERO PUSH2 0x893 JUMPI JUMPDEST PUSH2 0x140 DUP9 ADD MSTORE DUP1 MLOAD ISZERO PUSH2 0x887 JUMPI JUMPDEST PUSH2 0x160 DUP8 ADD MSTORE DUP1 MLOAD ISZERO PUSH2 0x87C JUMPI JUMPDEST PUSH1 0x80 DUP7 ADD MSTORE DUP2 EXTCODESIZE ISZERO PUSH2 0x542 JUMPI DUP4 PUSH1 0x40 SWAP4 PUSH2 0x85E DUP6 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x1C299529 PUSH1 0xE3 SHL DUP7 MSTORE PUSH1 0x4 DUP7 ADD MSTORE DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x1034 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x23D JUMPI PUSH2 0x870 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x879 SWAP1 PUSH2 0x129A JUMP JUMPDEST DUP1 RETURN JUMPDEST POP PUSH1 0x80 DUP6 ADD MLOAD PUSH2 0x826 JUMP JUMPDEST POP PUSH2 0x160 DUP7 ADD MLOAD PUSH2 0x818 JUMP JUMPDEST POP PUSH2 0x140 DUP8 ADD MLOAD PUSH2 0x80A JUMP JUMPDEST PUSH2 0x8B4 SWAP2 SWAP9 POP RETURNDATASIZE DUP1 DUP10 DUP4 RETURNDATACOPY PUSH2 0x163 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST SWAP7 DUP10 PUSH2 0x801 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x15 DUP10 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH21 0x2737BA1030B8383937BB32B21037B91037BBB732B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x916 SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x91C JUMPI JUMPDEST PUSH2 0x90E DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x18BC JUMP JUMPDEST CODESIZE PUSH2 0x7CB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x904 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x14 DUP10 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH20 0x105CDCD95D08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x97F SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0x91C JUMPI PUSH2 0x90E DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST CODESIZE PUSH2 0x796 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x546 JUMPI PUSH1 0x24 DUP1 CALLDATALOAD SWAP2 PUSH1 0x5 DUP4 LT ISZERO PUSH2 0x542 JUMPI DUP1 PUSH2 0xB9C JUMPI POP DUP3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1FB15DD PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB91 JUMPI DUP5 SWAP2 PUSH2 0xB77 JUMPI JUMPDEST POP SWAP3 JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA2311D5F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 PUSH2 0xA15 SWAP1 PUSH1 0x4 DUP4 ADD SWAP1 PUSH2 0x1011 JUMP JUMPDEST DUP2 DUP2 DUP5 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x23D JUMPI DUP3 SWAP2 PUSH2 0xB5D JUMPI JUMPDEST POP PUSH2 0xA35 DUP2 MLOAD PUSH2 0x154E JUMP JUMPDEST SWAP3 DUP3 SWAP1 DUP4 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0xA67 JUMPI DUP1 PUSH2 0xA51 PUSH2 0xA62 SWAP3 DUP11 PUSH2 0x15A5 JUMP JUMPDEST MLOAD PUSH2 0xA5C DUP3 DUP10 PUSH2 0x15A5 JUMP JUMPDEST MSTORE PUSH2 0x1580 JUMP JUMPDEST PUSH2 0xA3A JUMP JUMPDEST POP SWAP1 SWAP2 SWAP3 SWAP5 PUSH2 0xA76 DUP5 MLOAD PUSH2 0x14FE JUMP JUMPDEST SWAP2 DUP7 SWAP5 JUMPDEST DUP1 MLOAD DUP7 LT ISZERO PUSH2 0xB47 JUMPI DUP8 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0xB3C JUMPI PUSH2 0xA98 DUP8 DUP4 PUSH2 0x15A5 JUMP JUMPDEST MLOAD PUSH2 0xAA3 DUP3 DUP11 PUSH2 0x15A5 JUMP JUMPDEST MLOAD EQ PUSH2 0xAB7 JUMPI PUSH2 0xAB2 SWAP1 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST POP SWAP5 SWAP4 PUSH2 0xAC4 DUP6 DUP8 PUSH2 0x15A5 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x1D591EB7 PUSH1 0xE3 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP9 DUP2 DUP5 DUP2 DUP8 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xB31 JUMPI PUSH2 0xB11 SWAP3 PUSH2 0xB0B SWAP3 DUP12 SWAP2 PUSH2 0xB17 JUMPI JUMPDEST POP PUSH2 0xB00 DUP3 DUP9 PUSH2 0x15A5 JUMP JUMPDEST MSTORE PUSH2 0x144 DUP2 DUP8 PUSH2 0x15A5 JUMP JUMPDEST SWAP5 PUSH2 0x1580 JUMP JUMPDEST SWAP5 PUSH2 0xA7A JUMP JUMPDEST PUSH2 0xB2B SWAP2 POP RETURNDATASIZE DUP1 DUP14 DUP4 RETURNDATACOPY PUSH2 0x163 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST DUP12 PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP5 PUSH2 0xB11 SWAP1 PUSH2 0x1580 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0xF1 SWAP1 DUP3 ADD DUP8 PUSH2 0x120A JUMP JUMPDEST PUSH2 0xB71 SWAP2 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x191 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST CODESIZE PUSH2 0xA2A JUMP JUMPDEST PUSH2 0xB8B SWAP2 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x191 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST CODESIZE PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0xBF7 JUMPI POP DUP3 SLOAD PUSH1 0x40 MLOAD PUSH3 0xDEE23 PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB91 JUMPI DUP5 SWAP2 PUSH2 0xBDD JUMPI JUMPDEST POP SWAP3 PUSH2 0x9EC JUMP JUMPDEST PUSH2 0xBF1 SWAP2 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x191 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST CODESIZE PUSH2 0xBD6 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0xC38 JUMPI POP DUP3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xF4FACC5 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB91 JUMPI DUP5 SWAP2 PUSH2 0xBDD JUMPI POP SWAP3 PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x3 SUB PUSH2 0xC77 JUMPI DUP3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5AFF92C1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xB91 JUMPI DUP5 SWAP2 PUSH2 0xBDD JUMPI POP SWAP3 PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xC90 PUSH1 0x4 DUP3 ADD PUSH2 0x13FB JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x1B0 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x546 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x55E JUMPI DUP1 PUSH2 0xED5 JUMPI POP POP DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1FB15DD PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x23D JUMPI DUP3 SWAP2 PUSH2 0xEBB JUMPI JUMPDEST POP SWAP1 JUMPDEST DUP2 MLOAD SWAP2 PUSH2 0xCFC DUP4 PUSH2 0x14FE JUMP JUMPDEST SWAP3 PUSH2 0xD06 DUP2 PUSH2 0x154E JUMP JUMPDEST SWAP2 PUSH2 0xD10 DUP3 PUSH2 0x154E JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP2 JUMPDEST DUP5 DUP2 LT PUSH2 0xD65 JUMPI PUSH2 0xD4A DUP9 PUSH2 0xF1 DUP10 PUSH2 0xD57 DUP14 DUP12 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH1 0x60 DUP9 MSTORE PUSH1 0x60 DUP9 ADD SWAP1 PUSH2 0x120A JUMP JUMPDEST SWAP2 DUP7 DUP4 SUB SWAP1 DUP8 ADD MSTORE PUSH2 0x1266 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x1266 JUMP JUMPDEST PUSH2 0xD6F DUP2 DUP4 PUSH2 0x15A5 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH4 0x1D591EB7 PUSH1 0xE3 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 SWAP2 DUP5 DUP2 DUP5 DUP2 DUP10 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xE96 JUMPI DUP6 SWAP2 PUSH2 0xEA1 JUMPI JUMPDEST POP PUSH2 0xDA7 DUP3 DUP12 PUSH2 0x15A5 JUMP JUMPDEST MSTORE PUSH2 0xDB2 DUP2 DUP11 PUSH2 0x15A5 JUMP JUMPDEST POP PUSH2 0xDBD DUP2 DUP5 PUSH2 0x15A5 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH4 0x34422A47 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE DUP11 DUP2 DUP5 DUP2 DUP10 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xE96 JUMPI DUP6 SWAP2 PUSH2 0xE69 JUMPI JUMPDEST POP PUSH2 0xDF1 DUP3 DUP10 PUSH2 0x15A5 JUMP JUMPDEST MSTORE DUP10 PUSH2 0xDFD DUP3 DUP6 PUSH2 0x15A5 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH4 0x1D6E4307 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0xB91 JUMPI DUP5 SWAP1 PUSH2 0xE38 JUMPI JUMPDEST PUSH2 0xE33 SWAP3 POP PUSH2 0xA5C DUP3 DUP11 PUSH2 0x15A5 JUMP JUMPDEST PUSH2 0xD22 JUMP JUMPDEST POP SWAP1 DUP10 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xE62 JUMPI JUMPDEST PUSH2 0xE4F DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x542 JUMPI SWAP1 PUSH2 0xE33 SWAP2 MLOAD PUSH2 0xE24 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE45 JUMP JUMPDEST SWAP1 POP DUP11 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xE8F JUMPI JUMPDEST PUSH2 0xE80 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6C5 JUMPI MLOAD DUP12 PUSH2 0xDE6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE76 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xEB5 SWAP2 POP RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0x163 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST DUP12 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xECF SWAP2 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x191 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST DUP4 PUSH2 0xCED JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0xF31 JUMPI POP POP DUP1 SLOAD PUSH1 0x40 MLOAD PUSH3 0xDEE23 PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x23D JUMPI DUP3 SWAP2 PUSH2 0xF17 JUMPI JUMPDEST POP SWAP1 PUSH2 0xCF0 JUMP JUMPDEST PUSH2 0xF2B SWAP2 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x191 DUP2 DUP4 PUSH2 0x12DF JUMP JUMPDEST DUP4 PUSH2 0xF10 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0xF73 JUMPI POP POP DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xF4FACC5 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x23D JUMPI DUP3 SWAP2 PUSH2 0xF17 JUMPI POP SWAP1 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x3 SUB PUSH2 0xFB3 JUMPI POP DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5AFF92C1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x23D JUMPI DUP3 SWAP2 PUSH2 0xF17 JUMPI POP SWAP1 PUSH2 0xCF0 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xC90 PUSH1 0x4 DUP3 ADD PUSH2 0x13FB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xFDC JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFCC JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1005 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x101E JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 DUP5 ADD MLOAD DUP3 DUP3 ADD MSTORE PUSH1 0x40 PUSH2 0x105E DUP2 DUP7 ADD MLOAD PUSH2 0x1A0 DUP1 DUP5 DUP7 ADD MSTORE DUP5 ADD SWAP1 PUSH2 0xFEC JUMP JUMPDEST PUSH2 0x1074 PUSH1 0x60 SWAP2 DUP3 DUP9 ADD MLOAD DUP6 DUP3 SUB DUP5 DUP8 ADD MSTORE PUSH2 0xFEC JUMP JUMPDEST SWAP2 PUSH2 0x108B PUSH1 0x80 SWAP4 DUP5 DUP10 ADD MLOAD DUP7 DUP3 SUB DUP7 DUP9 ADD MSTORE PUSH2 0xFEC JUMP JUMPDEST PUSH1 0xA0 SWAP4 DUP5 DUP10 ADD MLOAD DUP6 DUP8 ADD MSTORE PUSH1 0xC0 SWAP3 DUP4 DUP11 ADD MLOAD DUP5 DUP9 ADD MSTORE PUSH1 0xE0 DUP11 ADD MLOAD SWAP6 DUP8 DUP5 SUB PUSH1 0xE0 DUP10 ADD MSTORE DUP7 MLOAD SWAP5 DUP6 DUP6 MSTORE DUP10 DUP6 ADD SWAP4 DUP11 DUP1 DUP9 PUSH1 0x5 SHL DUP9 ADD ADD SWAP10 ADD SWAP8 PUSH1 0x0 SWAP7 JUMPDEST DUP13 DUP10 DUP10 LT PUSH2 0x1197 JUMPI POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x100 SWAP1 DUP2 DUP7 ADD MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x101E JUMPI PUSH2 0x111B SWAP3 DUP5 ADD MSTORE PUSH2 0x120 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 DUP9 ADD MLOAD AND SWAP1 DUP5 ADD MSTORE PUSH2 0x140 DUP1 DUP8 ADD MLOAD SWAP1 DUP5 DUP4 SUB SWAP1 DUP6 ADD MSTORE PUSH2 0xFEC JUMP JUMPDEST SWAP4 PUSH2 0x160 SWAP3 DUP4 DUP3 ADD MLOAD SWAP4 DUP4 DUP8 SUB SWAP1 DUP5 ADD MSTORE DUP4 MLOAD DUP1 DUP8 MSTORE DUP2 DUP8 ADD SWAP2 DUP1 DUP1 DUP4 PUSH1 0x5 SHL DUP11 ADD ADD SWAP7 ADD SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x116A JUMPI POP POP POP POP POP PUSH2 0x1167 SWAP3 SWAP4 SWAP5 POP PUSH2 0x180 DUP1 SWAP2 ADD MLOAD SWAP2 ADD SWAP1 PUSH2 0x1011 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP7 DUP4 DUP1 PUSH2 0x1188 PUSH1 0x1 SWAP4 DUP14 PUSH1 0x1F NOT SWAP1 DUP3 SUB ADD DUP7 MSTORE DUP12 MLOAD PUSH2 0xFEC JUMP JUMPDEST SWAP10 ADD SWAP3 ADD SWAP3 ADD SWAP1 SWAP4 SWAP3 SWAP2 PUSH2 0x1145 JUMP JUMPDEST DUP1 PUSH1 0x1 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 SWAP12 SWAP13 PUSH1 0x1F NOT DUP6 DUP3 SUB ADD DUP12 MSTORE DUP14 MLOAD SWAP1 DUP10 DUP1 PUSH2 0x11D7 PUSH2 0x11C7 DUP6 MLOAD DUP14 DUP7 MSTORE DUP14 DUP7 ADD SWAP1 PUSH2 0xFEC JUMP JUMPDEST DUP7 DUP7 ADD MLOAD DUP6 DUP3 SUB DUP9 DUP8 ADD MSTORE PUSH2 0xFEC JUMP JUMPDEST SWAP4 DUP14 DUP1 DUP3 ADD MLOAD SWAP1 DUP6 ADD MSTORE DUP10 DUP2 ADD MLOAD DUP11 DUP6 ADD MSTORE DUP11 DUP2 ADD MLOAD DUP12 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP13 ADD SWAP9 ADD SWAP9 ADD SWAP7 SWAP9 SWAP8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST SWAP1 DUP1 DUP3 MLOAD SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 DUP2 DUP1 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x1238 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x1256 PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x1034 JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x1228 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1286 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1278 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12AD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1A0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x12AD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x12AD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12AD JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1AB JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x1334 DUP3 PUSH2 0x1302 JUMP JUMPDEST SWAP3 PUSH2 0x1342 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x12DF JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x1AB JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12AD JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1AB JUMPI DUP2 CALLDATALOAD SWAP1 PUSH2 0x1393 DUP3 PUSH2 0x1364 JUMP JUMPDEST SWAP3 PUSH2 0x13A1 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x12DF JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 DUP1 DUP5 GT PUSH2 0x1AB JUMPI DUP5 DUP4 ADD SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x13CF JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1AB JUMPI DUP7 SWAP2 PUSH2 0x13F0 DUP5 DUP5 DUP1 SWAP5 DUP10 ADD ADD PUSH2 0x131D JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 DUP3 ADD MSTORE PUSH14 0x496E76616C696420737461747573 PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x1AB JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1AB JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x1AB JUMPI DUP3 MLOAD PUSH2 0x1459 DUP2 PUSH2 0x1364 JUMP JUMPDEST SWAP4 PUSH2 0x1467 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x12DF JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x1AB JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x148E JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x1480 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x14AA DUP3 PUSH2 0x12C3 JUMP JUMPDEST DUP2 PUSH2 0x180 PUSH1 0x0 SWAP2 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP1 PUSH1 0x40 DUP4 ADD MSTORE DUP1 DUP1 DUP4 ADD MSTORE DUP1 PUSH1 0x80 DUP4 ADD MSTORE DUP4 PUSH1 0xA0 DUP4 ADD MSTORE DUP4 PUSH1 0xC0 DUP4 ADD MSTORE DUP1 PUSH1 0xE0 DUP4 ADD MSTORE DUP4 PUSH2 0x100 DUP4 ADD MSTORE DUP4 PUSH2 0x120 DUP4 ADD MSTORE DUP1 PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x160 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1508 DUP3 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0x1515 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x12DF JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1526 PUSH1 0x1F NOT SWAP2 PUSH2 0x1364 JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1537 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1542 PUSH2 0x149D JUMP JUMPDEST DUP3 DUP3 DUP6 ADD ADD MSTORE ADD PUSH2 0x152B JUMP JUMPDEST SWAP1 PUSH2 0x1558 DUP3 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0x1565 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x12DF JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1576 PUSH1 0x1F NOT SWAP2 PUSH2 0x1364 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x158F JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x15B9 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1AB JUMPI DUP1 MLOAD PUSH2 0x15E5 DUP2 PUSH2 0x1302 JUMP JUMPDEST SWAP3 PUSH2 0x15F3 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x12DF JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x1AB JUMPI PUSH2 0x1167 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 DUP5 SUB SLT PUSH2 0x1AB JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH2 0x1AB JUMPI ADD SWAP2 PUSH2 0x1A0 DUP4 DUP6 SUB SLT PUSH2 0x1AB JUMPI PUSH1 0x40 SWAP2 DUP3 MLOAD SWAP5 PUSH2 0x164A DUP7 PUSH2 0x12C3 JUMP JUMPDEST DUP5 MLOAD DUP7 MSTORE DUP2 DUP6 ADD MLOAD DUP3 DUP8 ADD MSTORE DUP4 DUP6 ADD MLOAD DUP4 DUP2 GT PUSH2 0x1AB JUMPI DUP2 PUSH2 0x166D SWAP2 DUP8 ADD PUSH2 0x15CF JUMP JUMPDEST DUP5 DUP8 ADD MSTORE PUSH1 0x60 DUP1 DUP7 ADD MLOAD DUP5 DUP2 GT PUSH2 0x1AB JUMPI DUP3 PUSH2 0x168A SWAP2 DUP9 ADD PUSH2 0x15CF JUMP JUMPDEST DUP2 DUP9 ADD MSTORE PUSH1 0x80 DUP1 DUP8 ADD MLOAD DUP6 DUP2 GT PUSH2 0x1AB JUMPI DUP4 PUSH2 0x16A7 SWAP2 DUP10 ADD PUSH2 0x15CF JUMP JUMPDEST DUP2 DUP10 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 DUP9 ADD MLOAD DUP3 DUP11 ADD MSTORE PUSH1 0xC0 SWAP2 DUP3 DUP10 ADD MLOAD DUP4 DUP12 ADD MSTORE PUSH1 0xE0 DUP10 ADD MLOAD DUP8 DUP2 GT PUSH2 0x1AB JUMPI DUP10 ADD SWAP3 DUP6 PUSH1 0x1F DUP6 ADD SLT ISZERO PUSH2 0x1AB JUMPI DUP4 MLOAD SWAP3 PUSH2 0x16E7 DUP5 PUSH2 0x1364 JUMP JUMPDEST SWAP6 PUSH2 0x16F4 DUP12 MLOAD SWAP8 DUP9 PUSH2 0x12DF JUMP JUMPDEST DUP5 DUP8 MSTORE DUP9 DUP1 DUP9 ADD SWAP6 PUSH1 0x5 SHL DUP8 ADD ADD SWAP6 DUP9 DUP8 GT PUSH2 0x1AB JUMPI DUP10 DUP2 ADD SWAP6 JUMPDEST DUP8 DUP8 LT PUSH2 0x180D JUMPI POP POP POP POP POP POP POP POP PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP1 DUP7 ADD MLOAD SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x1AB JUMPI DUP8 ADD MSTORE PUSH2 0x120 DUP6 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1AB JUMPI DUP8 ADD MSTORE PUSH2 0x140 DUP1 DUP7 ADD MLOAD DUP5 DUP2 GT PUSH2 0x1AB JUMPI DUP3 PUSH2 0x176C SWAP2 DUP9 ADD PUSH2 0x15CF JUMP JUMPDEST SWAP1 DUP8 ADD MSTORE PUSH2 0x160 SWAP3 DUP4 DUP7 ADD MLOAD DUP2 DUP2 GT PUSH2 0x1AB JUMPI DUP7 ADD SWAP1 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1AB JUMPI DUP2 MLOAD SWAP1 PUSH2 0x17A5 PUSH2 0x179C DUP4 PUSH2 0x1364 JUMP JUMPDEST SWAP8 MLOAD SWAP8 DUP9 PUSH2 0x12DF JUMP JUMPDEST DUP2 DUP8 MSTORE DUP5 DUP1 DUP9 ADD SWAP3 PUSH1 0x5 SHL DUP5 ADD ADD SWAP4 DUP1 DUP6 GT PUSH2 0x1AB JUMPI DUP6 DUP5 ADD SWAP3 JUMPDEST DUP6 DUP5 LT PUSH2 0x17E8 JUMPI POP POP POP POP POP POP POP DUP4 ADD MSTORE PUSH2 0x180 DUP1 SWAP2 ADD MLOAD SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x1AB JUMPI DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP4 DUP2 GT PUSH2 0x1AB JUMPI DUP8 SWAP2 PUSH2 0x1802 DUP5 DUP5 DUP1 SWAP5 DUP11 ADD ADD PUSH2 0x15CF JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP3 PUSH2 0x17C0 JUMP JUMPDEST DUP7 MLOAD DUP13 DUP2 GT PUSH2 0x1AB JUMPI DUP3 ADD DUP6 PUSH1 0x1F NOT DUP3 DUP14 SUB ADD SLT PUSH2 0x1AB JUMPI DUP14 MLOAD DUP7 DUP2 ADD SWAP3 SWAP1 DUP15 DUP5 GT DUP2 DUP6 LT OR PUSH2 0x18A7 JUMPI SWAP3 DUP16 MSTORE DUP2 DUP14 ADD MLOAD SWAP3 DUP15 DUP5 GT PUSH2 0x1AB JUMPI DUP16 DUP16 SWAP5 DUP16 DUP16 SWAP1 PUSH2 0x1858 SWAP3 DUP8 ADD ADD PUSH2 0x15CF JUMP JUMPDEST DUP3 MSTORE DUP4 ADD MLOAD SWAP4 DUP5 GT PUSH2 0x1AB JUMPI DUP16 DUP4 DUP16 SWAP6 SWAP2 DUP16 PUSH2 0x187A SWAP1 DUP9 DUP14 SWAP6 DUP2 SWAP10 ADD ADD PUSH2 0x15CF JUMP JUMPDEST DUP7 DUP6 ADD MSTORE DUP9 DUP3 ADD MLOAD SWAP1 DUP5 ADD MSTORE DUP9 DUP2 ADD MLOAD DUP9 DUP5 ADD MSTORE DUP11 DUP2 ADD MLOAD DUP10 DUP5 ADD MSTORE ADD MLOAD DUP10 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP7 ADD SWAP6 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1AB JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1AB JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xEF PUSH14 0x38C6A1FC5F2261734B79D582D2F9 0xDD 0xB4 0xDE DUP14 0xEB 0xDC SWAP8 0xF6 SWAP14 0xB8 0xD3 SHR 0xBC SWAP5 0xDA PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"129:6381:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;129:6381:27;;;;;;-1:-1:-1;;;;;129:6381:27;;;;;;;;;;;;;;;;;;;5338:35;;129:6381;5338:35;;129:6381;;5338:35;;;;;;;;;;;;;;;;;129:6381;;;;5455:23;;;;:::i;:::-;5496:13;;5511:14;;;;;;129:6381;;;;;;;;;;;;;;:::i;:::-;;;;5527:3;5580:11;;;;:::i;:::-;129:6381;;;;;;;5559:33;;129:6381;5559:33;;129:6381;5559:33;;;;;;;;;;;;;5527:3;5559:33;;;;;;5527:3;5547:45;;;;;:::i;:::-;;;;;;:::i;:::-;;5527:3;:::i;:::-;5496:13;;5559:33;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;129:6381;;;;;;;;;5338:35;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;129:6381;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;129:6381:27;;;;;;:::i;:::-;-1:-1:-1;129:6381:27;;;;-1:-1:-1;;;5160:29:27;;129:6381;;;5160:29;;;129:6381;;;;;;;;;;-1:-1:-1;;;;;129:6381:27;5160:29;;;;;;;;129:6381;5160:29;;;;129:6381;;;;;;;;;;;;;;;;:::i;5160:29::-;;;;;;;;;;;;;:::i;:::-;;;;;;129:6381;;;;;;;;;;;;;;;;-1:-1:-1;;129:6381:27;;;;-1:-1:-1;;;;;129:6381:27;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;129:6381:27;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;129:6381:27;765:10;:24;129:6381;;;;1261:10;129:6381;;1347:15;129:6381;;1329:33;129:6381;;-1:-1:-1;;;;;129:6381:27;;1449:16;129:6381;;;;;;-1:-1:-1;;;1523:28:27;;129:6381;;;-1:-1:-1;;;;;129:6381:27;;;;;;;;;;1523:28;;;;;;;;;;;129:6381;;;;;;;;:::i;:::-;;;;;;;1627:349;;129:6381;;1627:349;;129:6381;;1627:349;;129:6381;;1627:349;;129:6381;1347:15;129:6381;1627:349;;129:6381;;;;1627:349;;129:6381;;;1627:349;;129:6381;1627:349;129:6381;1627:349;;129:6381;1627:349;129:6381;1627:349;;129:6381;;1627:349;;129:6381;1627:349;;;129:6381;;;1627:349;;;129:6381;1987:44;;;;;129:6381;;;;;;;;;;;;;;;;;1987:44;;;129:6381;1987:44;;129:6381;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;129:6381:27;;;;;;1987:44;;;;;;;;;;129:6381;-1:-1:-1;129:6381:27;;-1:-1:-1;;;;;129:6381:27;2044:39;;;;;129:6381;;-1:-1:-1;;;2044:39:27;;-1:-1:-1;;;;;129:6381:27;;;2044:39;;129:6381;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:39;;;;;;;;;;129:6381;-1:-1:-1;;129:6381:27;;;;;;-1:-1:-1;;;;;129:6381:27;;;;2101:35;;129:6381;;;;;;;;:::i;:::-;2101:35;;;129:6381;;;;-1:-1:-1;;;;;129:6381:27;2149:34;;;;;129:6381;;;;;;;;;;;;;2149:34;;;;;;;;;;129:6381;;2149:34;;;;:::i;:::-;129:6381;;2149:34;129:6381;2149:34;129:6381;;2044:39;;;;:::i;:::-;129:6381;;2044:39;;;;129:6381;;;;2044:39;129:6381;;;1987:44;;;;:::i;:::-;129:6381;;1987:44;;;;;129:6381;;;1523:28;;;;;129:6381;1523:28;;129:6381;1523:28;;;;;;129:6381;1523:28;;;:::i;:::-;;;129:6381;;;;;;;1523:28;;;;;;;-1:-1:-1;1523:28:27;;129:6381;;;-1:-1:-1;;;129:6381:27;;;;;;;;;;;;-1:-1:-1;;;129:6381:27;;;;;;;;;;-1:-1:-1;;;129:6381:27;;;;;;;;;;;;;;;;;-1:-1:-1;;;129:6381:27;;;;;;;;;;-1:-1:-1;;;129:6381:27;;;;;;;;;;;;-1:-1:-1;;;129:6381:27;;;;;;;;;;-1:-1:-1;;;129:6381:27;;;;;;;;;;;;;;;;;-1:-1:-1;;;129:6381:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;129:6381:27;;;;;;;;;;;;;;;-1:-1:-1;;129:6381:27;;;;;;-1:-1:-1;;;;;129:6381:27;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;5837:27:27;;129:6381;5837:27;;129:6381;;;-1:-1:-1;;;;;129:6381:27;;;;;;;;;5837:27;129:6381;;5837:27;;;;;;;;;;;129:6381;;;;;;;-1:-1:-1;;;5922:50:27;;5952:10;129:6381;5922:50;;129:6381;;;;;;;5922:50;129:6381;;;5922:50;;;;;;;;;;;;129:6381;;;;;;;;;;;;;;;;;;6055:29;;;129:6381;6055:29;;129:6381;6055:29;;;;;;;;;;;;;;;;129:6381;-1:-1:-1;129:6381:27;;6115:27;:83;;;6097:15;;;:101;129:6381;;6233:26;:94;;;6209:21;;;:118;129:6381;;6358:29;:89;;;129:6381;6338:17;;:109;6460:39;;;;;129:6381;;;;;;;;;;;;;;;;6460:39;;129:6381;6460:39;;129:6381;;;;;;;;;:::i;:::-;6460:39;;;;;;;;;;129:6381;;;6460:39;;;;:::i;:::-;129:6381;;6358:89;6430:17;129:6381;6430:17;;;6358:89;;6233:94;6306:21;;;;;6233:94;;6115:83;6183:15;;;;;6115:83;;6055:29;;;;;;;;;;;;;;:::i;:::-;;;;;129:6381;;;;;;;2839:24;;;;129:6381;;;;;;;;;-1:-1:-1;;;129:6381:27;;;;;5922:50;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;129:6381;;;;;;;;;;;;;;;;2839:24;;;;129:6381;;;;;;;;;-1:-1:-1;;;129:6381:27;;;;;5837:27;;;;;;;;;;;;;;:::i;:::-;;;;129:6381;;;;;;;-1:-1:-1;;129:6381:27;;;;;;;;;;;;;;;;;;;;;;3677:31;;;-1:-1:-1;129:6381:27;;;;-1:-1:-1;;;3739:29:27;;129:6381;;;;;;;;;-1:-1:-1;;;;;129:6381:27;3739:29;;;;;;;;;;;3673:506;3725:43;3673:506;;129:6381;;;;-1:-1:-1;;;4227:65:27;;-1:-1:-1;;;;;129:6381:27;;;;;;;4227:65;;;129:6381;:::i;:::-;4227:65;;;;;;;;;;;;;;;;3673:506;129:6381;4331:38;129:6381;;4331:38;:::i;:::-;4380:17;;4415:13;;4454:3;129:6381;;4430:22;;;;;4488:14;;4454:3;4488:14;;;:::i;:::-;129:6381;4474:28;;;;:::i;:::-;129:6381;4454:3;:::i;:::-;4415:13;;4430:22;;;;;;4558:36;129:6381;;4558:36;:::i;:::-;4610:13;;4605:414;4654:3;129:6381;;4625:27;;;;;4679:13;4715:3;129:6381;;4694:19;;;;;4743;;;;:::i;:::-;129:6381;4766:11;;;;:::i;:::-;129:6381;4743:34;4739:254;;4715:3;;;:::i;:::-;4679:13;;4739:254;4873:19;;;;;;;:::i;:::-;129:6381;;;;;;;4826:89;;129:6381;4826:89;;129:6381;4826:89;;;;;;;;;;;;4654:3;4826:89;4938:7;4826:89;;;;;4739:254;4802:113;;;;;:::i;:::-;;;;;;:::i;4938:7::-;4968:5;4654:3;:::i;:::-;4610:13;;;4826:89;;;;;;;;;;;;;:::i;:::-;;;;;129:6381;;;;;;;;;4694:19;;;4654:3;4694:19;4654:3;:::i;4625:27::-;129:6381;;;;;;;;;;;;4625:27;129:6381;:::i;4227:65::-;;;;;;;;;;;;;:::i;:::-;;;;3739:29;;;;;;;;;;;;;:::i;:::-;;;;;129:6381;;;;;;;;;3673:506;129:6381;3790:30;;129:6381;;-1:-1:-1;129:6381:27;;;;-1:-1:-1;;;3851:29:27;;129:6381;;;;;;;;;-1:-1:-1;;;;;129:6381:27;3851:29;;;;;;;;;;;3786:393;3837:43;3786:393;3673:506;;3851:29;;;;;;;;;;;;;:::i;:::-;;;;3786:393;3912:20;3902:30;;3912:20;;-1:-1:-1;129:6381:27;;;;-1:-1:-1;;;3963:29:27;;129:6381;;;;;;;;;-1:-1:-1;;;;;129:6381:27;3963:29;;;;;;;;;;;3949:43;3898:281;3673:506;;3898:281;129:6381;4014:33;4024:23;;129:6381;;;;-1:-1:-1;;;4078:32:27;;129:6381;;;;;;;;;-1:-1:-1;;;;;129:6381:27;4078:32;;;;;;;;;;;4064:46;4010:169;3673:506;;4010:169;129:6381;;-1:-1:-1;;;4143:24:27;;129:6381;4143:24;129:6381;4143:24;;;:::i;:::-;;;;129:6381;;;;;;;;;;;;;;;;;;;;;;;2385:31;;;-1:-1:-1;;129:6381:27;;;;-1:-1:-1;;;2444:29:27;;129:6381;;;;;;;;;-1:-1:-1;;;;;129:6381:27;2444:29;;;;;;;;;;;2381:494;2433:40;2381:494;;129:6381;;2958:23;;;;:::i;:::-;3029:25;;;;:::i;:::-;3099;;;;:::i;:::-;129:6381;;3142:13;;-1:-1:-1;;;;;129:6381:27;;;;;3157:14;;;;;;129:6381;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;3173:3::-;3226:11;;;;:::i;:::-;129:6381;;;;;;;;3205:33;;129:6381;3205:33;;129:6381;;3205:33;;;;;;;;;;;;;;;;;3173:3;3193:45;;;;;:::i;:::-;;;;;;:::i;:::-;;3307:11;;;;:::i;:::-;129:6381;;;;;;;3276:43;;129:6381;3276:43;;129:6381;3276:43;;;;;;;;;;;;;;;;3173:3;3253:66;;;;;:::i;:::-;129:6381;3384:11;;;;;:::i;:::-;129:6381;;;;;;;;;3354:42;;129:6381;3354:42;;129:6381;3354:42;;;;;;;;;;;;3173:3;;3334:62;;;;;;:::i;3173:3::-;3142:13;;3354:42;;;;;;;;;;;;;;;;:::i;:::-;;;129:6381;;;;;3173:3;129:6381;;3354:42;;;;;;;3276:43;;;;;;;;;;;;;;;;:::i;:::-;;;129:6381;;;;;3276:43;;;;;;;;;129:6381;;;;;;;;;3205:33;;;;;;;;;;;;;:::i;:::-;;;;2444:29;;;;;;;;;;;;;:::i;:::-;;;;2381:494;129:6381;2495:30;;129:6381;;-1:-1:-1;;129:6381:27;;;;-1:-1:-1;;;2553:29:27;;129:6381;;;;;;;;;-1:-1:-1;;;;;129:6381:27;2553:29;;;;;;;;;;;2491:384;2542:40;2491:384;2381:494;;2553:29;;;;;;;;;;;;;:::i;:::-;;;;2491:384;2614:20;2604:30;;2614:20;;-1:-1:-1;;129:6381:27;;;;-1:-1:-1;;;2662:29:27;;129:6381;;;;;;;;;-1:-1:-1;;;;;129:6381:27;2662:29;;;;;;;;;;;2651:40;2600:275;2381:494;;2600:275;129:6381;2713:33;2723:23;;-1:-1:-1;129:6381:27;;;;-1:-1:-1;;;2774:32:27;;129:6381;;;;;;;;;-1:-1:-1;;;;;129:6381:27;2774:32;;;;;;;;;;;2763:43;2709:166;2381:494;;2709:166;-1:-1:-1;;;2839:24:27;;;;129:6381;2839:24;;;:::i;129:6381::-;;;;;;;;-1:-1:-1;;129:6381:27;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;129:6381:27;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;-1:-1:-1;129:6381:27;;;;;-1:-1:-1;129:6381:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;129:6381:27;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;129:6381:27;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;129:6381:27;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;129:6381:27;;;;;;;:::o;:::-;;;;;-1:-1:-1;;129:6381:27;;;;-1:-1:-1;;;;;129:6381:27;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;129:6381:27;;;;;;-1:-1:-1;;129:6381:27;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;129:6381:27;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;129:6381:27;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;129:6381:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;129:6381:27;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;129:6381:27;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;129:6381:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;129:6381:27;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;-1:-1:-1;;129:6381:27;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;129:6381:27;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;129:6381:27;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1282000","executionCost":"infinite","totalCost":"infinite"},"external":{"addAsset(uint256,string,string,string,uint256,address,string,string,string[],uint8)":"infinite","getAllAssets(uint8)":"infinite","getAllAssetsByCategory(uint8,uint8)":"infinite","getAssetById(uint256)":"infinite","getAssetsOfOwner(address)":"infinite","supervisor()":"2356","updateAsset(uint256,string,string[],string)":"infinite"}},"methodIdentifiers":{"addAsset(uint256,string,string,string,uint256,address,string,string,string[],uint8)":"86275c5a","getAllAssets(uint8)":"38031123","getAllAssetsByCategory(uint8,uint8)":"4663a28c","getAssetById(uint256)":"b3e444a7","getAssetsOfOwner(address)":"f3ab880e","supervisor()":"56e4b68b","updateAsset(uint256,string,string[],string)":"5563633d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"AssetCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"LogInvestment\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"author\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"projectEndDate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"mainPhoto\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"secondaryPhotos\",\"type\":\"string[]\"},{\"internalType\":\"enum Category\",\"name\":\"category\",\"type\":\"uint8\"}],\"name\":\"addAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ProjectStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"getAllAssets\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"author\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"projectStartDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"projectEndDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"individualPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardTokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct Reward[]\",\"name\":\"rewards\",\"type\":\"tuple[]\"},{\"internalType\":\"enum ProjectStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"rewardTokenAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"mainPhoto\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"secondaryPhotos\",\"type\":\"string[]\"},{\"internalType\":\"enum Category\",\"name\":\"category\",\"type\":\"uint8\"}],\"internalType\":\"struct Asset[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ProjectStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"enum Category\",\"name\":\"category\",\"type\":\"uint8\"}],\"name\":\"getAllAssetsByCategory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"author\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"projectStartDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"projectEndDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"individualPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardTokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct Reward[]\",\"name\":\"rewards\",\"type\":\"tuple[]\"},{\"internalType\":\"enum ProjectStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"rewardTokenAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"mainPhoto\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"secondaryPhotos\",\"type\":\"string[]\"},{\"internalType\":\"enum Category\",\"name\":\"category\",\"type\":\"uint8\"}],\"internalType\":\"struct Asset[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"getAssetById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"author\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"projectStartDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"projectEndDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"individualPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardTokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct Reward[]\",\"name\":\"rewards\",\"type\":\"tuple[]\"},{\"internalType\":\"enum ProjectStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"rewardTokenAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"mainPhoto\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"secondaryPhotos\",\"type\":\"string[]\"},{\"internalType\":\"enum Category\",\"name\":\"category\",\"type\":\"uint8\"}],\"internalType\":\"struct Asset\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getAssetsOfOwner\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"author\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"projectStartDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"projectEndDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"individualPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardTokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct Reward[]\",\"name\":\"rewards\",\"type\":\"tuple[]\"},{\"internalType\":\"enum ProjectStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"rewardTokenAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"mainPhoto\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"secondaryPhotos\",\"type\":\"string[]\"},{\"internalType\":\"enum Category\",\"name\":\"category\",\"type\":\"uint8\"}],\"internalType\":\"struct Asset[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supervisor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mainPhoto\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"secondaryPhotos\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"updateAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Assets.sol\":\"Assets\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor () {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xab1f67e4c96dfe0e3875d22883c3dee5411914f40ce0c54ef407f030d803512e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"./extensions/IERC721Enumerable.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping (uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping (address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping (uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IERC721).interfaceId\\n            || interfaceId == type(IERC721Metadata).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: balance query for the zero address\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0\\n            ? string(abi.encodePacked(baseURI, tokenId.toString()))\\n            : '';\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\\n     * in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(_msgSender() == owner || ERC721.isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"ERC721: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        require(operator != _msgSender(), \\\"ERC721: approve to caller\\\");\\n\\n        _operatorApprovals[_msgSender()][operator] = approved;\\n        emit ApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"ERC721: operator query for nonexistent token\\\");\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || ERC721.isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {\\n        _mint(to, tokenId);\\n        require(_checkOnERC721Received(address(0), to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer of token that is not own\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\\n        private returns (bool)\\n    {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver(to).onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    // solhint-disable-next-line no-inline-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual { }\\n}\\n\",\"keccak256\":\"0x8d1cabca557cb77d97d801d674f0dacc33659e1430cdd34f91ae5d033fc3d93f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @title ERC721 Burnable Token\\n * @dev ERC721 Token that can be irreversibly burned (destroyed).\\n */\\nabstract contract ERC721Burnable is Context, ERC721 {\\n    /**\\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own `tokenId` or be an approved operator.\\n     */\\n    function burn(uint256 tokenId) public virtual {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721Burnable: caller is not owner nor approved\\\");\\n        _burn(tokenId);\\n    }\\n}\\n\",\"keccak256\":\"0x7481c284b0ff5983d3f1784f0ceae1ec397f8c8938bc60552b19889cc057aee8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"./IERC721Enumerable.sol\\\";\\n\\n/**\\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\\n * enumerability of all the token ids in the contract as well as all token ids owned by each\\n * account.\\n */\\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\\n    // Mapping from owner to list of owned token IDs\\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\\n\\n    // Mapping from token ID to index of the owner tokens list\\n    mapping(uint256 => uint256) private _ownedTokensIndex;\\n\\n    // Array with all token ids, used for enumeration\\n    uint256[] private _allTokens;\\n\\n    // Mapping from token id to position in the allTokens array\\n    mapping(uint256 => uint256) private _allTokensIndex;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\\n        return interfaceId == type(IERC721Enumerable).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721.balanceOf(owner), \\\"ERC721Enumerable: owner index out of bounds\\\");\\n        return _ownedTokens[owner][index];\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _allTokens.length;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenByIndex}.\\n     */\\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721Enumerable.totalSupply(), \\\"ERC721Enumerable: global index out of bounds\\\");\\n        return _allTokens[index];\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual override {\\n        super._beforeTokenTransfer(from, to, tokenId);\\n\\n        if (from == address(0)) {\\n            _addTokenToAllTokensEnumeration(tokenId);\\n        } else if (from != to) {\\n            _removeTokenFromOwnerEnumeration(from, tokenId);\\n        }\\n        if (to == address(0)) {\\n            _removeTokenFromAllTokensEnumeration(tokenId);\\n        } else if (to != from) {\\n            _addTokenToOwnerEnumeration(to, tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\\n     * @param to address representing the new owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\\n     */\\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\\n        uint256 length = ERC721.balanceOf(to);\\n        _ownedTokens[to][length] = tokenId;\\n        _ownedTokensIndex[tokenId] = length;\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's token tracking data structures.\\n     * @param tokenId uint256 ID of the token to be added to the tokens list\\n     */\\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\\n        _allTokensIndex[tokenId] = _allTokens.length;\\n        _allTokens.push(tokenId);\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\\n     * @param from address representing the previous owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\\n     */\\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary\\n        if (tokenIndex != lastTokenIndex) {\\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\\n\\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n        }\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _ownedTokensIndex[tokenId];\\n        delete _ownedTokens[from][lastTokenIndex];\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's token tracking data structures.\\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\\n     */\\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = _allTokens.length - 1;\\n        uint256 tokenIndex = _allTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\\n\\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _allTokensIndex[tokenId];\\n        _allTokens.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x3dce5847e70c056ef0f7cf91cb9a0067cf90784794017a45c1211cde7ed1c08c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping (uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI query for nonexistent token\\\");\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd03f5c3d258a9b0f751a3246e0802106585561ab5909b808368759364fc786f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xccb7e6475afcb1c5cb13b3fbf1329c10b93620a9b66393388066683915271a78\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant alphabet = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = alphabet[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n}\\n\",\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/AssetStruct.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <=0.8.19;\\n\\nenum ProjectStatus {\\n    Started,\\n    Funded,\\n    Failed,\\n    Completed\\n}\\n\\nenum Category {\\n    Technology,\\n    Gaming,\\n    Music,\\n    Movies,\\n    Art\\n}\\n\\nstruct Reward {\\n    string title;\\n    string description;\\n    uint256 tokenAmount;\\n    uint256 individualPrice;\\n    uint256 availableTokens;\\n    uint256 rewardTokenId;\\n}\\n\\nstruct NewReward {\\n    string tokenURI;\\n    string title;\\n    string description;\\n    uint256 tokenAmount;\\n    uint256 individualPrice;\\n}\\n\\nstruct Asset {\\n    uint256 assetId;\\n    uint256 price;\\n    string author;\\n    string title;\\n    string description;\\n    uint256 projectStartDate;\\n    uint256 projectEndDate;\\n    Reward[] rewards;\\n    ProjectStatus status;\\n    address rewardTokenAddress;\\n    string mainPhoto;\\n    string[] secondaryPhotos;\\n    Category category;\\n}\\n\",\"keccak256\":\"0x2ffc38b9e3b4154b2c7ededb682535a9fd6dfb1419217873d7ff8c3dcbe3e9b4\",\"license\":\"MIT\"},\"contracts/Assets.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.0 <=0.8.19;\\r\\n\\r\\nimport \\\"./NFTVenture.sol\\\";\\r\\nimport \\\"./AssetStruct.sol\\\";\\r\\n\\r\\ncontract Assets {\\r\\n    NFTVenture private nftContract;\\r\\n    address public supervisor;\\r\\n\\r\\n    // Eventos\\r\\n    event LogInvestment(\\r\\n        address indexed investor,\\r\\n        uint256 indexed assetId,\\r\\n        uint256 indexed tokenId,\\r\\n        uint256 tokenAmount,\\r\\n        uint256 value\\r\\n    );\\r\\n\\r\\n    event AssetCreated(\\r\\n        uint256 indexed assetId,\\r\\n        address indexed owner,\\r\\n        string tokenURI\\r\\n    );\\r\\n\\r\\n    // Constructor\\r\\n    constructor(address nftAddress) {\\r\\n        nftContract = NFTVenture(nftAddress);\\r\\n        supervisor = msg.sender;\\r\\n    }\\r\\n\\r\\n    modifier onlySupervisor() {\\r\\n        require(\\r\\n            msg.sender == supervisor,\\r\\n            \\\"Only supervisor can call this function\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function addAsset(\\r\\n        uint256 price,\\r\\n        string memory author,\\r\\n        string memory title,\\r\\n        string memory description,\\r\\n        uint256 projectEndDate,\\r\\n        address to,\\r\\n        string memory tokenURI,\\r\\n        string memory mainPhoto,\\r\\n        string[] memory secondaryPhotos,\\r\\n        Category category\\r\\n    ) public onlySupervisor {\\r\\n        require(price != 0, \\\"Price cannot be zero\\\");\\r\\n        require(\\r\\n            projectEndDate >= block.timestamp,\\r\\n            \\\"Project end date should be in the future\\\"\\r\\n        );\\r\\n        require(to != address(0), \\\"Address cannot be zero\\\");\\r\\n\\r\\n        uint256 assetId = nftContract.getAssetsCount();\\r\\n\\r\\n        Reward[] memory emptyRewards;\\r\\n        Asset memory newAsset = Asset(\\r\\n            assetId,\\r\\n            price,\\r\\n            author,\\r\\n            title,\\r\\n            description,\\r\\n            block.timestamp,\\r\\n            projectEndDate,\\r\\n            emptyRewards,\\r\\n            ProjectStatus.Started,\\r\\n            address(0),\\r\\n            mainPhoto,\\r\\n            secondaryPhotos,\\r\\n            category\\r\\n        );\\r\\n        nftContract._addAsset(assetId, newAsset, to);\\r\\n\\r\\n        nftContract.mint(to, assetId, tokenURI);\\r\\n\\r\\n        emit AssetCreated(assetId, to, tokenURI);\\r\\n\\r\\n        nftContract.incrementAssetsCount();\\r\\n    }\\r\\n\\r\\n    function getAllAssets(\\r\\n        ProjectStatus status\\r\\n    ) public view returns (Asset[] memory, uint256[] memory, uint256[] memory) {\\r\\n        uint256[] memory assetIds;\\r\\n\\r\\n        if (status == ProjectStatus.Started) {\\r\\n            assetIds = nftContract.getActiveAssets();\\r\\n        } else if (status == ProjectStatus.Funded) {\\r\\n            assetIds = nftContract.getFundedAssets();\\r\\n        } else if (status == ProjectStatus.Failed) {\\r\\n            assetIds = nftContract.getFailedAssets();\\r\\n        } else if (status == ProjectStatus.Completed) {\\r\\n            assetIds = nftContract.getCompletedAssets();\\r\\n        } else {\\r\\n            revert(\\\"Invalid status\\\");\\r\\n        }\\r\\n\\r\\n        uint256 assetCount = assetIds.length;\\r\\n        Asset[] memory assets = new Asset[](assetCount);\\r\\n        uint256[] memory investmentAmounts = new uint256[](assetCount);\\r\\n        uint256[] memory investorCounts = new uint256[](assetCount);\\r\\n\\r\\n        for (uint256 i = 0; i < assetCount; i++) {\\r\\n            assets[i] = nftContract.getAsset(assetIds[i]);\\r\\n            investmentAmounts[i] = nftContract.getTotalInvestment(assetIds[i]);\\r\\n            investorCounts[i] = nftContract.getTotalInvestors(assetIds[i]);\\r\\n        }\\r\\n\\r\\n        return (assets, investmentAmounts, investorCounts);\\r\\n    }\\r\\n\\r\\n    function getAllAssetsByCategory(\\r\\n        ProjectStatus status,\\r\\n        Category category\\r\\n    ) public view returns (Asset[] memory) {\\r\\n        uint256[] memory allAssetIds;\\r\\n\\r\\n        if (status == ProjectStatus.Started) {\\r\\n            allAssetIds = nftContract.getActiveAssets();\\r\\n        } else if (status == ProjectStatus.Funded) {\\r\\n            allAssetIds = nftContract.getFundedAssets();\\r\\n        } else if (status == ProjectStatus.Failed) {\\r\\n            allAssetIds = nftContract.getFailedAssets();\\r\\n        } else if (status == ProjectStatus.Completed) {\\r\\n            allAssetIds = nftContract.getCompletedAssets();\\r\\n        } else {\\r\\n            revert(\\\"Invalid status\\\");\\r\\n        }\\r\\n\\r\\n        uint256[] memory categoryAssetIds = nftContract.getAssetsByCategory(\\r\\n            category\\r\\n        );\\r\\n        uint256[] memory assetIds = new uint256[](categoryAssetIds.length);\\r\\n        uint256 count = 0;\\r\\n\\r\\n        for (uint256 i = 0; i < allAssetIds.length; i++) {\\r\\n            assetIds[i] = allAssetIds[i];\\r\\n        }\\r\\n\\r\\n        Asset[] memory filteredAssets = new Asset[](categoryAssetIds.length);\\r\\n        for (uint256 i = 0; i < categoryAssetIds.length; i++) {\\r\\n            for (uint256 j = 0; j < assetIds.length; j++) {\\r\\n                if (categoryAssetIds[i] == assetIds[j]) {\\r\\n                    filteredAssets[count] = nftContract.getAsset(\\r\\n                        categoryAssetIds[i]\\r\\n                    );\\r\\n                    count++;\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return filteredAssets;\\r\\n    }\\r\\n\\r\\n    function getAssetById(uint256 assetId) public view returns (Asset memory) {\\r\\n        return nftContract.getAsset(assetId);\\r\\n    }\\r\\n\\r\\n    function getAssetsOfOwner(\\r\\n        address owner\\r\\n    ) public view returns (Asset[] memory) {\\r\\n        uint256[] memory assetIds = nftContract.getAssetsOfOwner(owner);\\r\\n        uint256 assetCount = assetIds.length;\\r\\n        Asset[] memory assets = new Asset[](assetCount);\\r\\n\\r\\n        for (uint256 i = 0; i < assetCount; i++) {\\r\\n            assets[i] = nftContract.getAsset(assetIds[i]);\\r\\n        }\\r\\n\\r\\n        return assets;\\r\\n    }\\r\\n\\r\\n    function updateAsset(\\r\\n        uint256 assetId,\\r\\n        string memory mainPhoto,\\r\\n        string[] memory secondaryPhotos,\\r\\n        string memory description\\r\\n    ) public {\\r\\n        require(nftContract.exists(assetId), \\\"Asset does not exist\\\");\\r\\n        require(\\r\\n            nftContract.isApprovedOrOwner(msg.sender, assetId),\\r\\n            \\\"Not approved or owner\\\"\\r\\n        );\\r\\n\\r\\n        Asset memory asset = nftContract.getAsset(assetId);\\r\\n\\r\\n        asset.mainPhoto = bytes(mainPhoto).length > 0\\r\\n            ? mainPhoto\\r\\n            : asset.mainPhoto;\\r\\n        asset.secondaryPhotos = secondaryPhotos.length > 0\\r\\n            ? secondaryPhotos\\r\\n            : asset.secondaryPhotos;\\r\\n        asset.description = bytes(description).length > 0\\r\\n            ? description\\r\\n            : asset.description;\\r\\n\\r\\n        nftContract.updateAsset(assetId, asset);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xb17b528fd5db72e9140d09598dad8f5e3296574ff696c129a02e7d2bc5a4a430\",\"license\":\"MIT\"},\"contracts/NFTVenture.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <=0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\\\";\\nimport \\\"./AssetStruct.sol\\\";\\n\\ncontract NFTVenture is\\n    ERC721,\\n    ERC721Enumerable,\\n    ERC721URIStorage,\\n    Pausable,\\n    Ownable,\\n    ERC721Burnable\\n{\\n    // Assets\\n    uint256 public assetsCount;\\n    mapping(uint256 => Asset) public assetMap;\\n    mapping(uint256 => bool) public assetExists;\\n\\n    mapping(address => uint256[]) public ownerToAssets;\\n\\n    mapping(uint256 => address) public assetApprovals;\\n    mapping(uint256 => address) public assetOwner;\\n    mapping(address => uint256) public ownedAssetsCount;\\n\\n    // State-based Asset IDs\\n    uint256[] public activeAssets;\\n    uint256[] public fundedAssets;\\n    uint256[] public failedAssets;\\n    uint256[] public completedAssets;\\n\\n    // Category-based Asset IDs\\n    mapping(Category => uint256[]) public categoryAssets;\\n\\n    // Investments\\n    mapping(uint256 => mapping(address => uint256)) public investmentAmountOf;\\n    mapping(uint256 => uint256) public investmentReceived;\\n    mapping(uint256 => address[]) public assetInvestors;\\n    mapping(uint256 => bool) public isTransferAllowed;\\n    mapping(uint256 => bool) public isRefundingAllowed;\\n    mapping(uint256 => uint256) public investmentRefunded;\\n    mapping(uint256 => mapping(address => uint256)) public pendingReturns;\\n    mapping(uint256 => mapping(address => mapping(uint256 => uint256)))\\n        public investorTokens;\\n    mapping(uint256 => uint256) public totalInvestors;\\n    mapping(uint256 => uint256) public totalInvestment;\\n    mapping(address => uint256[]) public investorAssets;\\n\\n    // Constructor\\n    constructor() ERC721(\\\"FractionalCTV\\\", \\\"FCTV\\\") {}\\n\\n    function pause() public onlyOwner {\\n        _pause();\\n    }\\n\\n    function unpause() public onlyOwner {\\n        _unpause();\\n    }\\n\\n    function _baseURI() internal pure override returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    function transfer(\\n        address recipient,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal override(ERC721, ERC721Enumerable) whenNotPaused {\\n        super._beforeTokenTransfer(from, to, tokenId);\\n    }\\n\\n    function _burn(\\n        uint256 tokenId\\n    ) internal override(ERC721, ERC721URIStorage) {\\n        super._burn(tokenId);\\n    }\\n\\n    function tokenURI(\\n        uint256 tokenId\\n    ) public view override(ERC721, ERC721URIStorage) returns (string memory) {\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    function supportsInterface(\\n        bytes4 interfaceId\\n    ) public view override(ERC721, ERC721Enumerable) returns (bool) {\\n        return super.supportsInterface(interfaceId);\\n    }\\n\\n    modifier isNFTOwner(uint256 assetId) {\\n        require(msg.sender == ownerOf(assetId));\\n        _;\\n    }\\n\\n    function balanceOf() public view returns (uint256) {\\n        require(\\n            msg.sender != address(0),\\n            \\\"ERC721: balance query for the zero address\\\"\\n        );\\n        return ownedAssetsCount[msg.sender];\\n    }\\n\\n    function ownerOf(\\n        uint256 assetId\\n    ) public view override(ERC721, IERC721) returns (address) {\\n        address owner = assetOwner[assetId];\\n        require(owner != address(0), \\\"NoAssetExists\\\");\\n        return owner;\\n    }\\n\\n    function approve(\\n        address to,\\n        uint256 assetId\\n    ) public override(ERC721, IERC721) {\\n        address owner = ownerOf(assetId);\\n        require(to != owner, \\\"CurrentOwnerApproval\\\");\\n        require(msg.sender == owner, \\\"NotTheAssetOwner\\\");\\n        assetApprovals[assetId] = to;\\n        emit Approval(owner, to, assetId);\\n    }\\n\\n    function getApproved(\\n        uint256 assetId\\n    ) public view override(ERC721, IERC721) returns (address) {\\n        require(\\n            _exists(assetId),\\n            \\\"ERC721: approved query for nonexistent token\\\"\\n        );\\n        return assetApprovals[assetId];\\n    }\\n\\n    function clearApproval(uint256 assetId, address approved) public {\\n        if (assetApprovals[assetId] == approved) {\\n            assetApprovals[assetId] = address(0);\\n        }\\n    }\\n\\n    function mint(address to, uint256 assetId, string memory asseturi) public {\\n        require(to != address(0), \\\"ZeroAddressMiniting\\\");\\n        _safeMint(to, assetId);\\n        _setTokenURI(assetId, asseturi);\\n        emit Transfer(address(0), to, assetId);\\n    }\\n\\n    function exists(uint256 assetId) public view returns (bool) {\\n        return assetExists[assetId];\\n    }\\n\\n    function isApprovedOrOwner(\\n        address spender,\\n        uint256 assetId\\n    ) external view returns (bool) {\\n        require(\\n            exists(assetId),\\n            \\\"ERC721: operator query for nonexistent token\\\"\\n        );\\n        address owner = ownerOf(assetId);\\n        return (spender == owner || getApproved(assetId) == spender);\\n    }\\n\\n    function _addAsset(\\n        uint256 assetId,\\n        Asset memory asset,\\n        address to\\n    ) external {\\n        assetMap[assetId] = asset;\\n        assetOwner[assetId] = to;\\n        ownedAssetsCount[to]++;\\n        ownerToAssets[to].push(assetId);\\n        assetExists[assetId] = true;\\n        activeAssets.push(assetId);\\n        categoryAssets[asset.category].push(assetId);\\n    }\\n\\n    function getAsset(uint256 assetId) public view returns (Asset memory) {\\n        return assetMap[assetId];\\n    }\\n\\n    function updateAsset(uint256 assetId, Asset memory asset) public {\\n        assetMap[assetId] = asset;\\n    }\\n\\n    function getAssetsCount() public view returns (uint256) {\\n        return assetsCount;\\n    }\\n\\n    function incrementAssetsCount() public {\\n        assetsCount++;\\n    }\\n\\n    function getAssetsOfOwner(\\n        address owner\\n    ) public view returns (uint256[] memory) {\\n        return ownerToAssets[owner];\\n    }\\n\\n    function updateAssetReward(\\n        uint256 assetId,\\n        uint256 rewardIndex,\\n        uint256 newAvailableTokens\\n    ) external {\\n        require(\\n            rewardIndex < assetMap[assetId].rewards.length,\\n            \\\"Invalid reward index\\\"\\n        );\\n        assetMap[assetId]\\n            .rewards[rewardIndex]\\n            .availableTokens = newAvailableTokens;\\n    }\\n\\n    function handleRewardAddedToAsset(\\n        uint256 assetId,\\n        string memory title,\\n        string memory description,\\n        uint256 tokenAmount,\\n        uint256 individualPrice,\\n        bytes32 rewardId\\n    ) external {\\n        Asset storage asset = assetMap[assetId];\\n        asset.rewards.push(\\n            Reward({\\n                title: title,\\n                description: description,\\n                tokenAmount: tokenAmount,\\n                individualPrice: individualPrice,\\n                availableTokens: tokenAmount,\\n                rewardTokenId: uint256(rewardId)\\n            })\\n        );\\n    }\\n\\n    function updateRewardTokenAddress(\\n        uint256 assetId,\\n        address rewardTokenAddress\\n    ) external {\\n        assetMap[assetId].rewardTokenAddress = rewardTokenAddress;\\n    }\\n\\n    function addInvestment(\\n        uint256 assetId,\\n        address investor,\\n        uint256 amount\\n    ) external {\\n        investmentAmountOf[assetId][investor] += amount;\\n        investmentReceived[assetId] += amount;\\n        totalInvestment[assetId] += amount;\\n        if (investmentAmountOf[assetId][investor] == amount) {\\n            assetInvestors[assetId].push(investor);\\n            investorAssets[investor].push(assetId);\\n\\n            totalInvestors[assetId]++;\\n        }\\n    }\\n\\n    function getTotalInvestment(\\n        uint256 assetId\\n    ) external view returns (uint256) {\\n        return totalInvestment[assetId];\\n    }\\n\\n    function getTotalInvestors(\\n        uint256 assetId\\n    ) external view returns (uint256) {\\n        return totalInvestors[assetId];\\n    }\\n\\n    function addInvestor(uint256 assetId, address investor) external {\\n        assetInvestors[assetId].push(investor);\\n        investorAssets[investor].push(assetId);\\n    }\\n\\n    function getAssetInvestors(\\n        uint256 assetId\\n    ) external view returns (address[] memory) {\\n        return assetInvestors[assetId];\\n    }\\n\\n    function getInvestorAssets(\\n        address investor\\n    ) external view returns (uint256[] memory) {\\n        return investorAssets[investor];\\n    }\\n    function getInvestorTokens(\\n        uint256 assetId,\\n        address investor\\n    ) public view returns (uint256[] memory, uint256[] memory) {\\n        Asset memory asset = assetMap[assetId];\\n        uint256 rewardCount = asset.rewards.length;\\n\\n        uint256[] memory tokenIds = new uint256[](rewardCount);\\n        uint256[] memory tokenAmounts = new uint256[](rewardCount);\\n\\n        for (uint256 i = 0; i < rewardCount; i++) {\\n            uint256 tokenId = asset.rewards[i].rewardTokenId;\\n            tokenIds[i] = tokenId;\\n            tokenAmounts[i] = investorTokens[assetId][investor][tokenId];\\n        }\\n\\n        return (tokenIds, tokenAmounts);\\n    }\\n\\n    function getInvestmentAmount(\\n        uint256 assetId,\\n        address investor\\n    ) public view returns (uint256) {\\n        return investmentAmountOf[assetId][investor];\\n    }\\n\\n    function updateInvestorTokens(\\n        uint256 assetId,\\n        address investor,\\n        uint256 tokenId,\\n        uint256 tokenAmount\\n    ) external {\\n        investorTokens[assetId][investor][tokenId] = tokenAmount;\\n    }\\n\\n    function allowTransfers(uint256 assetId, bool allowed) external {\\n        isTransferAllowed[assetId] = allowed;\\n    }\\n\\n    function allowRefunding(uint256 assetId, bool allowed) external {\\n        isRefundingAllowed[assetId] = allowed;\\n    }\\n\\n    function updatePendingReturns(\\n        uint256 assetId,\\n        address investor,\\n        uint256 amount\\n    ) external {\\n        pendingReturns[assetId][investor] = amount;\\n    }\\n\\n    function updateInvestmentRefunded(\\n        uint256 assetId,\\n        uint256 amount\\n    ) external {\\n        investmentRefunded[assetId] = amount;\\n    }\\n\\n    function getActiveAssets() external view returns (uint256[] memory) {\\n        return activeAssets;\\n    }\\n\\n    function getFundedAssets() external view returns (uint256[] memory) {\\n        return fundedAssets;\\n    }\\n\\n    function getFailedAssets() external view returns (uint256[] memory) {\\n        return failedAssets;\\n    }\\n\\n    function getCompletedAssets() external view returns (uint256[] memory) {\\n        return completedAssets;\\n    }\\n\\n    function getAssetsByCategory(\\n        Category category\\n    ) external view returns (uint256[] memory) {\\n        return categoryAssets[category];\\n    }\\n}\\n\",\"keccak256\":\"0xfe8b84cc7cf611042e781969058a556bbdef20e9d3d6073a89df555c628fffc7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4661,"contract":"contracts/Assets.sol:Assets","label":"nftContract","offset":0,"slot":"0","type":"t_contract(NFTVenture)7155"},{"astId":4663,"contract":"contracts/Assets.sol:Assets","label":"supervisor","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(NFTVenture)7155":{"encoding":"inplace","label":"contract NFTVenture","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/FCTVToken.sol":{"FCTVToken":{"abi":[{"inputs":[{"internalType":"string","name":"baseURI","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"tokenURI","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"string[]","name":"tokenURIs","type":"string[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"tokenURI","type":"string"}],"name":"setURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"events":{"ApprovalForAll(address,address,bool)":{"details":"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."},"TransferBatch(address,address,address,uint256[],uint256[])":{"details":"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."},"TransferSingle(address,address,address,uint256,uint256)":{"details":"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"URI(string,uint256)":{"details":"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."}},"kind":"dev","methods":{"balanceOf(address,uint256)":{"details":"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."},"balanceOfBatch(address[],uint256[])":{"details":"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."},"isApprovedForAll(address,address)":{"details":"See {IERC1155-isApprovedForAll}."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":{"details":"See {IERC1155-safeBatchTransferFrom}."},"safeTransferFrom(address,address,uint256,uint256,bytes)":{"details":"See {IERC1155-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC1155-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":704,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":803,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":742,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"608060405234620002bb576200239c803803806200001d81620002c0565b9283398101906020918282820312620002bb5781516001600160401b0392838211620002bb570191601f91808385011215620002bb578351938285116200029157601f19946200007385820187168801620002c0565b92818452878284010111620002bb57869160005b828110620002a7575050906000918301015280519182116200029157620000b0600254620002e6565b83811162000253575b508493838311600114620001ec575092819293600092620001e0575b50508160011b916000199060031b1c1916176002555b600380546001600160a01b0319163390811790915560007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a362000133600454620002e6565b818111620001bc575b507f4672616374696f6e616c2043545620546f6b656e73000000000000000000002a6004556005546200016f90620002e6565b9080821162000198575b600a641190d5159560da1b0160055560405161205f90816200033d8239f35b620001b3926005600052600020910160051c81019062000323565b38808062000179565b620001d99060046000528284600020910160051c81019062000323565b386200013c565b015190503880620000d5565b8216936002600052856000209160005b878782106200023c57505083600195961062000222575b505050811b01600255620000eb565b015160001960f88460031b161c1916905538808062000213565b6001849582939585015181550194019201620001fc565b62000280906002600052866000208580860160051c82019289871062000287575b0160051c019062000323565b38620000b9565b9250819262000274565b634e487b7160e01b600052604160045260246000fd5b818101840151858201850152830162000087565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200029157604052565b90600182811c9216801562000318575b60208310146200030257565b634e487b7160e01b600052602260045260246000fd5b91607f1691620002f6565b8181106200032f575050565b600081556001016200032356fe6040608081526004908136101561001557600080fd5b600091823560e01c908162fdd58e1461184057816301ffc9a7146117d257816306fdde031461171f5781630e89341c146116465781632eb2c2d6146113625781634e1273f4146111cd5781636b20c45414611089578163715018a61461103a578163862440e214610f0d5781638da5cb5b14610ee457816395d89b4114610dff578163a22cb46514610d21578163a4b645eb146109f4578163b9571e8414610539578163e985e9c5146104e7578163f242432a1461028d578163f2fde38b146101d2575063f5298aca146100e857600080fd5b8190346101cf5760603660031901126101cf57610103611870565b6001600160a01b03169060243590600080516020611fea8339815191529060443533851480156101b0575b61013790611be8565b610142851515611ec3565b61014b84611e8e565b5061015581611e8e565b50858251610162816118db565b528386528560205281862085875260205261018c818388205461018782821015611f1b565b611ca5565b8487528660205282872086885260205282872055815193845260208401523392a480f35b508486526001602090815282872033885290528186205460ff1661012e565b50fd5b905034610289576020366003190112610289576101ed611870565b600354916001600160a01b0380841692610208338514611a6e565b16938415610237575050829060008051602061200a8339815191528580a36001600160a01b0319161760035580f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b919050346102895760a0366003190112610289576102a9611870565b836102b261188b565b916044356064356084356001600160401b0381116104e3576102d790369089016119e4565b926001600160a01b03868116916102ef831515611b8e565b169233841480156104c4575b61030490611be8565b61030d81611e8e565b5061031783611e8e565b50808652602096868852888720858852885261033d848a89205461018782821015611c46565b828852878952898820868952895289882055818752868852888720838852885288872061036b858254611cb2565b905582858a51848152868b820152600080516020611fea8339815191528c3392a43b610395578580f35b889587946103d68a519788968795869463f23a6e6160e01b9c8d8752339087015260248601526044850152606484015260a0608484015260a483019061192f565b03925af1869181610495575b506104645750506001906103f4611dad565b6308c379a014610431575b506104145750505b3880808381808080808580f35b5162461bcd60e51b81529150819061042d908201611e39565b0390fd5b610439611dcb565b8061044457506103ff565b61042d8591855193849362461bcd60e51b8552840152602483019061192f565b6001600160e01b03191603905061047c575050610407565b5162461bcd60e51b81529150819061042d908201611d64565b6104b6919250843d86116104bd575b6104ae818361190c565b810190611d44565b90386103e2565b503d6104a4565b508386526001602090815288872033885290528786205460ff166102fb565b8480fd5b50503461053557806003193601126105355760ff81602093610507611870565b61050f61188b565b6001600160a01b0391821683526001875283832091168252855220549151911615158152f35b5080fd5b905034610289576003199160a0368401126109f057610556611870565b6024946001600160401b039490919086358681116109f05761057b9036908701611986565b946044358781116104e3576105939036908301611986565b96606435938185116109ec57366023860112156109ec5784830135996105b88b61196f565b946105c58951968761190c565b8b86526020968787018360059e8f1b830101913683116109e857848101915b8383106109be57505050506084358481116109ba5761060690369087016119e4565b60018060a01b039360039461061f818754163314611a6e565b8c5189510361096957906106508d9a9997959f98969493928f9083169b6106478d1515611f73565b51905114611cbf565b8a5b8d518110156106b157908e9f9392918e9f908f8f8f908f918f9261069e9361068887610681816106a59b611b64565b5197611b64565b5183528281528383209183525220918254611cb2565b9055611b3f565b909192939f9e50610652565b508e8c8f8f95908c8f968f888d95888c94869b858588600080516020611fca8339815191526106e88f8e9051918291339583611d1c565b0390a43b610847575b5050509450505050505b85518110156108435761070e818b611b64565b516107198288611b64565b51865260068552828620908051908a8211610831578d9061073a84546118a1565b601f928382116107f1575b505087918311600114610789576107799493929189918361077e575b50508160011b91600019908c1b1c1916179055611b3f565b6106fb565b015190508f80610761565b8389528789209190601f1984168a5b8a8282106107db5750509084610779979695949392106107c3575b505050600190811b019055611b3f565b0151600019838d1b60f8161c191690558e80806107b3565b6001859682939686015181550195019301610798565b858b52898b209084808701821c8301938c8810610828575b01901c01905b81811061081d57508f610745565b8a815560010161080f565b93508293610809565b634e487b7160e01b885260418c528588fd5b8480f35b83928a519889978896879563bc197c8160e01b9d8e885233908801528601526044850160a0905260a4850161087b91611a3a565b8285820301606486015261088e91611a3a565b908382030160848401526108a19161192f565b03925af186918161094a575b5061092557505060016108be611dad565b6308c379a0146108f2575b6108dc575b878b848782888188816106f1565b5162461bcd60e51b81528061042d818a01611e39565b6108fa611dcb565b8061090557506108c9565b9050889261042d925194859462461bcd60e51b865285015283019061192f565b6001600160e01b031916146108ce575162461bcd60e51b81528061042d818a01611d64565b610962919250863d88116104bd576104ae818361190c565b908d6108ad565b508a5162461bcd60e51b81528088018a90526025818601527f455243313135353a2069647320616e642075726973206c656e677468206d69736044820152640dac2e8c6d60db1b6064820152608490fd5b8880fd5b82358881116109e4578b916109d983928936918701016119e4565b8152019201916105e4565b8c80fd5b8a80fd5b8580fd5b8380fd5b839150346105355760a036600319011261053557610a10611870565b604435936001600160401b039190602435606435848111610d1d57610a3890369087016119e4565b96608435858111610d1957610a5090369088016119e4565b938660018060a01b0391610a6983600354163314611a6e565b82811696610a78881515611f73565b610a8186611e8e565b50610a8b85611e8e565b50858b5260209788928c84528c828a822091528452888d20610aae888254611cb2565b9055818d8a518a81528987820152600080516020611fea8339815191528c3392a43b610c03575b50505050610aea915033906003541614611a6e565b8552600682528420928551928311610bf05750610b0783546118a1565b601f8111610bad575b5080601f8311600114610b4b5750839482939492610b40575b50508160011b916000199060031b1c191617905580f35b015190508480610b29565b90601f198316958486528286209286905b888210610b9557505083600195969710610b7c575b505050811b01905580f35b015160001960f88460031b161c19169055848080610b71565b80600185968294968601518155019501930190610b5c565b838552818520601f840160051c810191838510610be6575b601f0160051c01905b818110610bdb5750610b10565b858155600101610bce565b9091508190610bc5565b634e487b7160e01b855260419052602484fd5b610c459394958c895180968195829463f23a6e6160e01b9a8b855233908501528460248501528c6044850152606484015260a0608484015260a483019061192f565b03925af1899181610cfa575b50610ccb5750506001610c62611dad565b6308c379a014610c96575b610c7f57610aea905b86858b80610ad5565b825162461bcd60e51b81528061042d818901611e39565b610c9e611dcb565b80610ca95750610c6d565b845162461bcd60e51b815280890187905290819061042d90602483019061192f565b6001600160e01b03191603610ce357610aea90610c76565b825162461bcd60e51b81528061042d818901611d64565b610d12919250873d89116104bd576104ae818361190c565b908b610c51565b8780fd5b8680fd5b91905034610289578060031936011261028957610d3c611870565b90602435918215158093036104e3576001600160a01b031692338414610dab5750338452600160205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020608492519162461bcd60e51b8352820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152fd5b50503461053557816003193601126105355780519082600554610e21816118a1565b80855290600190818116908115610ebc5750600114610e63575b505050610e4d82610e5f94038361190c565b5191829160208352602083019061192f565b0390f35b60058352602095507f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b828410610ea95750505082610e5f94610e4d9282010194610e3b565b8054868501880152928601928101610e8d565b610e5f9750610e4d9450602092508693915060ff191682840152151560051b82010194610e3b565b50503461053557816003193601126105355760035490516001600160a01b039091168152602090f35b839150346105355782600319360112610535576001600160401b036024358181116109f057610f3f90369084016119e4565b93610f5560018060a01b03600354163314611a6e565b82358452602090600682528420928551928311610bf05750610f7783546118a1565b601f8111610ff7575b5080601f8311600114610faf5750839482939492610b405750508160011b916000199060031b1c191617905580f35b90601f198316958486528286209286905b888210610fdf57505083600195969710610b7c57505050811b01905580f35b80600185968294968601518155019501930190610fc0565b838552818520601f840160051c810191838510611030575b601f0160051c01905b8181106110255750610f80565b858155600101611018565b909150819061100f565b8334611086578060031936011261108657600354816001600160a01b038216611064338214611a6e565b60008051602061200a8339815191528280a36001600160a01b03191660035580f35b80fd5b91905034610289576060366003190112610289576110a5611870565b906001600160401b036024358181116109ec576110c59036908601611986565b936044359182116109ec576110dc91369101611986565b916001600160a01b031633811480156111ae575b6110f990611be8565b611104811515611ec3565b6111118451845114611cbf565b84825161111d816118db565b52845b8585518210156111855750806111396111809287611b64565b516111448287611b64565b518189526111696020918a8352878b20878c528352878b205461018782821015611f1b565b91895288815285892090858a525284882055611b3f565b611120565b808387600080516020611fca8339815191526111a8898951918291339583611d1c565b0390a480f35b508085526001602090815282862033875290528185205460ff166110f0565b90503461028957816003193601126102895780356001600160401b038082116104e357366023830112156104e35781830135906112098261196f565b926112168651948561190c565b82845260209260248486019160051b830101913683116109ba57602401905b82821061133f575050506024359081116109ec576112569036908501611986565b9282518451036112ec575081519461126d8661196f565b9561127a8651978861190c565b808752611289601f199161196f565b0136838801375b82518110156112da576112d5906112c56001600160a01b036112b28387611b64565b51166112be8388611b64565b5190611ab9565b6112cf8289611b64565b52611b3f565b611290565b845182815280610e5f81850189611a3a565b60849185519162461bcd60e51b8352820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152fd5b81356001600160a01b038116810361135e578152908401908401611235565b8980fd5b905034610289576003199160a0368401126109f05761137f611870565b61138761188b565b936001600160401b0393604435858111610d19576113a89036908301611986565b906064358681116109ba576113c09036908301611986565b956084359081116109ba576113d890369083016119e4565b926113e68351885114611cbf565b6001600160a01b03888116956113fd871515611b8e565b16933385148015611628575b156115ca57895b8a855182101561148e57908961069e8a6114899461143985611432818d611b64565b5195611b64565b51938082526020908282528383208d84528252611460868585205461018782821015611c46565b8184528383528d8585209085528352848420558252818152828220908d83525220918254611cb2565b611410565b5050909493959692919784878951600080516020611fca8339815191523391806114b98a8a83611d1c565b0390a43b6114c5578880f35b8651948593849363bc197c8160e01b98898652338c87015260248601526044850160a0905260a485016114f791611a3a565b8285820301606486015261150a91611a3a565b9083820301608484015261151d9161192f565b0381885a94602095f18591816115aa575b50611594575050600161153f611dad565b6308c379a01461155d575b6104145750505b38808080808080808880f35b611565611dcb565b80611570575061154a565b905061042d91602094505193849362461bcd60e51b8552840152602483019061192f565b6001600160e01b0319160361047c575050611551565b6115c391925060203d81116104bd576104ae818361190c565b903861152e565b865162461bcd60e51b8152602081850152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608490fd5b50848a526001602052868a20338b5260205260ff878b205416611409565b9190503461028957602091826003193601126109f05735835260068252808320815193849181815490611678826118a1565b928386526001928884821691826000146116f55750506001146116b7575b8588610e5f896116a8848a038561190c565b5192828493845283019061192f565b87945081939291528383205b8284106116dd57505050820101816116a8610e5f38611696565b8054848a0186015288955087949093019281016116c3565b60ff19168882015294151560051b870190940194508593506116a89250610e5f9150389050611696565b83833461053557816003193601126105355780519180938054611741816118a1565b808652916001918083169081156117a7575060011461176c575b610e5f8686610e4d828b038361190c565b835260208084209096505b8284106117945750505082610e5f94610e4d92820101948661175b565b8054868501880152928601928101611777565b9050610e5f9750610e4d9450602092508693915060ff191682840152151560051b820101948661175b565b90503461028957602036600319011261028957359063ffffffff60e01b82168092036102895760209250636cdb3d1360e11b821491821561182f575b821561181e575b50519015158152f35b6301ffc9a760e01b14915038611815565b6303a24d0760e21b8114925061180e565b505034610535578060031936011261053557602090611869611860611870565b60243590611ab9565b9051908152f35b600435906001600160a01b038216820361188657565b600080fd5b602435906001600160a01b038216820361188657565b90600182811c921680156118d1575b60208310146118bb57565b634e487b7160e01b600052602260045260246000fd5b91607f16916118b0565b602081019081106001600160401b038211176118f657604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b038211908210176118f657604052565b919082519283825260005b84811061195b575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161193a565b6001600160401b0381116118f65760051b60200190565b81601f820112156118865780359161199d8361196f565b926119ab604051948561190c565b808452602092838086019260051b820101928311611886578301905b8282106119d5575050505090565b813581529083019083016119c7565b81601f82011215611886578035906001600160401b0382116118f65760405192611a18601f8401601f19166020018561190c565b8284526020838301011161188657816000926020809301838601378301015290565b90815180825260208080930193019160005b828110611a5a575050505090565b835185529381019392810192600101611a4c565b15611a7557565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160a01b0316908115611ae657600052600060205260406000209060005260205260406000205490565b60405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b6064820152608490fd5b6000198114611b4e5760010190565b634e487b7160e01b600052601160045260246000fd5b8051821015611b785760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b15611b9557565b60405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b15611bef57565b60405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608490fd5b15611c4d57565b60405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608490fd5b91908203918211611b4e57565b91908201809211611b4e57565b15611cc657565b60405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608490fd5b9091611d33611d4193604084526040840190611a3a565b916020818403910152611a3a565b90565b9081602091031261188657516001600160e01b0319811681036118865790565b60809060208152602860208201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b60608201520190565b60009060033d11611dba57565b905060046000803e60005160e01c90565b600060443d10611d4157604051600319913d83016004833e81516001600160401b03918282113d602484011117611e2857818401948551938411611e30573d85010160208487010111611e285750611d419291016020019061190c565b949350505050565b50949350505050565b60809060208152603460208201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356040820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60608201520190565b60408051919082016001600160401b038111838210176118f65760405260018252602082016020368237825115611b78575290565b15611eca57565b60405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b15611f2257565b60405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608490fd5b15611f7a57565b60405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608490fdfe4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fbc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220c5037edb4635403503877508e187c5a41e767365cafe1c2066c7063858af063964736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x2BB JUMPI PUSH3 0x239C DUP1 CODESIZE SUB DUP1 PUSH3 0x1D DUP2 PUSH3 0x2C0 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DUP3 SUB SLT PUSH3 0x2BB JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH3 0x2BB JUMPI ADD SWAP2 PUSH1 0x1F SWAP2 DUP1 DUP4 DUP6 ADD SLT ISZERO PUSH3 0x2BB JUMPI DUP4 MLOAD SWAP4 DUP3 DUP6 GT PUSH3 0x291 JUMPI PUSH1 0x1F NOT SWAP5 PUSH3 0x73 DUP6 DUP3 ADD DUP8 AND DUP9 ADD PUSH3 0x2C0 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE DUP8 DUP3 DUP5 ADD ADD GT PUSH3 0x2BB JUMPI DUP7 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH3 0x2A7 JUMPI POP POP SWAP1 PUSH1 0x0 SWAP2 DUP4 ADD ADD MSTORE DUP1 MLOAD SWAP2 DUP3 GT PUSH3 0x291 JUMPI PUSH3 0xB0 PUSH1 0x2 SLOAD PUSH3 0x2E6 JUMP JUMPDEST DUP4 DUP2 GT PUSH3 0x253 JUMPI JUMPDEST POP DUP5 SWAP4 DUP4 DUP4 GT PUSH1 0x1 EQ PUSH3 0x1EC JUMPI POP SWAP3 DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x1E0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 SSTORE JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP2 DUP1 LOG3 PUSH3 0x133 PUSH1 0x4 SLOAD PUSH3 0x2E6 JUMP JUMPDEST DUP2 DUP2 GT PUSH3 0x1BC JUMPI JUMPDEST POP PUSH32 0x4672616374696F6E616C2043545620546F6B656E73000000000000000000002A PUSH1 0x4 SSTORE PUSH1 0x5 SLOAD PUSH3 0x16F SWAP1 PUSH3 0x2E6 JUMP JUMPDEST SWAP1 DUP1 DUP3 GT PUSH3 0x198 JUMPI JUMPDEST PUSH1 0xA PUSH5 0x1190D51595 PUSH1 0xDA SHL ADD PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD PUSH2 0x205F SWAP1 DUP2 PUSH3 0x33D DUP3 CODECOPY RETURN JUMPDEST PUSH3 0x1B3 SWAP3 PUSH1 0x5 PUSH1 0x0 MSTORE PUSH1 0x0 KECCAK256 SWAP2 ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 PUSH3 0x323 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH3 0x179 JUMP JUMPDEST PUSH3 0x1D9 SWAP1 PUSH1 0x4 PUSH1 0x0 MSTORE DUP3 DUP5 PUSH1 0x0 KECCAK256 SWAP2 ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 PUSH3 0x323 JUMP JUMPDEST CODESIZE PUSH3 0x13C JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xD5 JUMP JUMPDEST DUP3 AND SWAP4 PUSH1 0x2 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP8 DUP8 DUP3 LT PUSH3 0x23C JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x222 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE PUSH3 0xEB JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x213 JUMP JUMPDEST PUSH1 0x1 DUP5 SWAP6 DUP3 SWAP4 SWAP6 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x1FC JUMP JUMPDEST PUSH3 0x280 SWAP1 PUSH1 0x2 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP10 DUP8 LT PUSH3 0x287 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 PUSH3 0x323 JUMP JUMPDEST CODESIZE PUSH3 0xB9 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x274 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 ADD DUP5 ADD MLOAD DUP6 DUP3 ADD DUP6 ADD MSTORE DUP4 ADD PUSH3 0x87 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x291 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x318 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x302 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x2F6 JUMP JUMPDEST DUP2 DUP2 LT PUSH3 0x32F JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x323 JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0xFDD58E EQ PUSH2 0x1840 JUMPI DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x17D2 JUMPI DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x171F JUMPI DUP2 PUSH4 0xE89341C EQ PUSH2 0x1646 JUMPI DUP2 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1362 JUMPI DUP2 PUSH4 0x4E1273F4 EQ PUSH2 0x11CD JUMPI DUP2 PUSH4 0x6B20C454 EQ PUSH2 0x1089 JUMPI DUP2 PUSH4 0x715018A6 EQ PUSH2 0x103A JUMPI DUP2 PUSH4 0x862440E2 EQ PUSH2 0xF0D JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0xEE4 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0xDFF JUMPI DUP2 PUSH4 0xA22CB465 EQ PUSH2 0xD21 JUMPI DUP2 PUSH4 0xA4B645EB EQ PUSH2 0x9F4 JUMPI DUP2 PUSH4 0xB9571E84 EQ PUSH2 0x539 JUMPI DUP2 PUSH4 0xE985E9C5 EQ PUSH2 0x4E7 JUMPI DUP2 PUSH4 0xF242432A EQ PUSH2 0x28D JUMPI DUP2 PUSH4 0xF2FDE38B EQ PUSH2 0x1D2 JUMPI POP PUSH4 0xF5298ACA EQ PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SWAP1 CALLVALUE PUSH2 0x1CF JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CF JUMPI PUSH2 0x103 PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FEA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x44 CALLDATALOAD CALLER DUP6 EQ DUP1 ISZERO PUSH2 0x1B0 JUMPI JUMPDEST PUSH2 0x137 SWAP1 PUSH2 0x1BE8 JUMP JUMPDEST PUSH2 0x142 DUP6 ISZERO ISZERO PUSH2 0x1EC3 JUMP JUMPDEST PUSH2 0x14B DUP5 PUSH2 0x1E8E JUMP JUMPDEST POP PUSH2 0x155 DUP2 PUSH2 0x1E8E JUMP JUMPDEST POP DUP6 DUP3 MLOAD PUSH2 0x162 DUP2 PUSH2 0x18DB JUMP JUMPDEST MSTORE DUP4 DUP7 MSTORE DUP6 PUSH1 0x20 MSTORE DUP2 DUP7 KECCAK256 DUP6 DUP8 MSTORE PUSH1 0x20 MSTORE PUSH2 0x18C DUP2 DUP4 DUP9 KECCAK256 SLOAD PUSH2 0x187 DUP3 DUP3 LT ISZERO PUSH2 0x1F1B JUMP JUMPDEST PUSH2 0x1CA5 JUMP JUMPDEST DUP5 DUP8 MSTORE DUP7 PUSH1 0x20 MSTORE DUP3 DUP8 KECCAK256 DUP7 DUP9 MSTORE PUSH1 0x20 MSTORE DUP3 DUP8 KECCAK256 SSTORE DUP2 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE CALLER SWAP3 LOG4 DUP1 RETURN JUMPDEST POP DUP5 DUP7 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP3 DUP8 KECCAK256 CALLER DUP9 MSTORE SWAP1 MSTORE DUP2 DUP7 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x12E JUMP JUMPDEST POP REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x289 JUMPI PUSH2 0x1ED PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 PUSH2 0x208 CALLER DUP6 EQ PUSH2 0x1A6E JUMP JUMPDEST AND SWAP4 DUP5 ISZERO PUSH2 0x237 JUMPI POP POP DUP3 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x200A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x289 JUMPI PUSH2 0x2A9 PUSH2 0x1870 JUMP JUMPDEST DUP4 PUSH2 0x2B2 PUSH2 0x188B JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4E3 JUMPI PUSH2 0x2D7 SWAP1 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0x19E4 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 PUSH2 0x2EF DUP4 ISZERO ISZERO PUSH2 0x1B8E JUMP JUMPDEST AND SWAP3 CALLER DUP5 EQ DUP1 ISZERO PUSH2 0x4C4 JUMPI JUMPDEST PUSH2 0x304 SWAP1 PUSH2 0x1BE8 JUMP JUMPDEST PUSH2 0x30D DUP2 PUSH2 0x1E8E JUMP JUMPDEST POP PUSH2 0x317 DUP4 PUSH2 0x1E8E JUMP JUMPDEST POP DUP1 DUP7 MSTORE PUSH1 0x20 SWAP7 DUP7 DUP9 MSTORE DUP9 DUP8 KECCAK256 DUP6 DUP9 MSTORE DUP9 MSTORE PUSH2 0x33D DUP5 DUP11 DUP10 KECCAK256 SLOAD PUSH2 0x187 DUP3 DUP3 LT ISZERO PUSH2 0x1C46 JUMP JUMPDEST DUP3 DUP9 MSTORE DUP8 DUP10 MSTORE DUP10 DUP9 KECCAK256 DUP7 DUP10 MSTORE DUP10 MSTORE DUP10 DUP9 KECCAK256 SSTORE DUP2 DUP8 MSTORE DUP7 DUP9 MSTORE DUP9 DUP8 KECCAK256 DUP4 DUP9 MSTORE DUP9 MSTORE DUP9 DUP8 KECCAK256 PUSH2 0x36B DUP6 DUP3 SLOAD PUSH2 0x1CB2 JUMP JUMPDEST SWAP1 SSTORE DUP3 DUP6 DUP11 MLOAD DUP5 DUP2 MSTORE DUP7 DUP12 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FEA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP13 CALLER SWAP3 LOG4 EXTCODESIZE PUSH2 0x395 JUMPI DUP6 DUP1 RETURN JUMPDEST DUP9 SWAP6 DUP8 SWAP5 PUSH2 0x3D6 DUP11 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP13 DUP14 DUP8 MSTORE CALLER SWAP1 DUP8 ADD MSTORE PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST SUB SWAP3 GAS CALL DUP7 SWAP2 DUP2 PUSH2 0x495 JUMPI JUMPDEST POP PUSH2 0x464 JUMPI POP POP PUSH1 0x1 SWAP1 PUSH2 0x3F4 PUSH2 0x1DAD JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x431 JUMPI JUMPDEST POP PUSH2 0x414 JUMPI POP POP JUMPDEST CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 DUP1 DUP1 DUP6 DUP1 RETURN JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 POP DUP2 SWAP1 PUSH2 0x42D SWAP1 DUP3 ADD PUSH2 0x1E39 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x439 PUSH2 0x1DCB JUMP JUMPDEST DUP1 PUSH2 0x444 JUMPI POP PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x42D DUP6 SWAP2 DUP6 MLOAD SWAP4 DUP5 SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB SWAP1 POP PUSH2 0x47C JUMPI POP POP PUSH2 0x407 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 POP DUP2 SWAP1 PUSH2 0x42D SWAP1 DUP3 ADD PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0x4B6 SWAP2 SWAP3 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x4BD JUMPI JUMPDEST PUSH2 0x4AE DUP2 DUP4 PUSH2 0x190C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1D44 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x3E2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4A4 JUMP JUMPDEST POP DUP4 DUP7 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP9 DUP8 KECCAK256 CALLER DUP9 MSTORE SWAP1 MSTORE DUP8 DUP7 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2FB JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x535 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI PUSH1 0xFF DUP2 PUSH1 0x20 SWAP4 PUSH2 0x507 PUSH2 0x1870 JUMP JUMPDEST PUSH2 0x50F PUSH2 0x188B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP8 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x3 NOT SWAP2 PUSH1 0xA0 CALLDATASIZE DUP5 ADD SLT PUSH2 0x9F0 JUMPI PUSH2 0x556 PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x24 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 SWAP1 SWAP2 SWAP1 DUP7 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x9F0 JUMPI PUSH2 0x57B SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP5 PUSH1 0x44 CALLDATALOAD DUP8 DUP2 GT PUSH2 0x4E3 JUMPI PUSH2 0x593 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP7 PUSH1 0x64 CALLDATALOAD SWAP4 DUP2 DUP6 GT PUSH2 0x9EC JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x9EC JUMPI DUP5 DUP4 ADD CALLDATALOAD SWAP10 PUSH2 0x5B8 DUP12 PUSH2 0x196F JUMP JUMPDEST SWAP5 PUSH2 0x5C5 DUP10 MLOAD SWAP7 DUP8 PUSH2 0x190C JUMP JUMPDEST DUP12 DUP7 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP8 ADD DUP4 PUSH1 0x5 SWAP15 DUP16 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x9E8 JUMPI DUP5 DUP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x9BE JUMPI POP POP POP POP PUSH1 0x84 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x9BA JUMPI PUSH2 0x606 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x19E4 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x3 SWAP5 PUSH2 0x61F DUP2 DUP8 SLOAD AND CALLER EQ PUSH2 0x1A6E JUMP JUMPDEST DUP13 MLOAD DUP10 MLOAD SUB PUSH2 0x969 JUMPI SWAP1 PUSH2 0x650 DUP14 SWAP11 SWAP10 SWAP8 SWAP6 SWAP16 SWAP9 SWAP7 SWAP5 SWAP4 SWAP3 DUP16 SWAP1 DUP4 AND SWAP12 PUSH2 0x647 DUP14 ISZERO ISZERO PUSH2 0x1F73 JUMP JUMPDEST MLOAD SWAP1 MLOAD EQ PUSH2 0x1CBF JUMP JUMPDEST DUP11 JUMPDEST DUP14 MLOAD DUP2 LT ISZERO PUSH2 0x6B1 JUMPI SWAP1 DUP15 SWAP16 SWAP4 SWAP3 SWAP2 DUP15 SWAP16 SWAP1 DUP16 DUP16 DUP16 SWAP1 DUP16 SWAP2 DUP16 SWAP3 PUSH2 0x69E SWAP4 PUSH2 0x688 DUP8 PUSH2 0x681 DUP2 PUSH2 0x6A5 SWAP12 PUSH2 0x1B64 JUMP JUMPDEST MLOAD SWAP8 PUSH2 0x1B64 JUMP JUMPDEST MLOAD DUP4 MSTORE DUP3 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1CB2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1B3F JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP16 SWAP15 POP PUSH2 0x652 JUMP JUMPDEST POP DUP15 DUP13 DUP16 DUP16 SWAP6 SWAP1 DUP13 DUP16 SWAP7 DUP16 DUP9 DUP14 SWAP6 DUP9 DUP13 SWAP5 DUP7 SWAP12 DUP6 DUP6 DUP9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x6E8 DUP16 DUP15 SWAP1 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH2 0x1D1C JUMP JUMPDEST SUB SWAP1 LOG4 EXTCODESIZE PUSH2 0x847 JUMPI JUMPDEST POP POP POP SWAP5 POP POP POP POP POP JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x843 JUMPI PUSH2 0x70E DUP2 DUP12 PUSH2 0x1B64 JUMP JUMPDEST MLOAD PUSH2 0x719 DUP3 DUP9 PUSH2 0x1B64 JUMP JUMPDEST MLOAD DUP7 MSTORE PUSH1 0x6 DUP6 MSTORE DUP3 DUP7 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 DUP11 DUP3 GT PUSH2 0x831 JUMPI DUP14 SWAP1 PUSH2 0x73A DUP5 SLOAD PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x1F SWAP3 DUP4 DUP3 GT PUSH2 0x7F1 JUMPI JUMPDEST POP POP DUP8 SWAP2 DUP4 GT PUSH1 0x1 EQ PUSH2 0x789 JUMPI PUSH2 0x779 SWAP5 SWAP4 SWAP3 SWAP2 DUP10 SWAP2 DUP4 PUSH2 0x77E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 DUP13 SHL SHR NOT AND OR SWAP1 SSTORE PUSH2 0x1B3F JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP16 DUP1 PUSH2 0x761 JUMP JUMPDEST DUP4 DUP10 MSTORE DUP8 DUP10 KECCAK256 SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP11 JUMPDEST DUP11 DUP3 DUP3 LT PUSH2 0x7DB JUMPI POP POP SWAP1 DUP5 PUSH2 0x779 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x7C3 JUMPI JUMPDEST POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1B3F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP14 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP4 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x798 JUMP JUMPDEST DUP6 DUP12 MSTORE DUP10 DUP12 KECCAK256 SWAP1 DUP5 DUP1 DUP8 ADD DUP3 SHR DUP4 ADD SWAP4 DUP13 DUP9 LT PUSH2 0x828 JUMPI JUMPDEST ADD SWAP1 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x81D JUMPI POP DUP16 PUSH2 0x745 JUMP JUMPDEST DUP11 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x80F JUMP JUMPDEST SWAP4 POP DUP3 SWAP4 PUSH2 0x809 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 DUP13 MSTORE DUP6 DUP9 REVERT JUMPDEST DUP5 DUP1 RETURN JUMPDEST DUP4 SWAP3 DUP11 MLOAD SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP14 DUP15 DUP9 MSTORE CALLER SWAP1 DUP9 ADD MSTORE DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD PUSH1 0xA0 SWAP1 MSTORE PUSH1 0xA4 DUP6 ADD PUSH2 0x87B SWAP2 PUSH2 0x1A3A JUMP JUMPDEST DUP3 DUP6 DUP3 SUB ADD PUSH1 0x64 DUP7 ADD MSTORE PUSH2 0x88E SWAP2 PUSH2 0x1A3A JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB ADD PUSH1 0x84 DUP5 ADD MSTORE PUSH2 0x8A1 SWAP2 PUSH2 0x192F JUMP JUMPDEST SUB SWAP3 GAS CALL DUP7 SWAP2 DUP2 PUSH2 0x94A JUMPI JUMPDEST POP PUSH2 0x925 JUMPI POP POP PUSH1 0x1 PUSH2 0x8BE PUSH2 0x1DAD JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x8F2 JUMPI JUMPDEST PUSH2 0x8DC JUMPI JUMPDEST DUP8 DUP12 DUP5 DUP8 DUP3 DUP9 DUP2 DUP9 DUP2 PUSH2 0x6F1 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x42D DUP2 DUP11 ADD PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x8FA PUSH2 0x1DCB JUMP JUMPDEST DUP1 PUSH2 0x905 JUMPI POP PUSH2 0x8C9 JUMP JUMPDEST SWAP1 POP DUP9 SWAP3 PUSH2 0x42D SWAP3 MLOAD SWAP5 DUP6 SWAP5 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP7 MSTORE DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x8CE JUMPI MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x42D DUP2 DUP11 ADD PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0x962 SWAP2 SWAP3 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x4BD JUMPI PUSH2 0x4AE DUP2 DUP4 PUSH2 0x190C JUMP JUMPDEST SWAP1 DUP14 PUSH2 0x8AD JUMP JUMPDEST POP DUP11 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP9 ADD DUP11 SWAP1 MSTORE PUSH1 0x25 DUP2 DUP7 ADD MSTORE PUSH32 0x455243313135353A2069647320616E642075726973206C656E677468206D6973 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0xDAC2E8C6D PUSH1 0xDB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD DUP9 DUP2 GT PUSH2 0x9E4 JUMPI DUP12 SWAP2 PUSH2 0x9D9 DUP4 SWAP3 DUP10 CALLDATASIZE SWAP2 DUP8 ADD ADD PUSH2 0x19E4 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x5E4 JUMP JUMPDEST DUP13 DUP1 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x535 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x535 JUMPI PUSH2 0xA10 PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x64 CALLDATALOAD DUP5 DUP2 GT PUSH2 0xD1D JUMPI PUSH2 0xA38 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x19E4 JUMP JUMPDEST SWAP7 PUSH1 0x84 CALLDATALOAD DUP6 DUP2 GT PUSH2 0xD19 JUMPI PUSH2 0xA50 SWAP1 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0x19E4 JUMP JUMPDEST SWAP4 DUP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0xA69 DUP4 PUSH1 0x3 SLOAD AND CALLER EQ PUSH2 0x1A6E JUMP JUMPDEST DUP3 DUP2 AND SWAP7 PUSH2 0xA78 DUP9 ISZERO ISZERO PUSH2 0x1F73 JUMP JUMPDEST PUSH2 0xA81 DUP7 PUSH2 0x1E8E JUMP JUMPDEST POP PUSH2 0xA8B DUP6 PUSH2 0x1E8E JUMP JUMPDEST POP DUP6 DUP12 MSTORE PUSH1 0x20 SWAP8 DUP9 SWAP3 DUP13 DUP5 MSTORE DUP13 DUP3 DUP11 DUP3 KECCAK256 SWAP2 MSTORE DUP5 MSTORE DUP9 DUP14 KECCAK256 PUSH2 0xAAE DUP9 DUP3 SLOAD PUSH2 0x1CB2 JUMP JUMPDEST SWAP1 SSTORE DUP2 DUP14 DUP11 MLOAD DUP11 DUP2 MSTORE DUP10 DUP8 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FEA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP13 CALLER SWAP3 LOG4 EXTCODESIZE PUSH2 0xC03 JUMPI JUMPDEST POP POP POP POP PUSH2 0xAEA SWAP2 POP CALLER SWAP1 PUSH1 0x3 SLOAD AND EQ PUSH2 0x1A6E JUMP JUMPDEST DUP6 MSTORE PUSH1 0x6 DUP3 MSTORE DUP5 KECCAK256 SWAP3 DUP6 MLOAD SWAP3 DUP4 GT PUSH2 0xBF0 JUMPI POP PUSH2 0xB07 DUP4 SLOAD PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xBAD JUMPI JUMPDEST POP DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xB4B JUMPI POP DUP4 SWAP5 DUP3 SWAP4 SWAP5 SWAP3 PUSH2 0xB40 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0xB29 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP3 DUP7 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0xB95 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0xB7C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP5 DUP1 DUP1 PUSH2 0xB71 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0xB5C JUMP JUMPDEST DUP4 DUP6 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP6 LT PUSH2 0xBE6 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xBDB JUMPI POP PUSH2 0xB10 JUMP JUMPDEST DUP6 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xBCE JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xBC5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH2 0xC45 SWAP4 SWAP5 SWAP6 DUP13 DUP10 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP11 DUP12 DUP6 MSTORE CALLER SWAP1 DUP6 ADD MSTORE DUP5 PUSH1 0x24 DUP6 ADD MSTORE DUP13 PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST SUB SWAP3 GAS CALL DUP10 SWAP2 DUP2 PUSH2 0xCFA JUMPI JUMPDEST POP PUSH2 0xCCB JUMPI POP POP PUSH1 0x1 PUSH2 0xC62 PUSH2 0x1DAD JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0xC96 JUMPI JUMPDEST PUSH2 0xC7F JUMPI PUSH2 0xAEA SWAP1 JUMPDEST DUP7 DUP6 DUP12 DUP1 PUSH2 0xAD5 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x42D DUP2 DUP10 ADD PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0xC9E PUSH2 0x1DCB JUMP JUMPDEST DUP1 PUSH2 0xCA9 JUMPI POP PUSH2 0xC6D JUMP JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x42D SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0xCE3 JUMPI PUSH2 0xAEA SWAP1 PUSH2 0xC76 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x42D DUP2 DUP10 ADD PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0xD12 SWAP2 SWAP3 POP DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x4BD JUMPI PUSH2 0x4AE DUP2 DUP4 PUSH2 0x190C JUMP JUMPDEST SWAP1 DUP12 PUSH2 0xC51 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x289 JUMPI PUSH2 0xD3C PUSH2 0x1870 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0x4E3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 CALLER DUP5 EQ PUSH2 0xDAB JUMPI POP CALLER DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 DUP5 KECCAK256 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE DUP1 DUP5 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x535 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0x5 SLOAD PUSH2 0xE21 DUP2 PUSH2 0x18A1 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xEBC JUMPI POP PUSH1 0x1 EQ PUSH2 0xE63 JUMPI JUMPDEST POP POP POP PUSH2 0xE4D DUP3 PUSH2 0xE5F SWAP5 SUB DUP4 PUSH2 0x190C JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 DUP4 MSTORE PUSH1 0x20 SWAP6 POP PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 JUMPDEST DUP3 DUP5 LT PUSH2 0xEA9 JUMPI POP POP POP DUP3 PUSH2 0xE5F SWAP5 PUSH2 0xE4D SWAP3 DUP3 ADD ADD SWAP5 PUSH2 0xE3B JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xE8D JUMP JUMPDEST PUSH2 0xE5F SWAP8 POP PUSH2 0xE4D SWAP5 POP PUSH1 0x20 SWAP3 POP DUP7 SWAP4 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 PUSH2 0xE3B JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x535 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x535 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x9F0 JUMPI PUSH2 0xF3F SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x19E4 JUMP JUMPDEST SWAP4 PUSH2 0xF55 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND CALLER EQ PUSH2 0x1A6E JUMP JUMPDEST DUP3 CALLDATALOAD DUP5 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x6 DUP3 MSTORE DUP5 KECCAK256 SWAP3 DUP6 MLOAD SWAP3 DUP4 GT PUSH2 0xBF0 JUMPI POP PUSH2 0xF77 DUP4 SLOAD PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xFF7 JUMPI JUMPDEST POP DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xFAF JUMPI POP DUP4 SWAP5 DUP3 SWAP4 SWAP5 SWAP3 PUSH2 0xB40 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP3 DUP7 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0xFDF JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0xB7C JUMPI POP POP POP DUP2 SHL ADD SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0xFC0 JUMP JUMPDEST DUP4 DUP6 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP6 LT PUSH2 0x1030 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1025 JUMPI POP PUSH2 0xF80 JUMP JUMPDEST DUP6 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1018 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST DUP4 CALLVALUE PUSH2 0x1086 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1086 JUMPI PUSH1 0x3 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1064 CALLER DUP3 EQ PUSH2 0x1A6E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x200A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x289 JUMPI PUSH2 0x10A5 PUSH2 0x1870 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x9EC JUMPI PUSH2 0x10C5 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP4 PUSH1 0x44 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x9EC JUMPI PUSH2 0x10DC SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ DUP1 ISZERO PUSH2 0x11AE JUMPI JUMPDEST PUSH2 0x10F9 SWAP1 PUSH2 0x1BE8 JUMP JUMPDEST PUSH2 0x1104 DUP2 ISZERO ISZERO PUSH2 0x1EC3 JUMP JUMPDEST PUSH2 0x1111 DUP5 MLOAD DUP5 MLOAD EQ PUSH2 0x1CBF JUMP JUMPDEST DUP5 DUP3 MLOAD PUSH2 0x111D DUP2 PUSH2 0x18DB JUMP JUMPDEST MSTORE DUP5 JUMPDEST DUP6 DUP6 MLOAD DUP3 LT ISZERO PUSH2 0x1185 JUMPI POP DUP1 PUSH2 0x1139 PUSH2 0x1180 SWAP3 DUP8 PUSH2 0x1B64 JUMP JUMPDEST MLOAD PUSH2 0x1144 DUP3 DUP8 PUSH2 0x1B64 JUMP JUMPDEST MLOAD DUP2 DUP10 MSTORE PUSH2 0x1169 PUSH1 0x20 SWAP2 DUP11 DUP4 MSTORE DUP8 DUP12 KECCAK256 DUP8 DUP13 MSTORE DUP4 MSTORE DUP8 DUP12 KECCAK256 SLOAD PUSH2 0x187 DUP3 DUP3 LT ISZERO PUSH2 0x1F1B JUMP JUMPDEST SWAP2 DUP10 MSTORE DUP9 DUP2 MSTORE DUP6 DUP10 KECCAK256 SWAP1 DUP6 DUP11 MSTORE MSTORE DUP5 DUP9 KECCAK256 SSTORE PUSH2 0x1B3F JUMP JUMPDEST PUSH2 0x1120 JUMP JUMPDEST DUP1 DUP4 DUP8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x11A8 DUP10 DUP10 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH2 0x1D1C JUMP JUMPDEST SUB SWAP1 LOG4 DUP1 RETURN JUMPDEST POP DUP1 DUP6 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP3 DUP7 KECCAK256 CALLER DUP8 MSTORE SWAP1 MSTORE DUP2 DUP6 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x10F0 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x289 JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT PUSH2 0x4E3 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x4E3 JUMPI DUP2 DUP4 ADD CALLDATALOAD SWAP1 PUSH2 0x1209 DUP3 PUSH2 0x196F JUMP JUMPDEST SWAP3 PUSH2 0x1216 DUP7 MLOAD SWAP5 DUP6 PUSH2 0x190C JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x24 DUP5 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x9BA JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x133F JUMPI POP POP POP PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x9EC JUMPI PUSH2 0x1256 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP3 DUP3 MLOAD DUP5 MLOAD SUB PUSH2 0x12EC JUMPI POP DUP2 MLOAD SWAP5 PUSH2 0x126D DUP7 PUSH2 0x196F JUMP JUMPDEST SWAP6 PUSH2 0x127A DUP7 MLOAD SWAP8 DUP9 PUSH2 0x190C JUMP JUMPDEST DUP1 DUP8 MSTORE PUSH2 0x1289 PUSH1 0x1F NOT SWAP2 PUSH2 0x196F JUMP JUMPDEST ADD CALLDATASIZE DUP4 DUP9 ADD CALLDATACOPY JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x12DA JUMPI PUSH2 0x12D5 SWAP1 PUSH2 0x12C5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x12B2 DUP4 DUP8 PUSH2 0x1B64 JUMP JUMPDEST MLOAD AND PUSH2 0x12BE DUP4 DUP9 PUSH2 0x1B64 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1AB9 JUMP JUMPDEST PUSH2 0x12CF DUP3 DUP10 PUSH2 0x1B64 JUMP JUMPDEST MSTORE PUSH2 0x1B3F JUMP JUMPDEST PUSH2 0x1290 JUMP JUMPDEST DUP5 MLOAD DUP3 DUP2 MSTORE DUP1 PUSH2 0xE5F DUP2 DUP6 ADD DUP10 PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x84 SWAP2 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x135E JUMPI DUP2 MSTORE SWAP1 DUP5 ADD SWAP1 DUP5 ADD PUSH2 0x1235 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x3 NOT SWAP2 PUSH1 0xA0 CALLDATASIZE DUP5 ADD SLT PUSH2 0x9F0 JUMPI PUSH2 0x137F PUSH2 0x1870 JUMP JUMPDEST PUSH2 0x1387 PUSH2 0x188B JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 PUSH1 0x44 CALLDATALOAD DUP6 DUP2 GT PUSH2 0xD19 JUMPI PUSH2 0x13A8 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x9BA JUMPI PUSH2 0x13C0 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP6 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x9BA JUMPI PUSH2 0x13D8 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x19E4 JUMP JUMPDEST SWAP3 PUSH2 0x13E6 DUP4 MLOAD DUP9 MLOAD EQ PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP6 PUSH2 0x13FD DUP8 ISZERO ISZERO PUSH2 0x1B8E JUMP JUMPDEST AND SWAP4 CALLER DUP6 EQ DUP1 ISZERO PUSH2 0x1628 JUMPI JUMPDEST ISZERO PUSH2 0x15CA JUMPI DUP10 JUMPDEST DUP11 DUP6 MLOAD DUP3 LT ISZERO PUSH2 0x148E JUMPI SWAP1 DUP10 PUSH2 0x69E DUP11 PUSH2 0x1489 SWAP5 PUSH2 0x1439 DUP6 PUSH2 0x1432 DUP2 DUP14 PUSH2 0x1B64 JUMP JUMPDEST MLOAD SWAP6 PUSH2 0x1B64 JUMP JUMPDEST MLOAD SWAP4 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP1 DUP3 DUP3 MSTORE DUP4 DUP4 KECCAK256 DUP14 DUP5 MSTORE DUP3 MSTORE PUSH2 0x1460 DUP7 DUP6 DUP6 KECCAK256 SLOAD PUSH2 0x187 DUP3 DUP3 LT ISZERO PUSH2 0x1C46 JUMP JUMPDEST DUP2 DUP5 MSTORE DUP4 DUP4 MSTORE DUP14 DUP6 DUP6 KECCAK256 SWAP1 DUP6 MSTORE DUP4 MSTORE DUP5 DUP5 KECCAK256 SSTORE DUP3 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP14 DUP4 MSTORE MSTORE KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1CB2 JUMP JUMPDEST PUSH2 0x1410 JUMP JUMPDEST POP POP SWAP1 SWAP5 SWAP4 SWAP6 SWAP7 SWAP3 SWAP2 SWAP8 DUP5 DUP8 DUP10 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP2 DUP1 PUSH2 0x14B9 DUP11 DUP11 DUP4 PUSH2 0x1D1C JUMP JUMPDEST SUB SWAP1 LOG4 EXTCODESIZE PUSH2 0x14C5 JUMPI DUP9 DUP1 RETURN JUMPDEST DUP7 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE CALLER DUP13 DUP8 ADD MSTORE PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD PUSH1 0xA0 SWAP1 MSTORE PUSH1 0xA4 DUP6 ADD PUSH2 0x14F7 SWAP2 PUSH2 0x1A3A JUMP JUMPDEST DUP3 DUP6 DUP3 SUB ADD PUSH1 0x64 DUP7 ADD MSTORE PUSH2 0x150A SWAP2 PUSH2 0x1A3A JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB ADD PUSH1 0x84 DUP5 ADD MSTORE PUSH2 0x151D SWAP2 PUSH2 0x192F JUMP JUMPDEST SUB DUP2 DUP9 GAS SWAP5 PUSH1 0x20 SWAP6 CALL DUP6 SWAP2 DUP2 PUSH2 0x15AA JUMPI JUMPDEST POP PUSH2 0x1594 JUMPI POP POP PUSH1 0x1 PUSH2 0x153F PUSH2 0x1DAD JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x155D JUMPI JUMPDEST PUSH2 0x414 JUMPI POP POP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP9 DUP1 RETURN JUMPDEST PUSH2 0x1565 PUSH2 0x1DCB JUMP JUMPDEST DUP1 PUSH2 0x1570 JUMPI POP PUSH2 0x154A JUMP JUMPDEST SWAP1 POP PUSH2 0x42D SWAP2 PUSH1 0x20 SWAP5 POP MLOAD SWAP4 DUP5 SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x47C JUMPI POP POP PUSH2 0x1551 JUMP JUMPDEST PUSH2 0x15C3 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x4BD JUMPI PUSH2 0x4AE DUP2 DUP4 PUSH2 0x190C JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x152E JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP5 DUP11 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP11 KECCAK256 CALLER DUP12 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP8 DUP12 KECCAK256 SLOAD AND PUSH2 0x1409 JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x9F0 JUMPI CALLDATALOAD DUP4 MSTORE PUSH1 0x6 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP2 MLOAD SWAP4 DUP5 SWAP2 DUP2 DUP2 SLOAD SWAP1 PUSH2 0x1678 DUP3 PUSH2 0x18A1 JUMP JUMPDEST SWAP3 DUP4 DUP7 MSTORE PUSH1 0x1 SWAP3 DUP9 DUP5 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x16F5 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x16B7 JUMPI JUMPDEST DUP6 DUP9 PUSH2 0xE5F DUP10 PUSH2 0x16A8 DUP5 DUP11 SUB DUP6 PUSH2 0x190C JUMP JUMPDEST MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST DUP8 SWAP5 POP DUP2 SWAP4 SWAP3 SWAP2 MSTORE DUP4 DUP4 KECCAK256 JUMPDEST DUP3 DUP5 LT PUSH2 0x16DD JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0x16A8 PUSH2 0xE5F CODESIZE PUSH2 0x1696 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP3 ADD MSTORE SWAP5 ISZERO ISZERO PUSH1 0x5 SHL DUP8 ADD SWAP1 SWAP5 ADD SWAP5 POP DUP6 SWAP4 POP PUSH2 0x16A8 SWAP3 POP PUSH2 0xE5F SWAP2 POP CODESIZE SWAP1 POP PUSH2 0x1696 JUMP JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x535 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD PUSH2 0x1741 DUP2 PUSH2 0x18A1 JUMP JUMPDEST DUP1 DUP7 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x17A7 JUMPI POP PUSH1 0x1 EQ PUSH2 0x176C JUMPI JUMPDEST PUSH2 0xE5F DUP7 DUP7 PUSH2 0xE4D DUP3 DUP12 SUB DUP4 PUSH2 0x190C JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 KECCAK256 SWAP1 SWAP7 POP JUMPDEST DUP3 DUP5 LT PUSH2 0x1794 JUMPI POP POP POP DUP3 PUSH2 0xE5F SWAP5 PUSH2 0xE4D SWAP3 DUP3 ADD ADD SWAP5 DUP7 PUSH2 0x175B JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x1777 JUMP JUMPDEST SWAP1 POP PUSH2 0xE5F SWAP8 POP PUSH2 0xE4D SWAP5 POP PUSH1 0x20 SWAP3 POP DUP7 SWAP4 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 DUP7 PUSH2 0x175B JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x289 JUMPI CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x289 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x182F JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x181E JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 POP CODESIZE PUSH2 0x1815 JUMP JUMPDEST PUSH4 0x3A24D07 PUSH1 0xE2 SHL DUP2 EQ SWAP3 POP PUSH2 0x180E JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x535 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1869 PUSH2 0x1860 PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1AB9 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1886 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1886 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x18D1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x18BB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x18F6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x18F6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x195B JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x193A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x18F6 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1886 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x199D DUP4 PUSH2 0x196F JUMP JUMPDEST SWAP3 PUSH2 0x19AB PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x190C JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x1886 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x19D5 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x19C7 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1886 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x18F6 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1A18 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x190C JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x1886 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1A5A JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1A4C JUMP JUMPDEST ISZERO PUSH2 0x1A75 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1AE6 JUMPI PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1B4E JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1B78 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1B95 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1BEF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1C4D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1B4E JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1B4E JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1CC6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 PUSH2 0x1D33 PUSH2 0x1D41 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x1A3A JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1A3A JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1886 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x1886 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x28 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x3 RETURNDATASIZE GT PUSH2 0x1DBA JUMPI JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x1D41 JUMPI PUSH1 0x40 MLOAD PUSH1 0x3 NOT SWAP2 RETURNDATASIZE DUP4 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 DUP3 GT RETURNDATASIZE PUSH1 0x24 DUP5 ADD GT OR PUSH2 0x1E28 JUMPI DUP2 DUP5 ADD SWAP5 DUP6 MLOAD SWAP4 DUP5 GT PUSH2 0x1E30 JUMPI RETURNDATASIZE DUP6 ADD ADD PUSH1 0x20 DUP5 DUP8 ADD ADD GT PUSH2 0x1E28 JUMPI POP PUSH2 0x1D41 SWAP3 SWAP2 ADD PUSH1 0x20 ADD SWAP1 PUSH2 0x190C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x40 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x18F6 JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x20 CALLDATASIZE DUP3 CALLDATACOPY DUP3 MLOAD ISZERO PUSH2 0x1B78 JUMPI MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1ECA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F22 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F7A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID 0x4A CODECOPY 0xDC MOD 0xD4 0xC0 0xDB 0xC6 0x4B PUSH17 0xAF90FD698A233A518AA5D07E595D983B8C SDIV 0x26 0xC8 0xF7 0xFB 0xC3 0xD5 DUP2 PUSH9 0xC5AE7397731D063D5B 0xBF RETURNDATASIZE PUSH6 0x7854427343F4 0xC0 DUP4 0x24 0xF PUSH27 0xACAA2D0F628BE0079C531659141344CD1FD0A4F28419497F9722A3 0xDA 0xAF 0xE3 0xB4 XOR PUSH16 0x6B6457E0A2646970667358221220C503 PUSH31 0xDB4635403503877508E187C5A41E767365CAFE1C2066C7063858AF06396473 PUSH16 0x6C634300081300330000000000000000 ","sourceMap":"260:1259:28:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;260:1259:28;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;260:1259:28;;;;;;;;;-1:-1:-1;260:1259:28;;;;;;;;;;;;;6812:13:2;260:1259:28;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;260:1259:28;;;;;;;;;;;;;;;;;;;6812:13:2;260:1259:28;;909:18:0;260:1259:28;;-1:-1:-1;;;;;;260:1259:28;665:10:21;260:1259:28;;;;;;-1:-1:-1;942:43:0;-1:-1:-1;;942:43:0;260:1259:28;486:30;260:1259;;:::i;:::-;;;;;;;-1:-1:-1;260:1259:28;486:30;260:1259;526:16;260:1259;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;526:16:28;260:1259;;;;;;;;;;;;;526:16;-1:-1:-1;260:1259:28;-1:-1:-1;260:1259:28;;;526:16;260:1259;;;;;:::i;:::-;;;;;;;;;486:30;-1:-1:-1;260:1259:28;;;-1:-1:-1;260:1259:28;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;260:1259:28;;;;;;;;6812:13:2;-1:-1:-1;260:1259:28;;-1:-1:-1;260:1259:28;;-1:-1:-1;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;6812:13:2;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6812:13:2;-1:-1:-1;260:1259:28;;-1:-1:-1;260:1259:28;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;260:1259:28;;;;;-1:-1:-1;260:1259:28;;;;;;;;;;;;;;;;;;;-1:-1:-1;260:1259:28;;;;;;;;;-1:-1:-1;;260:1259:28;;;-1:-1:-1;;;;;260:1259:28;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":6256,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_18435":{"entryPoint":6283,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":6534,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":6628,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes4_fromMemory":{"entryPoint":7492,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":6714,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_array_uint256_dyn":{"entryPoint":7452,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":6447,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":7524,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_00aa":{"entryPoint":7737,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":6511,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":7346,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":7333,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":6305,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6412,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_26603":{"entryPoint":6363,"id":null,"parameterSlots":1,"returnSlots":0},"fun_asSingletonArray":{"entryPoint":7822,"id":1233,"parameterSlots":1,"returnSlots":1},"fun_balanceOf":{"entryPoint":6841,"id":317,"parameterSlots":2,"returnSlots":1},"increment_uint256":{"entryPoint":6975,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_address_dyn":{"entryPoint":7012,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":6766,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_294a":{"entryPoint":7963,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_394a":{"entryPoint":7144,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_6faf":{"entryPoint":7054,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_87fd":{"entryPoint":7875,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_8ac7":{"entryPoint":7238,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e909":{"entryPoint":7359,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ebf0":{"entryPoint":8051,"id":null,"parameterSlots":1,"returnSlots":0},"return_data_selector":{"entryPoint":7597,"id":null,"parameterSlots":0,"returnSlots":1},"try_decode_error_message":{"entryPoint":7627,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6040608081526004908136101561001557600080fd5b600091823560e01c908162fdd58e1461184057816301ffc9a7146117d257816306fdde031461171f5781630e89341c146116465781632eb2c2d6146113625781634e1273f4146111cd5781636b20c45414611089578163715018a61461103a578163862440e214610f0d5781638da5cb5b14610ee457816395d89b4114610dff578163a22cb46514610d21578163a4b645eb146109f4578163b9571e8414610539578163e985e9c5146104e7578163f242432a1461028d578163f2fde38b146101d2575063f5298aca146100e857600080fd5b8190346101cf5760603660031901126101cf57610103611870565b6001600160a01b03169060243590600080516020611fea8339815191529060443533851480156101b0575b61013790611be8565b610142851515611ec3565b61014b84611e8e565b5061015581611e8e565b50858251610162816118db565b528386528560205281862085875260205261018c818388205461018782821015611f1b565b611ca5565b8487528660205282872086885260205282872055815193845260208401523392a480f35b508486526001602090815282872033885290528186205460ff1661012e565b50fd5b905034610289576020366003190112610289576101ed611870565b600354916001600160a01b0380841692610208338514611a6e565b16938415610237575050829060008051602061200a8339815191528580a36001600160a01b0319161760035580f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b919050346102895760a0366003190112610289576102a9611870565b836102b261188b565b916044356064356084356001600160401b0381116104e3576102d790369089016119e4565b926001600160a01b03868116916102ef831515611b8e565b169233841480156104c4575b61030490611be8565b61030d81611e8e565b5061031783611e8e565b50808652602096868852888720858852885261033d848a89205461018782821015611c46565b828852878952898820868952895289882055818752868852888720838852885288872061036b858254611cb2565b905582858a51848152868b820152600080516020611fea8339815191528c3392a43b610395578580f35b889587946103d68a519788968795869463f23a6e6160e01b9c8d8752339087015260248601526044850152606484015260a0608484015260a483019061192f565b03925af1869181610495575b506104645750506001906103f4611dad565b6308c379a014610431575b506104145750505b3880808381808080808580f35b5162461bcd60e51b81529150819061042d908201611e39565b0390fd5b610439611dcb565b8061044457506103ff565b61042d8591855193849362461bcd60e51b8552840152602483019061192f565b6001600160e01b03191603905061047c575050610407565b5162461bcd60e51b81529150819061042d908201611d64565b6104b6919250843d86116104bd575b6104ae818361190c565b810190611d44565b90386103e2565b503d6104a4565b508386526001602090815288872033885290528786205460ff166102fb565b8480fd5b50503461053557806003193601126105355760ff81602093610507611870565b61050f61188b565b6001600160a01b0391821683526001875283832091168252855220549151911615158152f35b5080fd5b905034610289576003199160a0368401126109f057610556611870565b6024946001600160401b039490919086358681116109f05761057b9036908701611986565b946044358781116104e3576105939036908301611986565b96606435938185116109ec57366023860112156109ec5784830135996105b88b61196f565b946105c58951968761190c565b8b86526020968787018360059e8f1b830101913683116109e857848101915b8383106109be57505050506084358481116109ba5761060690369087016119e4565b60018060a01b039360039461061f818754163314611a6e565b8c5189510361096957906106508d9a9997959f98969493928f9083169b6106478d1515611f73565b51905114611cbf565b8a5b8d518110156106b157908e9f9392918e9f908f8f8f908f918f9261069e9361068887610681816106a59b611b64565b5197611b64565b5183528281528383209183525220918254611cb2565b9055611b3f565b909192939f9e50610652565b508e8c8f8f95908c8f968f888d95888c94869b858588600080516020611fca8339815191526106e88f8e9051918291339583611d1c565b0390a43b610847575b5050509450505050505b85518110156108435761070e818b611b64565b516107198288611b64565b51865260068552828620908051908a8211610831578d9061073a84546118a1565b601f928382116107f1575b505087918311600114610789576107799493929189918361077e575b50508160011b91600019908c1b1c1916179055611b3f565b6106fb565b015190508f80610761565b8389528789209190601f1984168a5b8a8282106107db5750509084610779979695949392106107c3575b505050600190811b019055611b3f565b0151600019838d1b60f8161c191690558e80806107b3565b6001859682939686015181550195019301610798565b858b52898b209084808701821c8301938c8810610828575b01901c01905b81811061081d57508f610745565b8a815560010161080f565b93508293610809565b634e487b7160e01b885260418c528588fd5b8480f35b83928a519889978896879563bc197c8160e01b9d8e885233908801528601526044850160a0905260a4850161087b91611a3a565b8285820301606486015261088e91611a3a565b908382030160848401526108a19161192f565b03925af186918161094a575b5061092557505060016108be611dad565b6308c379a0146108f2575b6108dc575b878b848782888188816106f1565b5162461bcd60e51b81528061042d818a01611e39565b6108fa611dcb565b8061090557506108c9565b9050889261042d925194859462461bcd60e51b865285015283019061192f565b6001600160e01b031916146108ce575162461bcd60e51b81528061042d818a01611d64565b610962919250863d88116104bd576104ae818361190c565b908d6108ad565b508a5162461bcd60e51b81528088018a90526025818601527f455243313135353a2069647320616e642075726973206c656e677468206d69736044820152640dac2e8c6d60db1b6064820152608490fd5b8880fd5b82358881116109e4578b916109d983928936918701016119e4565b8152019201916105e4565b8c80fd5b8a80fd5b8580fd5b8380fd5b839150346105355760a036600319011261053557610a10611870565b604435936001600160401b039190602435606435848111610d1d57610a3890369087016119e4565b96608435858111610d1957610a5090369088016119e4565b938660018060a01b0391610a6983600354163314611a6e565b82811696610a78881515611f73565b610a8186611e8e565b50610a8b85611e8e565b50858b5260209788928c84528c828a822091528452888d20610aae888254611cb2565b9055818d8a518a81528987820152600080516020611fea8339815191528c3392a43b610c03575b50505050610aea915033906003541614611a6e565b8552600682528420928551928311610bf05750610b0783546118a1565b601f8111610bad575b5080601f8311600114610b4b5750839482939492610b40575b50508160011b916000199060031b1c191617905580f35b015190508480610b29565b90601f198316958486528286209286905b888210610b9557505083600195969710610b7c575b505050811b01905580f35b015160001960f88460031b161c19169055848080610b71565b80600185968294968601518155019501930190610b5c565b838552818520601f840160051c810191838510610be6575b601f0160051c01905b818110610bdb5750610b10565b858155600101610bce565b9091508190610bc5565b634e487b7160e01b855260419052602484fd5b610c459394958c895180968195829463f23a6e6160e01b9a8b855233908501528460248501528c6044850152606484015260a0608484015260a483019061192f565b03925af1899181610cfa575b50610ccb5750506001610c62611dad565b6308c379a014610c96575b610c7f57610aea905b86858b80610ad5565b825162461bcd60e51b81528061042d818901611e39565b610c9e611dcb565b80610ca95750610c6d565b845162461bcd60e51b815280890187905290819061042d90602483019061192f565b6001600160e01b03191603610ce357610aea90610c76565b825162461bcd60e51b81528061042d818901611d64565b610d12919250873d89116104bd576104ae818361190c565b908b610c51565b8780fd5b8680fd5b91905034610289578060031936011261028957610d3c611870565b90602435918215158093036104e3576001600160a01b031692338414610dab5750338452600160205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020608492519162461bcd60e51b8352820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152fd5b50503461053557816003193601126105355780519082600554610e21816118a1565b80855290600190818116908115610ebc5750600114610e63575b505050610e4d82610e5f94038361190c565b5191829160208352602083019061192f565b0390f35b60058352602095507f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b828410610ea95750505082610e5f94610e4d9282010194610e3b565b8054868501880152928601928101610e8d565b610e5f9750610e4d9450602092508693915060ff191682840152151560051b82010194610e3b565b50503461053557816003193601126105355760035490516001600160a01b039091168152602090f35b839150346105355782600319360112610535576001600160401b036024358181116109f057610f3f90369084016119e4565b93610f5560018060a01b03600354163314611a6e565b82358452602090600682528420928551928311610bf05750610f7783546118a1565b601f8111610ff7575b5080601f8311600114610faf5750839482939492610b405750508160011b916000199060031b1c191617905580f35b90601f198316958486528286209286905b888210610fdf57505083600195969710610b7c57505050811b01905580f35b80600185968294968601518155019501930190610fc0565b838552818520601f840160051c810191838510611030575b601f0160051c01905b8181106110255750610f80565b858155600101611018565b909150819061100f565b8334611086578060031936011261108657600354816001600160a01b038216611064338214611a6e565b60008051602061200a8339815191528280a36001600160a01b03191660035580f35b80fd5b91905034610289576060366003190112610289576110a5611870565b906001600160401b036024358181116109ec576110c59036908601611986565b936044359182116109ec576110dc91369101611986565b916001600160a01b031633811480156111ae575b6110f990611be8565b611104811515611ec3565b6111118451845114611cbf565b84825161111d816118db565b52845b8585518210156111855750806111396111809287611b64565b516111448287611b64565b518189526111696020918a8352878b20878c528352878b205461018782821015611f1b565b91895288815285892090858a525284882055611b3f565b611120565b808387600080516020611fca8339815191526111a8898951918291339583611d1c565b0390a480f35b508085526001602090815282862033875290528185205460ff166110f0565b90503461028957816003193601126102895780356001600160401b038082116104e357366023830112156104e35781830135906112098261196f565b926112168651948561190c565b82845260209260248486019160051b830101913683116109ba57602401905b82821061133f575050506024359081116109ec576112569036908501611986565b9282518451036112ec575081519461126d8661196f565b9561127a8651978861190c565b808752611289601f199161196f565b0136838801375b82518110156112da576112d5906112c56001600160a01b036112b28387611b64565b51166112be8388611b64565b5190611ab9565b6112cf8289611b64565b52611b3f565b611290565b845182815280610e5f81850189611a3a565b60849185519162461bcd60e51b8352820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152fd5b81356001600160a01b038116810361135e578152908401908401611235565b8980fd5b905034610289576003199160a0368401126109f05761137f611870565b61138761188b565b936001600160401b0393604435858111610d19576113a89036908301611986565b906064358681116109ba576113c09036908301611986565b956084359081116109ba576113d890369083016119e4565b926113e68351885114611cbf565b6001600160a01b03888116956113fd871515611b8e565b16933385148015611628575b156115ca57895b8a855182101561148e57908961069e8a6114899461143985611432818d611b64565b5195611b64565b51938082526020908282528383208d84528252611460868585205461018782821015611c46565b8184528383528d8585209085528352848420558252818152828220908d83525220918254611cb2565b611410565b5050909493959692919784878951600080516020611fca8339815191523391806114b98a8a83611d1c565b0390a43b6114c5578880f35b8651948593849363bc197c8160e01b98898652338c87015260248601526044850160a0905260a485016114f791611a3a565b8285820301606486015261150a91611a3a565b9083820301608484015261151d9161192f565b0381885a94602095f18591816115aa575b50611594575050600161153f611dad565b6308c379a01461155d575b6104145750505b38808080808080808880f35b611565611dcb565b80611570575061154a565b905061042d91602094505193849362461bcd60e51b8552840152602483019061192f565b6001600160e01b0319160361047c575050611551565b6115c391925060203d81116104bd576104ae818361190c565b903861152e565b865162461bcd60e51b8152602081850152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608490fd5b50848a526001602052868a20338b5260205260ff878b205416611409565b9190503461028957602091826003193601126109f05735835260068252808320815193849181815490611678826118a1565b928386526001928884821691826000146116f55750506001146116b7575b8588610e5f896116a8848a038561190c565b5192828493845283019061192f565b87945081939291528383205b8284106116dd57505050820101816116a8610e5f38611696565b8054848a0186015288955087949093019281016116c3565b60ff19168882015294151560051b870190940194508593506116a89250610e5f9150389050611696565b83833461053557816003193601126105355780519180938054611741816118a1565b808652916001918083169081156117a7575060011461176c575b610e5f8686610e4d828b038361190c565b835260208084209096505b8284106117945750505082610e5f94610e4d92820101948661175b565b8054868501880152928601928101611777565b9050610e5f9750610e4d9450602092508693915060ff191682840152151560051b820101948661175b565b90503461028957602036600319011261028957359063ffffffff60e01b82168092036102895760209250636cdb3d1360e11b821491821561182f575b821561181e575b50519015158152f35b6301ffc9a760e01b14915038611815565b6303a24d0760e21b8114925061180e565b505034610535578060031936011261053557602090611869611860611870565b60243590611ab9565b9051908152f35b600435906001600160a01b038216820361188657565b600080fd5b602435906001600160a01b038216820361188657565b90600182811c921680156118d1575b60208310146118bb57565b634e487b7160e01b600052602260045260246000fd5b91607f16916118b0565b602081019081106001600160401b038211176118f657604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b038211908210176118f657604052565b919082519283825260005b84811061195b575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161193a565b6001600160401b0381116118f65760051b60200190565b81601f820112156118865780359161199d8361196f565b926119ab604051948561190c565b808452602092838086019260051b820101928311611886578301905b8282106119d5575050505090565b813581529083019083016119c7565b81601f82011215611886578035906001600160401b0382116118f65760405192611a18601f8401601f19166020018561190c565b8284526020838301011161188657816000926020809301838601378301015290565b90815180825260208080930193019160005b828110611a5a575050505090565b835185529381019392810192600101611a4c565b15611a7557565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160a01b0316908115611ae657600052600060205260406000209060005260205260406000205490565b60405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b6064820152608490fd5b6000198114611b4e5760010190565b634e487b7160e01b600052601160045260246000fd5b8051821015611b785760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b15611b9557565b60405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b15611bef57565b60405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608490fd5b15611c4d57565b60405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608490fd5b91908203918211611b4e57565b91908201809211611b4e57565b15611cc657565b60405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608490fd5b9091611d33611d4193604084526040840190611a3a565b916020818403910152611a3a565b90565b9081602091031261188657516001600160e01b0319811681036118865790565b60809060208152602860208201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b60608201520190565b60009060033d11611dba57565b905060046000803e60005160e01c90565b600060443d10611d4157604051600319913d83016004833e81516001600160401b03918282113d602484011117611e2857818401948551938411611e30573d85010160208487010111611e285750611d419291016020019061190c565b949350505050565b50949350505050565b60809060208152603460208201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356040820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60608201520190565b60408051919082016001600160401b038111838210176118f65760405260018252602082016020368237825115611b78575290565b15611eca57565b60405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b15611f2257565b60405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608490fd5b15611f7a57565b60405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608490fdfe4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fbc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220c5037edb4635403503877508e187c5a41e767365cafe1c2066c7063858af063964736f6c63430008130033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0xFDD58E EQ PUSH2 0x1840 JUMPI DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x17D2 JUMPI DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x171F JUMPI DUP2 PUSH4 0xE89341C EQ PUSH2 0x1646 JUMPI DUP2 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1362 JUMPI DUP2 PUSH4 0x4E1273F4 EQ PUSH2 0x11CD JUMPI DUP2 PUSH4 0x6B20C454 EQ PUSH2 0x1089 JUMPI DUP2 PUSH4 0x715018A6 EQ PUSH2 0x103A JUMPI DUP2 PUSH4 0x862440E2 EQ PUSH2 0xF0D JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0xEE4 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0xDFF JUMPI DUP2 PUSH4 0xA22CB465 EQ PUSH2 0xD21 JUMPI DUP2 PUSH4 0xA4B645EB EQ PUSH2 0x9F4 JUMPI DUP2 PUSH4 0xB9571E84 EQ PUSH2 0x539 JUMPI DUP2 PUSH4 0xE985E9C5 EQ PUSH2 0x4E7 JUMPI DUP2 PUSH4 0xF242432A EQ PUSH2 0x28D JUMPI DUP2 PUSH4 0xF2FDE38B EQ PUSH2 0x1D2 JUMPI POP PUSH4 0xF5298ACA EQ PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SWAP1 CALLVALUE PUSH2 0x1CF JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CF JUMPI PUSH2 0x103 PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FEA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x44 CALLDATALOAD CALLER DUP6 EQ DUP1 ISZERO PUSH2 0x1B0 JUMPI JUMPDEST PUSH2 0x137 SWAP1 PUSH2 0x1BE8 JUMP JUMPDEST PUSH2 0x142 DUP6 ISZERO ISZERO PUSH2 0x1EC3 JUMP JUMPDEST PUSH2 0x14B DUP5 PUSH2 0x1E8E JUMP JUMPDEST POP PUSH2 0x155 DUP2 PUSH2 0x1E8E JUMP JUMPDEST POP DUP6 DUP3 MLOAD PUSH2 0x162 DUP2 PUSH2 0x18DB JUMP JUMPDEST MSTORE DUP4 DUP7 MSTORE DUP6 PUSH1 0x20 MSTORE DUP2 DUP7 KECCAK256 DUP6 DUP8 MSTORE PUSH1 0x20 MSTORE PUSH2 0x18C DUP2 DUP4 DUP9 KECCAK256 SLOAD PUSH2 0x187 DUP3 DUP3 LT ISZERO PUSH2 0x1F1B JUMP JUMPDEST PUSH2 0x1CA5 JUMP JUMPDEST DUP5 DUP8 MSTORE DUP7 PUSH1 0x20 MSTORE DUP3 DUP8 KECCAK256 DUP7 DUP9 MSTORE PUSH1 0x20 MSTORE DUP3 DUP8 KECCAK256 SSTORE DUP2 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE CALLER SWAP3 LOG4 DUP1 RETURN JUMPDEST POP DUP5 DUP7 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP3 DUP8 KECCAK256 CALLER DUP9 MSTORE SWAP1 MSTORE DUP2 DUP7 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x12E JUMP JUMPDEST POP REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x289 JUMPI PUSH2 0x1ED PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 PUSH2 0x208 CALLER DUP6 EQ PUSH2 0x1A6E JUMP JUMPDEST AND SWAP4 DUP5 ISZERO PUSH2 0x237 JUMPI POP POP DUP3 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x200A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x289 JUMPI PUSH2 0x2A9 PUSH2 0x1870 JUMP JUMPDEST DUP4 PUSH2 0x2B2 PUSH2 0x188B JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4E3 JUMPI PUSH2 0x2D7 SWAP1 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0x19E4 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 PUSH2 0x2EF DUP4 ISZERO ISZERO PUSH2 0x1B8E JUMP JUMPDEST AND SWAP3 CALLER DUP5 EQ DUP1 ISZERO PUSH2 0x4C4 JUMPI JUMPDEST PUSH2 0x304 SWAP1 PUSH2 0x1BE8 JUMP JUMPDEST PUSH2 0x30D DUP2 PUSH2 0x1E8E JUMP JUMPDEST POP PUSH2 0x317 DUP4 PUSH2 0x1E8E JUMP JUMPDEST POP DUP1 DUP7 MSTORE PUSH1 0x20 SWAP7 DUP7 DUP9 MSTORE DUP9 DUP8 KECCAK256 DUP6 DUP9 MSTORE DUP9 MSTORE PUSH2 0x33D DUP5 DUP11 DUP10 KECCAK256 SLOAD PUSH2 0x187 DUP3 DUP3 LT ISZERO PUSH2 0x1C46 JUMP JUMPDEST DUP3 DUP9 MSTORE DUP8 DUP10 MSTORE DUP10 DUP9 KECCAK256 DUP7 DUP10 MSTORE DUP10 MSTORE DUP10 DUP9 KECCAK256 SSTORE DUP2 DUP8 MSTORE DUP7 DUP9 MSTORE DUP9 DUP8 KECCAK256 DUP4 DUP9 MSTORE DUP9 MSTORE DUP9 DUP8 KECCAK256 PUSH2 0x36B DUP6 DUP3 SLOAD PUSH2 0x1CB2 JUMP JUMPDEST SWAP1 SSTORE DUP3 DUP6 DUP11 MLOAD DUP5 DUP2 MSTORE DUP7 DUP12 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FEA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP13 CALLER SWAP3 LOG4 EXTCODESIZE PUSH2 0x395 JUMPI DUP6 DUP1 RETURN JUMPDEST DUP9 SWAP6 DUP8 SWAP5 PUSH2 0x3D6 DUP11 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP13 DUP14 DUP8 MSTORE CALLER SWAP1 DUP8 ADD MSTORE PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST SUB SWAP3 GAS CALL DUP7 SWAP2 DUP2 PUSH2 0x495 JUMPI JUMPDEST POP PUSH2 0x464 JUMPI POP POP PUSH1 0x1 SWAP1 PUSH2 0x3F4 PUSH2 0x1DAD JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x431 JUMPI JUMPDEST POP PUSH2 0x414 JUMPI POP POP JUMPDEST CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 DUP1 DUP1 DUP6 DUP1 RETURN JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 POP DUP2 SWAP1 PUSH2 0x42D SWAP1 DUP3 ADD PUSH2 0x1E39 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x439 PUSH2 0x1DCB JUMP JUMPDEST DUP1 PUSH2 0x444 JUMPI POP PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x42D DUP6 SWAP2 DUP6 MLOAD SWAP4 DUP5 SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB SWAP1 POP PUSH2 0x47C JUMPI POP POP PUSH2 0x407 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 POP DUP2 SWAP1 PUSH2 0x42D SWAP1 DUP3 ADD PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0x4B6 SWAP2 SWAP3 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x4BD JUMPI JUMPDEST PUSH2 0x4AE DUP2 DUP4 PUSH2 0x190C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1D44 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x3E2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4A4 JUMP JUMPDEST POP DUP4 DUP7 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP9 DUP8 KECCAK256 CALLER DUP9 MSTORE SWAP1 MSTORE DUP8 DUP7 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2FB JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x535 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI PUSH1 0xFF DUP2 PUSH1 0x20 SWAP4 PUSH2 0x507 PUSH2 0x1870 JUMP JUMPDEST PUSH2 0x50F PUSH2 0x188B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP8 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x3 NOT SWAP2 PUSH1 0xA0 CALLDATASIZE DUP5 ADD SLT PUSH2 0x9F0 JUMPI PUSH2 0x556 PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x24 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 SWAP1 SWAP2 SWAP1 DUP7 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x9F0 JUMPI PUSH2 0x57B SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP5 PUSH1 0x44 CALLDATALOAD DUP8 DUP2 GT PUSH2 0x4E3 JUMPI PUSH2 0x593 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP7 PUSH1 0x64 CALLDATALOAD SWAP4 DUP2 DUP6 GT PUSH2 0x9EC JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x9EC JUMPI DUP5 DUP4 ADD CALLDATALOAD SWAP10 PUSH2 0x5B8 DUP12 PUSH2 0x196F JUMP JUMPDEST SWAP5 PUSH2 0x5C5 DUP10 MLOAD SWAP7 DUP8 PUSH2 0x190C JUMP JUMPDEST DUP12 DUP7 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP8 ADD DUP4 PUSH1 0x5 SWAP15 DUP16 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x9E8 JUMPI DUP5 DUP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x9BE JUMPI POP POP POP POP PUSH1 0x84 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x9BA JUMPI PUSH2 0x606 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x19E4 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x3 SWAP5 PUSH2 0x61F DUP2 DUP8 SLOAD AND CALLER EQ PUSH2 0x1A6E JUMP JUMPDEST DUP13 MLOAD DUP10 MLOAD SUB PUSH2 0x969 JUMPI SWAP1 PUSH2 0x650 DUP14 SWAP11 SWAP10 SWAP8 SWAP6 SWAP16 SWAP9 SWAP7 SWAP5 SWAP4 SWAP3 DUP16 SWAP1 DUP4 AND SWAP12 PUSH2 0x647 DUP14 ISZERO ISZERO PUSH2 0x1F73 JUMP JUMPDEST MLOAD SWAP1 MLOAD EQ PUSH2 0x1CBF JUMP JUMPDEST DUP11 JUMPDEST DUP14 MLOAD DUP2 LT ISZERO PUSH2 0x6B1 JUMPI SWAP1 DUP15 SWAP16 SWAP4 SWAP3 SWAP2 DUP15 SWAP16 SWAP1 DUP16 DUP16 DUP16 SWAP1 DUP16 SWAP2 DUP16 SWAP3 PUSH2 0x69E SWAP4 PUSH2 0x688 DUP8 PUSH2 0x681 DUP2 PUSH2 0x6A5 SWAP12 PUSH2 0x1B64 JUMP JUMPDEST MLOAD SWAP8 PUSH2 0x1B64 JUMP JUMPDEST MLOAD DUP4 MSTORE DUP3 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1CB2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1B3F JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP16 SWAP15 POP PUSH2 0x652 JUMP JUMPDEST POP DUP15 DUP13 DUP16 DUP16 SWAP6 SWAP1 DUP13 DUP16 SWAP7 DUP16 DUP9 DUP14 SWAP6 DUP9 DUP13 SWAP5 DUP7 SWAP12 DUP6 DUP6 DUP9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x6E8 DUP16 DUP15 SWAP1 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH2 0x1D1C JUMP JUMPDEST SUB SWAP1 LOG4 EXTCODESIZE PUSH2 0x847 JUMPI JUMPDEST POP POP POP SWAP5 POP POP POP POP POP JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x843 JUMPI PUSH2 0x70E DUP2 DUP12 PUSH2 0x1B64 JUMP JUMPDEST MLOAD PUSH2 0x719 DUP3 DUP9 PUSH2 0x1B64 JUMP JUMPDEST MLOAD DUP7 MSTORE PUSH1 0x6 DUP6 MSTORE DUP3 DUP7 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 DUP11 DUP3 GT PUSH2 0x831 JUMPI DUP14 SWAP1 PUSH2 0x73A DUP5 SLOAD PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x1F SWAP3 DUP4 DUP3 GT PUSH2 0x7F1 JUMPI JUMPDEST POP POP DUP8 SWAP2 DUP4 GT PUSH1 0x1 EQ PUSH2 0x789 JUMPI PUSH2 0x779 SWAP5 SWAP4 SWAP3 SWAP2 DUP10 SWAP2 DUP4 PUSH2 0x77E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 DUP13 SHL SHR NOT AND OR SWAP1 SSTORE PUSH2 0x1B3F JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP16 DUP1 PUSH2 0x761 JUMP JUMPDEST DUP4 DUP10 MSTORE DUP8 DUP10 KECCAK256 SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP11 JUMPDEST DUP11 DUP3 DUP3 LT PUSH2 0x7DB JUMPI POP POP SWAP1 DUP5 PUSH2 0x779 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x7C3 JUMPI JUMPDEST POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1B3F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP14 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP4 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x798 JUMP JUMPDEST DUP6 DUP12 MSTORE DUP10 DUP12 KECCAK256 SWAP1 DUP5 DUP1 DUP8 ADD DUP3 SHR DUP4 ADD SWAP4 DUP13 DUP9 LT PUSH2 0x828 JUMPI JUMPDEST ADD SWAP1 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x81D JUMPI POP DUP16 PUSH2 0x745 JUMP JUMPDEST DUP11 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x80F JUMP JUMPDEST SWAP4 POP DUP3 SWAP4 PUSH2 0x809 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 DUP13 MSTORE DUP6 DUP9 REVERT JUMPDEST DUP5 DUP1 RETURN JUMPDEST DUP4 SWAP3 DUP11 MLOAD SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP14 DUP15 DUP9 MSTORE CALLER SWAP1 DUP9 ADD MSTORE DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD PUSH1 0xA0 SWAP1 MSTORE PUSH1 0xA4 DUP6 ADD PUSH2 0x87B SWAP2 PUSH2 0x1A3A JUMP JUMPDEST DUP3 DUP6 DUP3 SUB ADD PUSH1 0x64 DUP7 ADD MSTORE PUSH2 0x88E SWAP2 PUSH2 0x1A3A JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB ADD PUSH1 0x84 DUP5 ADD MSTORE PUSH2 0x8A1 SWAP2 PUSH2 0x192F JUMP JUMPDEST SUB SWAP3 GAS CALL DUP7 SWAP2 DUP2 PUSH2 0x94A JUMPI JUMPDEST POP PUSH2 0x925 JUMPI POP POP PUSH1 0x1 PUSH2 0x8BE PUSH2 0x1DAD JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x8F2 JUMPI JUMPDEST PUSH2 0x8DC JUMPI JUMPDEST DUP8 DUP12 DUP5 DUP8 DUP3 DUP9 DUP2 DUP9 DUP2 PUSH2 0x6F1 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x42D DUP2 DUP11 ADD PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x8FA PUSH2 0x1DCB JUMP JUMPDEST DUP1 PUSH2 0x905 JUMPI POP PUSH2 0x8C9 JUMP JUMPDEST SWAP1 POP DUP9 SWAP3 PUSH2 0x42D SWAP3 MLOAD SWAP5 DUP6 SWAP5 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP7 MSTORE DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x8CE JUMPI MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x42D DUP2 DUP11 ADD PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0x962 SWAP2 SWAP3 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x4BD JUMPI PUSH2 0x4AE DUP2 DUP4 PUSH2 0x190C JUMP JUMPDEST SWAP1 DUP14 PUSH2 0x8AD JUMP JUMPDEST POP DUP11 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP9 ADD DUP11 SWAP1 MSTORE PUSH1 0x25 DUP2 DUP7 ADD MSTORE PUSH32 0x455243313135353A2069647320616E642075726973206C656E677468206D6973 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0xDAC2E8C6D PUSH1 0xDB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD DUP9 DUP2 GT PUSH2 0x9E4 JUMPI DUP12 SWAP2 PUSH2 0x9D9 DUP4 SWAP3 DUP10 CALLDATASIZE SWAP2 DUP8 ADD ADD PUSH2 0x19E4 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x5E4 JUMP JUMPDEST DUP13 DUP1 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x535 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x535 JUMPI PUSH2 0xA10 PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x64 CALLDATALOAD DUP5 DUP2 GT PUSH2 0xD1D JUMPI PUSH2 0xA38 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x19E4 JUMP JUMPDEST SWAP7 PUSH1 0x84 CALLDATALOAD DUP6 DUP2 GT PUSH2 0xD19 JUMPI PUSH2 0xA50 SWAP1 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0x19E4 JUMP JUMPDEST SWAP4 DUP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0xA69 DUP4 PUSH1 0x3 SLOAD AND CALLER EQ PUSH2 0x1A6E JUMP JUMPDEST DUP3 DUP2 AND SWAP7 PUSH2 0xA78 DUP9 ISZERO ISZERO PUSH2 0x1F73 JUMP JUMPDEST PUSH2 0xA81 DUP7 PUSH2 0x1E8E JUMP JUMPDEST POP PUSH2 0xA8B DUP6 PUSH2 0x1E8E JUMP JUMPDEST POP DUP6 DUP12 MSTORE PUSH1 0x20 SWAP8 DUP9 SWAP3 DUP13 DUP5 MSTORE DUP13 DUP3 DUP11 DUP3 KECCAK256 SWAP2 MSTORE DUP5 MSTORE DUP9 DUP14 KECCAK256 PUSH2 0xAAE DUP9 DUP3 SLOAD PUSH2 0x1CB2 JUMP JUMPDEST SWAP1 SSTORE DUP2 DUP14 DUP11 MLOAD DUP11 DUP2 MSTORE DUP10 DUP8 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FEA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP13 CALLER SWAP3 LOG4 EXTCODESIZE PUSH2 0xC03 JUMPI JUMPDEST POP POP POP POP PUSH2 0xAEA SWAP2 POP CALLER SWAP1 PUSH1 0x3 SLOAD AND EQ PUSH2 0x1A6E JUMP JUMPDEST DUP6 MSTORE PUSH1 0x6 DUP3 MSTORE DUP5 KECCAK256 SWAP3 DUP6 MLOAD SWAP3 DUP4 GT PUSH2 0xBF0 JUMPI POP PUSH2 0xB07 DUP4 SLOAD PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xBAD JUMPI JUMPDEST POP DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xB4B JUMPI POP DUP4 SWAP5 DUP3 SWAP4 SWAP5 SWAP3 PUSH2 0xB40 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0xB29 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP3 DUP7 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0xB95 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0xB7C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP5 DUP1 DUP1 PUSH2 0xB71 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0xB5C JUMP JUMPDEST DUP4 DUP6 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP6 LT PUSH2 0xBE6 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xBDB JUMPI POP PUSH2 0xB10 JUMP JUMPDEST DUP6 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xBCE JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xBC5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH2 0xC45 SWAP4 SWAP5 SWAP6 DUP13 DUP10 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP11 DUP12 DUP6 MSTORE CALLER SWAP1 DUP6 ADD MSTORE DUP5 PUSH1 0x24 DUP6 ADD MSTORE DUP13 PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST SUB SWAP3 GAS CALL DUP10 SWAP2 DUP2 PUSH2 0xCFA JUMPI JUMPDEST POP PUSH2 0xCCB JUMPI POP POP PUSH1 0x1 PUSH2 0xC62 PUSH2 0x1DAD JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0xC96 JUMPI JUMPDEST PUSH2 0xC7F JUMPI PUSH2 0xAEA SWAP1 JUMPDEST DUP7 DUP6 DUP12 DUP1 PUSH2 0xAD5 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x42D DUP2 DUP10 ADD PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0xC9E PUSH2 0x1DCB JUMP JUMPDEST DUP1 PUSH2 0xCA9 JUMPI POP PUSH2 0xC6D JUMP JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x42D SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0xCE3 JUMPI PUSH2 0xAEA SWAP1 PUSH2 0xC76 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x42D DUP2 DUP10 ADD PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0xD12 SWAP2 SWAP3 POP DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x4BD JUMPI PUSH2 0x4AE DUP2 DUP4 PUSH2 0x190C JUMP JUMPDEST SWAP1 DUP12 PUSH2 0xC51 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x289 JUMPI PUSH2 0xD3C PUSH2 0x1870 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0x4E3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 CALLER DUP5 EQ PUSH2 0xDAB JUMPI POP CALLER DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 DUP5 KECCAK256 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE DUP1 DUP5 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x535 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0x5 SLOAD PUSH2 0xE21 DUP2 PUSH2 0x18A1 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xEBC JUMPI POP PUSH1 0x1 EQ PUSH2 0xE63 JUMPI JUMPDEST POP POP POP PUSH2 0xE4D DUP3 PUSH2 0xE5F SWAP5 SUB DUP4 PUSH2 0x190C JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 DUP4 MSTORE PUSH1 0x20 SWAP6 POP PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 JUMPDEST DUP3 DUP5 LT PUSH2 0xEA9 JUMPI POP POP POP DUP3 PUSH2 0xE5F SWAP5 PUSH2 0xE4D SWAP3 DUP3 ADD ADD SWAP5 PUSH2 0xE3B JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xE8D JUMP JUMPDEST PUSH2 0xE5F SWAP8 POP PUSH2 0xE4D SWAP5 POP PUSH1 0x20 SWAP3 POP DUP7 SWAP4 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 PUSH2 0xE3B JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x535 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x535 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x9F0 JUMPI PUSH2 0xF3F SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x19E4 JUMP JUMPDEST SWAP4 PUSH2 0xF55 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND CALLER EQ PUSH2 0x1A6E JUMP JUMPDEST DUP3 CALLDATALOAD DUP5 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x6 DUP3 MSTORE DUP5 KECCAK256 SWAP3 DUP6 MLOAD SWAP3 DUP4 GT PUSH2 0xBF0 JUMPI POP PUSH2 0xF77 DUP4 SLOAD PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xFF7 JUMPI JUMPDEST POP DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xFAF JUMPI POP DUP4 SWAP5 DUP3 SWAP4 SWAP5 SWAP3 PUSH2 0xB40 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP3 DUP7 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0xFDF JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0xB7C JUMPI POP POP POP DUP2 SHL ADD SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0xFC0 JUMP JUMPDEST DUP4 DUP6 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP6 LT PUSH2 0x1030 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1025 JUMPI POP PUSH2 0xF80 JUMP JUMPDEST DUP6 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1018 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST DUP4 CALLVALUE PUSH2 0x1086 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1086 JUMPI PUSH1 0x3 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1064 CALLER DUP3 EQ PUSH2 0x1A6E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x200A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x289 JUMPI PUSH2 0x10A5 PUSH2 0x1870 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x9EC JUMPI PUSH2 0x10C5 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP4 PUSH1 0x44 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x9EC JUMPI PUSH2 0x10DC SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ DUP1 ISZERO PUSH2 0x11AE JUMPI JUMPDEST PUSH2 0x10F9 SWAP1 PUSH2 0x1BE8 JUMP JUMPDEST PUSH2 0x1104 DUP2 ISZERO ISZERO PUSH2 0x1EC3 JUMP JUMPDEST PUSH2 0x1111 DUP5 MLOAD DUP5 MLOAD EQ PUSH2 0x1CBF JUMP JUMPDEST DUP5 DUP3 MLOAD PUSH2 0x111D DUP2 PUSH2 0x18DB JUMP JUMPDEST MSTORE DUP5 JUMPDEST DUP6 DUP6 MLOAD DUP3 LT ISZERO PUSH2 0x1185 JUMPI POP DUP1 PUSH2 0x1139 PUSH2 0x1180 SWAP3 DUP8 PUSH2 0x1B64 JUMP JUMPDEST MLOAD PUSH2 0x1144 DUP3 DUP8 PUSH2 0x1B64 JUMP JUMPDEST MLOAD DUP2 DUP10 MSTORE PUSH2 0x1169 PUSH1 0x20 SWAP2 DUP11 DUP4 MSTORE DUP8 DUP12 KECCAK256 DUP8 DUP13 MSTORE DUP4 MSTORE DUP8 DUP12 KECCAK256 SLOAD PUSH2 0x187 DUP3 DUP3 LT ISZERO PUSH2 0x1F1B JUMP JUMPDEST SWAP2 DUP10 MSTORE DUP9 DUP2 MSTORE DUP6 DUP10 KECCAK256 SWAP1 DUP6 DUP11 MSTORE MSTORE DUP5 DUP9 KECCAK256 SSTORE PUSH2 0x1B3F JUMP JUMPDEST PUSH2 0x1120 JUMP JUMPDEST DUP1 DUP4 DUP8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x11A8 DUP10 DUP10 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH2 0x1D1C JUMP JUMPDEST SUB SWAP1 LOG4 DUP1 RETURN JUMPDEST POP DUP1 DUP6 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP3 DUP7 KECCAK256 CALLER DUP8 MSTORE SWAP1 MSTORE DUP2 DUP6 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x10F0 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x289 JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT PUSH2 0x4E3 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x4E3 JUMPI DUP2 DUP4 ADD CALLDATALOAD SWAP1 PUSH2 0x1209 DUP3 PUSH2 0x196F JUMP JUMPDEST SWAP3 PUSH2 0x1216 DUP7 MLOAD SWAP5 DUP6 PUSH2 0x190C JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x24 DUP5 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x9BA JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x133F JUMPI POP POP POP PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x9EC JUMPI PUSH2 0x1256 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP3 DUP3 MLOAD DUP5 MLOAD SUB PUSH2 0x12EC JUMPI POP DUP2 MLOAD SWAP5 PUSH2 0x126D DUP7 PUSH2 0x196F JUMP JUMPDEST SWAP6 PUSH2 0x127A DUP7 MLOAD SWAP8 DUP9 PUSH2 0x190C JUMP JUMPDEST DUP1 DUP8 MSTORE PUSH2 0x1289 PUSH1 0x1F NOT SWAP2 PUSH2 0x196F JUMP JUMPDEST ADD CALLDATASIZE DUP4 DUP9 ADD CALLDATACOPY JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x12DA JUMPI PUSH2 0x12D5 SWAP1 PUSH2 0x12C5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x12B2 DUP4 DUP8 PUSH2 0x1B64 JUMP JUMPDEST MLOAD AND PUSH2 0x12BE DUP4 DUP9 PUSH2 0x1B64 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1AB9 JUMP JUMPDEST PUSH2 0x12CF DUP3 DUP10 PUSH2 0x1B64 JUMP JUMPDEST MSTORE PUSH2 0x1B3F JUMP JUMPDEST PUSH2 0x1290 JUMP JUMPDEST DUP5 MLOAD DUP3 DUP2 MSTORE DUP1 PUSH2 0xE5F DUP2 DUP6 ADD DUP10 PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x84 SWAP2 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x135E JUMPI DUP2 MSTORE SWAP1 DUP5 ADD SWAP1 DUP5 ADD PUSH2 0x1235 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x3 NOT SWAP2 PUSH1 0xA0 CALLDATASIZE DUP5 ADD SLT PUSH2 0x9F0 JUMPI PUSH2 0x137F PUSH2 0x1870 JUMP JUMPDEST PUSH2 0x1387 PUSH2 0x188B JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 PUSH1 0x44 CALLDATALOAD DUP6 DUP2 GT PUSH2 0xD19 JUMPI PUSH2 0x13A8 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x9BA JUMPI PUSH2 0x13C0 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP6 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x9BA JUMPI PUSH2 0x13D8 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x19E4 JUMP JUMPDEST SWAP3 PUSH2 0x13E6 DUP4 MLOAD DUP9 MLOAD EQ PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP6 PUSH2 0x13FD DUP8 ISZERO ISZERO PUSH2 0x1B8E JUMP JUMPDEST AND SWAP4 CALLER DUP6 EQ DUP1 ISZERO PUSH2 0x1628 JUMPI JUMPDEST ISZERO PUSH2 0x15CA JUMPI DUP10 JUMPDEST DUP11 DUP6 MLOAD DUP3 LT ISZERO PUSH2 0x148E JUMPI SWAP1 DUP10 PUSH2 0x69E DUP11 PUSH2 0x1489 SWAP5 PUSH2 0x1439 DUP6 PUSH2 0x1432 DUP2 DUP14 PUSH2 0x1B64 JUMP JUMPDEST MLOAD SWAP6 PUSH2 0x1B64 JUMP JUMPDEST MLOAD SWAP4 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP1 DUP3 DUP3 MSTORE DUP4 DUP4 KECCAK256 DUP14 DUP5 MSTORE DUP3 MSTORE PUSH2 0x1460 DUP7 DUP6 DUP6 KECCAK256 SLOAD PUSH2 0x187 DUP3 DUP3 LT ISZERO PUSH2 0x1C46 JUMP JUMPDEST DUP2 DUP5 MSTORE DUP4 DUP4 MSTORE DUP14 DUP6 DUP6 KECCAK256 SWAP1 DUP6 MSTORE DUP4 MSTORE DUP5 DUP5 KECCAK256 SSTORE DUP3 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP14 DUP4 MSTORE MSTORE KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1CB2 JUMP JUMPDEST PUSH2 0x1410 JUMP JUMPDEST POP POP SWAP1 SWAP5 SWAP4 SWAP6 SWAP7 SWAP3 SWAP2 SWAP8 DUP5 DUP8 DUP10 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP2 DUP1 PUSH2 0x14B9 DUP11 DUP11 DUP4 PUSH2 0x1D1C JUMP JUMPDEST SUB SWAP1 LOG4 EXTCODESIZE PUSH2 0x14C5 JUMPI DUP9 DUP1 RETURN JUMPDEST DUP7 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE CALLER DUP13 DUP8 ADD MSTORE PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD PUSH1 0xA0 SWAP1 MSTORE PUSH1 0xA4 DUP6 ADD PUSH2 0x14F7 SWAP2 PUSH2 0x1A3A JUMP JUMPDEST DUP3 DUP6 DUP3 SUB ADD PUSH1 0x64 DUP7 ADD MSTORE PUSH2 0x150A SWAP2 PUSH2 0x1A3A JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB ADD PUSH1 0x84 DUP5 ADD MSTORE PUSH2 0x151D SWAP2 PUSH2 0x192F JUMP JUMPDEST SUB DUP2 DUP9 GAS SWAP5 PUSH1 0x20 SWAP6 CALL DUP6 SWAP2 DUP2 PUSH2 0x15AA JUMPI JUMPDEST POP PUSH2 0x1594 JUMPI POP POP PUSH1 0x1 PUSH2 0x153F PUSH2 0x1DAD JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x155D JUMPI JUMPDEST PUSH2 0x414 JUMPI POP POP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP9 DUP1 RETURN JUMPDEST PUSH2 0x1565 PUSH2 0x1DCB JUMP JUMPDEST DUP1 PUSH2 0x1570 JUMPI POP PUSH2 0x154A JUMP JUMPDEST SWAP1 POP PUSH2 0x42D SWAP2 PUSH1 0x20 SWAP5 POP MLOAD SWAP4 DUP5 SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x47C JUMPI POP POP PUSH2 0x1551 JUMP JUMPDEST PUSH2 0x15C3 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x4BD JUMPI PUSH2 0x4AE DUP2 DUP4 PUSH2 0x190C JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x152E JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP5 DUP11 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP11 KECCAK256 CALLER DUP12 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP8 DUP12 KECCAK256 SLOAD AND PUSH2 0x1409 JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x9F0 JUMPI CALLDATALOAD DUP4 MSTORE PUSH1 0x6 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP2 MLOAD SWAP4 DUP5 SWAP2 DUP2 DUP2 SLOAD SWAP1 PUSH2 0x1678 DUP3 PUSH2 0x18A1 JUMP JUMPDEST SWAP3 DUP4 DUP7 MSTORE PUSH1 0x1 SWAP3 DUP9 DUP5 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x16F5 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x16B7 JUMPI JUMPDEST DUP6 DUP9 PUSH2 0xE5F DUP10 PUSH2 0x16A8 DUP5 DUP11 SUB DUP6 PUSH2 0x190C JUMP JUMPDEST MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST DUP8 SWAP5 POP DUP2 SWAP4 SWAP3 SWAP2 MSTORE DUP4 DUP4 KECCAK256 JUMPDEST DUP3 DUP5 LT PUSH2 0x16DD JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0x16A8 PUSH2 0xE5F CODESIZE PUSH2 0x1696 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP3 ADD MSTORE SWAP5 ISZERO ISZERO PUSH1 0x5 SHL DUP8 ADD SWAP1 SWAP5 ADD SWAP5 POP DUP6 SWAP4 POP PUSH2 0x16A8 SWAP3 POP PUSH2 0xE5F SWAP2 POP CODESIZE SWAP1 POP PUSH2 0x1696 JUMP JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x535 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD PUSH2 0x1741 DUP2 PUSH2 0x18A1 JUMP JUMPDEST DUP1 DUP7 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x17A7 JUMPI POP PUSH1 0x1 EQ PUSH2 0x176C JUMPI JUMPDEST PUSH2 0xE5F DUP7 DUP7 PUSH2 0xE4D DUP3 DUP12 SUB DUP4 PUSH2 0x190C JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 KECCAK256 SWAP1 SWAP7 POP JUMPDEST DUP3 DUP5 LT PUSH2 0x1794 JUMPI POP POP POP DUP3 PUSH2 0xE5F SWAP5 PUSH2 0xE4D SWAP3 DUP3 ADD ADD SWAP5 DUP7 PUSH2 0x175B JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x1777 JUMP JUMPDEST SWAP1 POP PUSH2 0xE5F SWAP8 POP PUSH2 0xE4D SWAP5 POP PUSH1 0x20 SWAP3 POP DUP7 SWAP4 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 DUP7 PUSH2 0x175B JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x289 JUMPI CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x289 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x182F JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x181E JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 POP CODESIZE PUSH2 0x1815 JUMP JUMPDEST PUSH4 0x3A24D07 PUSH1 0xE2 SHL DUP2 EQ SWAP3 POP PUSH2 0x180E JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x535 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1869 PUSH2 0x1860 PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1AB9 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1886 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1886 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x18D1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x18BB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x18F6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x18F6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x195B JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x193A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x18F6 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1886 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x199D DUP4 PUSH2 0x196F JUMP JUMPDEST SWAP3 PUSH2 0x19AB PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x190C JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x1886 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x19D5 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x19C7 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1886 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x18F6 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1A18 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x190C JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x1886 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1A5A JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1A4C JUMP JUMPDEST ISZERO PUSH2 0x1A75 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1AE6 JUMPI PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1B4E JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1B78 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1B95 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1BEF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1C4D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1B4E JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1B4E JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1CC6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 PUSH2 0x1D33 PUSH2 0x1D41 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x1A3A JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1A3A JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1886 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x1886 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x28 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x3 RETURNDATASIZE GT PUSH2 0x1DBA JUMPI JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x1D41 JUMPI PUSH1 0x40 MLOAD PUSH1 0x3 NOT SWAP2 RETURNDATASIZE DUP4 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 DUP3 GT RETURNDATASIZE PUSH1 0x24 DUP5 ADD GT OR PUSH2 0x1E28 JUMPI DUP2 DUP5 ADD SWAP5 DUP6 MLOAD SWAP4 DUP5 GT PUSH2 0x1E30 JUMPI RETURNDATASIZE DUP6 ADD ADD PUSH1 0x20 DUP5 DUP8 ADD ADD GT PUSH2 0x1E28 JUMPI POP PUSH2 0x1D41 SWAP3 SWAP2 ADD PUSH1 0x20 ADD SWAP1 PUSH2 0x190C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x40 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x18F6 JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x20 CALLDATASIZE DUP3 CALLDATACOPY DUP3 MLOAD ISZERO PUSH2 0x1B78 JUMPI MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1ECA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F22 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F7A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID 0x4A CODECOPY 0xDC MOD 0xD4 0xC0 0xDB 0xC6 0x4B PUSH17 0xAF90FD698A233A518AA5D07E595D983B8C SDIV 0x26 0xC8 0xF7 0xFB 0xC3 0xD5 DUP2 PUSH9 0xC5AE7397731D063D5B 0xBF RETURNDATASIZE PUSH6 0x7854427343F4 0xC0 DUP4 0x24 0xF PUSH27 0xACAA2D0F628BE0079C531659141344CD1FD0A4F28419497F9722A3 0xDA 0xAF 0xE3 0xB4 XOR PUSH16 0x6B6457E0A2646970667358221220C503 PUSH31 0xDB4635403503877508E187C5A41E767365CAFE1C2066C7063858AF06396473 PUSH16 0x6C634300081300330000000000000000 ","sourceMap":"260:1259:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;260:1259:28;;;;;;:::i;:::-;-1:-1:-1;;;;;260:1259:28;;;;;-1:-1:-1;;;;;;;;;;;9562:57:2;260:1259:28;;665:10:21;417:23:5;;:66;;;;260:1259:28;396:154:5;;;:::i;:::-;9120:69:2;9128:21;;;9120:69;:::i;:::-;9294:21;;;:::i;:::-;;9317:25;;;:::i;:::-;;260:1259:28;;;;;;:::i;:::-;;;;;;;;;;;;;;;;9523:23:2;260:1259:28;;;;;9415:73:2;9423:24;;;;9415:73;:::i;:::-;9523:23;:::i;:::-;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;;;;;665:10:21;9562:57:2;;260:1259:28;;417:66:5;-1:-1:-1;260:1259:28;;;;;;;;;;;665:10:21;260:1259:28;;;;;;;;;;417:66:5;;260:1259:28;;;;;;;;;;;-1:-1:-1;;260:1259:28;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;260:1259:28;;;;1272:68:0;665:10:21;1280:23:0;;1272:68;:::i;:::-;260:1259:28;2082:22:0;;;260:1259:28;;2162:38:0;;;;-1:-1:-1;;;;;;;;;;;2162:38:0;;;-1:-1:-1;;;;;;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;260:1259:28;;;;;;;;;;;;;;;;;;-1:-1:-1;;260:1259:28;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;260:1259:28;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;260:1259:28;;;;3899:66:2;3907:16;;;3899:66;:::i;:::-;260:1259:28;665:10:21;;3996:20:2;;:60;;;;260:1259:28;3975:148:2;;;:::i;:::-;4217:21;;;:::i;:::-;;4240:25;;;:::i;:::-;;260:1259:28;;;;;;;;;;;;;;;;4442:20:2;260:1259:28;;;;;4334:76:2;4342:21;;;;4334:76;:::i;4442:20::-;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4472:27:2;260:1259:28;;;4472:27:2;:::i;:::-;260:1259:28;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;665:10:21;;4515:46:2;;1059:41:20;12029:520:2;;260:1259:28;;;12029:520:2;260:1259:28;;;;;;;;;;;;;;;;;12068:72:2;;;;665:10:21;12068:72:2;;;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12068:72:2;;;;;;;;;12029:520;-1:-1:-1;12064:475:2;;;;260:1259:28;12064:475:2;;;:::i;:::-;;;;;;;;;;;;12029:520;;;;;;;;;260:1259:28;;;12064:475:2;260:1259:28;-1:-1:-1;;;12462:62:2;;260:1259:28;-1:-1:-1;260:1259:28;;12462:62:2;;;;;:::i;:::-;;;;12064:475;12356:81;;:::i;:::-;;;;12064:475;;;12356:81;260:1259:28;12356:81:2;;;260:1259:28;;;;;;;12408:14:2;;;;260:1259:28;;;;;;:::i;12064:475:2:-;-1:-1:-1;;;;;;260:1259:28;12189:59:2;;-1:-1:-1;12185:156:2;;12064:475;;;;12185:156;260:1259:28;-1:-1:-1;;;12272:50:2;;260:1259:28;-1:-1:-1;260:1259:28;;12272:50:2;;;;;:::i;12068:72::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;3996:60;-1:-1:-1;260:1259:28;;;;;;;;;;;665:10:21;260:1259:28;;;;;;;;;;3996:60:2;;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;260:1259:28;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;260:1259:28;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;1272:68:0;260:1259:28;;;;665:10:21;1280:23:0;1272:68;:::i;:::-;260:1259:28;;;;1265:30;260:1259;;;8308:81:2;260:1259:28;;;;;;;;;;;;;;;8244:16:2;8236:62;8244:16;;;8236:62;:::i;:::-;260:1259:28;;;8316:28:2;8308:81;:::i;:::-;8524:10;8552:3;260:1259:28;;8536:14:2;;;;;8596:10;;;;;;;;;;;;;;;;;8571:35;8596:10;8581:6;8596:10;;;8552:3;8596:10;;:::i;:::-;260:1259:28;8581:6:2;;:::i;:::-;260:1259:28;;;;;;;;;;;;;;;;;8571:35:2;:::i;:::-;260:1259:28;;8552:3:2;:::i;:::-;8524:10;;;;;;;;;8536:14;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;8632:53:2;8536:14;;;260:1259:28;665:10:21;;;;8632:53:2;;;:::i;:::-;;;;1059:41:20;12801:532:2;;8519:98;1417:13:28;;;;;;;;;1448:3;260:1259;;1432:14;;;;;1488:12;;;;:::i;:::-;;1478:6;;;;:::i;:::-;260:1259;;;1467:10;260:1259;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1448:3;260:1259;;;;;;;;;;1448:3;;260:1259;;;;;;;;;;;;;;;;;;;;;;;;;;1448:3;:::i;:::-;1417:13;;260:1259;;;;-1:-1:-1;260:1259:28;;;;;;;;;;;;;-1:-1:-1;;260:1259:28;;;;;;;;;;;;;;1448:3;260:1259;;;;;;;;;;;;;;;;;;;;1448:3;:::i;260:1259::-;;;-1:-1:-1;;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;260:1259:28;;;;;;;;1432:14;;260:1259;;12801:532:2;260:1259:28;;;;;;;;;;;;;;12840:79:2;;;;665:10:21;12840:79:2;;;260:1259:28;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;12840:79:2;;;;;;;;;12801:532;-1:-1:-1;12836:487:2;;;;260:1259:28;12836:487:2;;:::i;:::-;;;;;;;;;12801:532;;;;;;;;;;;12836:487;260:1259:28;-1:-1:-1;;;13246:62:2;;260:1259:28;13246:62:2;;;;;:::i;12836:487::-;13140:81;;:::i;:::-;;;;12836:487;;;13140:81;;;;;260:1259:28;13140:81:2;260:1259:28;;;;;;;13192:14:2;;;;260:1259:28;;;;;:::i;12836:487:2:-;-1:-1:-1;;;;;;260:1259:28;12964:161:2;12836:487;12964:161;260:1259:28;-1:-1:-1;;;13056:50:2;;260:1259:28;13056:50:2;;;;;:::i;12840:79::-;;;;;;;;;;;;;;;:::i;:::-;;;;;260:1259:28;-1:-1:-1;260:1259:28;;-1:-1:-1;;;260:1259:28;;;;;;;;;;;;;;;;;;-1:-1:-1;;;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;260:1259:28;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;260:1259:28;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;1272:68:0;260:1259:28;;;;665:10:21;1280:23:0;1272:68;:::i;:::-;260:1259:28;;;7334:21:2;7326:67;7334:21;;;7326:67;:::i;:::-;7498:21;;;:::i;:::-;;7521:25;;;:::i;:::-;;260:1259:28;;;;;;;;;;;;;;;;;;;;;;7564:32:2;260:1259:28;;;7564:32:2;:::i;:::-;260:1259:28;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;665:10:21;;7611:57:2;;1059:41:20;12029:520:2;;260:1259:28;665:10:21;;;;1272:68:0;665:10:21;;;260:1259:28;;;;1280:23:0;1272:68;:::i;:::-;260:1259:28;;639:10;260:1259;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;260:1259:28;;;;;-1:-1:-1;;;260:1259:28;;;;;;;;12029:520:2;260:1259:28;;;;;;;;;;;;;;;;12068:72:2;;;;665:10:21;12068:72:2;;;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12068:72:2;;;;;;;;;12029:520;-1:-1:-1;12064:475:2;;;;260:1259:28;12064:475:2;;:::i;:::-;;;;;;;;1272:68:0;12064:475:2;;12029:520;;;;;;12064:475;260:1259:28;;-1:-1:-1;;;12462:62:2;;260:1259:28;12462:62:2;;;;;:::i;12064:475::-;12356:81;;:::i;:::-;;;;12064:475;;;12356:81;260:1259:28;;-1:-1:-1;;;12408:14:2;;;;;260:1259:28;;;;;;;;;;;;;:::i;12064:475:2:-;-1:-1:-1;;;;;;260:1259:28;12189:59:2;12185:156;;1272:68:0;12064:475:2;;;12185:156;260:1259:28;;-1:-1:-1;;;12272:50:2;;260:1259:28;12272:50:2;;;;;:::i;12068:72::-;;;;;;;;;;;;;;;:::i;:::-;;;;;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;260:1259:28;;665:10:21;3188:24:2;;260:1259:28;;665:10:21;;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3337:48:2;260:1259:28;665:10:21;3337:48:2;;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;346:20;260:1259;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;346:20;260:1259;;;;-1:-1:-1;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;346:20;260:1259;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;260:1259:28;;;;;;;;;;;;;;:::i;:::-;;1272:68:0;260:1259:28;;;;;;;;665:10:21;1280:23:0;1272:68;:::i;:::-;260:1259:28;;;;;;639:10;260:1259;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;260:1259:28;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;260:1259:28;;1272:68:0;665:10:21;1280:23:0;;1272:68;:::i;:::-;-1:-1:-1;;;;;;;;;;;1769:40:0;;;-1:-1:-1;;;;;;260:1259:28;;;;;;;;;;;;;;;;;-1:-1:-1;;260:1259:28;;;;;;:::i;:::-;;-1:-1:-1;;;;;260:1259:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;260:1259:28;665:10:21;728:23:5;;:66;;;;260:1259:28;707:154:5;;;:::i;:::-;9932:69:2;9940:21;;;9932:69;:::i;:::-;10011:81;260:1259:28;;;;10019:28:2;10011:81;:::i;:::-;260:1259:28;;;;;;:::i;:::-;;10230:10:2;10258:3;260:1259:28;;;10242:14:2;;;;;10290:6;;;10258:3;10290:6;;;:::i;:::-;260:1259:28;10327:10:2;;;;:::i;:::-;260:1259:28;;;;10525:23:2;260:1259:28;;;;;;;;;;;;;;;;;10413:73:2;10421:24;;;;10413:73;:::i;10525:23::-;260:1259:28;;;;;;;;;;;;;;;;;;10258:3:2;:::i;:::-;10230:10;;10242:14;;;;-1:-1:-1;;;;;;;;;;;10574:58:2;10242:14;;260:1259:28;665:10:21;;;;10574:58:2;;;:::i;:::-;;;;260:1259:28;;728:66:5;-1:-1:-1;260:1259:28;;;;;;;;;;;665:10:21;260:1259:28;;;;;;;;;;728:66:5;;260:1259:28;;;;;;;;;;;;;;;;-1:-1:-1;;;;;260:1259:28;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;2701:29:2;260:1259:28;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;2902:3:2;260:1259:28;;2881:19:2;;;;;2902:3;;2940:30;-1:-1:-1;;;;;2950:11:2;260:1259:28;2950:11:2;;:::i;:::-;260:1259:28;;2963:6:2;;;;:::i;:::-;260:1259:28;2940:30:2;;:::i;:::-;2921:49;;;;:::i;:::-;260:1259:28;2902:3:2;:::i;:::-;2866:13;;2881:19;260:1259:28;;;;;;;;;;2881:19:2;260:1259:28;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;260:1259:28;;;;;;;;-1:-1:-1;;;;;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;260:1259:28;;;;;;;;;;:::i;:::-;;;:::i;:::-;;-1:-1:-1;;;;;260:1259:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;4951:81:2;260:1259:28;;;;4959:28:2;4951:81;:::i;:::-;-1:-1:-1;;;;;260:1259:28;;;;5042:66:2;5050:16;;;5042:66;:::i;:::-;260:1259:28;665:10:21;;5139:20:2;;:60;;;;260:1259:28;;;;5404:13:2;5435:3;260:1259:28;;;5419:14:2;;;;;5467:6;;5730:27;5467:6;5435:3;5467:6;5504:10;5467:6;;;;;:::i;:::-;260:1259:28;5504:10:2;;:::i;:::-;260:1259:28;;;;;;;;;;;;;;;;;;5696:20:2;260:1259:28;;;;;5584:76:2;5592:21;;;;5584:76;:::i;5696:20::-;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5730:27:2;:::i;5435:3::-;5404:13;;5419:14;;;;;;;;;;;260:1259:28;;;;-1:-1:-1;;;;;;;;;;;665:10:21;5783:47:2;;;;;;;:::i;:::-;;;;1059:41:20;12801:532:2;;260:1259:28;;;12801:532:2;260:1259:28;;;;;;;;;;12840:79:2;;;;665:10:21;12840:79:2;;;260:1259:28;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;12840:79:2;;;;;260:1259:28;12840:79:2;;;;;;;12801:532;-1:-1:-1;12836:487:2;;;;260:1259:28;12836:487:2;;:::i;:::-;;;;;;;;;;;12801:532;;;;;;;;260:1259:28;;;12836:487:2;13140:81;;:::i;:::-;;;;12836:487;;;13140:81;;;260:1259:28;13140:81:2;260:1259:28;13140:81:2;260:1259:28;;;;;;;;13192:14:2;;;;260:1259:28;;;;;;:::i;12836:487:2:-;-1:-1:-1;;;;;;260:1259:28;12968:64:2;12964:161;;12836:487;;;;12840:79;;;;;260:1259:28;12840:79:2;;;;;;;;;:::i;:::-;;;;;260:1259:28;;;-1:-1:-1;;;260:1259:28;;;;;;;;;;;;;;;;;-1:-1:-1;;;260:1259:28;;;;;;;5139:60:2;260:1259:28;;;;;;;;;;665:10:21;260:1259:28;;;;;;;;;;5139:60:2;;260:1259:28;;;;;;;;;;;;;;;;;;;;774:10;260:1259;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;260:1259:28;;;;;;;;;;;;;;;;;;;;-1:-1:-1;260:1259:28;;;;;;;;;;;-1:-1:-1;;260:1259:28;;;;;;;;;;;;;;;;-1:-1:-1;260:1259:28;;-1:-1:-1;260:1259:28;;-1:-1:-1;260:1259:28;;-1:-1:-1;260:1259:28;;-1:-1:-1;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;260:1259:28;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1291:41:2;;;:109;;;;260:1259:28;1291:161:2;;;;260:1259:28;;;;;;;;;1291:161:2;-1:-1:-1;;;871:40:23;;-1:-1:-1;1291:161:2;;;:109;-1:-1:-1;;;1348:52:2;;;-1:-1:-1;1291:109:2;;260:1259:28;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;260:1259:28;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;260:1259:28;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;260:1259:28;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;260:1259:28;;;;-1:-1:-1;;;;;260:1259:28;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;260:1259:28;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;260:1259:28;;;;;;;;;;;-1:-1:-1;;260:1259:28;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;260:1259:28;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;260:1259:28;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2103:228:2;-1:-1:-1;;;;;260:1259:28;;2216:21:2;;260:1259:28;;2235:1:2;260:1259:28;2235:1:2;260:1259:28;;;2235:1:2;260:1259:28;;2235:1:2;260:1259:28;;;;2235:1:2;260:1259:28;;2103:228:2;:::o;260:1259:28:-;;;-1:-1:-1;;;260:1259:28;;;;;;;;;;;;;;;;;-1:-1:-1;;;260:1259:28;;;;;;;;-1:-1:-1;;260:1259:28;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;260:1259:28;;;;;;;;;;;;;;;;;-1:-1:-1;;;260:1259:28;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;260:1259:28;;;;;;;;;;;;;;;;;-1:-1:-1;;;260:1259:28;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;260:1259:28;;;;;;;;;;;;;;;;;-1:-1:-1;;;260:1259:28;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;260:1259:28;;;;;;;;;;;;;;;;;-1:-1:-1;;;260:1259:28;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;;260:1259:28;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;260:1259:28;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;260:1259:28;;;;;;;;;-1:-1:-1;;;;;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;260:1259:28;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;260:1259:28;;;;;;:::o;13345:193:2:-;260:1259:28;;;;;;;-1:-1:-1;;;;;260:1259:28;;;;;;;;;;;;;;;;;;;;;;;;;;13345:193:2;:::o;260:1259:28:-;;;;:::o;:::-;;;-1:-1:-1;;;260:1259:28;;;;;;;;;;;;;;;;;-1:-1:-1;;;260:1259:28;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;260:1259:28;;;;;;;;;;;;;;;;;-1:-1:-1;;;260:1259:28;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;260:1259:28;;;;;;;;;;;;;;;;;-1:-1:-1;;;260:1259:28;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"1657400","executionCost":"infinite","totalCost":"infinite"},"external":{"balanceOf(address,uint256)":"2547","balanceOfBatch(address[],uint256[])":"infinite","burn(address,uint256,uint256)":"infinite","burnBatch(address,uint256[],uint256[])":"infinite","isApprovedForAll(address,address)":"2888","mint(address,uint256,uint256,string,bytes)":"infinite","mintBatch(address,uint256[],uint256[],string[],bytes)":"infinite","name()":"infinite","owner()":"2494","renounceOwnership()":"26142","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"infinite","safeTransferFrom(address,address,uint256,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"26694","setURI(uint256,string)":"infinite","supportsInterface(bytes4)":"366","symbol()":"infinite","transferOwnership(address)":"26459","uri(uint256)":"infinite"}},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burn(address,uint256,uint256)":"f5298aca","burnBatch(address,uint256[],uint256[])":"6b20c454","isApprovedForAll(address,address)":"e985e9c5","mint(address,uint256,uint256,string,bytes)":"a4b645eb","mintBatch(address,uint256[],uint256[],string[],bytes)":"b9571e84","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setURI(uint256,string)":"862440e2","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","transferOwnership(address)":"f2fde38b","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"tokenURIs\",\"type\":\"string[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FCTVToken.sol\":\"FCTVToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC1155.sol\\\";\\nimport \\\"./IERC1155Receiver.sol\\\";\\nimport \\\"./extensions/IERC1155MetadataURI.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n *\\n * @dev Implementation of the basic standard multi-token.\\n * See https://eips.ethereum.org/EIPS/eip-1155\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\n *\\n * _Available since v3.1._\\n */\\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\\n    using Address for address;\\n\\n    // Mapping from token ID to account balances\\n    mapping (uint256 => mapping(address => uint256)) private _balances;\\n\\n    // Mapping from account to operator approvals\\n    mapping (address => mapping(address => bool)) private _operatorApprovals;\\n\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\n    string private _uri;\\n\\n    /**\\n     * @dev See {_setURI}.\\n     */\\n    constructor (string memory uri_) {\\n        _setURI(uri_);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IERC1155).interfaceId\\n            || interfaceId == type(IERC1155MetadataURI).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155MetadataURI-uri}.\\n     *\\n     * This implementation returns the same URI for *all* token types. It relies\\n     * on the token type ID substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the\\n     * actual token type ID.\\n     */\\n    function uri(uint256) public view virtual override returns (string memory) {\\n        return _uri;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\\n        require(account != address(0), \\\"ERC1155: balance query for the zero address\\\");\\n        return _balances[id][account];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] memory accounts,\\n        uint256[] memory ids\\n    )\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256[] memory)\\n    {\\n        require(accounts.length == ids.length, \\\"ERC1155: accounts and ids length mismatch\\\");\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        require(_msgSender() != operator, \\\"ERC1155: setting approval status for self\\\");\\n\\n        _operatorApprovals[_msgSender()][operator] = approved;\\n        emit ApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    )\\n        public\\n        virtual\\n        override\\n    {\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not owner nor approved\\\"\\n        );\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n        _balances[id][from] = fromBalance - amount;\\n        _balances[id][to] += amount;\\n\\n        emit TransferSingle(operator, from, to, id, amount);\\n\\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    )\\n        public\\n        virtual\\n        override\\n    {\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: transfer caller is not owner nor approved\\\"\\n        );\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n            _balances[id][from] = fromBalance - amount;\\n            _balances[id][to] += amount;\\n        }\\n\\n        emit TransferBatch(operator, from, to, ids, amounts);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\n     * substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * By this mechanism, any occurrence of the `\\\\{id\\\\}` substring in either the\\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\\n     * clients with the token type ID.\\n     *\\n     * For example, the `https://token-cdn-domain/\\\\{id\\\\}.json` URI would be\\n     * interpreted by clients as\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\n     * for token type ID 0x4cce0.\\n     *\\n     * See {uri}.\\n     *\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\n     * this function emits no events.\\n     */\\n    function _setURI(string memory newuri) internal virtual {\\n        _uri = newuri;\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _mint(address account, uint256 id, uint256 amount, bytes memory data) internal virtual {\\n        require(account != address(0), \\\"ERC1155: mint to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data);\\n\\n        _balances[id][account] += amount;\\n        emit TransferSingle(operator, address(0), account, id, amount);\\n\\n        _doSafeTransferAcceptanceCheck(operator, address(0), account, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        for (uint i = 0; i < ids.length; i++) {\\n            _balances[ids[i]][to] += amounts[i];\\n        }\\n\\n        emit TransferBatch(operator, address(0), to, ids, amounts);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens of token type `id` from `account`\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens of token type `id`.\\n     */\\n    function _burn(address account, uint256 id, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC1155: burn from the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, account, address(0), _asSingletonArray(id), _asSingletonArray(amount), \\\"\\\");\\n\\n        uint256 accountBalance = _balances[id][account];\\n        require(accountBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n        _balances[id][account] = accountBalance - amount;\\n\\n        emit TransferSingle(operator, account, address(0), id, amount);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     */\\n    function _burnBatch(address account, uint256[] memory ids, uint256[] memory amounts) internal virtual {\\n        require(account != address(0), \\\"ERC1155: burn from the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, account, address(0), ids, amounts, \\\"\\\");\\n\\n        for (uint i = 0; i < ids.length; i++) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 accountBalance = _balances[id][account];\\n            require(accountBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n            _balances[id][account] = accountBalance - amount;\\n        }\\n\\n        emit TransferBatch(operator, account, address(0), ids, amounts);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `id` and `amount` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    )\\n        internal\\n        virtual\\n    { }\\n\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    )\\n        private\\n    {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\\n                if (response != IERC1155Receiver(to).onERC1155Received.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    )\\n        private\\n    {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {\\n                if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\\n        uint256[] memory array = new uint256[](1);\\n        array[0] = element;\\n\\n        return array;\\n    }\\n}\\n\",\"keccak256\":\"0x8d0a3d2756dc8eff2b2563b52a6dcd3ab36e07b57211d3ac7c76efee6c4682e4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x249bc2a6d919da5f5145950664134cfcf2f66874bda801fd3b8fb861783da079\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n\\n    /**\\n        @dev Handles the receipt of a single ERC1155 token type. This function is\\n        called at the end of a `safeTransferFrom` after the balance has been updated.\\n        To accept the transfer, this must return\\n        `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n        (i.e. 0xf23a6e61, or its own function selector).\\n        @param operator The address which initiated the transfer (i.e. msg.sender)\\n        @param from The address which previously owned the token\\n        @param id The ID of the token being transferred\\n        @param value The amount of tokens being transferred\\n        @param data Additional data with no specified format\\n        @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n    */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    )\\n        external\\n        returns(bytes4);\\n\\n    /**\\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\\n        is called at the end of a `safeBatchTransferFrom` after the balances have\\n        been updated. To accept the transfer(s), this must return\\n        `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n        (i.e. 0xbc197c81, or its own function selector).\\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n        @param from The address which previously owned the token\\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n        @param data Additional data with no specified format\\n        @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n    */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    )\\n        external\\n        returns(bytes4);\\n}\\n\",\"keccak256\":\"0xc7aa8a96aaeb7e1672a3d5fd37582136ff46b6a6cafabcc40ec0e00a42915e1c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1155.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\\n * own tokens and those that they have been approved to use.\\n *\\n * _Available since v3.1._\\n */\\nabstract contract ERC1155Burnable is ERC1155 {\\n    function burn(address account, uint256 id, uint256 value) public virtual {\\n        require(\\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\\n            \\\"ERC1155: caller is not owner nor approved\\\"\\n        );\\n\\n        _burn(account, id, value);\\n    }\\n\\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\\n        require(\\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\\n            \\\"ERC1155: caller is not owner nor approved\\\"\\n        );\\n\\n        _burnBatch(account, ids, values);\\n    }\\n}\\n\",\"keccak256\":\"0xf37ec99085370fa75da56456d21f8410423e64e6bc4ef31fed4884f70e5e40cb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x6ba0564f6970414d1166ee83127b834bbe7dbf699241a3005eb7ae64a2211975\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/FCTVToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <=0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract FCTVToken is ERC1155, ERC1155Burnable, Ownable {\\n    string public name;\\n    string public symbol;\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    constructor(string memory baseURI) ERC1155(baseURI) {\\n        name = \\\"Fractional CTV Tokens\\\";\\n        symbol = \\\"FCTVT\\\";\\n    }\\n\\n    function setURI(uint256 tokenId, string memory tokenURI) public onlyOwner {\\n        _tokenURIs[tokenId] = tokenURI;\\n    }\\n\\n    function uri(uint256 tokenId) public view override returns (string memory) {\\n        return _tokenURIs[tokenId];\\n    }\\n\\n    function mint(\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        string memory tokenURI,\\n        bytes memory data\\n    ) public onlyOwner {\\n        _mint(to, id, amount, data);\\n        setURI(id, tokenURI);\\n    }\\n\\n    function mintBatch(\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        string[] memory tokenURIs,\\n        bytes memory data\\n    ) public onlyOwner {\\n        require(\\n            ids.length == tokenURIs.length,\\n            \\\"ERC1155: ids and uris length mismatch\\\"\\n        );\\n        _mintBatch(to, ids, amounts, data);\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            _tokenURIs[ids[i]] = tokenURIs[i];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xce05d65953d1ac5bba7cc1f68b6d996be95010824061febf3a2406076d7fc808\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":227,"contract":"contracts/FCTVToken.sol:FCTVToken","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":233,"contract":"contracts/FCTVToken.sol:FCTVToken","label":"_operatorApprovals","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":235,"contract":"contracts/FCTVToken.sol:FCTVToken","label":"_uri","offset":0,"slot":"2","type":"t_string_storage"},{"astId":7,"contract":"contracts/FCTVToken.sol:FCTVToken","label":"_owner","offset":0,"slot":"3","type":"t_address"},{"astId":5359,"contract":"contracts/FCTVToken.sol:FCTVToken","label":"name","offset":0,"slot":"4","type":"t_string_storage"},{"astId":5361,"contract":"contracts/FCTVToken.sol:FCTVToken","label":"symbol","offset":0,"slot":"5","type":"t_string_storage"},{"astId":5365,"contract":"contracts/FCTVToken.sol:FCTVToken","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Investments.sol":{"Investments":{"abi":[{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"address","name":"reward_tokens","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"investor","type":"address"},{"indexed":true,"internalType":"uint256","name":"assetId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"LogInvestment","type":"event"},{"inputs":[],"name":"Reward_tokens","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"}],"name":"getInvestmentDetails","outputs":[{"internalType":"uint256","name":"totalInvested","type":"uint256"},{"internalType":"uint256","name":"remainingFunding","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"}],"name":"getInvestmentHistory","outputs":[{"internalType":"address[]","name":"investors","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[][]","name":"tokenIds","type":"uint256[][]"},{"internalType":"uint256[][]","name":"tokenAmounts","type":"uint256[][]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"investor","type":"address"}],"name":"getInvestmentsByAddress","outputs":[{"internalType":"uint256[]","name":"assetIds","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[][]","name":"tokenIds","type":"uint256[][]"},{"internalType":"uint256[][]","name":"tokenAmounts","type":"uint256[][]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"address","name":"investor","type":"address"}],"name":"getInvestmentsByAddressInAsset","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenAmounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"rewardTokenId","type":"uint256"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"investAsset","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"supervisor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":179,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60803461009857601f61155a38819003918201601f19168301916001600160401b0383118484101761009d57808492604094855283398101031261009857610052602061004b836100b3565b92016100b3565b600080546001600160a01b03199081166001600160a01b039485161790915560028054821633179055600180549091169190921617905560405161149290816100c88239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100985756fe608080604052600436101561001357600080fd5b60009060e08235811c91826309b3da2b14610da75750816316bd19d414610b555781631e011b3e1461092d57816356e4b68b14610904578163af33062314610783578163bc4040d2146101f1575063ce7f35b41461007057600080fd5b346101ee57602090816003193601126101ee576004359160018060a01b0382541691604051634f558e7960e01b81528460048201528281602481875afa9081156101b657906100c69183916101c1575b50610edb565b604051631d591eb760e31b815260048101859052938185602481875afa9485156101b6578295610190575b508290602460405180968193630c0adb9160e41b835260048301525afa92831561018357819361014c575b5082826040950151818111600014610144576101389250611295565b905b8351928352820152f35b50509061013a565b9180935082813d831161017c575b6101648183610ea0565b810103126101775790519190604061011c565b600080fd5b503d61015a565b50604051903d90823e3d90fd5b839195506101af903d8085833e6101a78183610ea0565b810190610fb9565b94906100f1565b6040513d84823e3d90fd5b6101e19150843d86116101e7575b6101d98183610ea0565b810190610ec3565b386100c0565b503d6101cf565b80fd5b9050606036600319011261077f576044351561072e578154604051634f558e7960e01b815260048035908201526001600160a01b0390911690602081602481855afa801561070a576102499185916107155750610edb565b604051631d591eb760e31b81526004803590820152918383602481855afa92831561070a5784936106ee575b5061010083015160048110156106da576106965760405161029581610e5c565b60608152606060208201528460408201528460608201528460808201528460a08201529084908590865b8187018051805183101561068a5760a06102dc846024359361126b565b510151146102f357506102ee90611246565b6102bf565b92509495505061030792508391505161126b565b5160015b156106395760808101906044358251106105f6576060015160443581029080820460443514901517156105e25734036105a657839161034d6044358351611295565b809252833b156105a2576064908360405195869485936343d08af360e11b85526004356004860152602485015260448401525af180156101b657610593575b50805481906001600160a01b0316803b156104f957818091606460405180948193631e7d210960e21b835260043560048401523360248401523460448401525af180156101b65761057f575b509060018060a01b038154166040516307c9054760e01b815260043560048201528281602481855afa908115610574578391610552575b50825b815181101561054957336001600160a01b0361042e838561126b565b5116146104435761043e90611246565b610412565b505081925060015b156104fc575b5080546001600160a01b0316803b156104f9578180916084604051809481936368b3727760e11b83526004356004840152336024840152602435604484015260443560648401525af180156101b6576104e5575b50604051604435815234602082015260243590600435907ff85c915ce9c62984825f2ff42dc2ac372422bebf345a567590885dc78681325d60403392a480f35b6104ee90610e8d565b6101ee5780386104a5565b50fd5b803b156104f957816040518092635df1839160e11b82528183816105263360043560048401611323565b03925af180156101b657156104515761053e90610e8d565b6101ee578038610451565b5050819261044b565b61056e91503d8085833e6105668183610ea0565b8101906112a2565b3861040f565b6040513d85823e3d90fd5b61058890610e8d565b6101ee5780386103d8565b61059c90610e8d565b3861038c565b8280fd5b60405162461bcd60e51b8152602060048201526014602482015273125b98dbdc9c9958dd081d985b1d59481cd95b9d60621b6044820152606490fd5b634e487b7160e01b85526011600452602485fd5b60405162461bcd60e51b815260206004820152601b60248201527a4e6f7420656e6f75676820617661696c61626c6520746f6b656e7360281b6044820152606490fd5b60405162461bcd60e51b8152602060048201526024808201527f52657761726420646f6573206e6f7420657869737420666f72207468697320616044820152631cdcd95d60e21b6064820152608490fd5b5050505092935061030b565b606460405162461bcd60e51b815260206004820152602060248201527f50726f6a656374206973206e6f7420696e2053746172746564207374617475736044820152fd5b634e487b7160e01b85526021600452602485fd5b6107039193503d8086833e6101a78183610ea0565b9138610275565b6040513d86823e3d90fd5b6101e1915060203d6020116101e7576101d98183610ea0565b60405162461bcd60e51b815260206004820152602360248201527f546f6b656e20616d6f756e74206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608490fd5b5080fd5b82346101ee5760403660031901126101ee5760243590600435906001600160a01b03808416840361077f578154169260405193634f558e7960e01b85528360048601526020948581602481855afa90811561070a57906107e99185916108e75750610edb565b604051635dbf1c2d60e11b815293858580610808868560048401611323565b0381855afa94851561070a5784956108b2575b5060405163ebcab60560e01b81529392839285929091839182916108429160048401611323565b03915afa9182156101835790610886929181809361088a575b505061087890606060405196879687528601526060850190610dcc565b908382036040850152610dcc565b0390f35b61087893506108ab92503d8091833e6108a38183610ea0565b810190611416565b918661085b565b9094508581813d83116108e0575b6108ca8183610ea0565b810103126108dc57519361084261081b565b8380fd5b503d6108c0565b6108fe9150873d89116101e7576101d98183610ea0565b876100c0565b82346101ee57806003193601126101ee576002546040516001600160a01b039091168152602090f35b82346101ee57602090816003193601126101ee576004356001600160a01b03818116918290036105a25782541660405191633a79e15360e21b835260048301528282602481845afa918215610574578392610b10575b508151936109908561133c565b9361099a8661133c565b956109a48161136e565b936109ae8261136e565b95835b838110610a07576109de896108868a6109f98b8f8c6109eb9160405198899860808a5260808a0190610dcc565b9188830390890152610dcc565b908582036040870152610e00565b908382036060850152610e00565b610a11818361126b565b51604051635dbf1c2d60e11b8152878180610a326004358660048401611323565b0381885afa908115610ad4578791610adf575b50610a50838d61126b565b5260405163ebcab60560e01b8152868180610a716004358660048401611323565b0381885afa8015610ad45790610ab393929188918991610ab8575b50610a97848d61126b565b52610aa2838b61126b565b52610aad828c61126b565b52611246565b6109b1565b9050610ace91503d808a833e6108a38183610ea0565b8e610a8c565b6040513d89823e3d90fd5b90508781813d8311610b09575b610af68183610ea0565b81010312610b0557518c610a45565b8680fd5b503d610aec565b9091503d8084833e610b228183610ea0565b81019084818303126108dc578051906001600160401b038211610b5157610b4a9291016113b8565b9084610983565b8480fd5b82346101ee5760203660031901126101ee578054604051634f558e7960e01b815260048035908201526001600160a01b039291831690602081602481855afa9081156105745790610bac918491610d885750610edb565b6040516307c9054760e01b815260048035908201528281602481855afa908115610574578391610d6e575b50805190610be48261133c565b610bed8361136e565b92610bf78161136e565b94865b828110610c5a575050506040519460808601608087528351809152602060a088019401915b818110610c42578780610886896109f98a6109eb8b8b8782036020890152610dcc565b82518916855260209485019490920191600101610c1f565b88610c65828761126b565b5116604051635dbf1c2d60e11b815260208180610c888560043560048401611323565b0381875afa908115610d6357908a918291610d28575b5091610ccc92610cae858961126b565b526040518093819263ebcab60560e01b835260043560048401611323565b0381865afa8015610d1d5790610cfc92918a918b91610d01575b50610cf1838b61126b565b52610aad828961126b565b610bfa565b9050610d1791503d808c833e6108a38183610ea0565b8c610ce6565b6040513d8b823e3d90fd5b9150506020813d602011610d5b575b81610d4460209383610ea0565b81010312610d5757518990610ccc610c9e565b8980fd5b3d9150610d37565b6040513d8c823e3d90fd5b610d8291503d8085833e6105668183610ea0565b84610bd7565b610da1915060203d6020116101e7576101d98183610ea0565b856100c0565b83903461077f578160031936011261077f576001546001600160a01b03168152602090f35b90815180825260208080930193019160005b828110610dec575050505090565b835185529381019392810192600101610dde565b908082519081815260208091019281808460051b8301019501936000915b848310610e2e5750505050505090565b9091929394958480610e4c600193601f198682030187528a51610dcc565b9801930193019194939290610e1e565b60c081019081106001600160401b03821117610e7757604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b038111610e7757604052565b601f909101601f19168101906001600160401b03821190821017610e7757604052565b90816020910312610177575180151581036101775790565b15610ee257565b60405162461bcd60e51b8152602060048201526014602482015273105cdcd95d08191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b919080601f84011215610177578251906001600160401b038211610e775760405191602091610f56601f8301601f1916840185610ea0565b8184528282870101116101775760005b818110610f7b57508260009394955001015290565b8581018301518482018401528201610f66565b6001600160401b038111610e775760051b60200190565b51906001600160a01b038216820361017757565b60209182828203126101775781516001600160401b03928382116101775701916101a093848484031261017757604092835195860186811084821117610e7757845284518652818501518287015283850151838111610177578161101e918701610f1e565b84870152606080860151848111610177578261103b918801610f1e565b818801526080808701518581116101775783611058918901610f1e565b8189015260a09081880151828a015260c09182890151838b015260e08901518781116101775789019285601f850112156101775783519261109884610f8e565b956110a58b519788610ea0565b848752888088019560051b8701019588871161017757898101955b8787106111b557505050505050505060e087015261010080860151906004821015610177578701526101206110f6818701610fa5565b90870152610140808601518481116101775782611114918801610f1e565b9087015261016092838601518181116101775786019082601f830112156101775781519061114d61114483610f8e565b97519788610ea0565b818752848088019260051b8401019380851161017757858401925b8584106111905750505050505050830152610180809101519060058210156101775782015290565b83518381116101775787916111aa848480948a0101610f1e565b815201930192611168565b86518c811161017757820185601f19828d030112610177578c918e516111da81610e5c565b8d830151938411610177578f8f948f8f906111f792870101610f1e565b8252830151938411610177578f838f95918f61121990888d9581990101610f1e565b86850152888201519084015288810151888401528a810151898401520151898201528152019601956110c0565b60001981146112555760010190565b634e487b7160e01b600052601160045260246000fd5b805182101561127f5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b9190820391821161125557565b6020908181840312610177578051906001600160401b03821161017757019180601f840112156101775782516112d781610f8e565b936112e56040519586610ea0565b818552838086019260051b820101928311610177578301905b82821061130c575050505090565b83809161131884610fa5565b8152019101906112fe565b9081526001600160a01b03909116602082015260400190565b9061134682610f8e565b6113536040519182610ea0565b8281528092611364601f1991610f8e565b0190602036910137565b9061137882610f8e565b6113856040519182610ea0565b8281528092611396601f1991610f8e565b019060005b8281106113a757505050565b80606060208093850101520161139b565b81601f82011215610177578051916113cf83610f8e565b926113dd6040519485610ea0565b808452602092838086019260051b820101928311610177578301905b828210611407575050505090565b815181529083019083016113f9565b9190916040818403126101775780516001600160401b03939084811161017757816114429184016113b8565b9360208301519081116101775761145992016113b8565b9056fea264697066735822122086a1d8be9730b5e466827830571e6ea7f455a35dcaf2df1becf79207756bb90364736f6c63430008130033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0x98 JUMPI PUSH1 0x1F PUSH2 0x155A CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x9D JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x98 JUMPI PUSH2 0x52 PUSH1 0x20 PUSH2 0x4B DUP4 PUSH2 0xB3 JUMP JUMPDEST SWAP3 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD DUP3 AND CALLER OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x1492 SWAP1 DUP2 PUSH2 0xC8 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x98 JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xE0 DUP3 CALLDATALOAD DUP2 SHR SWAP2 DUP3 PUSH4 0x9B3DA2B EQ PUSH2 0xDA7 JUMPI POP DUP2 PUSH4 0x16BD19D4 EQ PUSH2 0xB55 JUMPI DUP2 PUSH4 0x1E011B3E EQ PUSH2 0x92D JUMPI DUP2 PUSH4 0x56E4B68B EQ PUSH2 0x904 JUMPI DUP2 PUSH4 0xAF330623 EQ PUSH2 0x783 JUMPI DUP2 PUSH4 0xBC4040D2 EQ PUSH2 0x1F1 JUMPI POP PUSH4 0xCE7F35B4 EQ PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1EE JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1EE JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND SWAP2 PUSH1 0x40 MLOAD PUSH4 0x4F558E79 PUSH1 0xE0 SHL DUP2 MSTORE DUP5 PUSH1 0x4 DUP3 ADD MSTORE DUP3 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1B6 JUMPI SWAP1 PUSH2 0xC6 SWAP2 DUP4 SWAP2 PUSH2 0x1C1 JUMPI JUMPDEST POP PUSH2 0xEDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1D591EB7 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP4 DUP2 DUP6 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x1B6 JUMPI DUP3 SWAP6 PUSH2 0x190 JUMPI JUMPDEST POP DUP3 SWAP1 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH4 0xC0ADB91 PUSH1 0xE4 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x183 JUMPI DUP2 SWAP4 PUSH2 0x14C JUMPI JUMPDEST POP DUP3 DUP3 PUSH1 0x40 SWAP6 ADD MLOAD DUP2 DUP2 GT PUSH1 0x0 EQ PUSH2 0x144 JUMPI PUSH2 0x138 SWAP3 POP PUSH2 0x1295 JUMP JUMPDEST SWAP1 JUMPDEST DUP4 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE RETURN JUMPDEST POP POP SWAP1 PUSH2 0x13A JUMP JUMPDEST SWAP2 DUP1 SWAP4 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x17C JUMPI JUMPDEST PUSH2 0x164 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x177 JUMPI SWAP1 MLOAD SWAP2 SWAP1 PUSH1 0x40 PUSH2 0x11C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x15A JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 SWAP2 SWAP6 POP PUSH2 0x1AF SWAP1 RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x1A7 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xFB9 JUMP JUMPDEST SWAP5 SWAP1 PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1E1 SWAP2 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x1E7 JUMPI JUMPDEST PUSH2 0x1D9 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xEC3 JUMP JUMPDEST CODESIZE PUSH2 0xC0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1CF JUMP JUMPDEST DUP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x77F JUMPI PUSH1 0x44 CALLDATALOAD ISZERO PUSH2 0x72E JUMPI DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4F558E79 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x70A JUMPI PUSH2 0x249 SWAP2 DUP6 SWAP2 PUSH2 0x715 JUMPI POP PUSH2 0xEDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1D591EB7 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP2 DUP4 DUP4 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x70A JUMPI DUP5 SWAP4 PUSH2 0x6EE JUMPI JUMPDEST POP PUSH2 0x100 DUP4 ADD MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x6DA JUMPI PUSH2 0x696 JUMPI PUSH1 0x40 MLOAD PUSH2 0x295 DUP2 PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP5 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x60 DUP3 ADD MSTORE DUP5 PUSH1 0x80 DUP3 ADD MSTORE DUP5 PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 DUP5 SWAP1 DUP6 SWAP1 DUP7 JUMPDEST DUP2 DUP8 ADD DUP1 MLOAD DUP1 MLOAD DUP4 LT ISZERO PUSH2 0x68A JUMPI PUSH1 0xA0 PUSH2 0x2DC DUP5 PUSH1 0x24 CALLDATALOAD SWAP4 PUSH2 0x126B JUMP JUMPDEST MLOAD ADD MLOAD EQ PUSH2 0x2F3 JUMPI POP PUSH2 0x2EE SWAP1 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST SWAP3 POP SWAP5 SWAP6 POP POP PUSH2 0x307 SWAP3 POP DUP4 SWAP2 POP MLOAD PUSH2 0x126B JUMP JUMPDEST MLOAD PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x639 JUMPI PUSH1 0x80 DUP2 ADD SWAP1 PUSH1 0x44 CALLDATALOAD DUP3 MLOAD LT PUSH2 0x5F6 JUMPI PUSH1 0x60 ADD MLOAD PUSH1 0x44 CALLDATALOAD DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x44 CALLDATALOAD EQ SWAP1 ISZERO OR ISZERO PUSH2 0x5E2 JUMPI CALLVALUE SUB PUSH2 0x5A6 JUMPI DUP4 SWAP2 PUSH2 0x34D PUSH1 0x44 CALLDATALOAD DUP4 MLOAD PUSH2 0x1295 JUMP JUMPDEST DUP1 SWAP3 MSTORE DUP4 EXTCODESIZE ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x64 SWAP1 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x43D08AF3 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH2 0x593 JUMPI JUMPDEST POP DUP1 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x4F9 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1E7D2109 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD MSTORE CALLER PUSH1 0x24 DUP5 ADD MSTORE CALLVALUE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH2 0x57F JUMPI JUMPDEST POP SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND PUSH1 0x40 MLOAD PUSH4 0x7C90547 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP3 ADD MSTORE DUP3 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x574 JUMPI DUP4 SWAP2 PUSH2 0x552 JUMPI JUMPDEST POP DUP3 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x549 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x42E DUP4 DUP6 PUSH2 0x126B JUMP JUMPDEST MLOAD AND EQ PUSH2 0x443 JUMPI PUSH2 0x43E SWAP1 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x412 JUMP JUMPDEST POP POP DUP2 SWAP3 POP PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x4FC JUMPI JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x4F9 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x84 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x68B37277 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD MSTORE CALLER PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x64 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH2 0x4E5 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x44 CALLDATALOAD DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x4 CALLDATALOAD SWAP1 PUSH32 0xF85C915CE9C62984825F2FF42DC2AC372422BEBF345A567590885DC78681325D PUSH1 0x40 CALLER SWAP3 LOG4 DUP1 RETURN JUMPDEST PUSH2 0x4EE SWAP1 PUSH2 0xE8D JUMP JUMPDEST PUSH2 0x1EE JUMPI DUP1 CODESIZE PUSH2 0x4A5 JUMP JUMPDEST POP REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x4F9 JUMPI DUP2 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH4 0x5DF18391 PUSH1 0xE1 SHL DUP3 MSTORE DUP2 DUP4 DUP2 PUSH2 0x526 CALLER PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD PUSH2 0x1323 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1B6 JUMPI ISZERO PUSH2 0x451 JUMPI PUSH2 0x53E SWAP1 PUSH2 0xE8D JUMP JUMPDEST PUSH2 0x1EE JUMPI DUP1 CODESIZE PUSH2 0x451 JUMP JUMPDEST POP POP DUP2 SWAP3 PUSH2 0x44B JUMP JUMPDEST PUSH2 0x56E SWAP2 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x566 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x12A2 JUMP JUMPDEST CODESIZE PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x588 SWAP1 PUSH2 0xE8D JUMP JUMPDEST PUSH2 0x1EE JUMPI DUP1 CODESIZE PUSH2 0x3D8 JUMP JUMPDEST PUSH2 0x59C SWAP1 PUSH2 0xE8D JUMP JUMPDEST CODESIZE PUSH2 0x38C JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B98DBDC9C9958DD081D985B1D59481CD95B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH27 0x4E6F7420656E6F75676820617661696C61626C6520746F6B656E73 PUSH1 0x28 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x52657761726420646F6573206E6F7420657869737420666F7220746869732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1CDCD95D PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP POP POP POP SWAP3 SWAP4 POP PUSH2 0x30B JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A656374206973206E6F7420696E205374617274656420737461747573 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH2 0x703 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x1A7 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1E1 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1E7 JUMPI PUSH2 0x1D9 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x1EE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1EE JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND DUP5 SUB PUSH2 0x77F JUMPI DUP2 SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP4 PUSH4 0x4F558E79 PUSH1 0xE0 SHL DUP6 MSTORE DUP4 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x20 SWAP5 DUP6 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x70A JUMPI SWAP1 PUSH2 0x7E9 SWAP2 DUP6 SWAP2 PUSH2 0x8E7 JUMPI POP PUSH2 0xEDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5DBF1C2D PUSH1 0xE1 SHL DUP2 MSTORE SWAP4 DUP6 DUP6 DUP1 PUSH2 0x808 DUP7 DUP6 PUSH1 0x4 DUP5 ADD PUSH2 0x1323 JUMP JUMPDEST SUB DUP2 DUP6 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x70A JUMPI DUP5 SWAP6 PUSH2 0x8B2 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xEBCAB605 PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 SWAP3 DUP4 SWAP3 DUP6 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 DUP3 SWAP2 PUSH2 0x842 SWAP2 PUSH1 0x4 DUP5 ADD PUSH2 0x1323 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x183 JUMPI SWAP1 PUSH2 0x886 SWAP3 SWAP2 DUP2 DUP1 SWAP4 PUSH2 0x88A JUMPI JUMPDEST POP POP PUSH2 0x878 SWAP1 PUSH1 0x60 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 MSTORE DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0xDCC JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xDCC JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x878 SWAP4 POP PUSH2 0x8AB SWAP3 POP RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x8A3 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1416 JUMP JUMPDEST SWAP2 DUP7 PUSH2 0x85B JUMP JUMPDEST SWAP1 SWAP5 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x8E0 JUMPI JUMPDEST PUSH2 0x8CA DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8DC JUMPI MLOAD SWAP4 PUSH2 0x842 PUSH2 0x81B JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x8C0 JUMP JUMPDEST PUSH2 0x8FE SWAP2 POP DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x1E7 JUMPI PUSH2 0x1D9 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP8 PUSH2 0xC0 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x1EE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1EE JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1EE JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1EE JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x5A2 JUMPI DUP3 SLOAD AND PUSH1 0x40 MLOAD SWAP2 PUSH4 0x3A79E153 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE DUP3 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x574 JUMPI DUP4 SWAP3 PUSH2 0xB10 JUMPI JUMPDEST POP DUP2 MLOAD SWAP4 PUSH2 0x990 DUP6 PUSH2 0x133C JUMP JUMPDEST SWAP4 PUSH2 0x99A DUP7 PUSH2 0x133C JUMP JUMPDEST SWAP6 PUSH2 0x9A4 DUP2 PUSH2 0x136E JUMP JUMPDEST SWAP4 PUSH2 0x9AE DUP3 PUSH2 0x136E JUMP JUMPDEST SWAP6 DUP4 JUMPDEST DUP4 DUP2 LT PUSH2 0xA07 JUMPI PUSH2 0x9DE DUP10 PUSH2 0x886 DUP11 PUSH2 0x9F9 DUP12 DUP16 DUP13 PUSH2 0x9EB SWAP2 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 PUSH1 0x80 DUP11 MSTORE PUSH1 0x80 DUP11 ADD SWAP1 PUSH2 0xDCC JUMP JUMPDEST SWAP2 DUP9 DUP4 SUB SWAP1 DUP10 ADD MSTORE PUSH2 0xDCC JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0xE00 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0xE00 JUMP JUMPDEST PUSH2 0xA11 DUP2 DUP4 PUSH2 0x126B JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH4 0x5DBF1C2D PUSH1 0xE1 SHL DUP2 MSTORE DUP8 DUP2 DUP1 PUSH2 0xA32 PUSH1 0x4 CALLDATALOAD DUP7 PUSH1 0x4 DUP5 ADD PUSH2 0x1323 JUMP JUMPDEST SUB DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xAD4 JUMPI DUP8 SWAP2 PUSH2 0xADF JUMPI JUMPDEST POP PUSH2 0xA50 DUP4 DUP14 PUSH2 0x126B JUMP JUMPDEST MSTORE PUSH1 0x40 MLOAD PUSH4 0xEBCAB605 PUSH1 0xE0 SHL DUP2 MSTORE DUP7 DUP2 DUP1 PUSH2 0xA71 PUSH1 0x4 CALLDATALOAD DUP7 PUSH1 0x4 DUP5 ADD PUSH2 0x1323 JUMP JUMPDEST SUB DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0xAD4 JUMPI SWAP1 PUSH2 0xAB3 SWAP4 SWAP3 SWAP2 DUP9 SWAP2 DUP10 SWAP2 PUSH2 0xAB8 JUMPI JUMPDEST POP PUSH2 0xA97 DUP5 DUP14 PUSH2 0x126B JUMP JUMPDEST MSTORE PUSH2 0xAA2 DUP4 DUP12 PUSH2 0x126B JUMP JUMPDEST MSTORE PUSH2 0xAAD DUP3 DUP13 PUSH2 0x126B JUMP JUMPDEST MSTORE PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST SWAP1 POP PUSH2 0xACE SWAP2 POP RETURNDATASIZE DUP1 DUP11 DUP4 RETURNDATACOPY PUSH2 0x8A3 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP15 PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xB09 JUMPI JUMPDEST PUSH2 0xAF6 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB05 JUMPI MLOAD DUP13 PUSH2 0xA45 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xAEC JUMP JUMPDEST SWAP1 SWAP2 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0xB22 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP2 ADD SWAP1 DUP5 DUP2 DUP4 SUB SLT PUSH2 0x8DC JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xB51 JUMPI PUSH2 0xB4A SWAP3 SWAP2 ADD PUSH2 0x13B8 JUMP JUMPDEST SWAP1 DUP5 PUSH2 0x983 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x1EE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1EE JUMPI DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4F558E79 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP2 DUP4 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x574 JUMPI SWAP1 PUSH2 0xBAC SWAP2 DUP5 SWAP2 PUSH2 0xD88 JUMPI POP PUSH2 0xEDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C90547 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE DUP3 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x574 JUMPI DUP4 SWAP2 PUSH2 0xD6E JUMPI JUMPDEST POP DUP1 MLOAD SWAP1 PUSH2 0xBE4 DUP3 PUSH2 0x133C JUMP JUMPDEST PUSH2 0xBED DUP4 PUSH2 0x136E JUMP JUMPDEST SWAP3 PUSH2 0xBF7 DUP2 PUSH2 0x136E JUMP JUMPDEST SWAP5 DUP7 JUMPDEST DUP3 DUP2 LT PUSH2 0xC5A JUMPI POP POP POP PUSH1 0x40 MLOAD SWAP5 PUSH1 0x80 DUP7 ADD PUSH1 0x80 DUP8 MSTORE DUP4 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x20 PUSH1 0xA0 DUP9 ADD SWAP5 ADD SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xC42 JUMPI DUP8 DUP1 PUSH2 0x886 DUP10 PUSH2 0x9F9 DUP11 PUSH2 0x9EB DUP12 DUP12 DUP8 DUP3 SUB PUSH1 0x20 DUP10 ADD MSTORE PUSH2 0xDCC JUMP JUMPDEST DUP3 MLOAD DUP10 AND DUP6 MSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xC1F JUMP JUMPDEST DUP9 PUSH2 0xC65 DUP3 DUP8 PUSH2 0x126B JUMP JUMPDEST MLOAD AND PUSH1 0x40 MLOAD PUSH4 0x5DBF1C2D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH2 0xC88 DUP6 PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD PUSH2 0x1323 JUMP JUMPDEST SUB DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xD63 JUMPI SWAP1 DUP11 SWAP2 DUP3 SWAP2 PUSH2 0xD28 JUMPI JUMPDEST POP SWAP2 PUSH2 0xCCC SWAP3 PUSH2 0xCAE DUP6 DUP10 PUSH2 0x126B JUMP JUMPDEST MSTORE PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0xEBCAB605 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD PUSH2 0x1323 JUMP JUMPDEST SUB DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0xD1D JUMPI SWAP1 PUSH2 0xCFC SWAP3 SWAP2 DUP11 SWAP2 DUP12 SWAP2 PUSH2 0xD01 JUMPI JUMPDEST POP PUSH2 0xCF1 DUP4 DUP12 PUSH2 0x126B JUMP JUMPDEST MSTORE PUSH2 0xAAD DUP3 DUP10 PUSH2 0x126B JUMP JUMPDEST PUSH2 0xBFA JUMP JUMPDEST SWAP1 POP PUSH2 0xD17 SWAP2 POP RETURNDATASIZE DUP1 DUP13 DUP4 RETURNDATACOPY PUSH2 0x8A3 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP13 PUSH2 0xCE6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xD5B JUMPI JUMPDEST DUP2 PUSH2 0xD44 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xD57 JUMPI MLOAD DUP10 SWAP1 PUSH2 0xCCC PUSH2 0xC9E JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xD82 SWAP2 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x566 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP5 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0xDA1 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1E7 JUMPI PUSH2 0x1D9 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP6 PUSH2 0xC0 JUMP JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x77F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x77F JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xDEC JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xDDE JUMP JUMPDEST SWAP1 DUP1 DUP3 MLOAD SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 DUP2 DUP1 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0xE2E JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0xE4C PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0xDCC JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0xE1E JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xE77 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xE77 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0xE77 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x177 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x177 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xEE2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x105CDCD95D08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x177 JUMPI DUP3 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE77 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 SWAP2 PUSH2 0xF56 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND DUP5 ADD DUP6 PUSH2 0xEA0 JUMP JUMPDEST DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH2 0x177 JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xF7B JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xE77 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x177 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP3 DUP3 DUP3 SUB SLT PUSH2 0x177 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH2 0x177 JUMPI ADD SWAP2 PUSH2 0x1A0 SWAP4 DUP5 DUP5 DUP5 SUB SLT PUSH2 0x177 JUMPI PUSH1 0x40 SWAP3 DUP4 MLOAD SWAP6 DUP7 ADD DUP7 DUP2 LT DUP5 DUP3 GT OR PUSH2 0xE77 JUMPI DUP5 MSTORE DUP5 MLOAD DUP7 MSTORE DUP2 DUP6 ADD MLOAD DUP3 DUP8 ADD MSTORE DUP4 DUP6 ADD MLOAD DUP4 DUP2 GT PUSH2 0x177 JUMPI DUP2 PUSH2 0x101E SWAP2 DUP8 ADD PUSH2 0xF1E JUMP JUMPDEST DUP5 DUP8 ADD MSTORE PUSH1 0x60 DUP1 DUP7 ADD MLOAD DUP5 DUP2 GT PUSH2 0x177 JUMPI DUP3 PUSH2 0x103B SWAP2 DUP9 ADD PUSH2 0xF1E JUMP JUMPDEST DUP2 DUP9 ADD MSTORE PUSH1 0x80 DUP1 DUP8 ADD MLOAD DUP6 DUP2 GT PUSH2 0x177 JUMPI DUP4 PUSH2 0x1058 SWAP2 DUP10 ADD PUSH2 0xF1E JUMP JUMPDEST DUP2 DUP10 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 DUP9 ADD MLOAD DUP3 DUP11 ADD MSTORE PUSH1 0xC0 SWAP2 DUP3 DUP10 ADD MLOAD DUP4 DUP12 ADD MSTORE PUSH1 0xE0 DUP10 ADD MLOAD DUP8 DUP2 GT PUSH2 0x177 JUMPI DUP10 ADD SWAP3 DUP6 PUSH1 0x1F DUP6 ADD SLT ISZERO PUSH2 0x177 JUMPI DUP4 MLOAD SWAP3 PUSH2 0x1098 DUP5 PUSH2 0xF8E JUMP JUMPDEST SWAP6 PUSH2 0x10A5 DUP12 MLOAD SWAP8 DUP9 PUSH2 0xEA0 JUMP JUMPDEST DUP5 DUP8 MSTORE DUP9 DUP1 DUP9 ADD SWAP6 PUSH1 0x5 SHL DUP8 ADD ADD SWAP6 DUP9 DUP8 GT PUSH2 0x177 JUMPI DUP10 DUP2 ADD SWAP6 JUMPDEST DUP8 DUP8 LT PUSH2 0x11B5 JUMPI POP POP POP POP POP POP POP POP PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP1 DUP7 ADD MLOAD SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x177 JUMPI DUP8 ADD MSTORE PUSH2 0x120 PUSH2 0x10F6 DUP2 DUP8 ADD PUSH2 0xFA5 JUMP JUMPDEST SWAP1 DUP8 ADD MSTORE PUSH2 0x140 DUP1 DUP7 ADD MLOAD DUP5 DUP2 GT PUSH2 0x177 JUMPI DUP3 PUSH2 0x1114 SWAP2 DUP9 ADD PUSH2 0xF1E JUMP JUMPDEST SWAP1 DUP8 ADD MSTORE PUSH2 0x160 SWAP3 DUP4 DUP7 ADD MLOAD DUP2 DUP2 GT PUSH2 0x177 JUMPI DUP7 ADD SWAP1 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x177 JUMPI DUP2 MLOAD SWAP1 PUSH2 0x114D PUSH2 0x1144 DUP4 PUSH2 0xF8E JUMP JUMPDEST SWAP8 MLOAD SWAP8 DUP9 PUSH2 0xEA0 JUMP JUMPDEST DUP2 DUP8 MSTORE DUP5 DUP1 DUP9 ADD SWAP3 PUSH1 0x5 SHL DUP5 ADD ADD SWAP4 DUP1 DUP6 GT PUSH2 0x177 JUMPI DUP6 DUP5 ADD SWAP3 JUMPDEST DUP6 DUP5 LT PUSH2 0x1190 JUMPI POP POP POP POP POP POP POP DUP4 ADD MSTORE PUSH2 0x180 DUP1 SWAP2 ADD MLOAD SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x177 JUMPI DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP4 DUP2 GT PUSH2 0x177 JUMPI DUP8 SWAP2 PUSH2 0x11AA DUP5 DUP5 DUP1 SWAP5 DUP11 ADD ADD PUSH2 0xF1E JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP3 PUSH2 0x1168 JUMP JUMPDEST DUP7 MLOAD DUP13 DUP2 GT PUSH2 0x177 JUMPI DUP3 ADD DUP6 PUSH1 0x1F NOT DUP3 DUP14 SUB ADD SLT PUSH2 0x177 JUMPI DUP13 SWAP2 DUP15 MLOAD PUSH2 0x11DA DUP2 PUSH2 0xE5C JUMP JUMPDEST DUP14 DUP4 ADD MLOAD SWAP4 DUP5 GT PUSH2 0x177 JUMPI DUP16 DUP16 SWAP5 DUP16 DUP16 SWAP1 PUSH2 0x11F7 SWAP3 DUP8 ADD ADD PUSH2 0xF1E JUMP JUMPDEST DUP3 MSTORE DUP4 ADD MLOAD SWAP4 DUP5 GT PUSH2 0x177 JUMPI DUP16 DUP4 DUP16 SWAP6 SWAP2 DUP16 PUSH2 0x1219 SWAP1 DUP9 DUP14 SWAP6 DUP2 SWAP10 ADD ADD PUSH2 0xF1E JUMP JUMPDEST DUP7 DUP6 ADD MSTORE DUP9 DUP3 ADD MLOAD SWAP1 DUP5 ADD MSTORE DUP9 DUP2 ADD MLOAD DUP9 DUP5 ADD MSTORE DUP11 DUP2 ADD MLOAD DUP10 DUP5 ADD MSTORE ADD MLOAD DUP10 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP7 ADD SWAP6 PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1255 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x127F JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1255 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x177 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x177 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x177 JUMPI DUP3 MLOAD PUSH2 0x12D7 DUP2 PUSH2 0xF8E JUMP JUMPDEST SWAP4 PUSH2 0x12E5 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0xEA0 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x177 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x130C JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 DUP1 SWAP2 PUSH2 0x1318 DUP5 PUSH2 0xFA5 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x12FE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1346 DUP3 PUSH2 0xF8E JUMP JUMPDEST PUSH2 0x1353 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0xEA0 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1364 PUSH1 0x1F NOT SWAP2 PUSH2 0xF8E JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x1378 DUP3 PUSH2 0xF8E JUMP JUMPDEST PUSH2 0x1385 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0xEA0 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1396 PUSH1 0x1F NOT SWAP2 PUSH2 0xF8E JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x13A7 JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x139B JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x177 JUMPI DUP1 MLOAD SWAP2 PUSH2 0x13CF DUP4 PUSH2 0xF8E JUMP JUMPDEST SWAP3 PUSH2 0x13DD PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xEA0 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x177 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1407 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x13F9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0x177 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 SWAP1 DUP5 DUP2 GT PUSH2 0x177 JUMPI DUP2 PUSH2 0x1442 SWAP2 DUP5 ADD PUSH2 0x13B8 JUMP JUMPDEST SWAP4 PUSH1 0x20 DUP4 ADD MLOAD SWAP1 DUP2 GT PUSH2 0x177 JUMPI PUSH2 0x1459 SWAP3 ADD PUSH2 0x13B8 JUMP JUMPDEST SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 LOG1 0xD8 0xBE SWAP8 ADDRESS 0xB5 0xE4 PUSH7 0x827830571E6EA7 DELEGATECALL SSTORE LOG3 0x5D 0xCA CALLCODE 0xDF SHL 0xEC 0xF7 SWAP3 SMOD PUSH22 0x6BB90364736F6C634300081300330000000000000000 ","sourceMap":"124:5433:29:-:0;;;;;;;;;;;;;-1:-1:-1;;124:5433:29;;;;-1:-1:-1;;;;;124:5433:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;124:5433:29;;-1:-1:-1;;;;;;124:5433:29;;;-1:-1:-1;;;;;124:5433:29;;;;;;;583:23;124:5433;;;;596:10;124:5433;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;124:5433:29;;;;;;-1:-1:-1;124:5433:29;;;;;-1:-1:-1;124:5433:29;;;;-1:-1:-1;;;;;124:5433:29;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":4005,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_address_dyn_fromMemory":{"entryPoint":4770,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_dyn_fromMemory":{"entryPoint":5048,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_dynt_array_uint256_dyn_fromMemory":{"entryPoint":5142,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bool_fromMemory":{"entryPoint":3779,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":3870,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_Asset_fromMemory":{"entryPoint":4025,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_array_uint256_dyn_dyn":{"entryPoint":3584,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":3532,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_address":{"entryPoint":4899,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_and_zero_memory_array_array_array_uint256_dyn_dyn":{"entryPoint":4974,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":4924,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_struct_Reward_dyn":{"entryPoint":3982,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_uint256":{"entryPoint":4757,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":3744,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_12309":{"entryPoint":3676,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_12310":{"entryPoint":3725,"id":null,"parameterSlots":1,"returnSlots":0},"increment_uint256":{"entryPoint":4678,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_struct_Reward_dyn":{"entryPoint":4715,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":3803,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60009060e08235811c91826309b3da2b14610da75750816316bd19d414610b555781631e011b3e1461092d57816356e4b68b14610904578163af33062314610783578163bc4040d2146101f1575063ce7f35b41461007057600080fd5b346101ee57602090816003193601126101ee576004359160018060a01b0382541691604051634f558e7960e01b81528460048201528281602481875afa9081156101b657906100c69183916101c1575b50610edb565b604051631d591eb760e31b815260048101859052938185602481875afa9485156101b6578295610190575b508290602460405180968193630c0adb9160e41b835260048301525afa92831561018357819361014c575b5082826040950151818111600014610144576101389250611295565b905b8351928352820152f35b50509061013a565b9180935082813d831161017c575b6101648183610ea0565b810103126101775790519190604061011c565b600080fd5b503d61015a565b50604051903d90823e3d90fd5b839195506101af903d8085833e6101a78183610ea0565b810190610fb9565b94906100f1565b6040513d84823e3d90fd5b6101e19150843d86116101e7575b6101d98183610ea0565b810190610ec3565b386100c0565b503d6101cf565b80fd5b9050606036600319011261077f576044351561072e578154604051634f558e7960e01b815260048035908201526001600160a01b0390911690602081602481855afa801561070a576102499185916107155750610edb565b604051631d591eb760e31b81526004803590820152918383602481855afa92831561070a5784936106ee575b5061010083015160048110156106da576106965760405161029581610e5c565b60608152606060208201528460408201528460608201528460808201528460a08201529084908590865b8187018051805183101561068a5760a06102dc846024359361126b565b510151146102f357506102ee90611246565b6102bf565b92509495505061030792508391505161126b565b5160015b156106395760808101906044358251106105f6576060015160443581029080820460443514901517156105e25734036105a657839161034d6044358351611295565b809252833b156105a2576064908360405195869485936343d08af360e11b85526004356004860152602485015260448401525af180156101b657610593575b50805481906001600160a01b0316803b156104f957818091606460405180948193631e7d210960e21b835260043560048401523360248401523460448401525af180156101b65761057f575b509060018060a01b038154166040516307c9054760e01b815260043560048201528281602481855afa908115610574578391610552575b50825b815181101561054957336001600160a01b0361042e838561126b565b5116146104435761043e90611246565b610412565b505081925060015b156104fc575b5080546001600160a01b0316803b156104f9578180916084604051809481936368b3727760e11b83526004356004840152336024840152602435604484015260443560648401525af180156101b6576104e5575b50604051604435815234602082015260243590600435907ff85c915ce9c62984825f2ff42dc2ac372422bebf345a567590885dc78681325d60403392a480f35b6104ee90610e8d565b6101ee5780386104a5565b50fd5b803b156104f957816040518092635df1839160e11b82528183816105263360043560048401611323565b03925af180156101b657156104515761053e90610e8d565b6101ee578038610451565b5050819261044b565b61056e91503d8085833e6105668183610ea0565b8101906112a2565b3861040f565b6040513d85823e3d90fd5b61058890610e8d565b6101ee5780386103d8565b61059c90610e8d565b3861038c565b8280fd5b60405162461bcd60e51b8152602060048201526014602482015273125b98dbdc9c9958dd081d985b1d59481cd95b9d60621b6044820152606490fd5b634e487b7160e01b85526011600452602485fd5b60405162461bcd60e51b815260206004820152601b60248201527a4e6f7420656e6f75676820617661696c61626c6520746f6b656e7360281b6044820152606490fd5b60405162461bcd60e51b8152602060048201526024808201527f52657761726420646f6573206e6f7420657869737420666f72207468697320616044820152631cdcd95d60e21b6064820152608490fd5b5050505092935061030b565b606460405162461bcd60e51b815260206004820152602060248201527f50726f6a656374206973206e6f7420696e2053746172746564207374617475736044820152fd5b634e487b7160e01b85526021600452602485fd5b6107039193503d8086833e6101a78183610ea0565b9138610275565b6040513d86823e3d90fd5b6101e1915060203d6020116101e7576101d98183610ea0565b60405162461bcd60e51b815260206004820152602360248201527f546f6b656e20616d6f756e74206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608490fd5b5080fd5b82346101ee5760403660031901126101ee5760243590600435906001600160a01b03808416840361077f578154169260405193634f558e7960e01b85528360048601526020948581602481855afa90811561070a57906107e99185916108e75750610edb565b604051635dbf1c2d60e11b815293858580610808868560048401611323565b0381855afa94851561070a5784956108b2575b5060405163ebcab60560e01b81529392839285929091839182916108429160048401611323565b03915afa9182156101835790610886929181809361088a575b505061087890606060405196879687528601526060850190610dcc565b908382036040850152610dcc565b0390f35b61087893506108ab92503d8091833e6108a38183610ea0565b810190611416565b918661085b565b9094508581813d83116108e0575b6108ca8183610ea0565b810103126108dc57519361084261081b565b8380fd5b503d6108c0565b6108fe9150873d89116101e7576101d98183610ea0565b876100c0565b82346101ee57806003193601126101ee576002546040516001600160a01b039091168152602090f35b82346101ee57602090816003193601126101ee576004356001600160a01b03818116918290036105a25782541660405191633a79e15360e21b835260048301528282602481845afa918215610574578392610b10575b508151936109908561133c565b9361099a8661133c565b956109a48161136e565b936109ae8261136e565b95835b838110610a07576109de896108868a6109f98b8f8c6109eb9160405198899860808a5260808a0190610dcc565b9188830390890152610dcc565b908582036040870152610e00565b908382036060850152610e00565b610a11818361126b565b51604051635dbf1c2d60e11b8152878180610a326004358660048401611323565b0381885afa908115610ad4578791610adf575b50610a50838d61126b565b5260405163ebcab60560e01b8152868180610a716004358660048401611323565b0381885afa8015610ad45790610ab393929188918991610ab8575b50610a97848d61126b565b52610aa2838b61126b565b52610aad828c61126b565b52611246565b6109b1565b9050610ace91503d808a833e6108a38183610ea0565b8e610a8c565b6040513d89823e3d90fd5b90508781813d8311610b09575b610af68183610ea0565b81010312610b0557518c610a45565b8680fd5b503d610aec565b9091503d8084833e610b228183610ea0565b81019084818303126108dc578051906001600160401b038211610b5157610b4a9291016113b8565b9084610983565b8480fd5b82346101ee5760203660031901126101ee578054604051634f558e7960e01b815260048035908201526001600160a01b039291831690602081602481855afa9081156105745790610bac918491610d885750610edb565b6040516307c9054760e01b815260048035908201528281602481855afa908115610574578391610d6e575b50805190610be48261133c565b610bed8361136e565b92610bf78161136e565b94865b828110610c5a575050506040519460808601608087528351809152602060a088019401915b818110610c42578780610886896109f98a6109eb8b8b8782036020890152610dcc565b82518916855260209485019490920191600101610c1f565b88610c65828761126b565b5116604051635dbf1c2d60e11b815260208180610c888560043560048401611323565b0381875afa908115610d6357908a918291610d28575b5091610ccc92610cae858961126b565b526040518093819263ebcab60560e01b835260043560048401611323565b0381865afa8015610d1d5790610cfc92918a918b91610d01575b50610cf1838b61126b565b52610aad828961126b565b610bfa565b9050610d1791503d808c833e6108a38183610ea0565b8c610ce6565b6040513d8b823e3d90fd5b9150506020813d602011610d5b575b81610d4460209383610ea0565b81010312610d5757518990610ccc610c9e565b8980fd5b3d9150610d37565b6040513d8c823e3d90fd5b610d8291503d8085833e6105668183610ea0565b84610bd7565b610da1915060203d6020116101e7576101d98183610ea0565b856100c0565b83903461077f578160031936011261077f576001546001600160a01b03168152602090f35b90815180825260208080930193019160005b828110610dec575050505090565b835185529381019392810192600101610dde565b908082519081815260208091019281808460051b8301019501936000915b848310610e2e5750505050505090565b9091929394958480610e4c600193601f198682030187528a51610dcc565b9801930193019194939290610e1e565b60c081019081106001600160401b03821117610e7757604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b038111610e7757604052565b601f909101601f19168101906001600160401b03821190821017610e7757604052565b90816020910312610177575180151581036101775790565b15610ee257565b60405162461bcd60e51b8152602060048201526014602482015273105cdcd95d08191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b919080601f84011215610177578251906001600160401b038211610e775760405191602091610f56601f8301601f1916840185610ea0565b8184528282870101116101775760005b818110610f7b57508260009394955001015290565b8581018301518482018401528201610f66565b6001600160401b038111610e775760051b60200190565b51906001600160a01b038216820361017757565b60209182828203126101775781516001600160401b03928382116101775701916101a093848484031261017757604092835195860186811084821117610e7757845284518652818501518287015283850151838111610177578161101e918701610f1e565b84870152606080860151848111610177578261103b918801610f1e565b818801526080808701518581116101775783611058918901610f1e565b8189015260a09081880151828a015260c09182890151838b015260e08901518781116101775789019285601f850112156101775783519261109884610f8e565b956110a58b519788610ea0565b848752888088019560051b8701019588871161017757898101955b8787106111b557505050505050505060e087015261010080860151906004821015610177578701526101206110f6818701610fa5565b90870152610140808601518481116101775782611114918801610f1e565b9087015261016092838601518181116101775786019082601f830112156101775781519061114d61114483610f8e565b97519788610ea0565b818752848088019260051b8401019380851161017757858401925b8584106111905750505050505050830152610180809101519060058210156101775782015290565b83518381116101775787916111aa848480948a0101610f1e565b815201930192611168565b86518c811161017757820185601f19828d030112610177578c918e516111da81610e5c565b8d830151938411610177578f8f948f8f906111f792870101610f1e565b8252830151938411610177578f838f95918f61121990888d9581990101610f1e565b86850152888201519084015288810151888401528a810151898401520151898201528152019601956110c0565b60001981146112555760010190565b634e487b7160e01b600052601160045260246000fd5b805182101561127f5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b9190820391821161125557565b6020908181840312610177578051906001600160401b03821161017757019180601f840112156101775782516112d781610f8e565b936112e56040519586610ea0565b818552838086019260051b820101928311610177578301905b82821061130c575050505090565b83809161131884610fa5565b8152019101906112fe565b9081526001600160a01b03909116602082015260400190565b9061134682610f8e565b6113536040519182610ea0565b8281528092611364601f1991610f8e565b0190602036910137565b9061137882610f8e565b6113856040519182610ea0565b8281528092611396601f1991610f8e565b019060005b8281106113a757505050565b80606060208093850101520161139b565b81601f82011215610177578051916113cf83610f8e565b926113dd6040519485610ea0565b808452602092838086019260051b820101928311610177578301905b828210611407575050505090565b815181529083019083016113f9565b9190916040818403126101775780516001600160401b03939084811161017757816114429184016113b8565b9360208301519081116101775761145992016113b8565b9056fea264697066735822122086a1d8be9730b5e466827830571e6ea7f455a35dcaf2df1becf79207756bb90364736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xE0 DUP3 CALLDATALOAD DUP2 SHR SWAP2 DUP3 PUSH4 0x9B3DA2B EQ PUSH2 0xDA7 JUMPI POP DUP2 PUSH4 0x16BD19D4 EQ PUSH2 0xB55 JUMPI DUP2 PUSH4 0x1E011B3E EQ PUSH2 0x92D JUMPI DUP2 PUSH4 0x56E4B68B EQ PUSH2 0x904 JUMPI DUP2 PUSH4 0xAF330623 EQ PUSH2 0x783 JUMPI DUP2 PUSH4 0xBC4040D2 EQ PUSH2 0x1F1 JUMPI POP PUSH4 0xCE7F35B4 EQ PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1EE JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1EE JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND SWAP2 PUSH1 0x40 MLOAD PUSH4 0x4F558E79 PUSH1 0xE0 SHL DUP2 MSTORE DUP5 PUSH1 0x4 DUP3 ADD MSTORE DUP3 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1B6 JUMPI SWAP1 PUSH2 0xC6 SWAP2 DUP4 SWAP2 PUSH2 0x1C1 JUMPI JUMPDEST POP PUSH2 0xEDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1D591EB7 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP4 DUP2 DUP6 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x1B6 JUMPI DUP3 SWAP6 PUSH2 0x190 JUMPI JUMPDEST POP DUP3 SWAP1 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH4 0xC0ADB91 PUSH1 0xE4 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x183 JUMPI DUP2 SWAP4 PUSH2 0x14C JUMPI JUMPDEST POP DUP3 DUP3 PUSH1 0x40 SWAP6 ADD MLOAD DUP2 DUP2 GT PUSH1 0x0 EQ PUSH2 0x144 JUMPI PUSH2 0x138 SWAP3 POP PUSH2 0x1295 JUMP JUMPDEST SWAP1 JUMPDEST DUP4 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE RETURN JUMPDEST POP POP SWAP1 PUSH2 0x13A JUMP JUMPDEST SWAP2 DUP1 SWAP4 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x17C JUMPI JUMPDEST PUSH2 0x164 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x177 JUMPI SWAP1 MLOAD SWAP2 SWAP1 PUSH1 0x40 PUSH2 0x11C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x15A JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 SWAP2 SWAP6 POP PUSH2 0x1AF SWAP1 RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x1A7 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xFB9 JUMP JUMPDEST SWAP5 SWAP1 PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1E1 SWAP2 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x1E7 JUMPI JUMPDEST PUSH2 0x1D9 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xEC3 JUMP JUMPDEST CODESIZE PUSH2 0xC0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1CF JUMP JUMPDEST DUP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x77F JUMPI PUSH1 0x44 CALLDATALOAD ISZERO PUSH2 0x72E JUMPI DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4F558E79 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x70A JUMPI PUSH2 0x249 SWAP2 DUP6 SWAP2 PUSH2 0x715 JUMPI POP PUSH2 0xEDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1D591EB7 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP2 DUP4 DUP4 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x70A JUMPI DUP5 SWAP4 PUSH2 0x6EE JUMPI JUMPDEST POP PUSH2 0x100 DUP4 ADD MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x6DA JUMPI PUSH2 0x696 JUMPI PUSH1 0x40 MLOAD PUSH2 0x295 DUP2 PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP5 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x60 DUP3 ADD MSTORE DUP5 PUSH1 0x80 DUP3 ADD MSTORE DUP5 PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 DUP5 SWAP1 DUP6 SWAP1 DUP7 JUMPDEST DUP2 DUP8 ADD DUP1 MLOAD DUP1 MLOAD DUP4 LT ISZERO PUSH2 0x68A JUMPI PUSH1 0xA0 PUSH2 0x2DC DUP5 PUSH1 0x24 CALLDATALOAD SWAP4 PUSH2 0x126B JUMP JUMPDEST MLOAD ADD MLOAD EQ PUSH2 0x2F3 JUMPI POP PUSH2 0x2EE SWAP1 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST SWAP3 POP SWAP5 SWAP6 POP POP PUSH2 0x307 SWAP3 POP DUP4 SWAP2 POP MLOAD PUSH2 0x126B JUMP JUMPDEST MLOAD PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x639 JUMPI PUSH1 0x80 DUP2 ADD SWAP1 PUSH1 0x44 CALLDATALOAD DUP3 MLOAD LT PUSH2 0x5F6 JUMPI PUSH1 0x60 ADD MLOAD PUSH1 0x44 CALLDATALOAD DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x44 CALLDATALOAD EQ SWAP1 ISZERO OR ISZERO PUSH2 0x5E2 JUMPI CALLVALUE SUB PUSH2 0x5A6 JUMPI DUP4 SWAP2 PUSH2 0x34D PUSH1 0x44 CALLDATALOAD DUP4 MLOAD PUSH2 0x1295 JUMP JUMPDEST DUP1 SWAP3 MSTORE DUP4 EXTCODESIZE ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x64 SWAP1 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x43D08AF3 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH2 0x593 JUMPI JUMPDEST POP DUP1 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x4F9 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1E7D2109 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD MSTORE CALLER PUSH1 0x24 DUP5 ADD MSTORE CALLVALUE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH2 0x57F JUMPI JUMPDEST POP SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND PUSH1 0x40 MLOAD PUSH4 0x7C90547 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP3 ADD MSTORE DUP3 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x574 JUMPI DUP4 SWAP2 PUSH2 0x552 JUMPI JUMPDEST POP DUP3 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x549 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x42E DUP4 DUP6 PUSH2 0x126B JUMP JUMPDEST MLOAD AND EQ PUSH2 0x443 JUMPI PUSH2 0x43E SWAP1 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x412 JUMP JUMPDEST POP POP DUP2 SWAP3 POP PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x4FC JUMPI JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x4F9 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x84 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x68B37277 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD MSTORE CALLER PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x64 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH2 0x4E5 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x44 CALLDATALOAD DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x4 CALLDATALOAD SWAP1 PUSH32 0xF85C915CE9C62984825F2FF42DC2AC372422BEBF345A567590885DC78681325D PUSH1 0x40 CALLER SWAP3 LOG4 DUP1 RETURN JUMPDEST PUSH2 0x4EE SWAP1 PUSH2 0xE8D JUMP JUMPDEST PUSH2 0x1EE JUMPI DUP1 CODESIZE PUSH2 0x4A5 JUMP JUMPDEST POP REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x4F9 JUMPI DUP2 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH4 0x5DF18391 PUSH1 0xE1 SHL DUP3 MSTORE DUP2 DUP4 DUP2 PUSH2 0x526 CALLER PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD PUSH2 0x1323 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1B6 JUMPI ISZERO PUSH2 0x451 JUMPI PUSH2 0x53E SWAP1 PUSH2 0xE8D JUMP JUMPDEST PUSH2 0x1EE JUMPI DUP1 CODESIZE PUSH2 0x451 JUMP JUMPDEST POP POP DUP2 SWAP3 PUSH2 0x44B JUMP JUMPDEST PUSH2 0x56E SWAP2 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x566 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x12A2 JUMP JUMPDEST CODESIZE PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x588 SWAP1 PUSH2 0xE8D JUMP JUMPDEST PUSH2 0x1EE JUMPI DUP1 CODESIZE PUSH2 0x3D8 JUMP JUMPDEST PUSH2 0x59C SWAP1 PUSH2 0xE8D JUMP JUMPDEST CODESIZE PUSH2 0x38C JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B98DBDC9C9958DD081D985B1D59481CD95B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH27 0x4E6F7420656E6F75676820617661696C61626C6520746F6B656E73 PUSH1 0x28 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x52657761726420646F6573206E6F7420657869737420666F7220746869732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1CDCD95D PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP POP POP POP SWAP3 SWAP4 POP PUSH2 0x30B JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A656374206973206E6F7420696E205374617274656420737461747573 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH2 0x703 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH2 0x1A7 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1E1 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1E7 JUMPI PUSH2 0x1D9 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x1EE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1EE JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND DUP5 SUB PUSH2 0x77F JUMPI DUP2 SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP4 PUSH4 0x4F558E79 PUSH1 0xE0 SHL DUP6 MSTORE DUP4 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x20 SWAP5 DUP6 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x70A JUMPI SWAP1 PUSH2 0x7E9 SWAP2 DUP6 SWAP2 PUSH2 0x8E7 JUMPI POP PUSH2 0xEDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5DBF1C2D PUSH1 0xE1 SHL DUP2 MSTORE SWAP4 DUP6 DUP6 DUP1 PUSH2 0x808 DUP7 DUP6 PUSH1 0x4 DUP5 ADD PUSH2 0x1323 JUMP JUMPDEST SUB DUP2 DUP6 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x70A JUMPI DUP5 SWAP6 PUSH2 0x8B2 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xEBCAB605 PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 SWAP3 DUP4 SWAP3 DUP6 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 DUP3 SWAP2 PUSH2 0x842 SWAP2 PUSH1 0x4 DUP5 ADD PUSH2 0x1323 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x183 JUMPI SWAP1 PUSH2 0x886 SWAP3 SWAP2 DUP2 DUP1 SWAP4 PUSH2 0x88A JUMPI JUMPDEST POP POP PUSH2 0x878 SWAP1 PUSH1 0x60 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 MSTORE DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0xDCC JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xDCC JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x878 SWAP4 POP PUSH2 0x8AB SWAP3 POP RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x8A3 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1416 JUMP JUMPDEST SWAP2 DUP7 PUSH2 0x85B JUMP JUMPDEST SWAP1 SWAP5 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x8E0 JUMPI JUMPDEST PUSH2 0x8CA DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8DC JUMPI MLOAD SWAP4 PUSH2 0x842 PUSH2 0x81B JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x8C0 JUMP JUMPDEST PUSH2 0x8FE SWAP2 POP DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x1E7 JUMPI PUSH2 0x1D9 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP8 PUSH2 0xC0 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x1EE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1EE JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x1EE JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1EE JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x5A2 JUMPI DUP3 SLOAD AND PUSH1 0x40 MLOAD SWAP2 PUSH4 0x3A79E153 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE DUP3 DUP3 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x574 JUMPI DUP4 SWAP3 PUSH2 0xB10 JUMPI JUMPDEST POP DUP2 MLOAD SWAP4 PUSH2 0x990 DUP6 PUSH2 0x133C JUMP JUMPDEST SWAP4 PUSH2 0x99A DUP7 PUSH2 0x133C JUMP JUMPDEST SWAP6 PUSH2 0x9A4 DUP2 PUSH2 0x136E JUMP JUMPDEST SWAP4 PUSH2 0x9AE DUP3 PUSH2 0x136E JUMP JUMPDEST SWAP6 DUP4 JUMPDEST DUP4 DUP2 LT PUSH2 0xA07 JUMPI PUSH2 0x9DE DUP10 PUSH2 0x886 DUP11 PUSH2 0x9F9 DUP12 DUP16 DUP13 PUSH2 0x9EB SWAP2 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 PUSH1 0x80 DUP11 MSTORE PUSH1 0x80 DUP11 ADD SWAP1 PUSH2 0xDCC JUMP JUMPDEST SWAP2 DUP9 DUP4 SUB SWAP1 DUP10 ADD MSTORE PUSH2 0xDCC JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0xE00 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0xE00 JUMP JUMPDEST PUSH2 0xA11 DUP2 DUP4 PUSH2 0x126B JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH4 0x5DBF1C2D PUSH1 0xE1 SHL DUP2 MSTORE DUP8 DUP2 DUP1 PUSH2 0xA32 PUSH1 0x4 CALLDATALOAD DUP7 PUSH1 0x4 DUP5 ADD PUSH2 0x1323 JUMP JUMPDEST SUB DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xAD4 JUMPI DUP8 SWAP2 PUSH2 0xADF JUMPI JUMPDEST POP PUSH2 0xA50 DUP4 DUP14 PUSH2 0x126B JUMP JUMPDEST MSTORE PUSH1 0x40 MLOAD PUSH4 0xEBCAB605 PUSH1 0xE0 SHL DUP2 MSTORE DUP7 DUP2 DUP1 PUSH2 0xA71 PUSH1 0x4 CALLDATALOAD DUP7 PUSH1 0x4 DUP5 ADD PUSH2 0x1323 JUMP JUMPDEST SUB DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0xAD4 JUMPI SWAP1 PUSH2 0xAB3 SWAP4 SWAP3 SWAP2 DUP9 SWAP2 DUP10 SWAP2 PUSH2 0xAB8 JUMPI JUMPDEST POP PUSH2 0xA97 DUP5 DUP14 PUSH2 0x126B JUMP JUMPDEST MSTORE PUSH2 0xAA2 DUP4 DUP12 PUSH2 0x126B JUMP JUMPDEST MSTORE PUSH2 0xAAD DUP3 DUP13 PUSH2 0x126B JUMP JUMPDEST MSTORE PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST SWAP1 POP PUSH2 0xACE SWAP2 POP RETURNDATASIZE DUP1 DUP11 DUP4 RETURNDATACOPY PUSH2 0x8A3 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP15 PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xB09 JUMPI JUMPDEST PUSH2 0xAF6 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB05 JUMPI MLOAD DUP13 PUSH2 0xA45 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xAEC JUMP JUMPDEST SWAP1 SWAP2 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0xB22 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP2 ADD SWAP1 DUP5 DUP2 DUP4 SUB SLT PUSH2 0x8DC JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xB51 JUMPI PUSH2 0xB4A SWAP3 SWAP2 ADD PUSH2 0x13B8 JUMP JUMPDEST SWAP1 DUP5 PUSH2 0x983 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x1EE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1EE JUMPI DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4F558E79 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP2 DUP4 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x574 JUMPI SWAP1 PUSH2 0xBAC SWAP2 DUP5 SWAP2 PUSH2 0xD88 JUMPI POP PUSH2 0xEDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7C90547 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE DUP3 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x574 JUMPI DUP4 SWAP2 PUSH2 0xD6E JUMPI JUMPDEST POP DUP1 MLOAD SWAP1 PUSH2 0xBE4 DUP3 PUSH2 0x133C JUMP JUMPDEST PUSH2 0xBED DUP4 PUSH2 0x136E JUMP JUMPDEST SWAP3 PUSH2 0xBF7 DUP2 PUSH2 0x136E JUMP JUMPDEST SWAP5 DUP7 JUMPDEST DUP3 DUP2 LT PUSH2 0xC5A JUMPI POP POP POP PUSH1 0x40 MLOAD SWAP5 PUSH1 0x80 DUP7 ADD PUSH1 0x80 DUP8 MSTORE DUP4 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x20 PUSH1 0xA0 DUP9 ADD SWAP5 ADD SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xC42 JUMPI DUP8 DUP1 PUSH2 0x886 DUP10 PUSH2 0x9F9 DUP11 PUSH2 0x9EB DUP12 DUP12 DUP8 DUP3 SUB PUSH1 0x20 DUP10 ADD MSTORE PUSH2 0xDCC JUMP JUMPDEST DUP3 MLOAD DUP10 AND DUP6 MSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xC1F JUMP JUMPDEST DUP9 PUSH2 0xC65 DUP3 DUP8 PUSH2 0x126B JUMP JUMPDEST MLOAD AND PUSH1 0x40 MLOAD PUSH4 0x5DBF1C2D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH2 0xC88 DUP6 PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD PUSH2 0x1323 JUMP JUMPDEST SUB DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xD63 JUMPI SWAP1 DUP11 SWAP2 DUP3 SWAP2 PUSH2 0xD28 JUMPI JUMPDEST POP SWAP2 PUSH2 0xCCC SWAP3 PUSH2 0xCAE DUP6 DUP10 PUSH2 0x126B JUMP JUMPDEST MSTORE PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0xEBCAB605 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD PUSH2 0x1323 JUMP JUMPDEST SUB DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0xD1D JUMPI SWAP1 PUSH2 0xCFC SWAP3 SWAP2 DUP11 SWAP2 DUP12 SWAP2 PUSH2 0xD01 JUMPI JUMPDEST POP PUSH2 0xCF1 DUP4 DUP12 PUSH2 0x126B JUMP JUMPDEST MSTORE PUSH2 0xAAD DUP3 DUP10 PUSH2 0x126B JUMP JUMPDEST PUSH2 0xBFA JUMP JUMPDEST SWAP1 POP PUSH2 0xD17 SWAP2 POP RETURNDATASIZE DUP1 DUP13 DUP4 RETURNDATACOPY PUSH2 0x8A3 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP13 PUSH2 0xCE6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xD5B JUMPI JUMPDEST DUP2 PUSH2 0xD44 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xD57 JUMPI MLOAD DUP10 SWAP1 PUSH2 0xCCC PUSH2 0xC9E JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xD82 SWAP2 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x566 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP5 PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0xDA1 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1E7 JUMPI PUSH2 0x1D9 DUP2 DUP4 PUSH2 0xEA0 JUMP JUMPDEST DUP6 PUSH2 0xC0 JUMP JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x77F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x77F JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xDEC JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xDDE JUMP JUMPDEST SWAP1 DUP1 DUP3 MLOAD SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 DUP2 DUP1 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0xE2E JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0xE4C PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0xDCC JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0xE1E JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xE77 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xE77 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0xE77 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x177 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x177 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xEE2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x105CDCD95D08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x177 JUMPI DUP3 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE77 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 SWAP2 PUSH2 0xF56 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND DUP5 ADD DUP6 PUSH2 0xEA0 JUMP JUMPDEST DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH2 0x177 JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xF7B JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xE77 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x177 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP3 DUP3 DUP3 SUB SLT PUSH2 0x177 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH2 0x177 JUMPI ADD SWAP2 PUSH2 0x1A0 SWAP4 DUP5 DUP5 DUP5 SUB SLT PUSH2 0x177 JUMPI PUSH1 0x40 SWAP3 DUP4 MLOAD SWAP6 DUP7 ADD DUP7 DUP2 LT DUP5 DUP3 GT OR PUSH2 0xE77 JUMPI DUP5 MSTORE DUP5 MLOAD DUP7 MSTORE DUP2 DUP6 ADD MLOAD DUP3 DUP8 ADD MSTORE DUP4 DUP6 ADD MLOAD DUP4 DUP2 GT PUSH2 0x177 JUMPI DUP2 PUSH2 0x101E SWAP2 DUP8 ADD PUSH2 0xF1E JUMP JUMPDEST DUP5 DUP8 ADD MSTORE PUSH1 0x60 DUP1 DUP7 ADD MLOAD DUP5 DUP2 GT PUSH2 0x177 JUMPI DUP3 PUSH2 0x103B SWAP2 DUP9 ADD PUSH2 0xF1E JUMP JUMPDEST DUP2 DUP9 ADD MSTORE PUSH1 0x80 DUP1 DUP8 ADD MLOAD DUP6 DUP2 GT PUSH2 0x177 JUMPI DUP4 PUSH2 0x1058 SWAP2 DUP10 ADD PUSH2 0xF1E JUMP JUMPDEST DUP2 DUP10 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 DUP9 ADD MLOAD DUP3 DUP11 ADD MSTORE PUSH1 0xC0 SWAP2 DUP3 DUP10 ADD MLOAD DUP4 DUP12 ADD MSTORE PUSH1 0xE0 DUP10 ADD MLOAD DUP8 DUP2 GT PUSH2 0x177 JUMPI DUP10 ADD SWAP3 DUP6 PUSH1 0x1F DUP6 ADD SLT ISZERO PUSH2 0x177 JUMPI DUP4 MLOAD SWAP3 PUSH2 0x1098 DUP5 PUSH2 0xF8E JUMP JUMPDEST SWAP6 PUSH2 0x10A5 DUP12 MLOAD SWAP8 DUP9 PUSH2 0xEA0 JUMP JUMPDEST DUP5 DUP8 MSTORE DUP9 DUP1 DUP9 ADD SWAP6 PUSH1 0x5 SHL DUP8 ADD ADD SWAP6 DUP9 DUP8 GT PUSH2 0x177 JUMPI DUP10 DUP2 ADD SWAP6 JUMPDEST DUP8 DUP8 LT PUSH2 0x11B5 JUMPI POP POP POP POP POP POP POP POP PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP1 DUP7 ADD MLOAD SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x177 JUMPI DUP8 ADD MSTORE PUSH2 0x120 PUSH2 0x10F6 DUP2 DUP8 ADD PUSH2 0xFA5 JUMP JUMPDEST SWAP1 DUP8 ADD MSTORE PUSH2 0x140 DUP1 DUP7 ADD MLOAD DUP5 DUP2 GT PUSH2 0x177 JUMPI DUP3 PUSH2 0x1114 SWAP2 DUP9 ADD PUSH2 0xF1E JUMP JUMPDEST SWAP1 DUP8 ADD MSTORE PUSH2 0x160 SWAP3 DUP4 DUP7 ADD MLOAD DUP2 DUP2 GT PUSH2 0x177 JUMPI DUP7 ADD SWAP1 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x177 JUMPI DUP2 MLOAD SWAP1 PUSH2 0x114D PUSH2 0x1144 DUP4 PUSH2 0xF8E JUMP JUMPDEST SWAP8 MLOAD SWAP8 DUP9 PUSH2 0xEA0 JUMP JUMPDEST DUP2 DUP8 MSTORE DUP5 DUP1 DUP9 ADD SWAP3 PUSH1 0x5 SHL DUP5 ADD ADD SWAP4 DUP1 DUP6 GT PUSH2 0x177 JUMPI DUP6 DUP5 ADD SWAP3 JUMPDEST DUP6 DUP5 LT PUSH2 0x1190 JUMPI POP POP POP POP POP POP POP DUP4 ADD MSTORE PUSH2 0x180 DUP1 SWAP2 ADD MLOAD SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x177 JUMPI DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP4 DUP2 GT PUSH2 0x177 JUMPI DUP8 SWAP2 PUSH2 0x11AA DUP5 DUP5 DUP1 SWAP5 DUP11 ADD ADD PUSH2 0xF1E JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP3 PUSH2 0x1168 JUMP JUMPDEST DUP7 MLOAD DUP13 DUP2 GT PUSH2 0x177 JUMPI DUP3 ADD DUP6 PUSH1 0x1F NOT DUP3 DUP14 SUB ADD SLT PUSH2 0x177 JUMPI DUP13 SWAP2 DUP15 MLOAD PUSH2 0x11DA DUP2 PUSH2 0xE5C JUMP JUMPDEST DUP14 DUP4 ADD MLOAD SWAP4 DUP5 GT PUSH2 0x177 JUMPI DUP16 DUP16 SWAP5 DUP16 DUP16 SWAP1 PUSH2 0x11F7 SWAP3 DUP8 ADD ADD PUSH2 0xF1E JUMP JUMPDEST DUP3 MSTORE DUP4 ADD MLOAD SWAP4 DUP5 GT PUSH2 0x177 JUMPI DUP16 DUP4 DUP16 SWAP6 SWAP2 DUP16 PUSH2 0x1219 SWAP1 DUP9 DUP14 SWAP6 DUP2 SWAP10 ADD ADD PUSH2 0xF1E JUMP JUMPDEST DUP7 DUP6 ADD MSTORE DUP9 DUP3 ADD MLOAD SWAP1 DUP5 ADD MSTORE DUP9 DUP2 ADD MLOAD DUP9 DUP5 ADD MSTORE DUP11 DUP2 ADD MLOAD DUP10 DUP5 ADD MSTORE ADD MLOAD DUP10 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP7 ADD SWAP6 PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1255 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x127F JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1255 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x177 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x177 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x177 JUMPI DUP3 MLOAD PUSH2 0x12D7 DUP2 PUSH2 0xF8E JUMP JUMPDEST SWAP4 PUSH2 0x12E5 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0xEA0 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x177 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x130C JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 DUP1 SWAP2 PUSH2 0x1318 DUP5 PUSH2 0xFA5 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x12FE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1346 DUP3 PUSH2 0xF8E JUMP JUMPDEST PUSH2 0x1353 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0xEA0 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1364 PUSH1 0x1F NOT SWAP2 PUSH2 0xF8E JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x1378 DUP3 PUSH2 0xF8E JUMP JUMPDEST PUSH2 0x1385 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0xEA0 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1396 PUSH1 0x1F NOT SWAP2 PUSH2 0xF8E JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x13A7 JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x139B JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x177 JUMPI DUP1 MLOAD SWAP2 PUSH2 0x13CF DUP4 PUSH2 0xF8E JUMP JUMPDEST SWAP3 PUSH2 0x13DD PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xEA0 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x177 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1407 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x13F9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH2 0x177 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 SWAP1 DUP5 DUP2 GT PUSH2 0x177 JUMPI DUP2 PUSH2 0x1442 SWAP2 DUP5 ADD PUSH2 0x13B8 JUMP JUMPDEST SWAP4 PUSH1 0x20 DUP4 ADD MLOAD SWAP1 DUP2 GT PUSH2 0x177 JUMPI PUSH2 0x1459 SWAP3 ADD PUSH2 0x13B8 JUMP JUMPDEST SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 LOG1 0xD8 0xBE SWAP8 ADDRESS 0xB5 0xE4 PUSH7 0x827830571E6EA7 DELEGATECALL SSTORE LOG3 0x5D 0xCA CALLCODE 0xDF SHL 0xEC 0xF7 SWAP3 SMOD PUSH22 0x6BB90364736F6C634300081300330000000000000000 ","sourceMap":"124:5433:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3278:27;;;124:5433;3278:27;;124:5433;3278:27;;124:5433;3278:27;;;;;;;;;;3270:60;3278:27;;;;;124:5433;3270:60;;:::i;:::-;124:5433;;-1:-1:-1;;;3361:29:29;;124:5433;3361:29;;124:5433;;;;3361:29;124:5433;;;3361:29;;;;;;;;;;;;124:5433;;;;;;;;;;;;;;3416:39;;124:5433;3416:39;;124:5433;3416:39;;;;;;;;;;;124:5433;3484:11;;;124:5433;3484:11;;124:5433;3484:27;;;:61;:27;;;3514;;;;:::i;:::-;3484:61;;124:5433;;;;;;;;;3484:61;;;;;;3416:39;;;;;;;;;;;;;;;;;:::i;:::-;;;124:5433;;;;;;;;;3416:39;;124:5433;;;;3416:39;;;;;;124:5433;;;;;;;;;;;3361:29;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;124:5433;;;;;;;;;3278:27;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;124:5433;;;;;-1:-1:-1;124:5433:29;;-1:-1:-1;;124:5433:29;;;;;;1344:15;124:5433;;;;;;-1:-1:-1;;;1417:27:29;;124:5433;;;1417:27;;;124:5433;-1:-1:-1;;;;;124:5433:29;;;;;;;;;1417:27;;;;;;1409:60;1417:27;;;;;1409:60;;:::i;:::-;124:5433;;-1:-1:-1;;;1509:29:29;;124:5433;;;1509:29;;;124:5433;;1509:29;124:5433;;;1509:29;;;;;;;;;;;;124:5433;1556:12;;;;124:5433;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1679:24;;1713:23;;1752:13;;1793:3;1771:13;;;;;124:5433;;1767:24;;;;;124:5433;1816:16;124:5433;;;1816:16;;:::i;:::-;;:30;124:5433;1816:47;1812:203;;1793:3;;;;:::i;:::-;1752:13;;1812:203;1892:13;;;;;;:16;:13;;;;;;:16;:::i;:::-;;124:5433;1747:278;124:5433;;;;2113:22;;124:5433;;;;;2113:37;124:5433;;;2213:22;124:5433;;;;;;;;;;;;;;;;;;2200:9;:49;124:5433;;;;2285:37;124:5433;;;;2285:37;:::i;:::-;124:5433;;;2332:75;;;;;124:5433;;;;;;;;;;;;;2332:75;;124:5433;;;2332:75;;124:5433;;;;;;;;;2332:75;;;;;;;;1747:278;-1:-1:-1;124:5433:29;;;;-1:-1:-1;;;;;124:5433:29;2417:57;;;;;124:5433;;;;;;;;;;;;;2417:57;;124:5433;;;2417:57;;124:5433;2452:10;124:5433;;;;2200:9;124:5433;;;;2417:57;;;;;;;;1747:278;2485:27;124:5433;;;;;;;;;;;;;;2551:38;;124:5433;;;2551:38;;124:5433;2551:38;;124:5433;2551:38;;;;;;;;;;;;;1747:278;2605:13;;2642:3;124:5433;;2620:20;;;;;2452:10;-1:-1:-1;;;;;2665:12:29;;;;:::i;:::-;124:5433;;2665:26;2661:109;;2642:3;;;:::i;:::-;2605:13;;2661:109;2711:21;;;;;124:5433;2600:180;2794:15;2790:90;;2600:180;-1:-1:-1;124:5433:29;;-1:-1:-1;;;;;124:5433:29;2890:81;;;;;124:5433;;;;;;;;;;;;;2890:81;;124:5433;;;2890:81;;124:5433;2452:10;124:5433;;;;;;;;;;;;;;;;2890:81;;;;;;;;2600:180;124:5433;;;;;;;2200:9;124:5433;;;;;;;;;2452:10;2987:143;124:5433;2452:10;2987:143;;124:5433;;2890:81;;;;:::i;:::-;124:5433;;2890:81;;;;;124:5433;;2790:90;2825:44;;;;;124:5433;;;;;;;;2825:44;;2452:10;;;2825:44;2452:10;124:5433;;;2825:44;;;:::i;:::-;;;;;;;;;;2790:90;2825:44;;;;:::i;:::-;124:5433;;2825:44;;2790:90;;2620:20;;;;;;;2551:38;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;124:5433;;;;;;;;;2417:57;;;;:::i;:::-;124:5433;;2417:57;;;;2332:75;;;;:::i;:::-;;;;;124:5433;;;;;;-1:-1:-1;;;124:5433:29;;;;;;;;;;;;-1:-1:-1;;;124:5433:29;;;;;;;;-1:-1:-1;;;124:5433:29;;;;;;;;;;;-1:-1:-1;;;124:5433:29;;;;;;;;;;;;-1:-1:-1;;;124:5433:29;;;;;;;;;;-1:-1:-1;;;124:5433:29;;;;;;;;;;;;;;;;;-1:-1:-1;;;124:5433:29;;;;;;;1767:24;;;;;;;;;;124:5433;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;124:5433:29;;;;;;;;1509:29;;;;;;;;;;;;;;:::i;:::-;;;;;;124:5433;;;;;;;;;1417:27;;;;124:5433;1417:27;124:5433;1417:27;;;;;;;:::i;124:5433::-;;;-1:-1:-1;;;124:5433:29;;;;;;;;;;;;;;;;;-1:-1:-1;;;124:5433:29;;;;;;;;;;;;;;;;;;-1:-1:-1;;124:5433:29;;;;;;;;;;-1:-1:-1;;;;;124:5433:29;;;;;;;;;;;;;;;;;5343:27;;;124:5433;5343:27;;124:5433;;5343:27;;;124:5433;5343:27;;;;;;;;;;5335:60;5343:27;;;;;5335:60;;:::i;:::-;124:5433;;-1:-1:-1;;;5415:50:29;;124:5433;5415:50;124:5433;;5415:50;;124:5433;;5415:50;;;:::i;:::-;;;;;;;;;;;;;;;124:5433;-1:-1:-1;124:5433:29;;-1:-1:-1;;;5499:48:29;;124:5433;;;;;;;;;;;;5499:48;;124:5433;5499:48;;;:::i;:::-;;;;;;;;;;;124:5433;5499:48;;;124:5433;5499:48;;;124:5433;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;5499:48;124:5433;5499:48;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;5415:50;;;;;;;;;;;;;;;;;:::i;:::-;;;124:5433;;;;;;5499:48;5415:50;;124:5433;;;;5415:50;;;;;5343:27;;;;;;;;;;;;;;:::i;:::-;;;;124:5433;;;;;;;;;;;;;221:25;124:5433;;;-1:-1:-1;;;;;124:5433:29;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;124:5433:29;;;;;;;;;;;;;;;;;;4555:39;;124:5433;4555:39;;124:5433;4555:39;;124:5433;4555:39;;;;;;;;;;;;;124:5433;;;;4670:30;;;;:::i;:::-;4716;;;;:::i;:::-;4763:32;;;;:::i;:::-;4816;;;;:::i;:::-;4860:13;;4875:19;;;;;;124:5433;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;4896:3::-;4929:22;;;;:::i;:::-;124:5433;;;;;;4974:50;;124:5433;;;4974:50;124:5433;;4974:50;124:5433;4974:50;;;:::i;:::-;;;;;;;;;;;;;;;4896:3;4961:63;;;;;:::i;:::-;124:5433;;;;;;5068:48;;124:5433;;;5068:48;124:5433;;5068:48;124:5433;5068:48;;;:::i;:::-;;;;;;;;;;;4896:3;5068:48;;;;124:5433;;5068:48;;;4896:3;5035:81;;;;;:::i;:::-;;;;;;:::i;:::-;;5127:21;;;;:::i;:::-;124:5433;4896:3;:::i;:::-;4860:13;;5068:48;;;;;;;;;;;;;;;:::i;:::-;;;;;124:5433;;;;;;;;;4974:50;;;;;;;;;;;;;;;;:::i;:::-;;;124:5433;;;;;4974:50;;;124:5433;;;;4974:50;;;;;4555:39;;;;;;;;;;;;;:::i;:::-;;;124:5433;;;;;;;;;;;-1:-1:-1;;;;;124:5433:29;;;;;;;;;:::i;:::-;4555:39;;;;124:5433;;;;;;;;;;;-1:-1:-1;;124:5433:29;;;;;;;;-1:-1:-1;;;3752:27:29;;124:5433;;;3752:27;;;124:5433;-1:-1:-1;;;;;124:5433:29;;;;;;;;;;3752:27;;;;;;;;3744:60;3752:27;;;;;3744:60;;:::i;:::-;124:5433;;-1:-1:-1;;;3823:38:29;;124:5433;;;3823:38;;;124:5433;3823:38;124:5433;;;3823:38;;;;;;;;;;;;124:5433;;;;3928:28;;;;:::i;:::-;3973:30;;;:::i;:::-;4024;;;;:::i;:::-;4066:13;;4081:17;;;;;;124:5433;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;4100:3;4134:12;;;;;:::i;:::-;124:5433;;;;;;;4169:50;;124:5433;;;4169:50;124:5433;;;;4169:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;4100:3;4156:63;;4263:48;4156:63;;;;;:::i;:::-;124:5433;;;;;;;;;;4263:48;;124:5433;;;4263:48;;;:::i;:::-;;;;;;;;;;;4100:3;4263:48;;;124:5433;;4263:48;;;4100:3;4230:81;;;;;:::i;:::-;;;;;;:::i;4100:3::-;4066:13;;4263:48;;;;;;;;;;;;;;;:::i;:::-;;;;;124:5433;;;;;;;;;4169:50;;;;124:5433;4169:50;;124:5433;4169:50;;;;;;124:5433;4169:50;;;:::i;:::-;;;124:5433;;;;;;;4263:48;4169:50;;124:5433;;;;4169:50;;;-1:-1:-1;4169:50:29;;;124:5433;;;;;;;;;3823:38;;;;;;;;;;;;;:::i;:::-;;;;3752:27;;;;124:5433;3752:27;124:5433;3752:27;;;;;;;:::i;:::-;;;;124:5433;;;;;;;;;;;;;;;;-1:-1:-1;;;;;124:5433:29;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;124:5433:29;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;124:5433:29;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;124:5433:29;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;124:5433:29;;;;;;:::o;:::-;;;;;-1:-1:-1;;124:5433:29;;;;-1:-1:-1;;;;;124:5433:29;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;124:5433:29;;;;;;;;;;;;-1:-1:-1;;;124:5433:29;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;124:5433:29;;;;;;;;;;;;;-1:-1:-1;;124:5433:29;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;124:5433:29;;;;;;;;-1:-1:-1;124:5433:29;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;124:5433:29;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;124:5433:29;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;124:5433:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;124:5433:29;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;124:5433:29;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;124:5433:29;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;124:5433:29;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;124:5433:29;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1053200","executionCost":"infinite","totalCost":"infinite"},"external":{"Reward_tokens()":"2283","getInvestmentDetails(uint256)":"infinite","getInvestmentHistory(uint256)":"infinite","getInvestmentsByAddress(address)":"infinite","getInvestmentsByAddressInAsset(uint256,address)":"infinite","investAsset(uint256,uint256,uint256)":"infinite","supervisor()":"2360"}},"methodIdentifiers":{"Reward_tokens()":"09b3da2b","getInvestmentDetails(uint256)":"ce7f35b4","getInvestmentHistory(uint256)":"16bd19d4","getInvestmentsByAddress(address)":"1e011b3e","getInvestmentsByAddressInAsset(uint256,address)":"af330623","investAsset(uint256,uint256,uint256)":"bc4040d2","supervisor()":"56e4b68b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reward_tokens\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"LogInvestment\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Reward_tokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"getInvestmentDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalInvested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingFunding\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"getInvestmentHistory\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"investors\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"tokenIds\",\"type\":\"uint256[][]\"},{\"internalType\":\"uint256[][]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"getInvestmentsByAddress\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"assetIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"tokenIds\",\"type\":\"uint256[][]\"},{\"internalType\":\"uint256[][]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"getInvestmentsByAddressInAsset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"investAsset\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supervisor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Investments.sol\":\"Investments\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor () {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xab1f67e4c96dfe0e3875d22883c3dee5411914f40ce0c54ef407f030d803512e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"./extensions/IERC721Enumerable.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping (uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping (address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping (uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IERC721).interfaceId\\n            || interfaceId == type(IERC721Metadata).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: balance query for the zero address\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0\\n            ? string(abi.encodePacked(baseURI, tokenId.toString()))\\n            : '';\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\\n     * in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(_msgSender() == owner || ERC721.isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"ERC721: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        require(operator != _msgSender(), \\\"ERC721: approve to caller\\\");\\n\\n        _operatorApprovals[_msgSender()][operator] = approved;\\n        emit ApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"ERC721: operator query for nonexistent token\\\");\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || ERC721.isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {\\n        _mint(to, tokenId);\\n        require(_checkOnERC721Received(address(0), to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer of token that is not own\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\\n        private returns (bool)\\n    {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver(to).onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    // solhint-disable-next-line no-inline-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual { }\\n}\\n\",\"keccak256\":\"0x8d1cabca557cb77d97d801d674f0dacc33659e1430cdd34f91ae5d033fc3d93f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @title ERC721 Burnable Token\\n * @dev ERC721 Token that can be irreversibly burned (destroyed).\\n */\\nabstract contract ERC721Burnable is Context, ERC721 {\\n    /**\\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own `tokenId` or be an approved operator.\\n     */\\n    function burn(uint256 tokenId) public virtual {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721Burnable: caller is not owner nor approved\\\");\\n        _burn(tokenId);\\n    }\\n}\\n\",\"keccak256\":\"0x7481c284b0ff5983d3f1784f0ceae1ec397f8c8938bc60552b19889cc057aee8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"./IERC721Enumerable.sol\\\";\\n\\n/**\\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\\n * enumerability of all the token ids in the contract as well as all token ids owned by each\\n * account.\\n */\\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\\n    // Mapping from owner to list of owned token IDs\\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\\n\\n    // Mapping from token ID to index of the owner tokens list\\n    mapping(uint256 => uint256) private _ownedTokensIndex;\\n\\n    // Array with all token ids, used for enumeration\\n    uint256[] private _allTokens;\\n\\n    // Mapping from token id to position in the allTokens array\\n    mapping(uint256 => uint256) private _allTokensIndex;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\\n        return interfaceId == type(IERC721Enumerable).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721.balanceOf(owner), \\\"ERC721Enumerable: owner index out of bounds\\\");\\n        return _ownedTokens[owner][index];\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _allTokens.length;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenByIndex}.\\n     */\\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721Enumerable.totalSupply(), \\\"ERC721Enumerable: global index out of bounds\\\");\\n        return _allTokens[index];\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual override {\\n        super._beforeTokenTransfer(from, to, tokenId);\\n\\n        if (from == address(0)) {\\n            _addTokenToAllTokensEnumeration(tokenId);\\n        } else if (from != to) {\\n            _removeTokenFromOwnerEnumeration(from, tokenId);\\n        }\\n        if (to == address(0)) {\\n            _removeTokenFromAllTokensEnumeration(tokenId);\\n        } else if (to != from) {\\n            _addTokenToOwnerEnumeration(to, tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\\n     * @param to address representing the new owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\\n     */\\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\\n        uint256 length = ERC721.balanceOf(to);\\n        _ownedTokens[to][length] = tokenId;\\n        _ownedTokensIndex[tokenId] = length;\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's token tracking data structures.\\n     * @param tokenId uint256 ID of the token to be added to the tokens list\\n     */\\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\\n        _allTokensIndex[tokenId] = _allTokens.length;\\n        _allTokens.push(tokenId);\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\\n     * @param from address representing the previous owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\\n     */\\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary\\n        if (tokenIndex != lastTokenIndex) {\\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\\n\\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n        }\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _ownedTokensIndex[tokenId];\\n        delete _ownedTokens[from][lastTokenIndex];\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's token tracking data structures.\\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\\n     */\\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = _allTokens.length - 1;\\n        uint256 tokenIndex = _allTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\\n\\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _allTokensIndex[tokenId];\\n        _allTokens.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x3dce5847e70c056ef0f7cf91cb9a0067cf90784794017a45c1211cde7ed1c08c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping (uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI query for nonexistent token\\\");\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd03f5c3d258a9b0f751a3246e0802106585561ab5909b808368759364fc786f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xccb7e6475afcb1c5cb13b3fbf1329c10b93620a9b66393388066683915271a78\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant alphabet = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = alphabet[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n}\\n\",\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/AssetStruct.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <=0.8.19;\\n\\nenum ProjectStatus {\\n    Started,\\n    Funded,\\n    Failed,\\n    Completed\\n}\\n\\nenum Category {\\n    Technology,\\n    Gaming,\\n    Music,\\n    Movies,\\n    Art\\n}\\n\\nstruct Reward {\\n    string title;\\n    string description;\\n    uint256 tokenAmount;\\n    uint256 individualPrice;\\n    uint256 availableTokens;\\n    uint256 rewardTokenId;\\n}\\n\\nstruct NewReward {\\n    string tokenURI;\\n    string title;\\n    string description;\\n    uint256 tokenAmount;\\n    uint256 individualPrice;\\n}\\n\\nstruct Asset {\\n    uint256 assetId;\\n    uint256 price;\\n    string author;\\n    string title;\\n    string description;\\n    uint256 projectStartDate;\\n    uint256 projectEndDate;\\n    Reward[] rewards;\\n    ProjectStatus status;\\n    address rewardTokenAddress;\\n    string mainPhoto;\\n    string[] secondaryPhotos;\\n    Category category;\\n}\\n\",\"keccak256\":\"0x2ffc38b9e3b4154b2c7ededb682535a9fd6dfb1419217873d7ff8c3dcbe3e9b4\",\"license\":\"MIT\"},\"contracts/Investments.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <=0.8.19;\\n\\nimport \\\"./NFTVenture.sol\\\";\\nimport \\\"./AssetStruct.sol\\\";\\n\\n\\ncontract Investments {\\n    NFTVenture private nftContract;\\n    address public Reward_tokens;\\n    address public supervisor;\\n\\n    // Eventos\\n    event LogInvestment(\\n        address indexed investor,\\n        uint256 indexed assetId,\\n        uint256 indexed tokenId,\\n        uint256 tokenAmount,\\n        uint256 value\\n    );\\n\\n\\n    // Constructor\\n    constructor(address nftAddress, address reward_tokens) {\\n        nftContract = NFTVenture(nftAddress);\\n        supervisor = msg.sender;\\n        Reward_tokens = reward_tokens;\\n    }\\n\\n    modifier onlySupervisor() {\\n        require(\\n            msg.sender == supervisor,\\n            \\\"Only supervisor can call this function\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier onlyAssetOwner(uint256 assetId) {\\n        require(\\n            nftContract.ownerOf(assetId) == msg.sender,\\n            \\\"Caller is not the owner of the asset\\\"\\n        );\\n        _;\\n    }\\n\\n\\n    ////////////////////////////////////////////////////////////////////////////////\\n    // Functions Investments //\\n    ////////////////////////////////////////////////////////////////////////////////\\n\\n\\n function investAsset(uint256 assetId, uint256 rewardTokenId, uint256 tokenAmount) public payable {\\n        require(tokenAmount > 0, \\\"Token amount must be greater than 0\\\");\\n        require(nftContract.exists(assetId), \\\"Asset does not exist\\\");\\n        \\n        Asset memory asset = nftContract.getAsset(assetId);\\n        require(asset.status == ProjectStatus.Started, \\\"Project is not in Started status\\\");\\n        \\n        Reward memory reward;\\n        bool rewardFound = false;\\n        uint256 rewardIndex = 0;\\n\\n        for (uint256 i = 0; i < asset.rewards.length; i++) {\\n            if (asset.rewards[i].rewardTokenId == rewardTokenId) {\\n                reward = asset.rewards[i];\\n                rewardFound = true;\\n                rewardIndex = i;\\n                break;\\n            }\\n        }\\n\\n        require(rewardFound, \\\"Reward does not exist for this asset\\\");\\n        require(reward.availableTokens >= tokenAmount, \\\"Not enough available tokens\\\");\\n        require(msg.value == reward.individualPrice * tokenAmount, \\\"Incorrect value sent\\\");\\n\\n        reward.availableTokens -= tokenAmount;\\n        nftContract.updateAssetReward(assetId, rewardIndex, reward.availableTokens);\\n        nftContract.addInvestment(assetId, msg.sender, msg.value);\\n\\n        bool investorExists = false;\\n        address[] memory investors = nftContract.getAssetInvestors(assetId);\\n\\n        for (uint256 i = 0; i < investors.length; i++) {\\n            if (investors[i] == msg.sender) {\\n                investorExists = true;\\n                break;\\n            }\\n        }\\n\\n        if (!investorExists) {\\n            nftContract.addInvestor(assetId, msg.sender);\\n        }\\n\\n        nftContract.updateInvestorTokens(assetId, msg.sender, rewardTokenId, tokenAmount);\\n\\n        emit LogInvestment(\\n            msg.sender,\\n            assetId,\\n            rewardTokenId,\\n            tokenAmount,\\n            msg.value\\n        );\\n    }\\n\\n    function getInvestmentDetails(uint256 assetId) public view returns (uint256 totalInvested, uint256 remainingFunding) {\\n        require(nftContract.exists(assetId), \\\"Asset does not exist\\\");\\n        Asset memory asset = nftContract.getAsset(assetId);\\n        totalInvested = nftContract.investmentReceived(assetId);\\n        remainingFunding = asset.price > totalInvested ? asset.price - totalInvested : 0;\\n    }\\n\\nfunction getInvestmentHistory(uint256 assetId) public view returns (address[] memory investors, uint256[] memory amounts, uint256[][] memory tokenIds, uint256[][] memory tokenAmounts) {\\n    require(nftContract.exists(assetId), \\\"Asset does not exist\\\");\\n\\n    investors = nftContract.getAssetInvestors(assetId);\\n    uint256 investorCount = investors.length;\\n    \\n    amounts = new uint256[](investorCount);\\n    tokenIds = new uint256[][](investorCount);\\n    tokenAmounts = new uint256[][](investorCount);\\n\\n    for (uint256 i = 0; i < investorCount; i++) {\\n        address investor = investors[i];\\n        amounts[i] = nftContract.getInvestmentAmount(assetId, investor); \\n        (tokenIds[i], tokenAmounts[i]) = nftContract.getInvestorTokens(assetId, investor);\\n    }\\n}\\n\\n\\nfunction getInvestmentsByAddress(address investor) public view returns (uint256[] memory assetIds, uint256[] memory amounts, uint256[][] memory tokenIds, uint256[][] memory tokenAmounts) {\\n    uint256[] memory investorInvestments = nftContract.getInvestorAssets(investor);\\n    uint256 investmentCount = investorInvestments.length;\\n\\n    assetIds = new uint256[](investmentCount);\\n    amounts = new uint256[](investmentCount);\\n    tokenIds = new uint256[][](investmentCount);\\n    tokenAmounts = new uint256[][](investmentCount);\\n\\n    for (uint256 i = 0; i < investmentCount; i++) {\\n        uint256 assetId = investorInvestments[i];\\n        amounts[i] = nftContract.getInvestmentAmount(assetId, investor); \\n        (tokenIds[i], tokenAmounts[i]) = nftContract.getInvestorTokens(assetId, investor); \\n        assetIds[i] = assetId;\\n    }\\n}\\n\\nfunction getInvestmentsByAddressInAsset(uint256 assetId, address investor) public view returns (uint256 amount, uint256[] memory tokenIds, uint256[] memory tokenAmounts) {\\n    require(nftContract.exists(assetId), \\\"Asset does not exist\\\");\\n    \\n    amount = nftContract.getInvestmentAmount(assetId, investor); \\n    (tokenIds, tokenAmounts) = nftContract.getInvestorTokens(assetId, investor); \\n\\n}\\n\\n\\n\\n}\",\"keccak256\":\"0x9151d2bf56bed22f6a442709670722a515158df3ae040bfe7d3b2133ee1283ec\",\"license\":\"MIT\"},\"contracts/NFTVenture.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <=0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\\\";\\nimport \\\"./AssetStruct.sol\\\";\\n\\ncontract NFTVenture is\\n    ERC721,\\n    ERC721Enumerable,\\n    ERC721URIStorage,\\n    Pausable,\\n    Ownable,\\n    ERC721Burnable\\n{\\n    // Assets\\n    uint256 public assetsCount;\\n    mapping(uint256 => Asset) public assetMap;\\n    mapping(uint256 => bool) public assetExists;\\n\\n    mapping(address => uint256[]) public ownerToAssets;\\n\\n    mapping(uint256 => address) public assetApprovals;\\n    mapping(uint256 => address) public assetOwner;\\n    mapping(address => uint256) public ownedAssetsCount;\\n\\n    // State-based Asset IDs\\n    uint256[] public activeAssets;\\n    uint256[] public fundedAssets;\\n    uint256[] public failedAssets;\\n    uint256[] public completedAssets;\\n\\n    // Category-based Asset IDs\\n    mapping(Category => uint256[]) public categoryAssets;\\n\\n    // Investments\\n    mapping(uint256 => mapping(address => uint256)) public investmentAmountOf;\\n    mapping(uint256 => uint256) public investmentReceived;\\n    mapping(uint256 => address[]) public assetInvestors;\\n    mapping(uint256 => bool) public isTransferAllowed;\\n    mapping(uint256 => bool) public isRefundingAllowed;\\n    mapping(uint256 => uint256) public investmentRefunded;\\n    mapping(uint256 => mapping(address => uint256)) public pendingReturns;\\n    mapping(uint256 => mapping(address => mapping(uint256 => uint256)))\\n        public investorTokens;\\n    mapping(uint256 => uint256) public totalInvestors;\\n    mapping(uint256 => uint256) public totalInvestment;\\n    mapping(address => uint256[]) public investorAssets;\\n\\n    // Constructor\\n    constructor() ERC721(\\\"FractionalCTV\\\", \\\"FCTV\\\") {}\\n\\n    function pause() public onlyOwner {\\n        _pause();\\n    }\\n\\n    function unpause() public onlyOwner {\\n        _unpause();\\n    }\\n\\n    function _baseURI() internal pure override returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    function transfer(\\n        address recipient,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal override(ERC721, ERC721Enumerable) whenNotPaused {\\n        super._beforeTokenTransfer(from, to, tokenId);\\n    }\\n\\n    function _burn(\\n        uint256 tokenId\\n    ) internal override(ERC721, ERC721URIStorage) {\\n        super._burn(tokenId);\\n    }\\n\\n    function tokenURI(\\n        uint256 tokenId\\n    ) public view override(ERC721, ERC721URIStorage) returns (string memory) {\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    function supportsInterface(\\n        bytes4 interfaceId\\n    ) public view override(ERC721, ERC721Enumerable) returns (bool) {\\n        return super.supportsInterface(interfaceId);\\n    }\\n\\n    modifier isNFTOwner(uint256 assetId) {\\n        require(msg.sender == ownerOf(assetId));\\n        _;\\n    }\\n\\n    function balanceOf() public view returns (uint256) {\\n        require(\\n            msg.sender != address(0),\\n            \\\"ERC721: balance query for the zero address\\\"\\n        );\\n        return ownedAssetsCount[msg.sender];\\n    }\\n\\n    function ownerOf(\\n        uint256 assetId\\n    ) public view override(ERC721, IERC721) returns (address) {\\n        address owner = assetOwner[assetId];\\n        require(owner != address(0), \\\"NoAssetExists\\\");\\n        return owner;\\n    }\\n\\n    function approve(\\n        address to,\\n        uint256 assetId\\n    ) public override(ERC721, IERC721) {\\n        address owner = ownerOf(assetId);\\n        require(to != owner, \\\"CurrentOwnerApproval\\\");\\n        require(msg.sender == owner, \\\"NotTheAssetOwner\\\");\\n        assetApprovals[assetId] = to;\\n        emit Approval(owner, to, assetId);\\n    }\\n\\n    function getApproved(\\n        uint256 assetId\\n    ) public view override(ERC721, IERC721) returns (address) {\\n        require(\\n            _exists(assetId),\\n            \\\"ERC721: approved query for nonexistent token\\\"\\n        );\\n        return assetApprovals[assetId];\\n    }\\n\\n    function clearApproval(uint256 assetId, address approved) public {\\n        if (assetApprovals[assetId] == approved) {\\n            assetApprovals[assetId] = address(0);\\n        }\\n    }\\n\\n    function mint(address to, uint256 assetId, string memory asseturi) public {\\n        require(to != address(0), \\\"ZeroAddressMiniting\\\");\\n        _safeMint(to, assetId);\\n        _setTokenURI(assetId, asseturi);\\n        emit Transfer(address(0), to, assetId);\\n    }\\n\\n    function exists(uint256 assetId) public view returns (bool) {\\n        return assetExists[assetId];\\n    }\\n\\n    function isApprovedOrOwner(\\n        address spender,\\n        uint256 assetId\\n    ) external view returns (bool) {\\n        require(\\n            exists(assetId),\\n            \\\"ERC721: operator query for nonexistent token\\\"\\n        );\\n        address owner = ownerOf(assetId);\\n        return (spender == owner || getApproved(assetId) == spender);\\n    }\\n\\n    function _addAsset(\\n        uint256 assetId,\\n        Asset memory asset,\\n        address to\\n    ) external {\\n        assetMap[assetId] = asset;\\n        assetOwner[assetId] = to;\\n        ownedAssetsCount[to]++;\\n        ownerToAssets[to].push(assetId);\\n        assetExists[assetId] = true;\\n        activeAssets.push(assetId);\\n        categoryAssets[asset.category].push(assetId);\\n    }\\n\\n    function getAsset(uint256 assetId) public view returns (Asset memory) {\\n        return assetMap[assetId];\\n    }\\n\\n    function updateAsset(uint256 assetId, Asset memory asset) public {\\n        assetMap[assetId] = asset;\\n    }\\n\\n    function getAssetsCount() public view returns (uint256) {\\n        return assetsCount;\\n    }\\n\\n    function incrementAssetsCount() public {\\n        assetsCount++;\\n    }\\n\\n    function getAssetsOfOwner(\\n        address owner\\n    ) public view returns (uint256[] memory) {\\n        return ownerToAssets[owner];\\n    }\\n\\n    function updateAssetReward(\\n        uint256 assetId,\\n        uint256 rewardIndex,\\n        uint256 newAvailableTokens\\n    ) external {\\n        require(\\n            rewardIndex < assetMap[assetId].rewards.length,\\n            \\\"Invalid reward index\\\"\\n        );\\n        assetMap[assetId]\\n            .rewards[rewardIndex]\\n            .availableTokens = newAvailableTokens;\\n    }\\n\\n    function handleRewardAddedToAsset(\\n        uint256 assetId,\\n        string memory title,\\n        string memory description,\\n        uint256 tokenAmount,\\n        uint256 individualPrice,\\n        bytes32 rewardId\\n    ) external {\\n        Asset storage asset = assetMap[assetId];\\n        asset.rewards.push(\\n            Reward({\\n                title: title,\\n                description: description,\\n                tokenAmount: tokenAmount,\\n                individualPrice: individualPrice,\\n                availableTokens: tokenAmount,\\n                rewardTokenId: uint256(rewardId)\\n            })\\n        );\\n    }\\n\\n    function updateRewardTokenAddress(\\n        uint256 assetId,\\n        address rewardTokenAddress\\n    ) external {\\n        assetMap[assetId].rewardTokenAddress = rewardTokenAddress;\\n    }\\n\\n    function addInvestment(\\n        uint256 assetId,\\n        address investor,\\n        uint256 amount\\n    ) external {\\n        investmentAmountOf[assetId][investor] += amount;\\n        investmentReceived[assetId] += amount;\\n        totalInvestment[assetId] += amount;\\n        if (investmentAmountOf[assetId][investor] == amount) {\\n            assetInvestors[assetId].push(investor);\\n            investorAssets[investor].push(assetId);\\n\\n            totalInvestors[assetId]++;\\n        }\\n    }\\n\\n    function getTotalInvestment(\\n        uint256 assetId\\n    ) external view returns (uint256) {\\n        return totalInvestment[assetId];\\n    }\\n\\n    function getTotalInvestors(\\n        uint256 assetId\\n    ) external view returns (uint256) {\\n        return totalInvestors[assetId];\\n    }\\n\\n    function addInvestor(uint256 assetId, address investor) external {\\n        assetInvestors[assetId].push(investor);\\n        investorAssets[investor].push(assetId);\\n    }\\n\\n    function getAssetInvestors(\\n        uint256 assetId\\n    ) external view returns (address[] memory) {\\n        return assetInvestors[assetId];\\n    }\\n\\n    function getInvestorAssets(\\n        address investor\\n    ) external view returns (uint256[] memory) {\\n        return investorAssets[investor];\\n    }\\n    function getInvestorTokens(\\n        uint256 assetId,\\n        address investor\\n    ) public view returns (uint256[] memory, uint256[] memory) {\\n        Asset memory asset = assetMap[assetId];\\n        uint256 rewardCount = asset.rewards.length;\\n\\n        uint256[] memory tokenIds = new uint256[](rewardCount);\\n        uint256[] memory tokenAmounts = new uint256[](rewardCount);\\n\\n        for (uint256 i = 0; i < rewardCount; i++) {\\n            uint256 tokenId = asset.rewards[i].rewardTokenId;\\n            tokenIds[i] = tokenId;\\n            tokenAmounts[i] = investorTokens[assetId][investor][tokenId];\\n        }\\n\\n        return (tokenIds, tokenAmounts);\\n    }\\n\\n    function getInvestmentAmount(\\n        uint256 assetId,\\n        address investor\\n    ) public view returns (uint256) {\\n        return investmentAmountOf[assetId][investor];\\n    }\\n\\n    function updateInvestorTokens(\\n        uint256 assetId,\\n        address investor,\\n        uint256 tokenId,\\n        uint256 tokenAmount\\n    ) external {\\n        investorTokens[assetId][investor][tokenId] = tokenAmount;\\n    }\\n\\n    function allowTransfers(uint256 assetId, bool allowed) external {\\n        isTransferAllowed[assetId] = allowed;\\n    }\\n\\n    function allowRefunding(uint256 assetId, bool allowed) external {\\n        isRefundingAllowed[assetId] = allowed;\\n    }\\n\\n    function updatePendingReturns(\\n        uint256 assetId,\\n        address investor,\\n        uint256 amount\\n    ) external {\\n        pendingReturns[assetId][investor] = amount;\\n    }\\n\\n    function updateInvestmentRefunded(\\n        uint256 assetId,\\n        uint256 amount\\n    ) external {\\n        investmentRefunded[assetId] = amount;\\n    }\\n\\n    function getActiveAssets() external view returns (uint256[] memory) {\\n        return activeAssets;\\n    }\\n\\n    function getFundedAssets() external view returns (uint256[] memory) {\\n        return fundedAssets;\\n    }\\n\\n    function getFailedAssets() external view returns (uint256[] memory) {\\n        return failedAssets;\\n    }\\n\\n    function getCompletedAssets() external view returns (uint256[] memory) {\\n        return completedAssets;\\n    }\\n\\n    function getAssetsByCategory(\\n        Category category\\n    ) external view returns (uint256[] memory) {\\n        return categoryAssets[category];\\n    }\\n}\\n\",\"keccak256\":\"0xfe8b84cc7cf611042e781969058a556bbdef20e9d3d6073a89df555c628fffc7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":5505,"contract":"contracts/Investments.sol:Investments","label":"nftContract","offset":0,"slot":"0","type":"t_contract(NFTVenture)7155"},{"astId":5507,"contract":"contracts/Investments.sol:Investments","label":"Reward_tokens","offset":0,"slot":"1","type":"t_address"},{"astId":5509,"contract":"contracts/Investments.sol:Investments","label":"supervisor","offset":0,"slot":"2","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(NFTVenture)7155":{"encoding":"inplace","label":"contract NFTVenture","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/NFTVenture.sol":{"NFTVenture":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"components":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"author","type":"string"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"projectStartDate","type":"uint256"},{"internalType":"uint256","name":"projectEndDate","type":"uint256"},{"components":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"internalType":"uint256","name":"individualPrice","type":"uint256"},{"internalType":"uint256","name":"availableTokens","type":"uint256"},{"internalType":"uint256","name":"rewardTokenId","type":"uint256"}],"internalType":"struct Reward[]","name":"rewards","type":"tuple[]"},{"internalType":"enum ProjectStatus","name":"status","type":"uint8"},{"internalType":"address","name":"rewardTokenAddress","type":"address"},{"internalType":"string","name":"mainPhoto","type":"string"},{"internalType":"string[]","name":"secondaryPhotos","type":"string[]"},{"internalType":"enum Category","name":"category","type":"uint8"}],"internalType":"struct Asset","name":"asset","type":"tuple"},{"internalType":"address","name":"to","type":"address"}],"name":"_addAsset","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"activeAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"address","name":"investor","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"addInvestment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"address","name":"investor","type":"address"}],"name":"addInvestor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"bool","name":"allowed","type":"bool"}],"name":"allowRefunding","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"bool","name":"allowed","type":"bool"}],"name":"allowTransfers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"assetId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"assetApprovals","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"assetExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"assetInvestors","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"assetMap","outputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"author","type":"string"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"projectStartDate","type":"uint256"},{"internalType":"uint256","name":"projectEndDate","type":"uint256"},{"internalType":"enum ProjectStatus","name":"status","type":"uint8"},{"internalType":"address","name":"rewardTokenAddress","type":"address"},{"internalType":"string","name":"mainPhoto","type":"string"},{"internalType":"enum Category","name":"category","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"assetOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"assetsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum Category","name":"","type":"uint8"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"categoryAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"address","name":"approved","type":"address"}],"name":"clearApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"completedAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"failedAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"fundedAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getActiveAssets","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"}],"name":"getAsset","outputs":[{"components":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"author","type":"string"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"projectStartDate","type":"uint256"},{"internalType":"uint256","name":"projectEndDate","type":"uint256"},{"components":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"internalType":"uint256","name":"individualPrice","type":"uint256"},{"internalType":"uint256","name":"availableTokens","type":"uint256"},{"internalType":"uint256","name":"rewardTokenId","type":"uint256"}],"internalType":"struct Reward[]","name":"rewards","type":"tuple[]"},{"internalType":"enum ProjectStatus","name":"status","type":"uint8"},{"internalType":"address","name":"rewardTokenAddress","type":"address"},{"internalType":"string","name":"mainPhoto","type":"string"},{"internalType":"string[]","name":"secondaryPhotos","type":"string[]"},{"internalType":"enum Category","name":"category","type":"uint8"}],"internalType":"struct Asset","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"}],"name":"getAssetInvestors","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum Category","name":"category","type":"uint8"}],"name":"getAssetsByCategory","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAssetsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"getAssetsOfOwner","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCompletedAssets","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFailedAssets","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFundedAssets","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"address","name":"investor","type":"address"}],"name":"getInvestmentAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"investor","type":"address"}],"name":"getInvestorAssets","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"address","name":"investor","type":"address"}],"name":"getInvestorTokens","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"}],"name":"getTotalInvestment","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"}],"name":"getTotalInvestors","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"internalType":"uint256","name":"individualPrice","type":"uint256"},{"internalType":"bytes32","name":"rewardId","type":"bytes32"}],"name":"handleRewardAddedToAsset","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"incrementAssetsCount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"investmentAmountOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"investmentReceived","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"investmentRefunded","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"investorAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"investorTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"assetId","type":"uint256"}],"name":"isApprovedOrOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"isRefundingAllowed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"isTransferAllowed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"string","name":"asseturi","type":"string"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"ownedAssetsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"ownerToAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"pendingReturns","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"totalInvestment","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"totalInvestors","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"components":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"string","name":"author","type":"string"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"projectStartDate","type":"uint256"},{"internalType":"uint256","name":"projectEndDate","type":"uint256"},{"components":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"internalType":"uint256","name":"individualPrice","type":"uint256"},{"internalType":"uint256","name":"availableTokens","type":"uint256"},{"internalType":"uint256","name":"rewardTokenId","type":"uint256"}],"internalType":"struct Reward[]","name":"rewards","type":"tuple[]"},{"internalType":"enum ProjectStatus","name":"status","type":"uint8"},{"internalType":"address","name":"rewardTokenAddress","type":"address"},{"internalType":"string","name":"mainPhoto","type":"string"},{"internalType":"string[]","name":"secondaryPhotos","type":"string[]"},{"internalType":"enum Category","name":"category","type":"uint8"}],"internalType":"struct Asset","name":"asset","type":"tuple"}],"name":"updateAsset","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"rewardIndex","type":"uint256"},{"internalType":"uint256","name":"newAvailableTokens","type":"uint256"}],"name":"updateAssetReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"updateInvestmentRefunded","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"address","name":"investor","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"updateInvestorTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"address","name":"investor","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"updatePendingReturns","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"address","name":"rewardTokenAddress","type":"address"}],"name":"updateRewardTokenAddress","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"burn(uint256)":{"details":"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenByIndex(uint256)":{"details":"See {IERC721Enumerable-tokenByIndex}."},"tokenOfOwnerByIndex(address,uint256)":{"details":"See {IERC721Enumerable-tokenOfOwnerByIndex}."},"totalSupply()":{"details":"See {IERC721Enumerable-totalSupply}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 CALLVALUE PUSH3 0x35F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 PUSH1 0x40 DUP2 DUP2 ADD DUP4 DUP2 GT DUP4 DUP3 LT OR PUSH3 0x349 JUMPI DUP2 MSTORE PUSH1 0xD DUP3 MSTORE PUSH1 0x20 SWAP2 PUSH13 0x233930B1BA34B7B730B621AA2B PUSH1 0x99 SHL DUP4 DUP3 ADD MSTORE DUP2 MLOAD SWAP4 DUP3 DUP6 ADD DUP6 DUP2 LT DUP3 DUP3 GT OR PUSH3 0x349 JUMPI DUP4 MSTORE PUSH1 0x4 DUP6 MSTORE PUSH4 0x2321AA2B PUSH1 0xE1 SHL DUP5 DUP7 ADD MSTORE DUP2 MLOAD DUP2 DUP2 GT PUSH3 0x349 JUMPI PUSH1 0x0 SWAP5 DUP6 SLOAD SWAP2 PUSH1 0x1 SWAP5 DUP6 DUP5 DUP2 SHR SWAP5 AND DUP1 ISZERO PUSH3 0x33E JUMPI JUMPDEST DUP4 DUP6 LT EQ PUSH3 0x32A JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP5 DUP6 DUP2 GT PUSH3 0x2D7 JUMPI JUMPDEST POP DUP4 SWAP1 DUP6 DUP4 GT PUSH1 0x1 EQ PUSH3 0x273 JUMPI DUP10 SWAP3 PUSH3 0x267 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP6 SHL OR DUP7 SSTORE JUMPDEST DUP7 MLOAD SWAP3 DUP4 GT PUSH3 0x253 JUMPI DUP4 SLOAD DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x248 JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH3 0x234 JUMPI DUP3 DUP2 GT PUSH3 0x1EC JUMPI JUMPDEST POP DUP1 SWAP2 DUP4 GT PUSH1 0x1 EQ PUSH3 0x185 JUMPI POP DUP5 SWAP6 DUP3 SWAP4 SWAP5 SWAP6 SWAP3 PUSH3 0x179 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP3 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND CALLER PUSH1 0x8 DUP2 SWAP1 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP2 DUP1 LOG3 PUSH2 0x44DB SWAP1 DUP2 PUSH3 0x365 DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x10C JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP7 DUP5 DUP8 MSTORE DUP3 DUP8 KECCAK256 SWAP3 DUP8 SWAP1 JUMPDEST DUP10 DUP3 LT PUSH3 0x1D4 JUMPI POP POP DUP4 DUP6 SWAP7 SWAP8 SWAP9 LT PUSH3 0x1BA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x120 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x1AC JUMP JUMPDEST DUP1 DUP8 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x196 JUMP JUMPDEST DUP5 DUP8 MSTORE DUP2 DUP8 KECCAK256 DUP4 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP5 DUP8 LT PUSH3 0x22A JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x21E JUMPI POP POP PUSH3 0xF1 JUMP JUMPDEST DUP9 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0x20E JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x205 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xDF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xB1 JUMP JUMPDEST DUP10 DUP1 MSTORE DUP5 DUP11 KECCAK256 DUP9 SWAP5 POP SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP12 JUMPDEST DUP8 DUP3 DUP3 LT PUSH3 0x2C0 JUMPI POP POP DUP5 GT PUSH3 0x2A6 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP7 SSTORE PUSH3 0xC5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x298 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP12 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x285 JUMP JUMPDEST SWAP1 SWAP2 POP DUP9 DUP1 MSTORE DUP4 DUP10 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP7 DUP7 LT PUSH3 0x320 JUMPI JUMPDEST SWAP2 DUP10 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x311 JUMPI POP POP PUSH3 0x9B JUMP JUMPDEST DUP12 DUP2 SSTORE DUP6 SWAP5 POP DUP10 SWAP2 ADD PUSH3 0x301 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x2F3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH3 0x84 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1BDC460 EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0x3385770 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0x7C90547 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xAAC5DFD EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0xFD8AEE8 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0x129F9008 EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x14FCDE03 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0x2A0EE644 EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0x2C5BDB1F EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0x32A64370 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0x33A90C36 EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0x34422A47 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0x34899521 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x3ADC860E EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0x3D3EB314 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x3F9AA154 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0x430C2081 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0x518E2BDD EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x5531AD6A EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0x5D0DEAD2 EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x68AD1C79 EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0x6DD501D7 EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x722713F7 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x77394A73 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x79F48424 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x84BBFFE7 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0x86887E1B EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0x87A115E6 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0x8DDAC1EF EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xA2311D5F EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xADC649E1 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0xAE7D9553 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0xAE908698 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xB5FF2582 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xB6160915 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xBB7E385A EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xBBE30722 EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xC0ADB910 EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0xC619C4A2 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xCBEABA77 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0xCD9DF190 EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0xD166E4EE EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xD3FC9864 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xD86DA278 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xDAA5FE2D EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0xDC289F48 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xE14CA948 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0xE9E7854C EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0xEAC8F5B8 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xEBCAB605 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xF35B25A8 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xF3AB880E EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xFBDC985A EQ PUSH2 0x386 JUMPI PUSH4 0xFD27FF81 EQ PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E71 JUMP JUMPDEST PUSH2 0x2E40 JUMP JUMPDEST PUSH2 0x2DC8 JUMP JUMPDEST PUSH2 0x2D77 JUMP JUMPDEST PUSH2 0x2CA6 JUMP JUMPDEST PUSH2 0x2B1A JUMP JUMPDEST PUSH2 0x2A5A JUMP JUMPDEST PUSH2 0x27F4 JUMP JUMPDEST PUSH2 0x27A3 JUMP JUMPDEST PUSH2 0x26AB JUMP JUMPDEST PUSH2 0x24E8 JUMP JUMPDEST PUSH2 0x21DC JUMP JUMPDEST PUSH2 0x21AB JUMP JUMPDEST PUSH2 0x2088 JUMP JUMPDEST PUSH2 0x2043 JUMP JUMPDEST PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x2007 JUMP JUMPDEST PUSH2 0x1FD4 JUMP JUMPDEST PUSH2 0x1F82 JUMP JUMPDEST PUSH2 0x1F56 JUMP JUMPDEST PUSH2 0x1F05 JUMP JUMPDEST PUSH2 0x1DE9 JUMP JUMPDEST PUSH2 0x1EA6 JUMP JUMPDEST PUSH2 0x1E75 JUMP JUMPDEST PUSH2 0x1E1B JUMP JUMPDEST PUSH2 0x1D9F JUMP JUMPDEST PUSH2 0x1D55 JUMP JUMPDEST PUSH2 0x1D24 JUMP JUMPDEST PUSH2 0x1CA0 JUMP JUMPDEST PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x1B0B JUMP JUMPDEST PUSH2 0x1ADE JUMP JUMPDEST PUSH2 0x1A4D JUMP JUMPDEST PUSH2 0x1A0E JUMP JUMPDEST PUSH2 0x19BD JUMP JUMPDEST PUSH2 0x194D JUMP JUMPDEST PUSH2 0x184F JUMP JUMPDEST PUSH2 0x1815 JUMP JUMPDEST PUSH2 0x1795 JUMP JUMPDEST PUSH2 0x1743 JUMP JUMPDEST PUSH2 0x1718 JUMP JUMPDEST PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x1691 JUMP JUMPDEST PUSH2 0x163E JUMP JUMPDEST PUSH2 0x1614 JUMP JUMPDEST PUSH2 0x15F1 JUMP JUMPDEST PUSH2 0xFF4 JUMP JUMPDEST PUSH2 0x1527 JUMP JUMPDEST PUSH2 0x1558 JUMP JUMPDEST PUSH2 0x14AB JUMP JUMPDEST PUSH2 0x12A2 JUMP JUMPDEST PUSH2 0x127A JUMP JUMPDEST PUSH2 0x11A4 JUMP JUMPDEST PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x101F JUMP JUMPDEST PUSH2 0xFC0 JUMP JUMPDEST PUSH2 0xF10 JUMP JUMPDEST PUSH2 0xF6F JUMP JUMPDEST PUSH2 0xE5D JUMP JUMPDEST PUSH2 0xE3C JUMP JUMPDEST PUSH2 0xE08 JUMP JUMPDEST PUSH2 0xDDD JUMP JUMPDEST PUSH2 0xD8A JUMP JUMPDEST PUSH2 0xD62 JUMP JUMPDEST PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x9FF JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x859 JUMP JUMPDEST PUSH2 0x7DA JUMP JUMPDEST PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x64F JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x513 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x505 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x538 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x4F3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 DUP3 PUSH1 0x14 SLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 SWAP5 ADD SWAP1 PUSH1 0x14 DUP5 MSTORE DUP5 DUP5 KECCAK256 SWAP4 JUMPDEST DUP6 DUP3 DUP3 LT PUSH2 0x597 JUMPI POP POP POP PUSH2 0x57F SWAP3 POP SUB DUP4 PUSH2 0xB00 JUMP JUMPDEST PUSH2 0x593 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x4F3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP6 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 DUP9 SWAP6 POP SWAP4 ADD SWAP3 ADD PUSH2 0x568 JUMP JUMPDEST DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0x5B0 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x5E6 DUP2 PUSH2 0x5B5 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x60C JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x63E JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x62D JUMPI JUMPDEST POP CODESIZE PUSH2 0x601 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x626 JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x61F JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x696 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x686 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x6BF DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x683 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x538 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x6A6 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD DUP2 DUP1 SLOAD PUSH2 0x6FD DUP2 PUSH2 0xA59 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x76E JUMPI POP PUSH1 0x1 EQ PUSH2 0x733 JUMPI JUMPDEST PUSH2 0x593 DUP5 PUSH2 0x727 DUP2 DUP9 SUB DUP3 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x6CB JUMP JUMPDEST SWAP4 POP DUP2 DUP1 MSTORE PUSH1 0x20 SWAP4 DUP5 DUP4 KECCAK256 JUMPDEST DUP3 DUP5 LT PUSH2 0x75B JUMPI POP POP POP DUP2 PUSH2 0x593 SWAP4 PUSH2 0x727 SWAP3 DUP3 ADD ADD SWAP4 PUSH2 0x717 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 DUP2 ADD PUSH2 0x73F JUMP JUMPDEST PUSH2 0x593 SWAP7 POP PUSH2 0x727 SWAP5 POP PUSH1 0x20 SWAP3 POP DUP6 SWAP4 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP4 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x7BD JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x7AF JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP2 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x839 JUMPI PUSH2 0x593 DUP6 PUSH2 0x82D DUP2 DUP10 SUB DUP3 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x796 JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x816 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x20 PUSH2 0x877 PUSH1 0x4 CALLDATALOAD PUSH2 0x3BDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5B0 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5B0 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5B0 JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5B0 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x8F8 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x90E DUP5 PUSH2 0x3B88 JUMP JUMPDEST AND SWAP1 DUP3 AND SWAP2 DUP2 DUP4 EQ PUSH2 0x9A5 JUMPI DUP2 CALLER SUB PUSH2 0x96D JUMPI PUSH2 0x958 SWAP1 PUSH2 0x939 DUP6 PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4486 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 LOG4 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2737BA2A3432A0B9B9B2BA27BBB732B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x10DD5C9C995B9D13DDDB995C905C1C1C9BDD985B PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 DUP3 PUSH1 0x13 SLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 SWAP5 ADD SWAP1 PUSH1 0x13 DUP5 MSTORE DUP5 DUP5 KECCAK256 SWAP4 JUMPDEST DUP6 DUP3 DUP3 LT PUSH2 0xA43 JUMPI POP POP POP PUSH2 0x57F SWAP3 POP SUB DUP4 PUSH2 0xB00 JUMP JUMPDEST DUP6 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 DUP9 SWAP6 POP SWAP4 ADD SWAP3 ADD PUSH2 0xA2C JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xA89 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xA73 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xA68 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1A0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xAC5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xA93 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xAC5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xAC5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0xAC5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0xB37 DUP5 PUSH2 0xA59 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0xBA6 JUMPI POP PUSH1 0x1 EQ PUSH2 0xB63 JUMPI JUMPDEST POP POP PUSH2 0xB61 SWAP3 POP SUB DUP4 PUSH2 0xB00 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0xB8E JUMPI POP POP PUSH2 0xB61 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xB53 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0xB76 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB61 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xB53 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0xBE9 JUMPI JUMP JUMPDEST PUSH2 0xBC9 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0xBE9 JUMPI MSTORE JUMP JUMPDEST PUSH1 0x5 GT ISZERO PUSH2 0xBE9 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0xBE9 JUMPI MSTORE JUMP JUMPDEST SWAP12 SWAP11 SWAP9 SWAP4 DUP13 PUSH2 0xB61 SWAP12 SWAP7 PUSH2 0xC5A PUSH2 0xC68 SWAP4 PUSH2 0xC4C PUSH2 0xC7D SWAP9 PUSH2 0x140 SWAP15 SWAP9 PUSH2 0xC9A SWAP15 SWAP9 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x160 DUP1 PUSH1 0x40 DUP9 ADD MSTORE DUP7 ADD SWAP1 PUSH2 0x6A6 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x6A6 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x6A6 JUMP JUMPDEST SWAP6 PUSH1 0xA0 DUP14 ADD MSTORE PUSH1 0xC0 DUP13 ADD MSTORE PUSH1 0xE0 DUP12 ADD SWAP1 PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x100 DUP10 ADD MSTORE DUP8 DUP3 SUB PUSH2 0x120 DUP10 ADD MSTORE PUSH2 0x6A6 JUMP JUMPDEST SWAP5 ADD SWAP1 PUSH2 0xC05 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x593 PUSH1 0x1 DUP4 ADD SLOAD SWAP2 PUSH2 0xCDA PUSH1 0x2 DUP6 ADD PUSH2 0xB23 JUMP JUMPDEST SWAP4 PUSH2 0xCE7 PUSH1 0x3 DUP3 ADD PUSH2 0xB23 JUMP JUMPDEST SWAP2 PUSH2 0xCF4 PUSH1 0x4 DUP4 ADD PUSH2 0xB23 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x6 DUP5 ADD SLOAD SWAP1 PUSH1 0x8 DUP6 ADD SLOAD SWAP4 PUSH1 0xFF PUSH1 0xB PUSH2 0xD16 PUSH1 0x9 DUP10 ADD PUSH2 0xB23 JUMP JUMPDEST SWAP8 ADD SLOAD AND SWAP7 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 PUSH1 0xFF PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP10 PUSH1 0x8 SHR AND SWAP9 AND SWAP7 DUP13 PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x5B0 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH2 0xD87 PUSH2 0xD73 CALLDATASIZE PUSH2 0xD38 JUMP JUMPDEST SWAP3 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x1E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x17FE JUMP JUMPDEST SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x5B0 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x5B0 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH2 0xE06 PUSH2 0xDEE CALLDATASIZE PUSH2 0xDA8 JUMP JUMPDEST SWAP2 PUSH2 0xE01 PUSH2 0xDFC DUP5 CALLER PUSH2 0x311A JUMP JUMPDEST PUSH2 0x2FA2 JUMP JUMPDEST PUSH2 0x32CF JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0xE58 PUSH1 0xC SLOAD PUSH2 0x3A91 JUMP JUMPDEST PUSH1 0xC SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0xE76 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xE83 DUP2 PUSH2 0x2F6C JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xEB7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xF6A JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xF3C JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x16 SLOAD DUP2 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x16 PUSH1 0x0 MSTORE PUSH32 0xD833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124289 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0xE06 PUSH2 0xFDC PUSH2 0x89F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x2EE8 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 DUP3 PUSH1 0x15 SLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 SWAP5 ADD SWAP1 PUSH1 0x15 DUP5 MSTORE DUP5 DUP5 KECCAK256 SWAP4 JUMPDEST DUP6 DUP3 DUP3 LT PUSH2 0x1063 JUMPI POP POP POP PUSH2 0x57F SWAP3 POP SUB DUP4 PUSH2 0xB00 JUMP JUMPDEST DUP6 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 DUP9 SWAP6 POP SWAP4 ADD SWAP3 ADD PUSH2 0x104C JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0xB SLOAD PUSH2 0x10A5 PUSH1 0x8 DUP3 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2E9D JUMP JUMPDEST PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x10E1 JUMPI PUSH1 0xFF NOT AND PUSH1 0xB SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xB61 DUP3 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xB61 DUP3 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xAC5 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x115E DUP3 PUSH2 0x1137 JUMP JUMPDEST SWAP2 PUSH2 0x116C PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xB00 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x5B0 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x5B0 JUMPI DUP2 PUSH1 0x20 PUSH2 0x538 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x1152 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x5B0 JUMPI PUSH2 0x11D5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1189 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x5B0 JUMPI PUSH2 0x11EE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1189 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x0 SWAP3 PUSH1 0x4 CALLDATALOAD DUP5 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x7 PUSH1 0x40 DUP6 KECCAK256 ADD SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x1215 DUP6 PUSH2 0xACA JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xAC5 JUMPI PUSH2 0x1255 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x4368 JUMP JUMPDEST PUSH2 0x1266 JUMPI SWAP1 PUSH2 0x1263 SWAP2 PUSH2 0x3EDE JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH2 0xE06 PUSH2 0x128B CALLDATASIZE PUSH2 0xDA8 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1299 DUP5 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0x301B JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x12C0 DUP2 CALLER PUSH2 0x311A JUMP JUMPDEST ISZERO PUSH2 0x144D JUMPI DUP1 PUSH2 0x12CF DUP2 PUSH2 0x3194 JUMP JUMPDEST PUSH2 0x12DE PUSH1 0xFF PUSH1 0xB SLOAD AND ISZERO PUSH2 0x359A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 PUSH2 0x1398 JUMPI SWAP1 PUSH2 0x1315 PUSH1 0x0 SWAP3 PUSH2 0x12FE DUP6 PUSH2 0x3795 JUMP JUMPDEST PUSH2 0x1307 DUP6 PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x1310 DUP6 PUSH2 0x33BA JUMP JUMPDEST PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x131F DUP2 SLOAD PUSH2 0x3297 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1348 PUSH2 0x1338 DUP5 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4466 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP1 LOG4 PUSH2 0x1376 PUSH2 0x1371 DUP3 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x3887 JUMP JUMPDEST PUSH2 0x137C JUMPI STOP JUMPDEST PUSH2 0x1393 PUSH2 0xE06 SWAP2 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x38A8 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH2 0x13A4 DUP2 PUSH2 0x2F6C JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP3 SWAP1 DUP4 GT PUSH2 0x1448 JUMPI PUSH2 0x1315 PUSH1 0x0 SWAP3 DUP6 SWAP5 PUSH2 0x1402 DUP6 SWAP2 DUP8 DUP4 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 SUB PUSH2 0x1408 JUMPI JUMPDEST POP DUP3 PUSH2 0x13E9 DUP10 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x13F3 DUP5 PUSH2 0x17CA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x12FE JUMP JUMPDEST DUP7 DUP5 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP3 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1441 PUSH1 0x40 DUP6 KECCAK256 SLOAD DUP1 PUSH2 0x1430 DUP5 PUSH2 0x13F3 DUP11 PUSH2 0x17CA JUMP JUMPDEST SSTORE PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE PUSH2 0x13D3 JUMP JUMPDEST PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314275726E61626C653A2063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1B995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x20 PUSH2 0x14C6 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0xE DUP4 MSTORE PUSH2 0x14E3 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x30B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP1 PUSH2 0x14F6 DUP6 PUSH2 0x3B88 JUMP JUMPDEST AND SWAP3 AND SWAP2 DUP3 EQ SWAP3 DUP4 ISZERO PUSH2 0x1511 JUMPI JUMPDEST POP POP POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH2 0x151D SWAP2 SWAP3 SWAP4 POP PUSH2 0x3BDE JUMP JUMPDEST AND EQ CODESIZE DUP1 DUP1 PUSH2 0x1504 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1597 JUMPI PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4446 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xB SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1D PUSH1 0x20 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x20 PUSH2 0x877 PUSH1 0x4 CALLDATALOAD PUSH2 0x3B88 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x5B0 JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x5B0 JUMPI JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xBE9 JUMPI PUSH1 0x0 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x16AA PUSH2 0x165C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xBE9 JUMPI PUSH1 0x0 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x16D9 SWAP2 PUSH2 0xF52 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x20 PUSH2 0x173B PUSH2 0x1736 PUSH2 0x889 JUMP JUMPDEST PUSH2 0x2F6C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AD JUMPI PUSH1 0xB SLOAD DUP2 PUSH1 0x8 DUP3 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1772 CALLER DUP3 EQ PUSH2 0x2E9D JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4426 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP1 LOG3 PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0xB SSTORE DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x17B1 CALLER ISZERO ISZERO PUSH2 0x2F0D JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1836 PUSH2 0x889 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH2 0x185D CALLDATASIZE PUSH2 0xD38 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH2 0x1876 DUP4 PUSH1 0x40 DUP7 KECCAK256 PUSH2 0x17FE JUMP JUMPDEST DUP1 SLOAD SWAP1 DUP3 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1448 JUMPI SSTORE DUP2 DUP5 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH2 0x189B DUP3 DUP3 SLOAD PUSH2 0x32C2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x18B1 DUP3 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x18BC DUP3 DUP3 SLOAD PUSH2 0x32C2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x18DB DUP4 PUSH2 0x18D6 DUP5 PUSH1 0x0 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x17FE JUMP JUMPDEST SLOAD EQ PUSH2 0x18E5 JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH2 0x192C DUP2 PUSH2 0x1927 DUP5 PUSH2 0x190D PUSH2 0x193B SWAP7 PUSH2 0x1908 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x4384 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x22 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x3760 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1945 DUP2 SLOAD PUSH2 0x3A91 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0xB SLOAD PUSH1 0x1 SWAP1 PUSH2 0x197C PUSH1 0x8 DUP3 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2E9D JUMP JUMPDEST PUSH2 0x1989 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x359A JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0xB SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x14 PUSH1 0x0 MSTORE PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x13 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4406 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x7 PUSH1 0x40 DUP5 KECCAK256 ADD SLOAD DUP2 LT ISZERO PUSH2 0x1AA2 JUMPI PUSH2 0x1A96 SWAP2 DUP4 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x7 PUSH1 0x40 DUP5 KECCAK256 ADD PUSH2 0x4368 JUMP JUMPDEST POP PUSH1 0x4 PUSH1 0x44 CALLDATALOAD SWAP2 ADD SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x92DCECC2D8D2C840E4CAEEC2E4C840D2DCC8CAF PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x20 PUSH2 0x1B3D PUSH2 0x1B29 PUSH2 0x89F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1E DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x17FE JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD DUP2 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x1B6A DUP3 PUSH2 0xA59 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x76E JUMPI POP PUSH1 0x1 EQ PUSH2 0x1B90 JUMPI PUSH2 0x593 DUP5 PUSH2 0x727 DUP2 DUP9 SUB DUP3 PUSH2 0xB00 JUMP JUMPDEST DUP1 SWAP5 POP DUP3 MSTORE PUSH1 0x20 SWAP4 DUP5 DUP4 KECCAK256 JUMPDEST DUP3 DUP5 LT PUSH2 0x1BB8 JUMPI POP POP POP DUP2 PUSH2 0x593 SWAP4 PUSH2 0x727 SWAP3 DUP3 ADD ADD SWAP4 PUSH2 0x717 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 DUP2 ADD PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x5B0 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x1BF3 PUSH2 0x889 JUMP JUMPDEST PUSH2 0x1BFB PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 CALLER DUP4 EQ PUSH2 0x1C5F JUMPI DUP2 PUSH2 0x1C28 PUSH2 0x1C2D SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x17FE JUMP JUMPDEST PUSH2 0x2F91 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE CALLER SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP1 PUSH1 0x20 SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x22A9219B99189D1030B8383937BB32903A379031B0B63632B9 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x1CBA PUSH2 0x165C JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xBE9 JUMPI PUSH1 0x0 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP2 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1D0D JUMPI PUSH2 0x593 DUP6 PUSH2 0x1D01 DUP2 DUP10 SUB DUP3 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x527 JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1CEA JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x1D4A PUSH2 0x1D40 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x32CF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x1D6E PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x16D9 SWAP2 PUSH2 0xF52 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x1DB8 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x22 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x16D9 SWAP2 PUSH2 0xF52 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x20 PUSH2 0x1B3D PUSH2 0x1E07 PUSH2 0x89F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x18 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x17FE JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 DUP3 PUSH1 0x16 SLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 SWAP5 ADD SWAP1 PUSH1 0x16 DUP5 MSTORE DUP5 DUP5 KECCAK256 SWAP4 JUMPDEST DUP6 DUP3 DUP3 LT PUSH2 0x1E5F JUMPI POP POP POP PUSH2 0x57F SWAP3 POP SUB DUP4 PUSH2 0xB00 JUMP JUMPDEST DUP6 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 DUP9 SWAP6 POP SWAP4 ADD SWAP3 ADD PUSH2 0x1E48 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x1EBF PUSH2 0x889 JUMP JUMPDEST PUSH2 0x1EC7 PUSH2 0x89F JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x5B0 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x5B0 JUMPI PUSH2 0x1EFB PUSH2 0xE06 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x1152 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x301B JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1263 PUSH2 0x1F24 PUSH2 0x89F JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH2 0x1F3D DUP2 PUSH1 0x40 DUP7 KECCAK256 PUSH2 0x4384 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x22 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH2 0x3760 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1FBB SWAP2 PUSH2 0xF52 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x593 PUSH2 0x1FF3 PUSH1 0x4 CALLDATALOAD PUSH2 0x3908 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x6A6 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH2 0x202C PUSH2 0x2018 CALLDATASIZE PUSH2 0xD38 JUMP JUMPDEST SWAP3 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x17FE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x205C PUSH2 0x89F JUMP JUMPDEST PUSH2 0x2075 PUSH1 0x0 SWAP2 PUSH1 0x4 CALLDATALOAD DUP4 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH2 0x17FE JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x40 DUP3 KECCAK256 SSTORE DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x20A1 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x5B0 JUMPI PUSH2 0x20C3 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1189 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x2170 JUMPI PUSH2 0x215F SWAP4 PUSH2 0x216A PUSH1 0x40 MLOAD SWAP3 PUSH2 0x20E8 DUP5 PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0x2164 PUSH1 0x0 SWAP8 DUP6 DUP10 DUP1 SWAP8 MSTORE PUSH2 0x210B PUSH2 0x2106 PUSH2 0x2102 DUP12 PUSH2 0x320C JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x3C61 JUMP JUMPDEST PUSH2 0x2115 DUP10 DUP8 PUSH2 0x35D9 JUMP JUMPDEST PUSH2 0x211E DUP7 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x2128 DUP2 SLOAD PUSH2 0x32A6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x2142 DUP7 PUSH2 0x939 DUP12 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4466 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 DUP2 DUP11 DUP11 DUP11 DUP2 DUP1 LOG4 PUSH2 0x349D JUMP JUMPDEST PUSH2 0x3095 JUMP JUMPDEST DUP6 PUSH2 0x3DBF JUMP JUMPDEST DUP2 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x5A65726F416464726573734D696E6974696E67 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0xE06 PUSH2 0x21C7 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2F91 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x21F5 PUSH2 0x89F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ PUSH2 0x221E JUMPI STOP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE STOP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xAC5 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x5B0 JUMPI DUP1 CALLDATALOAD PUSH2 0x2259 DUP2 PUSH2 0x222C JUMP JUMPDEST SWAP3 PUSH1 0x40 SWAP2 PUSH2 0x2269 DUP4 MLOAD SWAP6 DUP7 PUSH2 0xB00 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 SWAP4 DUP5 DUP1 DUP8 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP4 DUP4 DUP6 GT PUSH2 0x5B0 JUMPI DUP6 DUP3 ADD SWAP3 JUMPDEST DUP6 DUP5 LT PUSH2 0x2298 JUMPI POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x5B0 JUMPI DUP5 ADD SWAP2 PUSH1 0xC0 SWAP3 DUP4 PUSH1 0x1F NOT DUP3 DUP11 SUB ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x22C4 PUSH2 0x111D JUMP JUMPDEST SWAP1 DUP11 DUP2 ADD CALLDATALOAD DUP5 DUP2 GT PUSH2 0x5B0 JUMPI DUP10 DUP13 PUSH2 0x22DE SWAP3 DUP5 ADD ADD PUSH2 0x1189 JUMP JUMPDEST DUP3 MSTORE DUP6 DUP2 ADD CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x5B0 JUMPI DUP11 SWAP5 PUSH2 0x22FC DUP11 DUP8 DUP1 SWAP8 DUP6 ADD ADD PUSH2 0x1189 JUMP JUMPDEST DUP6 DUP5 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 DUP2 ADD CALLDATALOAD DUP9 DUP6 ADD MSTORE PUSH1 0x80 SWAP3 DUP4 DUP3 ADD CALLDATALOAD SWAP1 DUP6 ADD MSTORE PUSH1 0xA0 SWAP3 DUP4 DUP3 ADD CALLDATALOAD SWAP1 DUP6 ADD MSTORE ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP4 ADD SWAP3 PUSH2 0x2287 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x5B0 JUMPI JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x5B0 JUMPI DUP2 CALLDATALOAD SWAP1 PUSH2 0x2357 DUP3 PUSH2 0x222C JUMP JUMPDEST SWAP3 PUSH2 0x2365 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xB00 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 DUP1 DUP5 GT PUSH2 0x5B0 JUMPI DUP5 DUP4 ADD SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x2393 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x5B0 JUMPI DUP7 SWAP2 PUSH2 0x23B4 DUP5 DUP5 DUP1 SWAP5 DUP10 ADD ADD PUSH2 0x1189 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x2383 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1A0 DUP2 DUP5 SUB SLT PUSH2 0x5B0 JUMPI PUSH2 0x23D5 PUSH2 0x112A JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 DUP4 ADD CALLDATALOAD DUP2 DUP2 GT PUSH2 0x5B0 JUMPI DUP3 PUSH2 0x2404 SWAP2 DUP6 ADD PUSH2 0x1189 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD DUP2 DUP2 GT PUSH2 0x5B0 JUMPI DUP3 PUSH2 0x2421 SWAP2 DUP6 ADD PUSH2 0x1189 JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD DUP2 DUP2 GT PUSH2 0x5B0 JUMPI DUP3 PUSH2 0x243E SWAP2 DUP6 ADD PUSH2 0x1189 JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP4 ADD CALLDATALOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP4 ADD CALLDATALOAD DUP2 DUP2 GT PUSH2 0x5B0 JUMPI DUP3 PUSH2 0x246F SWAP2 DUP6 ADD PUSH2 0x2243 JUMP JUMPDEST PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 PUSH2 0x2482 DUP2 DUP6 ADD PUSH2 0x2332 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x120 PUSH2 0x2494 DUP2 DUP6 ADD PUSH2 0x8CB JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x140 DUP1 DUP5 ADD CALLDATALOAD DUP3 DUP2 GT PUSH2 0x5B0 JUMPI DUP4 PUSH2 0x24B2 SWAP2 DUP7 ADD PUSH2 0x1189 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x160 SWAP2 DUP3 DUP5 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x5B0 JUMPI PUSH2 0x24D0 SWAP2 DUP5 ADD PUSH2 0x233F JUMP JUMPDEST SWAP1 DUP5 ADD MSTORE PUSH2 0x24E2 PUSH2 0x180 DUP1 SWAP3 ADD PUSH2 0x166B JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x5B0 JUMPI PUSH2 0x1927 PUSH2 0x2521 PUSH2 0xE06 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x23BF JUMP JUMPDEST PUSH2 0x266F DUP4 PUSH2 0x1927 PUSH2 0x2530 PUSH2 0x8B5 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x2619 PUSH2 0x180 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP7 DUP1 MLOAD DUP9 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP10 ADD SSTORE PUSH2 0x2564 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP11 ADD PUSH2 0x3CF1 JUMP JUMPDEST PUSH2 0x2575 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP11 ADD PUSH2 0x3CF1 JUMP JUMPDEST PUSH2 0x2586 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP11 ADD PUSH2 0x3CF1 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP10 ADD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP10 ADD SSTORE PUSH2 0x25AB PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x7 DUP11 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH2 0x25DF PUSH1 0x8 DUP10 ADD PUSH2 0x25CA PUSH2 0x100 DUP5 ADD MLOAD PUSH2 0x25C4 DUP2 PUSH2 0xBDF JUMP JUMPDEST DUP3 PUSH2 0x40C1 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x2EE8 JUMP JUMPDEST PUSH2 0x25F1 PUSH2 0x140 DUP3 ADD MLOAD PUSH1 0x9 DUP11 ADD PUSH2 0x3CF1 JUMP JUMPDEST PUSH2 0x2603 PUSH2 0x160 DUP3 ADD MLOAD PUSH1 0xA DUP11 ADD PUSH2 0x40D9 JUMP JUMPDEST ADD SWAP6 PUSH1 0xB DUP8 MLOAD SWAP2 PUSH2 0x2613 DUP4 PUSH2 0xBFB JUMP JUMPDEST ADD PUSH2 0x4166 JUMP JUMPDEST PUSH2 0x2631 DUP2 PUSH2 0x939 DUP6 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x2653 DUP2 SLOAD PUSH2 0x3A91 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x2693 PUSH2 0x2686 DUP5 PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x269C DUP4 PUSH2 0x372A JUMP JUMPDEST MLOAD PUSH2 0x26A6 DUP2 PUSH2 0xBFB JUMP JUMPDEST PUSH2 0x1678 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x5B0 JUMPI PUSH2 0x26DE PUSH2 0xE06 SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x23BF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0xB PUSH2 0x180 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP1 MLOAD DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH2 0x2713 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP7 ADD PUSH2 0x3CF1 JUMP JUMPDEST PUSH2 0x2724 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP7 ADD PUSH2 0x3CF1 JUMP JUMPDEST PUSH2 0x2735 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP7 ADD PUSH2 0x3CF1 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP6 ADD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE PUSH2 0x275A PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x7 DUP7 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH2 0x2773 PUSH1 0x8 DUP6 ADD PUSH2 0x25CA PUSH2 0x100 DUP5 ADD MLOAD PUSH2 0x25C4 DUP2 PUSH2 0xBDF JUMP JUMPDEST PUSH2 0x2785 PUSH2 0x140 DUP3 ADD MLOAD PUSH1 0x9 DUP7 ADD PUSH2 0x3CF1 JUMP JUMPDEST PUSH2 0x2797 PUSH2 0x160 DUP3 ADD MLOAD PUSH1 0xA DUP7 ADD PUSH2 0x40D9 JUMP JUMPDEST ADD MLOAD SWAP2 PUSH2 0x2613 DUP4 PUSH2 0xBFB JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x27E8 PUSH2 0x27C3 PUSH2 0x889 JUMP JUMPDEST PUSH2 0x27CB PUSH2 0x89F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x17FE JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2816 PUSH2 0x889 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP2 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2855 JUMPI PUSH2 0x593 DUP6 PUSH2 0x1D01 DUP2 DUP10 SUB DUP3 PUSH2 0xB00 JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x283E JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 SWAP3 ADD SWAP2 DUP3 DUP2 DUP4 PUSH1 0x5 SHL DUP6 ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x2897 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 DUP3 DUP5 PUSH1 0x1 SWAP5 SUB DUP7 MSTORE DUP10 MLOAD SWAP1 PUSH2 0x28CF PUSH2 0x28BF DUP4 MLOAD PUSH1 0xC0 DUP1 DUP6 MSTORE DUP5 ADD SWAP1 PUSH2 0x6A6 JUMP JUMPDEST DUP5 DUP5 ADD MLOAD DUP4 DUP3 SUB DUP7 DUP6 ADD MSTORE PUSH2 0x6A6 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0xA0 DUP1 SWAP2 ADD MLOAD SWAP2 ADD MSTORE SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x2887 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 SWAP3 ADD SWAP2 DUP3 DUP2 DUP4 PUSH1 0x5 SHL DUP3 ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x2932 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x294C DUP4 DUP6 PUSH1 0x1 SWAP6 SUB DUP8 MSTORE DUP11 MLOAD PUSH2 0x6A6 JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x2922 JUMP JUMPDEST PUSH2 0x538 SWAP1 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x2992 PUSH2 0x1A0 SWAP2 DUP3 PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x1C0 DUP5 ADD SWAP1 PUSH2 0x6A6 JUMP JUMPDEST PUSH2 0x2A4F PUSH2 0x29C8 PUSH2 0x29B4 PUSH1 0x60 DUP9 ADD MLOAD SWAP4 PUSH1 0x1F NOT SWAP5 DUP6 DUP9 DUP4 SUB ADD PUSH1 0x80 DUP10 ADD MSTORE PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MLOAD DUP5 DUP8 DUP4 SUB ADD PUSH1 0xA0 DUP9 ADD MSTORE PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x2A3A PUSH2 0x29FA PUSH1 0xE0 DUP10 ADD MLOAD SWAP3 PUSH2 0x100 SWAP4 DUP7 DUP10 DUP4 SUB ADD DUP6 DUP11 ADD MSTORE PUSH2 0x286C JUMP JUMPDEST SWAP2 DUP9 ADD MLOAD PUSH2 0x2A0E PUSH2 0x120 SWAP2 DUP3 DUP10 ADD SWAP1 PUSH2 0xBEE JUMP JUMPDEST DUP9 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x140 DUP8 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP9 ADD MLOAD SWAP2 PUSH2 0x160 SWAP3 DUP6 DUP9 DUP4 SUB ADD DUP5 DUP10 ADD MSTORE PUSH2 0x6A6 JUMP JUMPDEST SWAP1 DUP8 ADD MLOAD PUSH2 0x180 SWAP4 DUP7 DUP4 SUB ADD DUP5 DUP8 ADD MSTORE PUSH2 0x2907 JUMP JUMPDEST SWAP5 ADD MLOAD SWAP2 ADD SWAP1 PUSH2 0xC05 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH2 0x2A77 DUP2 PUSH2 0xAA9 JUMP JUMPDEST PUSH2 0x180 PUSH1 0x0 SWAP2 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP1 PUSH1 0x40 DUP4 ADD MSTORE DUP1 DUP1 DUP4 ADD MSTORE DUP1 PUSH1 0x80 DUP4 ADD MSTORE DUP4 PUSH1 0xA0 DUP4 ADD MSTORE DUP4 PUSH1 0xC0 DUP4 ADD MSTORE DUP1 PUSH1 0xE0 DUP4 ADD MSTORE DUP4 PUSH2 0x100 DUP4 ADD MSTORE DUP4 PUSH2 0x120 DUP4 ADD MSTORE DUP1 PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x160 DUP3 ADD MSTORE ADD MSTORE PUSH2 0x593 PUSH2 0x2AE9 PUSH2 0x2AE4 PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x428D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x295C JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x2B0C PUSH2 0x538 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x4F3 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x4F3 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2B36 PUSH2 0x89F JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0x2B4D PUSH2 0x112A JUMP JUMPDEST SWAP2 DUP4 SLOAD DUP4 MSTORE PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2B68 PUSH1 0x2 DUP6 ADD PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2B79 PUSH1 0x3 DUP6 ADD PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2B8A PUSH1 0x4 DUP6 ADD PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x2C25 PUSH1 0x5 DUP6 ADD SLOAD SWAP4 PUSH1 0xA0 SWAP5 DUP6 DUP3 ADD MSTORE PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x180 PUSH2 0x2C1E PUSH1 0xB PUSH2 0x2BBD PUSH1 0x7 DUP11 ADD PUSH2 0x417E JUMP JUMPDEST SWAP9 PUSH1 0xE0 DUP6 ADD SWAP10 DUP11 MSTORE PUSH2 0x2BF2 PUSH1 0x8 DUP3 ADD SLOAD PUSH2 0x2BDE PUSH1 0xFF DUP3 AND PUSH2 0x100 DUP10 ADD PUSH2 0x4220 JUMP JUMPDEST PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x120 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x2BFE PUSH1 0x9 DUP3 ADD PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x2C10 PUSH1 0xA DUP3 ADD PUSH2 0x422C JUMP JUMPDEST PUSH2 0x160 DUP7 ADD MSTORE ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0x4281 JUMP JUMPDEST DUP4 MLOAD MLOAD SWAP2 PUSH2 0x2C32 DUP4 PUSH2 0x43BF JUMP JUMPDEST SWAP4 PUSH2 0x2C3C DUP5 PUSH2 0x43BF JUMP JUMPDEST SWAP6 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x2C56 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x593 DUP11 DUP11 DUP4 PUSH2 0x2AF5 JUMP JUMPDEST DUP1 PUSH2 0x2C90 DUP5 PUSH2 0x2C69 PUSH2 0x2CA1 SWAP5 DUP7 MLOAD PUSH2 0x43F1 JUMP JUMPDEST MLOAD ADD MLOAD DUP1 PUSH2 0x2C77 DUP5 DUP13 PUSH2 0x43F1 JUMP JUMPDEST MSTORE PUSH2 0x13F3 DUP9 PUSH2 0x18D6 DUP10 PUSH1 0x0 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH2 0x2C9B DUP3 DUP12 PUSH2 0x43F1 JUMP JUMPDEST MSTORE PUSH2 0x3A91 JUMP JUMPDEST PUSH2 0x2C40 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x2CBF PUSH2 0x889 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 PUSH2 0x2CDD CALLER DUP5 EQ PUSH2 0x2E9D JUMP JUMPDEST DUP2 AND DUP1 ISZERO PUSH2 0x2D23 JUMPI PUSH2 0xE06 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4426 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 LOG3 PUSH1 0xB DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x15 PUSH1 0x0 MSTORE PUSH32 0x55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC475 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2DEA PUSH2 0x889 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP2 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2E29 JUMPI PUSH2 0x593 DUP6 PUSH2 0x1D01 DUP2 DUP10 SUB DUP3 PUSH2 0xB00 JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2E12 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0xE06 PUSH2 0x2E5C PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2F91 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1D PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST ISZERO PUSH2 0x2EA4 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST ISZERO PUSH2 0x2F14 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2F80 DUP2 ISZERO ISZERO PUSH2 0x2F0D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST ISZERO PUSH2 0x2FA9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3015 DUP3 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST SWAP2 PUSH2 0xB61 SWAP4 SWAP2 PUSH2 0x215F SWAP4 PUSH2 0x3032 PUSH2 0xDFC DUP5 CALLER PUSH2 0x311A JUMP JUMPDEST PUSH2 0x303D DUP4 DUP4 DUP4 PUSH2 0x32CF JUMP JUMPDEST PUSH2 0x355E JUMP JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x309C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x30B5 PUSH1 0x4 DUP3 ADD PUSH2 0x3042 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x30C0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x312B PUSH2 0x3126 DUP4 PUSH2 0x320C JUMP JUMPDEST PUSH2 0x30B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x313D DUP5 PUSH2 0x3194 JUMP JUMPDEST AND SWAP1 DUP1 DUP4 AND SWAP1 DUP3 DUP3 EQ SWAP5 DUP6 ISZERO PUSH2 0x317C JUMPI JUMPDEST POP POP POP DUP3 ISZERO PUSH2 0x315C JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP3 POP SWAP1 PUSH2 0x3177 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x17FE JUMP JUMPDEST SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x3189 SWAP2 SWAP3 SWAP4 SWAP6 POP PUSH2 0x3BDE JUMP JUMPDEST AND EQ SWAP2 CODESIZE DUP1 DUP1 PUSH2 0x314E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x31B5 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3230 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x1448 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1448 JUMPI JUMP JUMPDEST PUSH1 0x30 ADD SWAP1 DUP2 PUSH1 0x30 GT PUSH2 0x1448 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1448 JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x32D9 DUP4 PUSH2 0x3194 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP3 SWAP1 SWAP2 DUP3 AND DUP4 SWAP1 SUB PUSH2 0x3363 JUMPI PUSH2 0x3319 PUSH2 0x334E SWAP3 DUP3 AND SWAP5 PUSH2 0x3305 DUP7 ISZERO ISZERO PUSH2 0x3229 JUMP JUMPDEST PUSH2 0x3310 DUP8 DUP5 DUP4 PUSH2 0x3613 JUMP JUMPDEST PUSH2 0x1310 DUP8 PUSH2 0x33BA JUMP JUMPDEST PUSH2 0x3323 DUP2 SLOAD PUSH2 0x3297 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x332E DUP2 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x3338 DUP2 SLOAD PUSH2 0x32A6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x939 DUP6 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4466 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 LOG4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x33E7 DUP4 PUSH2 0x3194 JUMP JUMPDEST AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4486 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP1 LOG4 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x5B0 JUMPI MLOAD PUSH2 0x538 DUP2 PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x538 SWAP4 SWAP3 PUSH1 0x80 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x538 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x6A6 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3498 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x347E DUP3 PUSH2 0x1137 JUMP JUMPDEST SWAP2 PUSH2 0x348C PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xB00 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP1 EXTCODESIZE ISZERO PUSH2 0x3556 JUMPI PUSH2 0x34CF PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP4 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP10 DUP11 DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD PUSH2 0x3411 JUMP JUMPDEST SUB SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x3526 JUMPI JUMPDEST POP PUSH2 0x3518 JUMPI PUSH2 0x34F2 PUSH2 0x346D JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0x3513 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x30B5 PUSH1 0x4 DUP3 ADD PUSH2 0x3042 JUMP JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ SWAP1 JUMP JUMPDEST PUSH2 0x3548 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x354F JUMPI JUMPDEST PUSH2 0x3540 DUP2 DUP4 PUSH2 0xB00 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x33FC JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x34E5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3536 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP1 DUP3 EXTCODESIZE ISZERO PUSH2 0x3591 JUMPI PUSH2 0x34CF SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP11 DUP12 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD PUSH2 0x343C JUMP JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x35A1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x35E9 PUSH1 0xFF PUSH1 0xB SLOAD AND ISZERO PUSH2 0x359A JUMP JUMPDEST PUSH2 0x35F2 DUP2 PUSH2 0x3795 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x360A JUMPI PUSH2 0xB61 SWAP2 POP PUSH2 0x37DB JUMP JUMPDEST PUSH2 0xB61 SWAP2 PUSH2 0x36F2 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x3625 PUSH1 0xFF PUSH1 0xB SLOAD AND ISZERO PUSH2 0x359A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 PUSH2 0x365C JUMPI POP PUSH2 0x3640 DUP4 PUSH2 0x3795 JUMP JUMPDEST DUP4 AND DUP1 PUSH2 0x3653 JUMPI POP POP PUSH2 0xB61 SWAP2 POP PUSH2 0x37DB JUMP JUMPDEST SUB PUSH2 0x360A JUMPI POP POP JUMP JUMPDEST DUP2 DUP6 AND DUP4 SUB PUSH2 0x366C JUMPI JUMPDEST POP PUSH2 0x3640 JUMP JUMPDEST PUSH2 0x3675 DUP2 PUSH2 0x2F6C JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x1448 JUMPI PUSH2 0x36BC SWAP1 PUSH2 0x13F3 PUSH1 0x0 SWAP4 DUP8 DUP6 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SLOAD DUP4 DUP2 SUB PUSH2 0x36C3 JUMPI JUMPDEST POP DUP5 PUSH2 0x36B6 DUP10 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x17CA JUMP JUMPDEST SSTORE CODESIZE PUSH2 0x3666 JUMP JUMPDEST DUP8 DUP7 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 DUP5 DUP8 MSTORE PUSH1 0x20 MSTORE PUSH2 0x36EB PUSH1 0x40 DUP8 KECCAK256 SLOAD DUP1 PUSH2 0x1430 DUP5 PUSH2 0x13F3 DUP8 PUSH2 0x17CA JUMP JUMPDEST SSTORE CODESIZE PUSH2 0x36A0 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x36FE DUP2 PUSH2 0x2F6C JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE DUP1 DUP4 DUP4 KECCAK256 SSTORE DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x13 SSTORE DUP2 LT ISZERO PUSH2 0xF6A JUMPI PUSH1 0x13 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4406 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xAC5 JUMPI PUSH2 0x377D SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0xF52 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x8 SSTORE DUP2 LT ISZERO PUSH2 0xF6A JUMPI PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4446 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SSTORE JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 NOT SWAP3 SWAP1 DUP4 DUP2 ADD SWAP1 DUP1 DUP3 GT PUSH2 0x1448 JUMPI PUSH1 0x0 SWAP3 DUP1 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE DUP2 PUSH1 0x40 DUP6 KECCAK256 SLOAD SWAP4 LT ISZERO PUSH2 0xF6A JUMPI DUP5 DUP5 MSTORE DUP6 DUP3 PUSH1 0x20 DUP7 KECCAK256 ADD ADD SLOAD SWAP2 DUP4 LT ISZERO PUSH2 0xF6A JUMPI DUP4 SWAP3 PUSH2 0x383F PUSH2 0x3850 SWAP4 DUP8 DUP7 MSTORE DUP1 DUP4 PUSH1 0x20 DUP9 KECCAK256 ADD SSTORE PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP2 SLOAD SWAP3 DUP4 ISZERO PUSH2 0x3873 JUMPI DUP1 DUP5 ADD SWAP4 DUP1 DUP6 LT ISZERO PUSH2 0xF6A JUMPI DUP4 DUP4 MSTORE PUSH1 0x20 DUP4 KECCAK256 ADD ADD SSTORE SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH2 0x538 SWAP1 SLOAD PUSH2 0xA59 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x389C JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3891 JUMP JUMPDEST PUSH2 0x38B2 DUP2 SLOAD PUSH2 0xA59 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x38BC JUMPI POP POP JUMP JUMPDEST DUP2 PUSH1 0x1F PUSH1 0x0 SWAP4 GT PUSH1 0x1 EQ PUSH2 0x38CE JUMPI POP SSTORE JUMP JUMPDEST SWAP1 DUP1 DUP4 SWAP2 DUP3 MSTORE PUSH2 0x38ED PUSH1 0x1F PUSH1 0x20 DUP5 KECCAK256 SWAP5 ADD PUSH1 0x5 SHR DUP5 ADD PUSH1 0x1 DUP6 ADD PUSH2 0x3891 JUMP JUMPDEST SSTORE SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x3904 PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x683 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x3911 DUP2 PUSH2 0x320C JUMP JUMPDEST ISZERO PUSH2 0x3988 JUMPI PUSH2 0x3932 PUSH2 0x392D DUP3 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST SWAP1 PUSH2 0x393B PUSH2 0x3008 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x3983 JUMPI DUP3 MLOAD PUSH2 0x3953 JUMPI POP PUSH2 0x538 SWAP2 POP PUSH2 0x39E7 JUMP JUMPDEST PUSH2 0x538 SWAP2 POP PUSH2 0x3975 PUSH2 0x396F SWAP4 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x38F1 JUMP JUMPDEST SWAP1 PUSH2 0x38F1 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xB00 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x39F0 DUP2 PUSH2 0x320C JUMP JUMPDEST ISZERO PUSH2 0x3A34 JUMPI PUSH2 0x39FD PUSH2 0x3008 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x3A2A JUMPI PUSH2 0x396F SWAP2 PUSH2 0x3975 PUSH2 0x3A1A PUSH2 0x538 SWAP4 PUSH2 0x3AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x38F1 JUMP JUMPDEST POP POP PUSH2 0x538 PUSH2 0x3008 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1448 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xF6A JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B5A JUMPI DUP1 PUSH1 0x0 SWAP1 DUP3 DUP3 SWAP4 JUMPDEST PUSH2 0x3B46 JUMPI POP PUSH2 0x3ACD DUP4 PUSH2 0x1137 JUMP JUMPDEST SWAP3 PUSH2 0x3ADB PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xB00 JUMP JUMPDEST DUP1 DUP5 MSTORE DUP2 PUSH1 0x1F NOT PUSH2 0x3AEB DUP4 PUSH2 0x1137 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP8 ADD CALLDATACOPY JUMPDEST PUSH2 0x3AFD JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x3B06 SWAP1 PUSH2 0x3297 JUMP JUMPDEST SWAP1 PUSH1 0xA SWAP1 PUSH2 0x3B31 PUSH2 0x3B21 PUSH2 0x3B1B DUP5 DUP5 MOD PUSH2 0x32B4 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST DUP5 BYTE PUSH2 0x3B3D DUP5 DUP8 PUSH2 0x3AA0 JUMP JUMPDEST MSTORE8 DIV SWAP1 DUP2 PUSH2 0x3AF3 JUMP JUMPDEST SWAP3 PUSH2 0x3B52 PUSH1 0xA SWAP2 PUSH2 0x3A91 JUMP JUMPDEST SWAP4 DIV DUP1 PUSH2 0x3ABF JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0xAC5 JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x3BA9 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4E6F4173736574457869737473 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3BE7 DUP2 PUSH2 0x320C JUMP JUMPDEST ISZERO PUSH2 0x3C07 JUMPI PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3C68 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x115490CDCC8C4E881D1BDAD95B88185B1C9958591E481B5A5B9D1959 PUSH1 0x22 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x3CBB JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xB61 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x3CE7 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x3891 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x3CDA JUMP JUMPDEST DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xAC5 JUMPI PUSH2 0x3D18 DUP2 PUSH2 0x3D12 DUP5 SLOAD PUSH2 0xA59 JUMP JUMPDEST DUP5 PUSH2 0x3CAC JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3D54 JUMPI POP DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x3D49 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3D33 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 PUSH2 0x3D6A DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x3DA7 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x3D8E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3D84 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x3D6F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x3DCB DUP2 PUSH2 0x320C JUMP JUMPDEST ISZERO PUSH2 0x3E82 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xA DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP4 MLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xAC5 JUMPI PUSH2 0x3E03 DUP3 PUSH2 0x3DFD DUP6 SLOAD PUSH2 0xA59 JUMP JUMPDEST DUP6 PUSH2 0x3CAC JUMP JUMPDEST DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3E31 JUMPI POP DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x3D49 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 PUSH2 0x3E47 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x3E6A JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x3D8E JUMPI POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x3E4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 MLOAD DUP1 MLOAD SWAP2 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xAC5 JUMPI PUSH2 0x3F07 DUP2 PUSH2 0x3F01 DUP7 SLOAD PUSH2 0xA59 JUMP JUMPDEST DUP7 PUSH2 0x3CAC JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP3 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3F7D JUMPI SWAP3 DUP3 PUSH1 0x5 SWAP6 SWAP4 PUSH2 0x3F4D SWAP4 PUSH1 0xA0 SWAP7 PUSH1 0x0 SWAP3 PUSH2 0x3F72 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP7 SSTORE JUMPDEST DUP3 ADD MLOAD PUSH1 0x1 DUP7 ADD PUSH2 0x3CF1 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3F2C JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x3F93 DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3FDC JUMPI POP SWAP4 PUSH2 0x3F4D SWAP4 PUSH1 0xA0 SWAP7 SWAP4 PUSH1 0x1 SWAP4 DUP4 PUSH1 0x5 SWAP11 SWAP9 LT PUSH2 0x3FC3 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP7 SSTORE PUSH2 0x3F41 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3FB6 JUMP JUMPDEST SWAP3 SWAP4 DUP7 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x3F97 JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 GT PUSH2 0xAC5 JUMPI DUP2 SLOAD DUP4 DUP4 SSTORE DUP1 DUP5 LT PUSH2 0x4052 JUMPI JUMPDEST POP PUSH2 0x4023 PUSH1 0x20 DUP1 SWAP3 ADD SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x4035 JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP4 DUP3 PUSH2 0x4046 PUSH1 0x1 SWAP5 MLOAD DUP7 PUSH2 0x3EDE JUMP JUMPDEST ADD SWAP3 ADD SWAP4 ADD SWAP3 SWAP1 PUSH2 0x4027 JUMP JUMPDEST PUSH1 0x6 SWAP1 DUP1 DUP3 MUL SWAP1 DUP3 DUP3 DIV SUB PUSH2 0x1448 JUMPI DUP5 DUP3 MUL DUP3 DUP2 DIV DUP7 SUB PUSH2 0x1448 JUMPI PUSH1 0x0 SWAP1 DUP6 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP3 DUP4 ADD SWAP3 ADD JUMPDEST DUP3 DUP2 LT PUSH2 0x408C JUMPI POP POP POP PUSH2 0x400E JUMP JUMPDEST DUP1 PUSH2 0x4097 DUP6 SWAP3 PUSH2 0x38A8 JUMP JUMPDEST PUSH2 0x40A3 PUSH1 0x1 DUP3 ADD PUSH2 0x38A8 JUMP JUMPDEST DUP3 PUSH1 0x2 DUP3 ADD SSTORE DUP3 PUSH1 0x3 DUP3 ADD SSTORE DUP3 PUSH1 0x4 DUP3 ADD SSTORE DUP3 PUSH1 0x5 DUP3 ADD SSTORE ADD PUSH2 0x407D JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xBE9 JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 GT PUSH2 0xAC5 JUMPI DUP2 SLOAD DUP4 DUP4 SSTORE DUP1 DUP5 LT PUSH2 0x4137 JUMPI JUMPDEST POP PUSH2 0x4109 PUSH1 0x20 DUP1 SWAP3 ADD SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x411B JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP4 DUP3 PUSH2 0x412B DUP4 SWAP5 MLOAD DUP7 PUSH2 0x3CF1 JUMP JUMPDEST ADD SWAP3 ADD SWAP4 ADD SWAP3 SWAP1 PUSH2 0x410D JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE DUP4 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x4154 JUMPI POP PUSH2 0x40F4 JUMP JUMPDEST DUP1 PUSH2 0x4160 PUSH1 0x1 SWAP3 PUSH2 0x38A8 JUMP JUMPDEST ADD PUSH2 0x4147 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xBE9 JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 DUP2 SLOAD PUSH2 0x418A DUP2 PUSH2 0x222C JUMP JUMPDEST SWAP3 PUSH1 0x40 SWAP4 PUSH2 0x419A DUP6 MLOAD SWAP2 DUP3 PUSH2 0xB00 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP5 PUSH1 0x20 DUP1 SWAP3 ADD SWAP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x41C0 JUMPI POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP5 PUSH1 0x1 SWAP3 DUP5 MLOAD PUSH2 0x41D1 DUP2 PUSH2 0xACA JUMP JUMPDEST PUSH2 0x41DA DUP8 PUSH2 0xB23 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x41E7 DUP6 DUP9 ADD PUSH2 0xB23 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH1 0x2 DUP8 ADD SLOAD DUP7 DUP3 ADD MSTORE PUSH1 0x3 DUP8 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP8 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP4 ADD SWAP5 ADD SWAP4 SWAP2 PUSH2 0x41B1 JUMP JUMPDEST PUSH1 0x4 DUP3 LT ISZERO PUSH2 0xBE9 JUMPI MSTORE JUMP JUMPDEST SWAP1 DUP2 SLOAD PUSH2 0x4238 DUP2 PUSH2 0x222C JUMP JUMPDEST SWAP3 PUSH2 0x4246 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xB00 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP2 DUP7 ADD JUMPDEST DUP5 DUP5 LT PUSH2 0x4265 JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP4 DUP2 SWAP3 PUSH2 0x4273 DUP6 PUSH2 0xB23 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP4 ADD SWAP3 SWAP1 PUSH2 0x4257 JUMP JUMPDEST PUSH1 0x5 DUP3 LT ISZERO PUSH2 0xBE9 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH2 0xB61 PUSH2 0x435E PUSH1 0xB PUSH2 0x429E PUSH2 0x112A JUMP JUMPDEST SWAP5 DUP1 SLOAD DUP7 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x42B9 PUSH1 0x2 DUP3 ADD PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x42CA PUSH1 0x3 DUP3 ADD PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x42DB PUSH1 0x4 DUP3 ADD PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP8 ADD MSTORE PUSH2 0x4300 PUSH1 0x7 DUP3 ADD PUSH2 0x417E JUMP JUMPDEST PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x4332 PUSH1 0x8 DUP3 ADD SLOAD PUSH2 0x431E PUSH1 0xFF DUP3 AND PUSH2 0x100 DUP11 ADD PUSH2 0x4220 JUMP JUMPDEST PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x120 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x433E PUSH1 0x9 DUP3 ADD PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x4350 PUSH1 0xA DUP3 ADD PUSH2 0x422C JUMP JUMPDEST PUSH2 0x160 DUP8 ADD MSTORE ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x180 DUP5 ADD PUSH2 0x4281 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xF6A JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xAC5 JUMPI PUSH2 0x43A1 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0xF52 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x43C9 DUP3 PUSH2 0x222C JUMP JUMPDEST PUSH2 0x43D6 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0xB00 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x43E7 PUSH1 0x1F NOT SWAP2 PUSH2 0x222C JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xF6A JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID PUSH7 0xDE8FFDA797E3DE SWAP13 SDIV 0xE8 0xFC JUMPI 0xB3 0xBF 0xE 0xC2 DUP11 SWAP4 0xD BLOCKHASH 0xB0 0xD2 DUP6 0xD9 EXTCODECOPY MOD POP SHR 0xF6 LOG0 SWAP1 DUP12 0xE0 SMOD SWAP13 MSTORE8 AND MSIZE EQ SGT PREVRANDAO 0xCD 0x1F 0xD0 LOG4 CALLCODE DUP5 NOT 0x49 PUSH32 0x9722A3DAAFE3B4186F6B6457E0F3F7A9FE364FAAB93B216DA50A3214154F22A0 LOG2 0xB4 ISZERO 0xB2 GASPRICE DUP5 0xC8 AND SWAP15 DUP12 PUSH4 0x6EE3DDF2 MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF DUP13 JUMPDEST 0xE1 0xE5 0xEB 0xEC PUSH30 0x5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925A264697066 PUSH20 0x58221220F737762FBC1FAA179F3AB77AFB22C467 JUMP 0xB5 CALLER 0x4A SMOD TIMESTAMP PUSH1 0x68 0xAC 0xB6 PUSH14 0x41BEE2B86D64736F6C6343000813 STOP CALLER ","sourceMap":"498:10484:30:-:0;;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;-1:-1:-1;;;;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;498:10484:30;;;;;;;;;;;;;;925:15:1;498:10484:30;;-1:-1:-1;;;;;;498:10484:30;665:10:21;498:10484:30;;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;;942:43:0;665:10:21;;942:43:0;498:10484:30;;;;;;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;-1:-1:-1;498:10484:30;;-1:-1:-1;;498:10484:30;;;;;;;;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;;;;;-1:-1:-1;498:10484:30;;;;;-1:-1:-1;498:10484:30;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":2251,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_address_26515":{"entryPoint":2185,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_26528":{"entryPoint":2207,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_26626":{"entryPoint":2229,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":3496,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_array_string_dyn":{"entryPoint":9023,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_struct_Reward_dyn":{"entryPoint":8771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":4434,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool":{"entryPoint":7115,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bytes4_fromMemory":{"entryPoint":13308,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_enum_Category":{"entryPoint":5739,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_enum_Category_26560":{"entryPoint":5724,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_enum_ProjectStatus":{"entryPoint":9010,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string":{"entryPoint":4489,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_Asset":{"entryPoint":9151,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_addresst_uint256":{"entryPoint":3384,"id":null,"parameterSlots":1,"returnSlots":3},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address_uint256_bytes":{"entryPoint":13372,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_address_uint256_bytes_44347":{"entryPoint":13329,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":1942,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_string_dyn":{"entryPoint":10503,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_struct_Reward_dyn":{"entryPoint":10348,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":1319,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_array_uint256_dyn":{"entryPoint":10997,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_uint256_dyn_memory_ptr":{"entryPoint":1267,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_enum_Category":{"entryPoint":3077,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_enum_ProjectStatus":{"entryPoint":3054,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":1739,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":14577,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_to_string":{"entryPoint":1702,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral_1e76":{"entryPoint":12354,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_Asset":{"entryPoint":10588,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_uint256_string_string_string_uint256_uint256_enum_ProjectStatus_address_string_enum_Category":{"entryPoint":3090,"id":null,"parameterSlots":12,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":17343,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":4394,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_26623":{"entryPoint":4381,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":12296,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_struct_Reward_dyn":{"entryPoint":8748,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":4407,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_bytes_storage_ptr":{"entryPoint":14471,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_address_to_array_address_dyn_storage_ptr":{"entryPoint":17284,"id":null,"parameterSlots":2,"returnSlots":0},"array_push_from_uint256_to_array_uint256_dyn_storage_ptr":{"entryPoint":14176,"id":null,"parameterSlots":2,"returnSlots":0},"array_push_from_uint256_to_array_uint256_dyn_storage_ptr_26632":{"entryPoint":14122,"id":null,"parameterSlots":1,"returnSlots":0},"checked_add_uint256":{"entryPoint":12994,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256_26613":{"entryPoint":12966,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256_26779":{"entryPoint":12980,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_uint256":{"entryPoint":12951,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":15532,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":14481,"id":null,"parameterSlots":2,"returnSlots":0},"convert_uint8_to_bytes1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_array_string_dyn":{"entryPoint":16940,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_array_struct_Reward_dyn":{"entryPoint":16766,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":2851,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_to_storage_from_array_string_dyn_to_array_string_dyn":{"entryPoint":16601,"id":null,"parameterSlots":2,"returnSlots":0},"copy_array_to_storage_from_array_struct_Reward_dyn_to_array_struct_Reward_dyn":{"entryPoint":16371,"id":null,"parameterSlots":2,"returnSlots":0},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":15601,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1667,"id":null,"parameterSlots":3,"returnSlots":0},"copy_struct_to_storage_from_struct_Reward_to_struct_Reward":{"entryPoint":16094,"id":null,"parameterSlots":2,"returnSlots":0},"external_fun_activeAssets":{"entryPoint":6670,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_addAsset":{"entryPoint":9448,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_addInvestment":{"entryPoint":6223,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_addInvestor":{"entryPoint":7941,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_allowRefunding":{"entryPoint":11840,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_allowTransfers":{"entryPoint":8619,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_approve":{"entryPoint":2271,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_assetApprovals":{"entryPoint":1615,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_assetInvestors":{"entryPoint":8066,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_assetMap":{"entryPoint":3234,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_assetOwner":{"entryPoint":3592,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOf":{"entryPoint":6037,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOf_2325":{"entryPoint":5912,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_burn":{"entryPoint":4770,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_categoryAssets":{"entryPoint":5777,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_clearApproval":{"entryPoint":8668,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_completedAssets":{"entryPoint":3951,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_exists":{"entryPoint":5415,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_failedAssets":{"entryPoint":11639,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_fundedAssets":{"entryPoint":6589,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getActiveAssets":{"entryPoint":2559,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getApproved":{"entryPoint":2137,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getAsset":{"entryPoint":10842,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getAssetInvestors":{"entryPoint":2010,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getAssetsByCategory":{"entryPoint":7328,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getAssetsCount":{"entryPoint":2529,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getAssetsOfOwner":{"entryPoint":11720,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getCompletedAssets":{"entryPoint":7707,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getFailedAssets":{"entryPoint":4127,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getFundedAssets":{"entryPoint":1339,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getInvestorAssets":{"entryPoint":10228,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getInvestorTokens":{"entryPoint":11034,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getTotalInvestors":{"entryPoint":4084,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_handleRewardAddedToAsset":{"entryPoint":4516,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_incrementAssetsCount":{"entryPoint":3644,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_investmentAmountOf":{"entryPoint":7657,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_investmentReceived":{"entryPoint":8022,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_investmentRefunded":{"entryPoint":11889,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_investorAssets":{"entryPoint":7583,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_investorTokens":{"entryPoint":8199,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isApprovedForAll":{"entryPoint":10147,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isApprovedOrOwner":{"entryPoint":5291,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isRefundingAllowed":{"entryPoint":5863,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isTransferAllowed":{"entryPoint":7797,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mint":{"entryPoint":8328,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_name":{"entryPoint":1756,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_ownedAssetsCount":{"entryPoint":6165,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":6878,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_ownerOf":{"entryPoint":5694,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_ownerToAssets":{"entryPoint":7509,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_pause":{"entryPoint":6477,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_paused":{"entryPoint":5617,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_pendingReturns":{"entryPoint":6923,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":5955,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom":{"entryPoint":4730,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom_2617":{"entryPoint":7846,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setApprovalForAll":{"entryPoint":7130,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_supportsInterface":{"entryPoint":1479,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_symbol":{"entryPoint":6982,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_tokenByIndex":{"entryPoint":5464,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_tokenOfOwnerByIndex":{"entryPoint":3677,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_tokenURI":{"entryPoint":8148,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalInvestment":{"entryPoint":3856,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalSupply":{"entryPoint":3466,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transfer":{"entryPoint":7460,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferFrom":{"entryPoint":3549,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":11430,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_unpause":{"entryPoint":4217,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_updateAsset":{"entryPoint":9899,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_updateAssetReward":{"entryPoint":6733,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_updateInvestmentRefunded":{"entryPoint":5652,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_updateInvestorTokens":{"entryPoint":8259,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_updatePendingReturns":{"entryPoint":3426,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_updateRewardTokenAddress":{"entryPoint":4032,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2649,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_enum_ProjectStatus":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":13421,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":2816,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_26639":{"entryPoint":2729,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_26860":{"entryPoint":2762,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_44342":{"entryPoint":2789,"id":null,"parameterSlots":1,"returnSlots":0},"fun_addTokenToAllTokensEnumeration":{"entryPoint":14229,"id":3417,"parameterSlots":1,"returnSlots":0},"fun_addTokenToOwnerEnumeration":{"entryPoint":14066,"id":3397,"parameterSlots":2,"returnSlots":0},"fun_approve":{"entryPoint":13242,"id":2951,"parameterSlots":1,"returnSlots":0},"fun_balanceOf":{"entryPoint":12140,"id":2325,"parameterSlots":1,"returnSlots":1},"fun_checkOnERC721Received":{"entryPoint":13662,"id":3015,"parameterSlots":4,"returnSlots":1},"fun_checkOnERC721Received_26615":{"entryPoint":13469,"id":3015,"parameterSlots":3,"returnSlots":1},"fun_exists":{"entryPoint":12812,"id":2664,"parameterSlots":1,"returnSlots":1},"fun_getApproved":{"entryPoint":15326,"id":6478,"parameterSlots":1,"returnSlots":1},"fun_isApprovedOrOwner":{"entryPoint":12570,"id":2706,"parameterSlots":2,"returnSlots":1},"fun_ownerOf":{"entryPoint":12692,"id":2353,"parameterSlots":1,"returnSlots":1},"fun_ownerOf_6412":{"entryPoint":15240,"id":6412,"parameterSlots":1,"returnSlots":1},"fun_removeTokenFromAllTokensEnumeration":{"entryPoint":14299,"id":3528,"parameterSlots":1,"returnSlots":0},"fun_safeTransferFrom":{"entryPoint":12315,"id":2617,"parameterSlots":4,"returnSlots":0},"fun_setTokenURI":{"entryPoint":15807,"id":3626,"parameterSlots":2,"returnSlots":0},"fun_toString":{"entryPoint":15025,"id":4119,"parameterSlots":1,"returnSlots":1},"fun_tokenURI":{"entryPoint":14600,"id":3604,"parameterSlots":1,"returnSlots":1},"fun_tokenURI_2415":{"entryPoint":14823,"id":2415,"parameterSlots":1,"returnSlots":1},"fun_transfer":{"entryPoint":13007,"id":2927,"parameterSlots":3,"returnSlots":0},"increment_uint256":{"entryPoint":14993,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":6142,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_26536":{"entryPoint":6090,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_26544":{"entryPoint":6116,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_26570":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_26628":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_26629":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_enum_Category_array_uint256_dyn_storage_of_enum_Category":{"entryPoint":5752,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_address_of_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_uint256_address_of_uint256_26517":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_address_of_uint256_26537":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_address_of_uint256_26546":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_address_of_uint256_26548":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_address_of_uint256_26567":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_address_of_uint256_26568":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_address_of_uint256_26569":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_address_of_uint256_26571":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_address_of_uint256_26627":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_address_of_uint256_26630":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_address_of_uint256_26640":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_address_of_uint256_26644":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_address_of_uint256_26714":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_bytes":{"entryPoint":15008,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_struct_Reward_dyn":{"entryPoint":17393,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_whenNotPaused":{"entryPoint":13843,"id":157,"parameterSlots":3,"returnSlots":0},"modifier_whenNotPaused_26611":{"entryPoint":13785,"id":157,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":12929,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":3017,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3900,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2707,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_reference_type_struct_Asset":{"entryPoint":17037,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":12473,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_1e76":{"entryPoint":12437,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_2a63":{"entryPoint":15457,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_455f":{"entryPoint":12841,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_6857":{"entryPoint":13722,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7395":{"entryPoint":12045,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9924":{"entryPoint":11933,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c868":{"entryPoint":12194,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_Reward_dyn":{"entryPoint":17256,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_uint256_dyn":{"entryPoint":3922,"id":null,"parameterSlots":2,"returnSlots":2},"storage_set_to_zero_string":{"entryPoint":14504,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_address_to_address_26620":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_address_to_address_26646":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_address_to_t_address":{"entryPoint":12008,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":12177,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool_26631":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_enum_Category_to_enum_Category":{"entryPoint":16742,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_enum_ProjectStatus_to_enum_ProjectStatus":{"entryPoint":16577,"id":null,"parameterSlots":2,"returnSlots":0},"validator_assert_enum_Category":{"entryPoint":3067,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_enum_ProjectStatus":{"entryPoint":3039,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":1461,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_enum_Category":{"entryPoint":17025,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_enum_ProjectStatus":{"entryPoint":16928,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1BDC460 EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0x3385770 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0x7C90547 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xAAC5DFD EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0xFD8AEE8 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0x129F9008 EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x14FCDE03 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0x2A0EE644 EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0x2C5BDB1F EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0x32A64370 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0x33A90C36 EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0x34422A47 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0x34899521 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x3ADC860E EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0x3D3EB314 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x3F9AA154 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0x430C2081 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0x518E2BDD EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x5531AD6A EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0x5D0DEAD2 EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x68AD1C79 EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0x6DD501D7 EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x722713F7 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x77394A73 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x79F48424 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x84BBFFE7 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0x86887E1B EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0x87A115E6 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0x8DDAC1EF EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xA2311D5F EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xADC649E1 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0xAE7D9553 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0xAE908698 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xB5FF2582 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xB6160915 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xBB7E385A EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xBBE30722 EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xC0ADB910 EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0xC619C4A2 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xCBEABA77 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0xCD9DF190 EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0xD166E4EE EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xD3FC9864 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xD86DA278 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xDAA5FE2D EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0xDC289F48 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xE14CA948 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0xE9E7854C EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0xEAC8F5B8 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xEBCAB605 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xF35B25A8 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xF3AB880E EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xFBDC985A EQ PUSH2 0x386 JUMPI PUSH4 0xFD27FF81 EQ PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E71 JUMP JUMPDEST PUSH2 0x2E40 JUMP JUMPDEST PUSH2 0x2DC8 JUMP JUMPDEST PUSH2 0x2D77 JUMP JUMPDEST PUSH2 0x2CA6 JUMP JUMPDEST PUSH2 0x2B1A JUMP JUMPDEST PUSH2 0x2A5A JUMP JUMPDEST PUSH2 0x27F4 JUMP JUMPDEST PUSH2 0x27A3 JUMP JUMPDEST PUSH2 0x26AB JUMP JUMPDEST PUSH2 0x24E8 JUMP JUMPDEST PUSH2 0x21DC JUMP JUMPDEST PUSH2 0x21AB JUMP JUMPDEST PUSH2 0x2088 JUMP JUMPDEST PUSH2 0x2043 JUMP JUMPDEST PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x2007 JUMP JUMPDEST PUSH2 0x1FD4 JUMP JUMPDEST PUSH2 0x1F82 JUMP JUMPDEST PUSH2 0x1F56 JUMP JUMPDEST PUSH2 0x1F05 JUMP JUMPDEST PUSH2 0x1DE9 JUMP JUMPDEST PUSH2 0x1EA6 JUMP JUMPDEST PUSH2 0x1E75 JUMP JUMPDEST PUSH2 0x1E1B JUMP JUMPDEST PUSH2 0x1D9F JUMP JUMPDEST PUSH2 0x1D55 JUMP JUMPDEST PUSH2 0x1D24 JUMP JUMPDEST PUSH2 0x1CA0 JUMP JUMPDEST PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x1B46 JUMP JUMPDEST PUSH2 0x1B0B JUMP JUMPDEST PUSH2 0x1ADE JUMP JUMPDEST PUSH2 0x1A4D JUMP JUMPDEST PUSH2 0x1A0E JUMP JUMPDEST PUSH2 0x19BD JUMP JUMPDEST PUSH2 0x194D JUMP JUMPDEST PUSH2 0x184F JUMP JUMPDEST PUSH2 0x1815 JUMP JUMPDEST PUSH2 0x1795 JUMP JUMPDEST PUSH2 0x1743 JUMP JUMPDEST PUSH2 0x1718 JUMP JUMPDEST PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0x1691 JUMP JUMPDEST PUSH2 0x163E JUMP JUMPDEST PUSH2 0x1614 JUMP JUMPDEST PUSH2 0x15F1 JUMP JUMPDEST PUSH2 0xFF4 JUMP JUMPDEST PUSH2 0x1527 JUMP JUMPDEST PUSH2 0x1558 JUMP JUMPDEST PUSH2 0x14AB JUMP JUMPDEST PUSH2 0x12A2 JUMP JUMPDEST PUSH2 0x127A JUMP JUMPDEST PUSH2 0x11A4 JUMP JUMPDEST PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x101F JUMP JUMPDEST PUSH2 0xFC0 JUMP JUMPDEST PUSH2 0xF10 JUMP JUMPDEST PUSH2 0xF6F JUMP JUMPDEST PUSH2 0xE5D JUMP JUMPDEST PUSH2 0xE3C JUMP JUMPDEST PUSH2 0xE08 JUMP JUMPDEST PUSH2 0xDDD JUMP JUMPDEST PUSH2 0xD8A JUMP JUMPDEST PUSH2 0xD62 JUMP JUMPDEST PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x9FF JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH2 0x859 JUMP JUMPDEST PUSH2 0x7DA JUMP JUMPDEST PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x64F JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x513 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x505 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x538 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x4F3 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 DUP3 PUSH1 0x14 SLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 SWAP5 ADD SWAP1 PUSH1 0x14 DUP5 MSTORE DUP5 DUP5 KECCAK256 SWAP4 JUMPDEST DUP6 DUP3 DUP3 LT PUSH2 0x597 JUMPI POP POP POP PUSH2 0x57F SWAP3 POP SUB DUP4 PUSH2 0xB00 JUMP JUMPDEST PUSH2 0x593 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x4F3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP6 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 DUP9 SWAP6 POP SWAP4 ADD SWAP3 ADD PUSH2 0x568 JUMP JUMPDEST DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0x5B0 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x5E6 DUP2 PUSH2 0x5B5 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x60C JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x63E JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x62D JUMPI JUMPDEST POP CODESIZE PUSH2 0x601 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x626 JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x61F JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x696 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x686 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x6BF DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x683 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x538 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x6A6 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD DUP2 DUP1 SLOAD PUSH2 0x6FD DUP2 PUSH2 0xA59 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x76E JUMPI POP PUSH1 0x1 EQ PUSH2 0x733 JUMPI JUMPDEST PUSH2 0x593 DUP5 PUSH2 0x727 DUP2 DUP9 SUB DUP3 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x6CB JUMP JUMPDEST SWAP4 POP DUP2 DUP1 MSTORE PUSH1 0x20 SWAP4 DUP5 DUP4 KECCAK256 JUMPDEST DUP3 DUP5 LT PUSH2 0x75B JUMPI POP POP POP DUP2 PUSH2 0x593 SWAP4 PUSH2 0x727 SWAP3 DUP3 ADD ADD SWAP4 PUSH2 0x717 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 DUP2 ADD PUSH2 0x73F JUMP JUMPDEST PUSH2 0x593 SWAP7 POP PUSH2 0x727 SWAP5 POP PUSH1 0x20 SWAP3 POP DUP6 SWAP4 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP4 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x7BD JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x7AF JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP2 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x839 JUMPI PUSH2 0x593 DUP6 PUSH2 0x82D DUP2 DUP10 SUB DUP3 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x796 JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x816 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x20 PUSH2 0x877 PUSH1 0x4 CALLDATALOAD PUSH2 0x3BDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5B0 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5B0 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5B0 JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5B0 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x8F8 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x90E DUP5 PUSH2 0x3B88 JUMP JUMPDEST AND SWAP1 DUP3 AND SWAP2 DUP2 DUP4 EQ PUSH2 0x9A5 JUMPI DUP2 CALLER SUB PUSH2 0x96D JUMPI PUSH2 0x958 SWAP1 PUSH2 0x939 DUP6 PUSH1 0x0 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4486 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 LOG4 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2737BA2A3432A0B9B9B2BA27BBB732B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x10DD5C9C995B9D13DDDB995C905C1C1C9BDD985B PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 DUP3 PUSH1 0x13 SLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 SWAP5 ADD SWAP1 PUSH1 0x13 DUP5 MSTORE DUP5 DUP5 KECCAK256 SWAP4 JUMPDEST DUP6 DUP3 DUP3 LT PUSH2 0xA43 JUMPI POP POP POP PUSH2 0x57F SWAP3 POP SUB DUP4 PUSH2 0xB00 JUMP JUMPDEST DUP6 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 DUP9 SWAP6 POP SWAP4 ADD SWAP3 ADD PUSH2 0xA2C JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xA89 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xA73 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xA68 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1A0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xAC5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xA93 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xAC5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xAC5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0xAC5 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0xB37 DUP5 PUSH2 0xA59 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0xBA6 JUMPI POP PUSH1 0x1 EQ PUSH2 0xB63 JUMPI JUMPDEST POP POP PUSH2 0xB61 SWAP3 POP SUB DUP4 PUSH2 0xB00 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0xB8E JUMPI POP POP PUSH2 0xB61 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xB53 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0xB76 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB61 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xB53 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0xBE9 JUMPI JUMP JUMPDEST PUSH2 0xBC9 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0xBE9 JUMPI MSTORE JUMP JUMPDEST PUSH1 0x5 GT ISZERO PUSH2 0xBE9 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0xBE9 JUMPI MSTORE JUMP JUMPDEST SWAP12 SWAP11 SWAP9 SWAP4 DUP13 PUSH2 0xB61 SWAP12 SWAP7 PUSH2 0xC5A PUSH2 0xC68 SWAP4 PUSH2 0xC4C PUSH2 0xC7D SWAP9 PUSH2 0x140 SWAP15 SWAP9 PUSH2 0xC9A SWAP15 SWAP9 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x160 DUP1 PUSH1 0x40 DUP9 ADD MSTORE DUP7 ADD SWAP1 PUSH2 0x6A6 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x6A6 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x6A6 JUMP JUMPDEST SWAP6 PUSH1 0xA0 DUP14 ADD MSTORE PUSH1 0xC0 DUP13 ADD MSTORE PUSH1 0xE0 DUP12 ADD SWAP1 PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x100 DUP10 ADD MSTORE DUP8 DUP3 SUB PUSH2 0x120 DUP10 ADD MSTORE PUSH2 0x6A6 JUMP JUMPDEST SWAP5 ADD SWAP1 PUSH2 0xC05 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x593 PUSH1 0x1 DUP4 ADD SLOAD SWAP2 PUSH2 0xCDA PUSH1 0x2 DUP6 ADD PUSH2 0xB23 JUMP JUMPDEST SWAP4 PUSH2 0xCE7 PUSH1 0x3 DUP3 ADD PUSH2 0xB23 JUMP JUMPDEST SWAP2 PUSH2 0xCF4 PUSH1 0x4 DUP4 ADD PUSH2 0xB23 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x6 DUP5 ADD SLOAD SWAP1 PUSH1 0x8 DUP6 ADD SLOAD SWAP4 PUSH1 0xFF PUSH1 0xB PUSH2 0xD16 PUSH1 0x9 DUP10 ADD PUSH2 0xB23 JUMP JUMPDEST SWAP8 ADD SLOAD AND SWAP7 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 PUSH1 0xFF PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP10 PUSH1 0x8 SHR AND SWAP9 AND SWAP7 DUP13 PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x5B0 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH2 0xD87 PUSH2 0xD73 CALLDATASIZE PUSH2 0xD38 JUMP JUMPDEST SWAP3 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x1E PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x17FE JUMP JUMPDEST SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x5B0 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x5B0 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH2 0xE06 PUSH2 0xDEE CALLDATASIZE PUSH2 0xDA8 JUMP JUMPDEST SWAP2 PUSH2 0xE01 PUSH2 0xDFC DUP5 CALLER PUSH2 0x311A JUMP JUMPDEST PUSH2 0x2FA2 JUMP JUMPDEST PUSH2 0x32CF JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0xE58 PUSH1 0xC SLOAD PUSH2 0x3A91 JUMP JUMPDEST PUSH1 0xC SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0xE76 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xE83 DUP2 PUSH2 0x2F6C JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0xEB7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xF6A JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xF3C JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x16 SLOAD DUP2 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x16 PUSH1 0x0 MSTORE PUSH32 0xD833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124289 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0xE06 PUSH2 0xFDC PUSH2 0x89F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x2EE8 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 DUP3 PUSH1 0x15 SLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 SWAP5 ADD SWAP1 PUSH1 0x15 DUP5 MSTORE DUP5 DUP5 KECCAK256 SWAP4 JUMPDEST DUP6 DUP3 DUP3 LT PUSH2 0x1063 JUMPI POP POP POP PUSH2 0x57F SWAP3 POP SUB DUP4 PUSH2 0xB00 JUMP JUMPDEST DUP6 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 DUP9 SWAP6 POP SWAP4 ADD SWAP3 ADD PUSH2 0x104C JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0xB SLOAD PUSH2 0x10A5 PUSH1 0x8 DUP3 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2E9D JUMP JUMPDEST PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x10E1 JUMPI PUSH1 0xFF NOT AND PUSH1 0xB SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xB61 DUP3 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xB61 DUP3 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xAC5 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x115E DUP3 PUSH2 0x1137 JUMP JUMPDEST SWAP2 PUSH2 0x116C PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xB00 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x5B0 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x5B0 JUMPI DUP2 PUSH1 0x20 PUSH2 0x538 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x1152 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x5B0 JUMPI PUSH2 0x11D5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1189 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x5B0 JUMPI PUSH2 0x11EE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1189 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x0 SWAP3 PUSH1 0x4 CALLDATALOAD DUP5 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x7 PUSH1 0x40 DUP6 KECCAK256 ADD SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x1215 DUP6 PUSH2 0xACA JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xAC5 JUMPI PUSH2 0x1255 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x4368 JUMP JUMPDEST PUSH2 0x1266 JUMPI SWAP1 PUSH2 0x1263 SWAP2 PUSH2 0x3EDE JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH2 0xE06 PUSH2 0x128B CALLDATASIZE PUSH2 0xDA8 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1299 DUP5 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0x301B JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x12C0 DUP2 CALLER PUSH2 0x311A JUMP JUMPDEST ISZERO PUSH2 0x144D JUMPI DUP1 PUSH2 0x12CF DUP2 PUSH2 0x3194 JUMP JUMPDEST PUSH2 0x12DE PUSH1 0xFF PUSH1 0xB SLOAD AND ISZERO PUSH2 0x359A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 PUSH2 0x1398 JUMPI SWAP1 PUSH2 0x1315 PUSH1 0x0 SWAP3 PUSH2 0x12FE DUP6 PUSH2 0x3795 JUMP JUMPDEST PUSH2 0x1307 DUP6 PUSH2 0x37DB JUMP JUMPDEST PUSH2 0x1310 DUP6 PUSH2 0x33BA JUMP JUMPDEST PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x131F DUP2 SLOAD PUSH2 0x3297 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1348 PUSH2 0x1338 DUP5 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4466 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP1 LOG4 PUSH2 0x1376 PUSH2 0x1371 DUP3 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x3887 JUMP JUMPDEST PUSH2 0x137C JUMPI STOP JUMPDEST PUSH2 0x1393 PUSH2 0xE06 SWAP2 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x38A8 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH2 0x13A4 DUP2 PUSH2 0x2F6C JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP3 SWAP1 DUP4 GT PUSH2 0x1448 JUMPI PUSH2 0x1315 PUSH1 0x0 SWAP3 DUP6 SWAP5 PUSH2 0x1402 DUP6 SWAP2 DUP8 DUP4 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 SUB PUSH2 0x1408 JUMPI JUMPDEST POP DUP3 PUSH2 0x13E9 DUP10 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x13F3 DUP5 PUSH2 0x17CA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x12FE JUMP JUMPDEST DUP7 DUP5 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP3 DUP6 MSTORE PUSH1 0x20 MSTORE PUSH2 0x1441 PUSH1 0x40 DUP6 KECCAK256 SLOAD DUP1 PUSH2 0x1430 DUP5 PUSH2 0x13F3 DUP11 PUSH2 0x17CA JUMP JUMPDEST SSTORE PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE PUSH2 0x13D3 JUMP JUMPDEST PUSH2 0x3281 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314275726E61626C653A2063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1B995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x20 PUSH2 0x14C6 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0xE DUP4 MSTORE PUSH2 0x14E3 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x30B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP1 PUSH2 0x14F6 DUP6 PUSH2 0x3B88 JUMP JUMPDEST AND SWAP3 AND SWAP2 DUP3 EQ SWAP3 DUP4 ISZERO PUSH2 0x1511 JUMPI JUMPDEST POP POP POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH2 0x151D SWAP2 SWAP3 SWAP4 POP PUSH2 0x3BDE JUMP JUMPDEST AND EQ CODESIZE DUP1 DUP1 PUSH2 0x1504 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1597 JUMPI PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4446 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xB SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1D PUSH1 0x20 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x20 PUSH2 0x877 PUSH1 0x4 CALLDATALOAD PUSH2 0x3B88 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x5B0 JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x5B0 JUMPI JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xBE9 JUMPI PUSH1 0x0 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x16AA PUSH2 0x165C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xBE9 JUMPI PUSH1 0x0 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x16D9 SWAP2 PUSH2 0xF52 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x20 PUSH2 0x173B PUSH2 0x1736 PUSH2 0x889 JUMP JUMPDEST PUSH2 0x2F6C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AD JUMPI PUSH1 0xB SLOAD DUP2 PUSH1 0x8 DUP3 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1772 CALLER DUP3 EQ PUSH2 0x2E9D JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4426 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP1 LOG3 PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0xB SSTORE DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x17B1 CALLER ISZERO ISZERO PUSH2 0x2F0D JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1836 PUSH2 0x889 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH2 0x185D CALLDATASIZE PUSH2 0xD38 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH2 0x1876 DUP4 PUSH1 0x40 DUP7 KECCAK256 PUSH2 0x17FE JUMP JUMPDEST DUP1 SLOAD SWAP1 DUP3 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1448 JUMPI SSTORE DUP2 DUP5 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH2 0x189B DUP3 DUP3 SLOAD PUSH2 0x32C2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x18B1 DUP3 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x18BC DUP3 DUP3 SLOAD PUSH2 0x32C2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x18DB DUP4 PUSH2 0x18D6 DUP5 PUSH1 0x0 MSTORE PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x17FE JUMP JUMPDEST SLOAD EQ PUSH2 0x18E5 JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH2 0x192C DUP2 PUSH2 0x1927 DUP5 PUSH2 0x190D PUSH2 0x193B SWAP7 PUSH2 0x1908 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x4384 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x22 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x3760 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1945 DUP2 SLOAD PUSH2 0x3A91 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0xB SLOAD PUSH1 0x1 SWAP1 PUSH2 0x197C PUSH1 0x8 DUP3 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2E9D JUMP JUMPDEST PUSH2 0x1989 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x359A JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0xB SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x14 PUSH1 0x0 MSTORE PUSH32 0xCE6D7B5282BD9A3661AE061FEED1DBDA4E52AB073B1F9285BE6E155D9C38D4EC ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x13 SLOAD DUP2 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x13 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4406 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x7 PUSH1 0x40 DUP5 KECCAK256 ADD SLOAD DUP2 LT ISZERO PUSH2 0x1AA2 JUMPI PUSH2 0x1A96 SWAP2 DUP4 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x7 PUSH1 0x40 DUP5 KECCAK256 ADD PUSH2 0x4368 JUMP JUMPDEST POP PUSH1 0x4 PUSH1 0x44 CALLDATALOAD SWAP2 ADD SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x92DCECC2D8D2C840E4CAEEC2E4C840D2DCC8CAF PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x20 PUSH2 0x1B3D PUSH2 0x1B29 PUSH2 0x89F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1E DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x17FE JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD DUP2 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x1B6A DUP3 PUSH2 0xA59 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x76E JUMPI POP PUSH1 0x1 EQ PUSH2 0x1B90 JUMPI PUSH2 0x593 DUP5 PUSH2 0x727 DUP2 DUP9 SUB DUP3 PUSH2 0xB00 JUMP JUMPDEST DUP1 SWAP5 POP DUP3 MSTORE PUSH1 0x20 SWAP4 DUP5 DUP4 KECCAK256 JUMPDEST DUP3 DUP5 LT PUSH2 0x1BB8 JUMPI POP POP POP DUP2 PUSH2 0x593 SWAP4 PUSH2 0x727 SWAP3 DUP3 ADD ADD SWAP4 PUSH2 0x717 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 DUP2 ADD PUSH2 0x1B9C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x5B0 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x1BF3 PUSH2 0x889 JUMP JUMPDEST PUSH2 0x1BFB PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 CALLER DUP4 EQ PUSH2 0x1C5F JUMPI DUP2 PUSH2 0x1C28 PUSH2 0x1C2D SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x17FE JUMP JUMPDEST PUSH2 0x2F91 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE CALLER SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP1 PUSH1 0x20 SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x22A9219B99189D1030B8383937BB32903A379031B0B63632B9 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x1CBA PUSH2 0x165C JUMP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xBE9 JUMPI PUSH1 0x0 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP2 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1D0D JUMPI PUSH2 0x593 DUP6 PUSH2 0x1D01 DUP2 DUP10 SUB DUP3 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x527 JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1CEA JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x1D4A PUSH2 0x1D40 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x32CF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x1D6E PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x16D9 SWAP2 PUSH2 0xF52 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x1DB8 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x22 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x16D9 SWAP2 PUSH2 0xF52 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x20 PUSH2 0x1B3D PUSH2 0x1E07 PUSH2 0x89F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x18 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x17FE JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 DUP3 PUSH1 0x16 SLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 SWAP5 ADD SWAP1 PUSH1 0x16 DUP5 MSTORE DUP5 DUP5 KECCAK256 SWAP4 JUMPDEST DUP6 DUP3 DUP3 LT PUSH2 0x1E5F JUMPI POP POP POP PUSH2 0x57F SWAP3 POP SUB DUP4 PUSH2 0xB00 JUMP JUMPDEST DUP6 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 DUP9 SWAP6 POP SWAP4 ADD SWAP3 ADD PUSH2 0x1E48 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x1EBF PUSH2 0x889 JUMP JUMPDEST PUSH2 0x1EC7 PUSH2 0x89F JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x5B0 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x5B0 JUMPI PUSH2 0x1EFB PUSH2 0xE06 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x1152 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x301B JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1263 PUSH2 0x1F24 PUSH2 0x89F JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH2 0x1F3D DUP2 PUSH1 0x40 DUP7 KECCAK256 PUSH2 0x4384 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x22 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH2 0x3760 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x19 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1FBB SWAP2 PUSH2 0xF52 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x593 PUSH2 0x1FF3 PUSH1 0x4 CALLDATALOAD PUSH2 0x3908 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x6A6 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH2 0x202C PUSH2 0x2018 CALLDATASIZE PUSH2 0xD38 JUMP JUMPDEST SWAP3 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x17FE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x205C PUSH2 0x89F JUMP JUMPDEST PUSH2 0x2075 PUSH1 0x0 SWAP2 PUSH1 0x4 CALLDATALOAD DUP4 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH2 0x17FE JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x40 DUP3 KECCAK256 SSTORE DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x20A1 PUSH2 0x889 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x5B0 JUMPI PUSH2 0x20C3 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1189 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x2170 JUMPI PUSH2 0x215F SWAP4 PUSH2 0x216A PUSH1 0x40 MLOAD SWAP3 PUSH2 0x20E8 DUP5 PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0x2164 PUSH1 0x0 SWAP8 DUP6 DUP10 DUP1 SWAP8 MSTORE PUSH2 0x210B PUSH2 0x2106 PUSH2 0x2102 DUP12 PUSH2 0x320C JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x3C61 JUMP JUMPDEST PUSH2 0x2115 DUP10 DUP8 PUSH2 0x35D9 JUMP JUMPDEST PUSH2 0x211E DUP7 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x2128 DUP2 SLOAD PUSH2 0x32A6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x2142 DUP7 PUSH2 0x939 DUP12 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4466 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 DUP2 DUP11 DUP11 DUP11 DUP2 DUP1 LOG4 PUSH2 0x349D JUMP JUMPDEST PUSH2 0x3095 JUMP JUMPDEST DUP6 PUSH2 0x3DBF JUMP JUMPDEST DUP2 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x5A65726F416464726573734D696E6974696E67 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0xE06 PUSH2 0x21C7 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2F91 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x21F5 PUSH2 0x89F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ PUSH2 0x221E JUMPI STOP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE STOP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xAC5 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x5B0 JUMPI DUP1 CALLDATALOAD PUSH2 0x2259 DUP2 PUSH2 0x222C JUMP JUMPDEST SWAP3 PUSH1 0x40 SWAP2 PUSH2 0x2269 DUP4 MLOAD SWAP6 DUP7 PUSH2 0xB00 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 SWAP4 DUP5 DUP1 DUP8 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP4 DUP4 DUP6 GT PUSH2 0x5B0 JUMPI DUP6 DUP3 ADD SWAP3 JUMPDEST DUP6 DUP5 LT PUSH2 0x2298 JUMPI POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x5B0 JUMPI DUP5 ADD SWAP2 PUSH1 0xC0 SWAP3 DUP4 PUSH1 0x1F NOT DUP3 DUP11 SUB ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x22C4 PUSH2 0x111D JUMP JUMPDEST SWAP1 DUP11 DUP2 ADD CALLDATALOAD DUP5 DUP2 GT PUSH2 0x5B0 JUMPI DUP10 DUP13 PUSH2 0x22DE SWAP3 DUP5 ADD ADD PUSH2 0x1189 JUMP JUMPDEST DUP3 MSTORE DUP6 DUP2 ADD CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x5B0 JUMPI DUP11 SWAP5 PUSH2 0x22FC DUP11 DUP8 DUP1 SWAP8 DUP6 ADD ADD PUSH2 0x1189 JUMP JUMPDEST DUP6 DUP5 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 DUP2 ADD CALLDATALOAD DUP9 DUP6 ADD MSTORE PUSH1 0x80 SWAP3 DUP4 DUP3 ADD CALLDATALOAD SWAP1 DUP6 ADD MSTORE PUSH1 0xA0 SWAP3 DUP4 DUP3 ADD CALLDATALOAD SWAP1 DUP6 ADD MSTORE ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP4 ADD SWAP3 PUSH2 0x2287 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x5B0 JUMPI JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x5B0 JUMPI DUP2 CALLDATALOAD SWAP1 PUSH2 0x2357 DUP3 PUSH2 0x222C JUMP JUMPDEST SWAP3 PUSH2 0x2365 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xB00 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 DUP1 DUP5 GT PUSH2 0x5B0 JUMPI DUP5 DUP4 ADD SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x2393 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x5B0 JUMPI DUP7 SWAP2 PUSH2 0x23B4 DUP5 DUP5 DUP1 SWAP5 DUP10 ADD ADD PUSH2 0x1189 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x2383 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1A0 DUP2 DUP5 SUB SLT PUSH2 0x5B0 JUMPI PUSH2 0x23D5 PUSH2 0x112A JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 DUP4 ADD CALLDATALOAD DUP2 DUP2 GT PUSH2 0x5B0 JUMPI DUP3 PUSH2 0x2404 SWAP2 DUP6 ADD PUSH2 0x1189 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD DUP2 DUP2 GT PUSH2 0x5B0 JUMPI DUP3 PUSH2 0x2421 SWAP2 DUP6 ADD PUSH2 0x1189 JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD DUP2 DUP2 GT PUSH2 0x5B0 JUMPI DUP3 PUSH2 0x243E SWAP2 DUP6 ADD PUSH2 0x1189 JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP4 ADD CALLDATALOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP4 ADD CALLDATALOAD DUP2 DUP2 GT PUSH2 0x5B0 JUMPI DUP3 PUSH2 0x246F SWAP2 DUP6 ADD PUSH2 0x2243 JUMP JUMPDEST PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 PUSH2 0x2482 DUP2 DUP6 ADD PUSH2 0x2332 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x120 PUSH2 0x2494 DUP2 DUP6 ADD PUSH2 0x8CB JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x140 DUP1 DUP5 ADD CALLDATALOAD DUP3 DUP2 GT PUSH2 0x5B0 JUMPI DUP4 PUSH2 0x24B2 SWAP2 DUP7 ADD PUSH2 0x1189 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH2 0x160 SWAP2 DUP3 DUP5 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x5B0 JUMPI PUSH2 0x24D0 SWAP2 DUP5 ADD PUSH2 0x233F JUMP JUMPDEST SWAP1 DUP5 ADD MSTORE PUSH2 0x24E2 PUSH2 0x180 DUP1 SWAP3 ADD PUSH2 0x166B JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x5B0 JUMPI PUSH2 0x1927 PUSH2 0x2521 PUSH2 0xE06 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x23BF JUMP JUMPDEST PUSH2 0x266F DUP4 PUSH2 0x1927 PUSH2 0x2530 PUSH2 0x8B5 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x2619 PUSH2 0x180 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP7 DUP1 MLOAD DUP9 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP10 ADD SSTORE PUSH2 0x2564 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP11 ADD PUSH2 0x3CF1 JUMP JUMPDEST PUSH2 0x2575 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP11 ADD PUSH2 0x3CF1 JUMP JUMPDEST PUSH2 0x2586 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP11 ADD PUSH2 0x3CF1 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP10 ADD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP10 ADD SSTORE PUSH2 0x25AB PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x7 DUP11 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH2 0x25DF PUSH1 0x8 DUP10 ADD PUSH2 0x25CA PUSH2 0x100 DUP5 ADD MLOAD PUSH2 0x25C4 DUP2 PUSH2 0xBDF JUMP JUMPDEST DUP3 PUSH2 0x40C1 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x2EE8 JUMP JUMPDEST PUSH2 0x25F1 PUSH2 0x140 DUP3 ADD MLOAD PUSH1 0x9 DUP11 ADD PUSH2 0x3CF1 JUMP JUMPDEST PUSH2 0x2603 PUSH2 0x160 DUP3 ADD MLOAD PUSH1 0xA DUP11 ADD PUSH2 0x40D9 JUMP JUMPDEST ADD SWAP6 PUSH1 0xB DUP8 MLOAD SWAP2 PUSH2 0x2613 DUP4 PUSH2 0xBFB JUMP JUMPDEST ADD PUSH2 0x4166 JUMP JUMPDEST PUSH2 0x2631 DUP2 PUSH2 0x939 DUP6 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x2653 DUP2 SLOAD PUSH2 0x3A91 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x2693 PUSH2 0x2686 DUP5 PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x269C DUP4 PUSH2 0x372A JUMP JUMPDEST MLOAD PUSH2 0x26A6 DUP2 PUSH2 0xBFB JUMP JUMPDEST PUSH2 0x1678 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x5B0 JUMPI PUSH2 0x26DE PUSH2 0xE06 SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x23BF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0xB PUSH2 0x180 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP1 MLOAD DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH2 0x2713 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP7 ADD PUSH2 0x3CF1 JUMP JUMPDEST PUSH2 0x2724 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP7 ADD PUSH2 0x3CF1 JUMP JUMPDEST PUSH2 0x2735 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP7 ADD PUSH2 0x3CF1 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP6 ADD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE PUSH2 0x275A PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x7 DUP7 ADD PUSH2 0x3FF3 JUMP JUMPDEST PUSH2 0x2773 PUSH1 0x8 DUP6 ADD PUSH2 0x25CA PUSH2 0x100 DUP5 ADD MLOAD PUSH2 0x25C4 DUP2 PUSH2 0xBDF JUMP JUMPDEST PUSH2 0x2785 PUSH2 0x140 DUP3 ADD MLOAD PUSH1 0x9 DUP7 ADD PUSH2 0x3CF1 JUMP JUMPDEST PUSH2 0x2797 PUSH2 0x160 DUP3 ADD MLOAD PUSH1 0xA DUP7 ADD PUSH2 0x40D9 JUMP JUMPDEST ADD MLOAD SWAP2 PUSH2 0x2613 DUP4 PUSH2 0xBFB JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x27E8 PUSH2 0x27C3 PUSH2 0x889 JUMP JUMPDEST PUSH2 0x27CB PUSH2 0x89F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x17FE JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2816 PUSH2 0x889 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP2 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2855 JUMPI PUSH2 0x593 DUP6 PUSH2 0x1D01 DUP2 DUP10 SUB DUP3 PUSH2 0xB00 JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x283E JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 SWAP3 ADD SWAP2 DUP3 DUP2 DUP4 PUSH1 0x5 SHL DUP6 ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x2897 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 DUP3 DUP5 PUSH1 0x1 SWAP5 SUB DUP7 MSTORE DUP10 MLOAD SWAP1 PUSH2 0x28CF PUSH2 0x28BF DUP4 MLOAD PUSH1 0xC0 DUP1 DUP6 MSTORE DUP5 ADD SWAP1 PUSH2 0x6A6 JUMP JUMPDEST DUP5 DUP5 ADD MLOAD DUP4 DUP3 SUB DUP7 DUP6 ADD MSTORE PUSH2 0x6A6 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0xA0 DUP1 SWAP2 ADD MLOAD SWAP2 ADD MSTORE SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x2887 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 SWAP3 ADD SWAP2 DUP3 DUP2 DUP4 PUSH1 0x5 SHL DUP3 ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x2932 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x294C DUP4 DUP6 PUSH1 0x1 SWAP6 SUB DUP8 MSTORE DUP11 MLOAD PUSH2 0x6A6 JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x2922 JUMP JUMPDEST PUSH2 0x538 SWAP1 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x2992 PUSH2 0x1A0 SWAP2 DUP3 PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x1C0 DUP5 ADD SWAP1 PUSH2 0x6A6 JUMP JUMPDEST PUSH2 0x2A4F PUSH2 0x29C8 PUSH2 0x29B4 PUSH1 0x60 DUP9 ADD MLOAD SWAP4 PUSH1 0x1F NOT SWAP5 DUP6 DUP9 DUP4 SUB ADD PUSH1 0x80 DUP10 ADD MSTORE PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MLOAD DUP5 DUP8 DUP4 SUB ADD PUSH1 0xA0 DUP9 ADD MSTORE PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x2A3A PUSH2 0x29FA PUSH1 0xE0 DUP10 ADD MLOAD SWAP3 PUSH2 0x100 SWAP4 DUP7 DUP10 DUP4 SUB ADD DUP6 DUP11 ADD MSTORE PUSH2 0x286C JUMP JUMPDEST SWAP2 DUP9 ADD MLOAD PUSH2 0x2A0E PUSH2 0x120 SWAP2 DUP3 DUP10 ADD SWAP1 PUSH2 0xBEE JUMP JUMPDEST DUP9 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x140 DUP8 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP9 ADD MLOAD SWAP2 PUSH2 0x160 SWAP3 DUP6 DUP9 DUP4 SUB ADD DUP5 DUP10 ADD MSTORE PUSH2 0x6A6 JUMP JUMPDEST SWAP1 DUP8 ADD MLOAD PUSH2 0x180 SWAP4 DUP7 DUP4 SUB ADD DUP5 DUP8 ADD MSTORE PUSH2 0x2907 JUMP JUMPDEST SWAP5 ADD MLOAD SWAP2 ADD SWAP1 PUSH2 0xC05 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH2 0x2A77 DUP2 PUSH2 0xAA9 JUMP JUMPDEST PUSH2 0x180 PUSH1 0x0 SWAP2 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP1 PUSH1 0x40 DUP4 ADD MSTORE DUP1 DUP1 DUP4 ADD MSTORE DUP1 PUSH1 0x80 DUP4 ADD MSTORE DUP4 PUSH1 0xA0 DUP4 ADD MSTORE DUP4 PUSH1 0xC0 DUP4 ADD MSTORE DUP1 PUSH1 0xE0 DUP4 ADD MSTORE DUP4 PUSH2 0x100 DUP4 ADD MSTORE DUP4 PUSH2 0x120 DUP4 ADD MSTORE DUP1 PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x160 DUP3 ADD MSTORE ADD MSTORE PUSH2 0x593 PUSH2 0x2AE9 PUSH2 0x2AE4 PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x428D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x295C JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x2B0C PUSH2 0x538 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x4F3 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x4F3 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2B36 PUSH2 0x89F JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0x2B4D PUSH2 0x112A JUMP JUMPDEST SWAP2 DUP4 SLOAD DUP4 MSTORE PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2B68 PUSH1 0x2 DUP6 ADD PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2B79 PUSH1 0x3 DUP6 ADD PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2B8A PUSH1 0x4 DUP6 ADD PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x2C25 PUSH1 0x5 DUP6 ADD SLOAD SWAP4 PUSH1 0xA0 SWAP5 DUP6 DUP3 ADD MSTORE PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x180 PUSH2 0x2C1E PUSH1 0xB PUSH2 0x2BBD PUSH1 0x7 DUP11 ADD PUSH2 0x417E JUMP JUMPDEST SWAP9 PUSH1 0xE0 DUP6 ADD SWAP10 DUP11 MSTORE PUSH2 0x2BF2 PUSH1 0x8 DUP3 ADD SLOAD PUSH2 0x2BDE PUSH1 0xFF DUP3 AND PUSH2 0x100 DUP10 ADD PUSH2 0x4220 JUMP JUMPDEST PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x120 DUP8 ADD MSTORE JUMP JUMPDEST PUSH2 0x2BFE PUSH1 0x9 DUP3 ADD PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x2C10 PUSH1 0xA DUP3 ADD PUSH2 0x422C JUMP JUMPDEST PUSH2 0x160 DUP7 ADD MSTORE ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP2 ADD PUSH2 0x4281 JUMP JUMPDEST DUP4 MLOAD MLOAD SWAP2 PUSH2 0x2C32 DUP4 PUSH2 0x43BF JUMP JUMPDEST SWAP4 PUSH2 0x2C3C DUP5 PUSH2 0x43BF JUMP JUMPDEST SWAP6 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x2C56 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x593 DUP11 DUP11 DUP4 PUSH2 0x2AF5 JUMP JUMPDEST DUP1 PUSH2 0x2C90 DUP5 PUSH2 0x2C69 PUSH2 0x2CA1 SWAP5 DUP7 MLOAD PUSH2 0x43F1 JUMP JUMPDEST MLOAD ADD MLOAD DUP1 PUSH2 0x2C77 DUP5 DUP13 PUSH2 0x43F1 JUMP JUMPDEST MSTORE PUSH2 0x13F3 DUP9 PUSH2 0x18D6 DUP10 PUSH1 0x0 MSTORE PUSH1 0x1F PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH2 0x2C9B DUP3 DUP12 PUSH2 0x43F1 JUMP JUMPDEST MSTORE PUSH2 0x3A91 JUMP JUMPDEST PUSH2 0x2C40 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0x2CBF PUSH2 0x889 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 PUSH2 0x2CDD CALLER DUP5 EQ PUSH2 0x2E9D JUMP JUMPDEST DUP2 AND DUP1 ISZERO PUSH2 0x2D23 JUMPI PUSH2 0xE06 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4426 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 LOG3 PUSH1 0xB DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x15 PUSH1 0x0 MSTORE PUSH32 0x55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC475 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2DEA PUSH2 0x889 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP2 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2E29 JUMPI PUSH2 0x593 DUP6 PUSH2 0x1D01 DUP2 DUP10 SUB DUP3 PUSH2 0xB00 JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2E12 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH2 0xE06 PUSH2 0x2E5C PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2F91 JUMP JUMPDEST CALLVALUE PUSH2 0x5B0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5B0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1D PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST ISZERO PUSH2 0x2EA4 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST ISZERO PUSH2 0x2F14 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2F80 DUP2 ISZERO ISZERO PUSH2 0x2F0D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST ISZERO PUSH2 0x2FA9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x3015 DUP3 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST SWAP2 PUSH2 0xB61 SWAP4 SWAP2 PUSH2 0x215F SWAP4 PUSH2 0x3032 PUSH2 0xDFC DUP5 CALLER PUSH2 0x311A JUMP JUMPDEST PUSH2 0x303D DUP4 DUP4 DUP4 PUSH2 0x32CF JUMP JUMPDEST PUSH2 0x355E JUMP JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x309C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x30B5 PUSH1 0x4 DUP3 ADD PUSH2 0x3042 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x30C0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x312B PUSH2 0x3126 DUP4 PUSH2 0x320C JUMP JUMPDEST PUSH2 0x30B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x313D DUP5 PUSH2 0x3194 JUMP JUMPDEST AND SWAP1 DUP1 DUP4 AND SWAP1 DUP3 DUP3 EQ SWAP5 DUP6 ISZERO PUSH2 0x317C JUMPI JUMPDEST POP POP POP DUP3 ISZERO PUSH2 0x315C JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP3 POP SWAP1 PUSH2 0x3177 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x17FE JUMP JUMPDEST SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x3189 SWAP2 SWAP3 SWAP4 SWAP6 POP PUSH2 0x3BDE JUMP JUMPDEST AND EQ SWAP2 CODESIZE DUP1 DUP1 PUSH2 0x314E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x31B5 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3230 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x1448 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1448 JUMPI JUMP JUMPDEST PUSH1 0x30 ADD SWAP1 DUP2 PUSH1 0x30 GT PUSH2 0x1448 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1448 JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x32D9 DUP4 PUSH2 0x3194 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP3 SWAP1 SWAP2 DUP3 AND DUP4 SWAP1 SUB PUSH2 0x3363 JUMPI PUSH2 0x3319 PUSH2 0x334E SWAP3 DUP3 AND SWAP5 PUSH2 0x3305 DUP7 ISZERO ISZERO PUSH2 0x3229 JUMP JUMPDEST PUSH2 0x3310 DUP8 DUP5 DUP4 PUSH2 0x3613 JUMP JUMPDEST PUSH2 0x1310 DUP8 PUSH2 0x33BA JUMP JUMPDEST PUSH2 0x3323 DUP2 SLOAD PUSH2 0x3297 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x332E DUP2 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x3338 DUP2 SLOAD PUSH2 0x32A6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x939 DUP6 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4466 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 LOG4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x33E7 DUP4 PUSH2 0x3194 JUMP JUMPDEST AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4486 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP1 LOG4 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x5B0 JUMPI MLOAD PUSH2 0x538 DUP2 PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x538 SWAP4 SWAP3 PUSH1 0x80 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x538 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x6A6 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3498 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x347E DUP3 PUSH2 0x1137 JUMP JUMPDEST SWAP2 PUSH2 0x348C PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xB00 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP1 EXTCODESIZE ISZERO PUSH2 0x3556 JUMPI PUSH2 0x34CF PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP4 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP10 DUP11 DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD PUSH2 0x3411 JUMP JUMPDEST SUB SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x3526 JUMPI JUMPDEST POP PUSH2 0x3518 JUMPI PUSH2 0x34F2 PUSH2 0x346D JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0x3513 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x30B5 PUSH1 0x4 DUP3 ADD PUSH2 0x3042 JUMP JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ SWAP1 JUMP JUMPDEST PUSH2 0x3548 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x354F JUMPI JUMPDEST PUSH2 0x3540 DUP2 DUP4 PUSH2 0xB00 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x33FC JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x34E5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3536 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP1 DUP3 EXTCODESIZE ISZERO PUSH2 0x3591 JUMPI PUSH2 0x34CF SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP11 DUP12 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD PUSH2 0x343C JUMP JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x35A1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x35E9 PUSH1 0xFF PUSH1 0xB SLOAD AND ISZERO PUSH2 0x359A JUMP JUMPDEST PUSH2 0x35F2 DUP2 PUSH2 0x3795 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x360A JUMPI PUSH2 0xB61 SWAP2 POP PUSH2 0x37DB JUMP JUMPDEST PUSH2 0xB61 SWAP2 PUSH2 0x36F2 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x3625 PUSH1 0xFF PUSH1 0xB SLOAD AND ISZERO PUSH2 0x359A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 PUSH2 0x365C JUMPI POP PUSH2 0x3640 DUP4 PUSH2 0x3795 JUMP JUMPDEST DUP4 AND DUP1 PUSH2 0x3653 JUMPI POP POP PUSH2 0xB61 SWAP2 POP PUSH2 0x37DB JUMP JUMPDEST SUB PUSH2 0x360A JUMPI POP POP JUMP JUMPDEST DUP2 DUP6 AND DUP4 SUB PUSH2 0x366C JUMPI JUMPDEST POP PUSH2 0x3640 JUMP JUMPDEST PUSH2 0x3675 DUP2 PUSH2 0x2F6C JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x1448 JUMPI PUSH2 0x36BC SWAP1 PUSH2 0x13F3 PUSH1 0x0 SWAP4 DUP8 DUP6 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SLOAD DUP4 DUP2 SUB PUSH2 0x36C3 JUMPI JUMPDEST POP DUP5 PUSH2 0x36B6 DUP10 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x17CA JUMP JUMPDEST SSTORE CODESIZE PUSH2 0x3666 JUMP JUMPDEST DUP8 DUP7 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 DUP5 DUP8 MSTORE PUSH1 0x20 MSTORE PUSH2 0x36EB PUSH1 0x40 DUP8 KECCAK256 SLOAD DUP1 PUSH2 0x1430 DUP5 PUSH2 0x13F3 DUP8 PUSH2 0x17CA JUMP JUMPDEST SSTORE CODESIZE PUSH2 0x36A0 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x36FE DUP2 PUSH2 0x2F6C JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE DUP1 DUP4 DUP4 KECCAK256 SSTORE DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x13 SSTORE DUP2 LT ISZERO PUSH2 0xF6A JUMPI PUSH1 0x13 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4406 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xAC5 JUMPI PUSH2 0x377D SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0xF52 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x8 SSTORE DUP2 LT ISZERO PUSH2 0xF6A JUMPI PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4446 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SSTORE JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 NOT SWAP3 SWAP1 DUP4 DUP2 ADD SWAP1 DUP1 DUP3 GT PUSH2 0x1448 JUMPI PUSH1 0x0 SWAP3 DUP1 DUP5 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE DUP2 PUSH1 0x40 DUP6 KECCAK256 SLOAD SWAP4 LT ISZERO PUSH2 0xF6A JUMPI DUP5 DUP5 MSTORE DUP6 DUP3 PUSH1 0x20 DUP7 KECCAK256 ADD ADD SLOAD SWAP2 DUP4 LT ISZERO PUSH2 0xF6A JUMPI DUP4 SWAP3 PUSH2 0x383F PUSH2 0x3850 SWAP4 DUP8 DUP7 MSTORE DUP1 DUP4 PUSH1 0x20 DUP9 KECCAK256 ADD SSTORE PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP2 SLOAD SWAP3 DUP4 ISZERO PUSH2 0x3873 JUMPI DUP1 DUP5 ADD SWAP4 DUP1 DUP6 LT ISZERO PUSH2 0xF6A JUMPI DUP4 DUP4 MSTORE PUSH1 0x20 DUP4 KECCAK256 ADD ADD SSTORE SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH2 0x538 SWAP1 SLOAD PUSH2 0xA59 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x389C JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3891 JUMP JUMPDEST PUSH2 0x38B2 DUP2 SLOAD PUSH2 0xA59 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x38BC JUMPI POP POP JUMP JUMPDEST DUP2 PUSH1 0x1F PUSH1 0x0 SWAP4 GT PUSH1 0x1 EQ PUSH2 0x38CE JUMPI POP SSTORE JUMP JUMPDEST SWAP1 DUP1 DUP4 SWAP2 DUP3 MSTORE PUSH2 0x38ED PUSH1 0x1F PUSH1 0x20 DUP5 KECCAK256 SWAP5 ADD PUSH1 0x5 SHR DUP5 ADD PUSH1 0x1 DUP6 ADD PUSH2 0x3891 JUMP JUMPDEST SSTORE SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x3904 PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x683 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x3911 DUP2 PUSH2 0x320C JUMP JUMPDEST ISZERO PUSH2 0x3988 JUMPI PUSH2 0x3932 PUSH2 0x392D DUP3 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST SWAP1 PUSH2 0x393B PUSH2 0x3008 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x3983 JUMPI DUP3 MLOAD PUSH2 0x3953 JUMPI POP PUSH2 0x538 SWAP2 POP PUSH2 0x39E7 JUMP JUMPDEST PUSH2 0x538 SWAP2 POP PUSH2 0x3975 PUSH2 0x396F SWAP4 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x38F1 JUMP JUMPDEST SWAP1 PUSH2 0x38F1 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xB00 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x39F0 DUP2 PUSH2 0x320C JUMP JUMPDEST ISZERO PUSH2 0x3A34 JUMPI PUSH2 0x39FD PUSH2 0x3008 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 ISZERO PUSH2 0x3A2A JUMPI PUSH2 0x396F SWAP2 PUSH2 0x3975 PUSH2 0x3A1A PUSH2 0x538 SWAP4 PUSH2 0x3AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x38F1 JUMP JUMPDEST POP POP PUSH2 0x538 PUSH2 0x3008 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1448 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xF6A JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B5A JUMPI DUP1 PUSH1 0x0 SWAP1 DUP3 DUP3 SWAP4 JUMPDEST PUSH2 0x3B46 JUMPI POP PUSH2 0x3ACD DUP4 PUSH2 0x1137 JUMP JUMPDEST SWAP3 PUSH2 0x3ADB PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xB00 JUMP JUMPDEST DUP1 DUP5 MSTORE DUP2 PUSH1 0x1F NOT PUSH2 0x3AEB DUP4 PUSH2 0x1137 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP8 ADD CALLDATACOPY JUMPDEST PUSH2 0x3AFD JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x3B06 SWAP1 PUSH2 0x3297 JUMP JUMPDEST SWAP1 PUSH1 0xA SWAP1 PUSH2 0x3B31 PUSH2 0x3B21 PUSH2 0x3B1B DUP5 DUP5 MOD PUSH2 0x32B4 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST DUP5 BYTE PUSH2 0x3B3D DUP5 DUP8 PUSH2 0x3AA0 JUMP JUMPDEST MSTORE8 DIV SWAP1 DUP2 PUSH2 0x3AF3 JUMP JUMPDEST SWAP3 PUSH2 0x3B52 PUSH1 0xA SWAP2 PUSH2 0x3A91 JUMP JUMPDEST SWAP4 DIV DUP1 PUSH2 0x3ABF JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0xAC5 JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x3BA9 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4E6F4173736574457869737473 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3BE7 DUP2 PUSH2 0x320C JUMP JUMPDEST ISZERO PUSH2 0x3C07 JUMPI PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3C68 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x115490CDCC8C4E881D1BDAD95B88185B1C9958591E481B5A5B9D1959 PUSH1 0x22 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x3CBB JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xB61 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x3CE7 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x3891 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x3CDA JUMP JUMPDEST DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xAC5 JUMPI PUSH2 0x3D18 DUP2 PUSH2 0x3D12 DUP5 SLOAD PUSH2 0xA59 JUMP JUMPDEST DUP5 PUSH2 0x3CAC JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3D54 JUMPI POP DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x3D49 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3D33 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 PUSH2 0x3D6A DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x3DA7 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x3D8E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3D84 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x3D6F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x3DCB DUP2 PUSH2 0x320C JUMP JUMPDEST ISZERO PUSH2 0x3E82 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0xA DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP4 MLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xAC5 JUMPI PUSH2 0x3E03 DUP3 PUSH2 0x3DFD DUP6 SLOAD PUSH2 0xA59 JUMP JUMPDEST DUP6 PUSH2 0x3CAC JUMP JUMPDEST DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3E31 JUMPI POP DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x3D49 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 PUSH2 0x3E47 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x3E6A JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x3D8E JUMPI POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x3E4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 MLOAD DUP1 MLOAD SWAP2 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xAC5 JUMPI PUSH2 0x3F07 DUP2 PUSH2 0x3F01 DUP7 SLOAD PUSH2 0xA59 JUMP JUMPDEST DUP7 PUSH2 0x3CAC JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP3 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3F7D JUMPI SWAP3 DUP3 PUSH1 0x5 SWAP6 SWAP4 PUSH2 0x3F4D SWAP4 PUSH1 0xA0 SWAP7 PUSH1 0x0 SWAP3 PUSH2 0x3F72 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP7 SSTORE JUMPDEST DUP3 ADD MLOAD PUSH1 0x1 DUP7 ADD PUSH2 0x3CF1 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3F2C JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x3F93 DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3FDC JUMPI POP SWAP4 PUSH2 0x3F4D SWAP4 PUSH1 0xA0 SWAP7 SWAP4 PUSH1 0x1 SWAP4 DUP4 PUSH1 0x5 SWAP11 SWAP9 LT PUSH2 0x3FC3 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP7 SSTORE PUSH2 0x3F41 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3FB6 JUMP JUMPDEST SWAP3 SWAP4 DUP7 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x3F97 JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 GT PUSH2 0xAC5 JUMPI DUP2 SLOAD DUP4 DUP4 SSTORE DUP1 DUP5 LT PUSH2 0x4052 JUMPI JUMPDEST POP PUSH2 0x4023 PUSH1 0x20 DUP1 SWAP3 ADD SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x4035 JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP4 DUP3 PUSH2 0x4046 PUSH1 0x1 SWAP5 MLOAD DUP7 PUSH2 0x3EDE JUMP JUMPDEST ADD SWAP3 ADD SWAP4 ADD SWAP3 SWAP1 PUSH2 0x4027 JUMP JUMPDEST PUSH1 0x6 SWAP1 DUP1 DUP3 MUL SWAP1 DUP3 DUP3 DIV SUB PUSH2 0x1448 JUMPI DUP5 DUP3 MUL DUP3 DUP2 DIV DUP7 SUB PUSH2 0x1448 JUMPI PUSH1 0x0 SWAP1 DUP6 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP3 DUP4 ADD SWAP3 ADD JUMPDEST DUP3 DUP2 LT PUSH2 0x408C JUMPI POP POP POP PUSH2 0x400E JUMP JUMPDEST DUP1 PUSH2 0x4097 DUP6 SWAP3 PUSH2 0x38A8 JUMP JUMPDEST PUSH2 0x40A3 PUSH1 0x1 DUP3 ADD PUSH2 0x38A8 JUMP JUMPDEST DUP3 PUSH1 0x2 DUP3 ADD SSTORE DUP3 PUSH1 0x3 DUP3 ADD SSTORE DUP3 PUSH1 0x4 DUP3 ADD SSTORE DUP3 PUSH1 0x5 DUP3 ADD SSTORE ADD PUSH2 0x407D JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xBE9 JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 GT PUSH2 0xAC5 JUMPI DUP2 SLOAD DUP4 DUP4 SSTORE DUP1 DUP5 LT PUSH2 0x4137 JUMPI JUMPDEST POP PUSH2 0x4109 PUSH1 0x20 DUP1 SWAP3 ADD SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x411B JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP4 DUP3 PUSH2 0x412B DUP4 SWAP5 MLOAD DUP7 PUSH2 0x3CF1 JUMP JUMPDEST ADD SWAP3 ADD SWAP4 ADD SWAP3 SWAP1 PUSH2 0x410D JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE DUP4 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x4154 JUMPI POP PUSH2 0x40F4 JUMP JUMPDEST DUP1 PUSH2 0x4160 PUSH1 0x1 SWAP3 PUSH2 0x38A8 JUMP JUMPDEST ADD PUSH2 0x4147 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xBE9 JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 DUP2 SLOAD PUSH2 0x418A DUP2 PUSH2 0x222C JUMP JUMPDEST SWAP3 PUSH1 0x40 SWAP4 PUSH2 0x419A DUP6 MLOAD SWAP2 DUP3 PUSH2 0xB00 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP5 PUSH1 0x20 DUP1 SWAP3 ADD SWAP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x41C0 JUMPI POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP5 PUSH1 0x1 SWAP3 DUP5 MLOAD PUSH2 0x41D1 DUP2 PUSH2 0xACA JUMP JUMPDEST PUSH2 0x41DA DUP8 PUSH2 0xB23 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x41E7 DUP6 DUP9 ADD PUSH2 0xB23 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH1 0x2 DUP8 ADD SLOAD DUP7 DUP3 ADD MSTORE PUSH1 0x3 DUP8 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP8 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP4 ADD SWAP5 ADD SWAP4 SWAP2 PUSH2 0x41B1 JUMP JUMPDEST PUSH1 0x4 DUP3 LT ISZERO PUSH2 0xBE9 JUMPI MSTORE JUMP JUMPDEST SWAP1 DUP2 SLOAD PUSH2 0x4238 DUP2 PUSH2 0x222C JUMP JUMPDEST SWAP3 PUSH2 0x4246 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xB00 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP2 DUP7 ADD JUMPDEST DUP5 DUP5 LT PUSH2 0x4265 JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP4 DUP2 SWAP3 PUSH2 0x4273 DUP6 PUSH2 0xB23 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP4 ADD SWAP3 SWAP1 PUSH2 0x4257 JUMP JUMPDEST PUSH1 0x5 DUP3 LT ISZERO PUSH2 0xBE9 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH2 0xB61 PUSH2 0x435E PUSH1 0xB PUSH2 0x429E PUSH2 0x112A JUMP JUMPDEST SWAP5 DUP1 SLOAD DUP7 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x42B9 PUSH1 0x2 DUP3 ADD PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x42CA PUSH1 0x3 DUP3 ADD PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x42DB PUSH1 0x4 DUP3 ADD PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP8 ADD MSTORE PUSH2 0x4300 PUSH1 0x7 DUP3 ADD PUSH2 0x417E JUMP JUMPDEST PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x4332 PUSH1 0x8 DUP3 ADD SLOAD PUSH2 0x431E PUSH1 0xFF DUP3 AND PUSH2 0x100 DUP11 ADD PUSH2 0x4220 JUMP JUMPDEST PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x120 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x433E PUSH1 0x9 DUP3 ADD PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x4350 PUSH1 0xA DUP3 ADD PUSH2 0x422C JUMP JUMPDEST PUSH2 0x160 DUP8 ADD MSTORE ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x180 DUP5 ADD PUSH2 0x4281 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xF6A JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xAC5 JUMPI PUSH2 0x43A1 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0xF52 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0x43C9 DUP3 PUSH2 0x222C JUMP JUMPDEST PUSH2 0x43D6 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0xB00 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x43E7 PUSH1 0x1F NOT SWAP2 PUSH2 0x222C JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xF6A JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID PUSH7 0xDE8FFDA797E3DE SWAP13 SDIV 0xE8 0xFC JUMPI 0xB3 0xBF 0xE 0xC2 DUP11 SWAP4 0xD BLOCKHASH 0xB0 0xD2 DUP6 0xD9 EXTCODECOPY MOD POP SHR 0xF6 LOG0 SWAP1 DUP12 0xE0 SMOD SWAP13 MSTORE8 AND MSIZE EQ SGT PREVRANDAO 0xCD 0x1F 0xD0 LOG4 CALLCODE DUP5 NOT 0x49 PUSH32 0x9722A3DAAFE3B4186F6B6457E0F3F7A9FE364FAAB93B216DA50A3214154F22A0 LOG2 0xB4 ISZERO 0xB2 GASPRICE DUP5 0xC8 AND SWAP15 DUP12 PUSH4 0x6EE3DDF2 MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF DUP13 JUMPDEST 0xE1 0xE5 0xEB 0xEC PUSH30 0x5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925A264697066 PUSH20 0x58221220F737762FBC1FAA179F3AB77AFB22C467 JUMP 0xB5 CALLER 0x4A SMOD TIMESTAMP PUSH1 0x68 0xAC 0xB6 PUSH14 0x41BEE2B86D64736F6C6343000813 STOP CALLER ","sourceMap":"498:10484:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;10578:12;498:10484;;;;;;;;;10578:12;498:10484;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;-1:-1:-1;;;;;;498:10484:30;;;;;:::o;:::-;;;;;;-1:-1:-1;;498:10484:30;;;;;;;;;;:::i;:::-;;;;;1050:35:16;;;1035:50;;:102;;;;;498:10484:30;;;;;;;;;;1035:102:16;-1:-1:-1;;;1672:40:12;;;-1:-1:-1;1672:104:12;;;;1035:102:16;1672:156:12;;;;1035:102:16;;;;;1672:156:12;-1:-1:-1;;;871:40:23;;-1:-1:-1;1672:156:12;;;:104;-1:-1:-1;;;1728:48:12;;;-1:-1:-1;1672:104:12;;498:10484:30;;;;;;-1:-1:-1;;498:10484:30;;;;;;-1:-1:-1;498:10484:30;829:49;498:10484;;;;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;498:10484:30;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;498:10484:30;8530:14;498:10484;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;-1:-1:-1;498:10484:30;;-1:-1:-1;498:10484:30;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;-1:-1:-1;;;;;498:10484:30;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;498:10484:30;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;498:10484:30;;;;;;:::o;:::-;;;-1:-1:-1;;;;;498:10484:30;;;;;;:::o;:::-;;;;;;-1:-1:-1;;498:10484:30;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;498:10484:30;3917:16;498:10484;3917:16;:::i;:::-;498:10484;;;;3951:11;;;;498:10484;;4005:10;;:19;498:10484;;4055:28;:23;;;498:10484;;4055:14;498:10484;;;;;;;4055:23;498:10484;;-1:-1:-1;;;;;;498:10484:30;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;4055:28;-1:-1:-1;;;;;;;;;;;;4098:28:30;;498:10484;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;;6027:11;498:10484;;;;;;;;;;;;;;;;;;;;;;;;;10468:12;498:10484;;;;;;;;;10468:12;498:10484;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;498:10484:30;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;498:10484:30;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;498:10484:30;;;;;;;:::o;:::-;;;;;-1:-1:-1;;498:10484:30;;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;498:10484:30;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;498:10484:30;;;;-1:-1:-1;498:10484:30;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;498:10484:30;;;:::o;:::-;;:::i;:::-;;;;;;;;;:::o;:::-;;-1:-1:-1;498:10484:30;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;498:10484:30;;;;;;-1:-1:-1;498:10484:30;675:41;498:10484;;;-1:-1:-1;498:10484:30;;;;675:41;;;498:10484;675:41;;;;;;:::i;:::-;;;498:10484;675:41;;;:::i;:::-;;;498:10484;675:41;;;:::i;:::-;;;;;498:10484;675:41;;;498:10484;675:41;;;;498:10484;675:41;498:10484;675:41;;;;;;:::i;:::-;;;498:10484;;;;;;;;;;;;;;;675:41;498:10484;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;:::o;:::-;;;;10171:33;498:10484;;;:::i;:::-;;;-1:-1:-1;498:10484:30;10171:14;498:10484;;;-1:-1:-1;498:10484:30;10171:33;:::i;:::-;498:10484;;;;;;;;-1:-1:-1;;498:10484:30;;;;;1634:10:16;498:10484:30;;;;;;;;;;;;;;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;5021:7:12;498:10484:30;;;:::i;:::-;665:10:21;4887:103:12;4895:41;665:10:21;;4895:41:12;:::i;:::-;4887:103;:::i;:::-;5021:7;:::i;:::-;498:10484:30;;;;;;;-1:-1:-1;;498:10484:30;;;;;;-1:-1:-1;498:10484:30;884:45;498:10484;;;;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;6100:13;;498:10484;6100:13;:::i;:::-;;498:10484;;;;;;;;-1:-1:-1;;498:10484:30;;;;;;:::i;:::-;;;1355:23:16;;;;:::i;:::-;1347:31;;498:10484:30;;;-1:-1:-1;;;;;498:10484:30;-1:-1:-1;498:10484:30;;;1443:12:16;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;;;-1:-1:-1;498:10484:30;1874:50;498:10484;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;498:10484:30;;-1:-1:-1;498:10484:30;;;-1:-1:-1;498:10484:30;:::o;:::-;;:::i;:::-;;;;;;-1:-1:-1;;498:10484:30;;;;;;1127:32;498:10484;1127:32;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;7391:57;498:10484;;:::i;:::-;;;-1:-1:-1;498:10484:30;7391:8;498:10484;;7391:36;498:10484;-1:-1:-1;498:10484:30;7391:36;:57;:::i;498:10484::-;;;;;;-1:-1:-1;;498:10484:30;;;;;;-1:-1:-1;498:10484:30;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;;10688:12;498:10484;;;;;;;;;10688:12;498:10484;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;1140:6:0;498:10484:30;1272:68:0;498:10484:30;;;;-1:-1:-1;;;;;498:10484:30;665:10:21;1280:23:0;1272:68;:::i;:::-;498:10484:30;;;;;;;;;1140:6:0;498:10484:30;2142:22:1;498:10484:30;;;665:10:21;498:10484:30;;2142:22:1;498:10484:30;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;;;;;498:10484:30;;;;;;-1:-1:-1;;498:10484:30;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;498:10484:30;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;498:10484:30;;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;498:10484:30;;;;;6907:8;498:10484;;6934:13;498:10484;;;6934:13;498:10484;;;;;;;:::i;:::-;;;;6966:282;;498:10484;;6966:282;;498:10484;;;;;6966:282;;;498:10484;6966:282;;;498:10484;;;6966:282;;;498:10484;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;5205:39:12;498:10484:30;;;:::i;:::-;;;;;;;;:::i;:::-;;;;5205:39:12;:::i;498:10484:30:-;;;;;;-1:-1:-1;;498:10484:30;;;;;;567:41:15;665:10:21;;567:41:15;:::i;:::-;498:10484:30;;;9559:23:12;;;;:::i;:::-;1347:38:1;498:10484:30;1112:7:1;498:10484:30;;1355:9:1;1347:38;:::i;:::-;-1:-1:-1;;;;;498:10484:30;;;2725:18:16;;;2791:7;9719:16:12;-1:-1:-1;2791:7:16;;;;:::i;:::-;2986;;;:::i;:::-;9700::12;;;:::i;:::-;9719:16;:::i;:::-;:21;498:10484:30;;9719:21:12;:::i;:::-;498:10484:30;;;9757:16:12;;498:10484:30;;9757:7:12;498:10484:30;;;;;;;9757:16:12;498:10484:30;;-1:-1:-1;;;;;;498:10484:30;;;;;-1:-1:-1;;;;;;;;;;;9789:36:12;;;1732:33:17;1738:19;;498:10484:30;;1738:10:17;498:10484:30;;;;;;;1738:19:17;1732:33;:::i;:::-;1728:95;;498:10484:30;1728:95:17;1793:19;1786:26;1793:19;498:10484:30;;1738:10:17;498:10484:30;;;;;;;1793:19:17;1786:26;:::i;2721:183:16:-;4869:22;;;;;;:::i;:::-;-1:-1:-1;;498:10484:30;;;;;;;;9719:16:12;-1:-1:-1;498:10484:30;;;5511:34:16;498:10484:30;;;;;4926:17:16;498:10484:30;;;;;;5056:28:16;;;5052:323;;2721:183;5468:26;;;;498:10484:30;;4926:17:16;498:10484:30;;;;;;;5468:26:16;498:10484:30;5511:18:16;;;:::i;:::-;498:10484:30;;;;;;;;;;5511:34:16;498:10484:30;2721:183:16;;5052:323;498:10484:30;;;5122:12:16;498:10484:30;;;;;;;;;;5287:30:16;498:10484:30;;;;5171:18:16;:30;:18;;;;:::i;:30::-;498:10484:30;;;4926:17:16;498:10484:30;;;;;;;5287:30:16;498:10484:30;5052:323:16;;;498:10484:30;;:::i;:::-;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;;;;:::i;:::-;;;;;-1:-1:-1;498:10484:30;4949:11;498:10484;;5104:106;498:10484;;-1:-1:-1;498:10484:30;;;5104:106;:::i;:::-;-1:-1:-1;;;;;498:10484:30;;5236:16;;;:::i;:::-;498:10484;;;5270:16;;;:51;;;;;498:10484;;;;;;;;;;;;5270:51;5290:20;;;;;;:::i;:::-;498:10484;5290:31;5270:51;;;;;498:10484;;;;;;-1:-1:-1;;498:10484:30;;;;;;-1:-1:-1;498:10484:30;4949:11;498:10484;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;;;1634:10:16;498:10484:30;1832:38:16;;498:10484:30;;;1634:10:16;-1:-1:-1;498:10484:30;-1:-1:-1;;;;;;;;;;;498:10484:30;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;;;1112:7:1;498:10484:30;;;;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;;;-1:-1:-1;498:10484:30;10334:18;498:10484;;;;;-1:-1:-1;498:10484:30;;-1:-1:-1;498:10484:30;;;;;;;;-1:-1:-1;;498:10484:30;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;498:10484:30;5667:14;498:10484;;;-1:-1:-1;498:10484:30;;:::o;:::-;;;;;;-1:-1:-1;;498:10484:30;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;498:10484:30;1198:52;498:10484;;;-1:-1:-1;498:10484:30;;;1198:52;;;;;498:10484;1198:52;;;;:::i;:::-;498:10484;;;;;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;;;-1:-1:-1;498:10484:30;1526:50;498:10484;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1140:6:0;498:10484:30;;;;;;-1:-1:-1;;;;;498:10484:30;1272:68:0;665:10:21;1280:23:0;;1272:68;:::i;:::-;-1:-1:-1;;;;;;;;;;;1769:40:0;;;-1:-1:-1;;;;;;498:10484:30;1140:6:0;498:10484:30;;;;;;;;;-1:-1:-1;;498:10484:30;;;;3380:113;3401:10;:24;;3380:113;:::i;:::-;3401:10;498:10484;;3510:16;498:10484;;;;;;;;;;;;;;-1:-1:-1;;;;;498:10484:30;;;;;5122:12:16;498:10484:30;;;;;;:::o;:::-;-1:-1:-1;;;;;498:10484:30;;;;;9719:9:12;498:10484:30;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;498:10484:30;;;;-1:-1:-1;;;;;498:10484:30;;:::i;:::-;;-1:-1:-1;498:10484:30;935:51;498:10484;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;498:10484:30;;;;7584:18;498:10484;;7584:37;498:10484;;;;7584:37;:::i;:::-;498:10484;;;;;;;;;;;;;;;7641:18;498:10484;;;;;7641:37;498:10484;;;7641:37;:::i;:::-;498:10484;;7688:24;;498:10484;;7688:15;498:10484;;;;;;;7688:24;:34;498:10484;;;7688:34;:::i;:::-;498:10484;;7736:37;:27;;;498:10484;;7584:18;498:10484;;;;;;;7736:27;:37;:::i;:::-;498:10484;7736:47;7732:208;;498:10484;;;7732:208;7851:38;7799:23;7851:24;7799:23;:38;7904:23;7799;;;498:10484;;7799:14;498:10484;;;;;;;7799:23;:38;:::i;:::-;-1:-1:-1;;;;;498:10484:30;;;;;7851:14;498:10484;;;;;;;7851:24;:38;:::i;:::-;498:10484;;;;;;;;;;7904:23;:25;498:10484;;7904:25;:::i;:::-;498:10484;;7732:208;;498:10484;;;;;;;;;-1:-1:-1;;498:10484:30;;;;1140:6:0;498:10484:30;;;1272:68:0;498:10484:30;;;;-1:-1:-1;;;;;498:10484:30;665:10:21;1280:23:0;1272:68;:::i;:::-;1347:38:1;498:10484:30;;;1355:9:1;1347:38;:::i;:::-;498:10484:30;;;;1140:6:0;498:10484:30;1895:20:1;498:10484:30;;;665:10:21;498:10484:30;;1895:20:1;498:10484:30;;;;;;;-1:-1:-1;;498:10484:30;;;;;;1057:29;498:10484;1057:29;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;;;1022:29;498:10484;1022:29;;;;;;-1:-1:-1;498:10484:30;-1:-1:-1;;;;;;;;;;;498:10484:30;;;;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;;;;;-1:-1:-1;;498:10484:30;;;;6447:8;498:10484;;6447:25;498:10484;;;6447:25;498:10484;6433:46;;498:10484;;;6535:51;498:10484;;;6447:8;498:10484;;6447:25;498:10484;;;6535:38;:51;:::i;:::-;498:10484;;;;6535:80;;498:10484;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;1140:6:0;498:10484:30;;;;;;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;;1641:69;498:10484;;:::i;:::-;;;-1:-1:-1;498:10484:30;1641:69;498:10484;;;-1:-1:-1;498:10484:30;1641:69;:::i;:::-;498:10484;;;;;;;;;;;;;;;;;;;;;;;2703:7:12;498:10484:30;;;;;;:::i;:::-;;;;;;;;;2703:7:12;;;;498:10484:30;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;498:10484:30;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;498:10484:30;;;665:10:21;4258:24:12;;498:10484:30;;665:10:21;4323:42:12;:53;665:10:21;;-1:-1:-1;498:10484:30;4323:18:12;498:10484:30;;;-1:-1:-1;498:10484:30;4323:42:12;:::i;:::-;:53;:::i;:::-;498:10484:30;;;;;;;665:10:21;;4391:48:12;;498:10484:30;;4391:48:12;498:10484:30;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;498:10484:30;10949:14;498:10484;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;-1:-1:-1;498:10484:30;;-1:-1:-1;498:10484:30;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;2444:6;498:10484;;:::i;:::-;;;665:10:21;;2444:6:30;:::i;:::-;498:10484;;;2468:4;498:10484;;;;;;;;;-1:-1:-1;;498:10484:30;;;;;;:::i;:::-;-1:-1:-1;;;;;498:10484:30;-1:-1:-1;498:10484:30;;;772:50;498:10484;;;;;;;;;;;772:50;;;;;498:10484;772:50;;;;:::i;498:10484::-;;;;;;-1:-1:-1;;498:10484:30;;;;;;:::i;:::-;-1:-1:-1;;;;;498:10484:30;-1:-1:-1;498:10484:30;;;1930:51;498:10484;;;;;;;;;;;1930:51;;;;;498:10484;1930:51;;;;:::i;498:10484::-;;;;;;-1:-1:-1;;498:10484:30;;;;;1276:73;498:10484;;:::i;:::-;;;-1:-1:-1;498:10484:30;1276:73;498:10484;;;-1:-1:-1;498:10484:30;1276:73;:::i;498:10484::-;;;;;;;;;;;;;;;;;;10801:15;498:10484;;;;;;;;;10801:15;498:10484;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;;;-1:-1:-1;498:10484:30;1471:49;498:10484;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;-1:-1:-1;;498:10484:30;;;;;;8363:38;498:10484;;:::i;:::-;-1:-1:-1;;498:10484:30;;;;8315:14;498:10484;;8315:38;498:10484;;;;8315:38;:::i;:::-;-1:-1:-1;;;;;498:10484:30;;;8363:14;498:10484;;;;;8363:38;:::i;498:10484::-;;;;;;-1:-1:-1;;498:10484:30;;;;;;-1:-1:-1;498:10484:30;1355:53;498:10484;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;;;;;-1:-1:-1;498:10484:30;1414:51;498:10484;;;-1:-1:-1;498:10484:30;;;1414:51;;;;;498:10484;1414:51;;;;:::i;:::-;498:10484;;;;;;;;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;;2984:23;498:10484;;2984:23;:::i;:::-;498:10484;;;;;;;;;;;;;:::i;:::-;;;;1716:97;498:10484;;;:::i;:::-;;;1716:97;498:10484;1716:97;498:10484;;;1716:97;498:10484;1716:97;:::i;:::-;498:10484;1716:97;498:10484;;;;;1716:97;498:10484;;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;;;:::i;:::-;9725:33;-1:-1:-1;498:10484:30;;;;;9725:14;498:10484;;;;;9725:33;:::i;:::-;498:10484;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;498:10484:30;;;4698:16;;498:10484;;8457:54:12;498:10484:30;4802:8;498:10484;;;;;;:::i;:::-;8449:117:12;-1:-1:-1;498:10484:30;;;;;;9037:58:12;9045:17;9046:16;;;:::i;:::-;9045:17;;498:10484:30;9045:17:12;9037:58;:::i;:::-;2485:223:30;;;;:::i;:::-;9162:13:12;;;:::i;:::-;:18;498:10484:30;;9162:18:12;:::i;:::-;498:10484:30;;9190:21:12;:16;;;498:10484:30;;9757:7:12;498:10484:30;;;;;;;9190:21:12;9227:33;-1:-1:-1;;;;;;;;;;;9227:33:12;;;;;;;;8457:54;:::i;:::-;8449:117;:::i;:::-;4802:8:30;;:::i;:::-;4826:33;;;498:10484;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;9868:36;498:10484;;:::i;:::-;;;-1:-1:-1;498:10484:30;9868:17;498:10484;;;-1:-1:-1;498:10484:30;9868:36;:::i;498:10484::-;;;;;;-1:-1:-1;;498:10484:30;;;;;;:::i;:::-;;;-1:-1:-1;498:10484:30;;;4496:14;498:10484;;;;;;;;;-1:-1:-1;;;;;498:10484:30;;;;;4496:35;4492:102;;498:10484;4492:102;-1:-1:-1;;;;;;498:10484:30;;;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;-1:-1:-1;;498:10484:30;;;;;;;;-1:-1:-1;;;;;498:10484:30;;;;5667:30;498:10484;5667:44;498:10484;;;;;;:::i;:::-;5553:31;498:10484;5553:17;498:10484;;:::i;:::-;;-1:-1:-1;498:10484:30;5452:8;498:10484;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;;;;498:10484:30;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;5487:24;:19;;;498:10484;;5487:10;498:10484;;;;;;;5487:24;-1:-1:-1;;;;;498:10484:30;;;;;;5521:16;498:10484;;;;;5521:22;498:10484;;5521:22;:::i;:::-;498:10484;;-1:-1:-1;;;;;498:10484:30;;;;;5553:13;498:10484;;;;;;;5553:31;5594:27;:20;;498:10484;;5594:11;498:10484;;;;;;;5594:20;498:10484;;-1:-1:-1;;498:10484:30;;;;;;5594:27;5631:26;;;:::i;:::-;498:10484;;;;:::i;:::-;5667:30;:::i;498:10484::-;;;;;;-1:-1:-1;;498:10484:30;;;;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;498:10484:30;5916:8;498:10484;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;498:10484:30;;;;;;4632:35:12;498:10484:30;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;498:10484:30;;;-1:-1:-1;498:10484:30;;;4632:18:12;498:10484:30;;;;;4632:35:12;:::i;:::-;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;498:10484:30;;:::i;:::-;;-1:-1:-1;498:10484:30;8683:14;498:10484;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;-1:-1:-1;498:10484:30;;-1:-1:-1;498:10484:30;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;498:10484:30;;;;;;;;;:::i;:::-;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5811:17;498:10484;;;;5811:8;498:10484;;;;;;;5811:17;498:10484;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;498:10484:30;;;;;;;;:::i;:::-;;-1:-1:-1;498:10484:30;8891:8;498:10484;;;-1:-1:-1;498:10484:30;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8940:13;498:10484;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;8940:13;;498:10484;8999:26;;;;:::i;:::-;9067;;;;:::i;:::-;9109:13;-1:-1:-1;9124:15:30;;;;;;498:10484;;;;;;;;:::i;9141:3::-;9178:13;9275:42;9178:13;:16;9141:3;9178:13;;;:16;:::i;:::-;;:30;498:10484;9222:21;;;;;:::i;:::-;498:10484;9275:33;:23;;;498:10484;;9275:14;498:10484;;;;;;;9275:42;498:10484;9257:60;;;;:::i;:::-;498:10484;9141:3;:::i;:::-;9109:13;;498:10484;;;;;;-1:-1:-1;;498:10484:30;;;;;;:::i;:::-;1140:6:0;498:10484:30;;;-1:-1:-1;;;;;498:10484:30;;;;;1272:68:0;665:10:21;1280:23:0;;1272:68;:::i;:::-;498:10484:30;;2082:22:0;;498:10484:30;;2210:17:0;2162:38;-1:-1:-1;;;;;;;;;;;;2162:38:0;;1140:6;498:10484:30;;-1:-1:-1;;;;;;498:10484:30;;;;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;;;1092:29;498:10484;1092:29;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;498:10484:30;;:::i;:::-;;-1:-1:-1;498:10484:30;6237:13;498:10484;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;-1:-1:-1;498:10484:30;;-1:-1:-1;498:10484:30;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;9991:37;498:10484;;:::i;:::-;;;-1:-1:-1;498:10484:30;9991:18;498:10484;;;-1:-1:-1;498:10484:30;9991:37;:::i;498:10484::-;;;;;;-1:-1:-1;;498:10484:30;;;;;;-1:-1:-1;498:10484:30;1582:53;498:10484;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;498:10484:30;;;;;;-1:-1:-1;;;;;498:10484:30;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;1894:205:12;-1:-1:-1;;;;;498:10484:30;1985:74:12;1993:19;;;1985:74;:::i;:::-;2010:1;498:10484:30;2076:9:12;498:10484:30;;;2010:1:12;498:10484:30;;1894:205:12;:::o;498:10484:30:-;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;498:10484:30;;:::o;5317:282:12:-;;6612:111;5317:282;;6620:48;5317:282;5440:103;5448:41;665:10:21;;5448:41:12;:::i;5440:103::-;6594:7;;;;;:::i;:::-;6620:48;:::i;498:10484:30:-;;;;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;498:10484:30;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;7316:351:12;7425:73;7433:16;;;:::i;:::-;7425:73;:::i;:::-;-1:-1:-1;;;;;498:10484:30;7524:23:12;;;:::i;:::-;498:10484:30;;;;;7565:16:12;;;;:51;;;;;7316:351;7565:94;;;;;;;7557:103;;7316:351;:::o;7565:94::-;498:10484:30;;;;4632:35:12;498:10484:30;-1:-1:-1;498:10484:30;4632:18:12;498:10484:30;;;-1:-1:-1;498:10484:30;4632:35:12;:::i;:::-;498:10484:30;;7316:351:12;:::o;7565:51::-;7585:20;;;;;;;:::i;:::-;498:10484:30;7585:31:12;7565:51;;;;;;2156:235;-1:-1:-1;498:10484:30;;;2263:7:12;498:10484:30;;;;;;-1:-1:-1;;;;;498:10484:30;2297:19:12;;498:10484:30;;2156:235:12;:::o;498:10484:30:-;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;7033:125:12;-1:-1:-1;498:10484:30;;;7121:7:12;498:10484:30;;;;;;-1:-1:-1;;;;;498:10484:30;7121:30:12;;;7033:125::o;498:10484:30:-;;;;:::o;:::-;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;498:10484:30;;;;;;;;:::o;:::-;;9179:1:12;498:10484:30;;;;;;;:::o;:::-;875:2:22;498:10484:30;;;875:2:22;498:10484:30;;;:::o;:::-;;;;;;;;;;:::o;10156:530:12:-;;10253:23;;;:::i;:::-;-1:-1:-1;;;;;498:10484:30;;;;;;;;10253:31:12;;;498:10484:30;;10557:15:12;10615:21;498:10484:30;;;10348:16:12;10340:65;10348:16;;;10340:65;:::i;:::-;2485:223:30;;;;;:::i;:::-;10538:7:12;;;:::i;10557:15::-;:20;498:10484:30;;10557:20:12;:::i;:::-;498:10484:30;;10587:13:12;;;:::i;:::-;:18;498:10484:30;;10587:18:12;:::i;:::-;498:10484:30;;10615:16:12;;498:10484:30;;9757:7:12;498:10484:30;;;;;;;10615:21:12;-1:-1:-1;;;;;;;;;;;10362:1:12;10652:27;;10156:530::o;498:10484:30:-;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;10797:171:12;498:10484:30;;;;10871:15:12;498:10484:30;;;;;;;-1:-1:-1;;;;;;498:10484:30;;;-1:-1:-1;;;;;10924:23:12;498:10484:30;10924:23:12;:::i;:::-;498:10484:30;-1:-1:-1;;;;;;;;;;;10915:46:12;;;10797:171::o;498:10484:30:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;498:10484:30;;;;:::o;:::-;;;:::o;11521:824:12:-;;;;1059:41:20;;1116:8;11665:15:12;;11700:72;;498:10484:30;;;;;;;;;;;;;;11700:72:12;;;;665:10:21;11700:72:12;;;;:::i;:::-;;;-1:-1:-1;;;;;498:10484:30;11700:72:12;;498:10484:30;;11700:72:12;;;11661:678;-1:-1:-1;11696:591:12;;11893:394;;:::i;:::-;498:10484:30;;;11943:18:12;;;498:10484:30;;-1:-1:-1;;;11985:60:12;;498:10484:30;11985:60:12;11700:72;11985:60;;;:::i;11939:334::-;11700:72;12160:95;;11696:591;-1:-1:-1;;;;;;498:10484:30;11822:55:12;;11815:62::o;11700:72::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;11661:678;12317:11;;;12324:4;12317:11;:::o;11521:824::-;;;;;1059:41:20;;1116:8;11665:15:12;;11700:72;498:10484:30;11700:72:12;498:10484:30;;;;;;;;;;;;;11700:72:12;;;;665:10:21;11700:72:12;;;;:::i;11661:678::-;12317:11;;;;12324:4;12317:11;:::o;498:10484:30:-;;;;:::o;:::-;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;1312:91:1;;1347:38;498:10484:30;1112:7:1;498:10484:30;;1355:9:1;1347:38;:::i;:::-;2791:7:16;;;:::i;:::-;-1:-1:-1;;;;;498:10484:30;;;;2986:7:16;;;;:::i;2913:179::-;3073:7;;;:::i;1312:91:1:-;;;;1347:38;498:10484:30;1112:7:1;498:10484:30;;1355:9:1;1347:38;:::i;:::-;-1:-1:-1;;;;;498:10484:30;;;;2725:18:16;;;2791:7;;;;:::i;:::-;498:10484:30;;2917:16:16;;;2986:7;;;;;;:::i;2913:179::-;3015:10;3011:81;;2913:179;;1312:91:1:o;2721:183:16:-;498:10484:30;;;2820:10:16;;2816:88;;2721:183;;;;2816:88;4869:22;;;:::i;:::-;-1:-1:-1;;498:10484:30;;;;;;;5511:34:16;498:10484:30;5511:18:16;498:10484:30;;;;;4926:17:16;498:10484:30;;;;;;5056:28:16;;;5052:323;;2816:88;5468:26;;;;498:10484:30;;4926:17:16;498:10484:30;;;;;;;5468:26:16;498:10484:30;5511:18:16;:::i;:34::-;498:10484:30;2816:88:16;;;5052:323;498:10484:30;;;5122:12:16;498:10484:30;;;;;;;;;;5287:30:16;498:10484:30;;;;5171:18:16;:30;:18;;;;:::i;5287:30::-;498:10484:30;5052:323:16;;;3392:217;498:10484:30;3392:217:16;3493:20;;;:::i;:::-;-1:-1:-1;;498:10484:30;;;;;;;;;3523:12:16;498:10484:30;;;;;;;;;;;;;;;;;3567:17:16;498:10484:30;;;;3392:217:16:o;498:10484:30:-;5631:12;498:10484;-1:-1:-1;;;498:10484:30;;;;;;;;;5631:12;498:10484;;;;;;5631:12;-1:-1:-1;498:10484:30;-1:-1:-1;;;;;;;;;;;498:10484:30;;:::o;:::-;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;3804:161:16:-;3907:10;498:10484:30;;-1:-1:-1;498:10484:30;3880:15:16;498:10484:30;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;3907:10:16;498:10484:30;;;;;;3907:10:16;-1:-1:-1;498:10484:30;-1:-1:-1;;;;;;;;;;;498:10484:30;;3804:161:16:o;5840:1061::-;6114:10;498:10484:30;;-1:-1:-1;;498:10484:30;;;;;;;;;;;;;;;;6166:15:16;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6675:28:16;6844:24;498:10484:30;;;;;;;;;;;;;6166:15:16;498:10484:30;;;;;;;6675:28:16;498:10484:30;;;6166:15:16;498:10484:30;;;;;;;6844:24:16;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;5840:1061:16:o;498:10484:30:-;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;9629:1:12;498:10484:30;;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;:::o;388:663:17:-;494:16;;;:::i;:::-;498:10484:30;;;;601:19:17;;498:10484:30;;1738:10:17;498:10484:30;;;;;;;601:19:17;498:10484:30;:::i;:::-;;;;:::i;:::-;;;734:23:17;730:70;;498:10484:30;;898:106:17;;1021:23;;;;;:::i;898:106::-;959:33;498:10484:30;;;;;;;959:33:17;;;;;;498:10484:30;;:::i;:::-;;;:::i;:::-;959:33:17;498:10484:30;;959:33:17;;;;;;:::i;730:70::-;773:16;;;:::o;498:10484:30:-;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;2783:353:12;2889:16;;;:::i;:::-;498:10484:30;;;;;:::i;:::-;;;;;;3019:25:12;:110;;498:10484:30;3092:18:12;498:10484:30;3092:18:12;3066:45;3092:18;;:::i;:::-;498:10484:30;;3066:45:12;;;;;;498:10484:30;;:::i;3019:110:12:-;498:10484:30;;;;:::i;:::-;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;-1:-1:-1;;498:10484:30;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;271:703:22:-;544:10;;540:51;;600:20;553:1;630:14;;;654:75;661:9;;;498:10484:30;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;498:10484:30;;;:::i;:::-;;;;;;;794:10:22;;;946:21;;;271:703;:::o;787:150::-;820:11;;;:::i;:::-;716:2;;498:10484:30;862:39:22;869:31;875:24;498:10484:30;;;875:24:22;:::i;:::-;498:10484:30;;;;869:31:22;498:10484:30;;-1:-1:-1;;;;;;498:10484:30;;;862:39:22;845:56;;;;;;:::i;:::-;;498:10484:30;787:150:22;;;;654:75;686:8;;716:2;686:8;;:::i;:::-;498:10484:30;;654:75:22;;;540:51;-1:-1:-1;498:10484:30;;;;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;570:10:22;:::o;3551:233:30:-;-1:-1:-1;498:10484:30;;;3681:10;498:10484;;;;;;-1:-1:-1;;;;;498:10484:30;3718:19;;498:10484;;3551:233;:::o;498:10484::-;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;4139:272;4278:16;;;:::i;:::-;498:10484;;;-1:-1:-1;498:10484:30;;;4381:14;498:10484;;;;;;-1:-1:-1;;;;;498:10484:30;;4139:272::o;498:10484::-;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;498:10484:30;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;498:10484:30;;;;;;;;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1198:214:17;;;;1297:16;;;:::i;:::-;498:10484:30;;;-1:-1:-1;498:10484:30;;1374:10:17;498:10484:30;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;;;;1198:214:17:o;498:10484:30:-;;;;;;;;;;;;;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;1198:214:17:o;498:10484:30:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;498:10484:30;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;498:10484:30;;-1:-1:-1;498:10484:30;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;498:10484:30;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;498:10484:30;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;498:10484:30;;;-1:-1:-1;498:10484:30;;;;;-1:-1:-1;498:10484:30;:::o;:::-;;;-1:-1:-1;;;498:10484:30;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"3525400","executionCost":"infinite","totalCost":"infinite"},"external":{"_addAsset(uint256,(uint256,uint256,string,string,string,uint256,uint256,(string,string,uint256,uint256,uint256,uint256)[],uint8,address,string,string[],uint8),address)":"infinite","activeAssets(uint256)":"infinite","addInvestment(uint256,address,uint256)":"infinite","addInvestor(uint256,address)":"infinite","allowRefunding(uint256,bool)":"26219","allowTransfers(uint256,bool)":"25977","approve(address,uint256)":"28937","assetApprovals(uint256)":"2390","assetExists(uint256)":"2978","assetInvestors(uint256,uint256)":"8030","assetMap(uint256)":"infinite","assetOwner(uint256)":"2632","assetsCount()":"3648","balanceOf()":"3208","balanceOf(address)":"3281","burn(uint256)":"infinite","categoryAssets(uint8,uint256)":"7514","clearApproval(uint256,address)":"26037","completedAssets(uint256)":"4782","exists(uint256)":"2934","failedAssets(uint256)":"6058","fundedAssets(uint256)":"5332","getActiveAssets()":"infinite","getApproved(uint256)":"4749","getAsset(uint256)":"infinite","getAssetInvestors(uint256)":"infinite","getAssetsByCategory(uint8)":"infinite","getAssetsCount()":"2416","getAssetsOfOwner(address)":"infinite","getCompletedAssets()":"infinite","getFailedAssets()":"infinite","getFundedAssets()":"infinite","getInvestmentAmount(uint256,address)":"3763","getInvestorAssets(address)":"infinite","getInvestorTokens(uint256,address)":"infinite","getTotalInvestment(uint256)":"2724","getTotalInvestors(uint256)":"2768","handleRewardAddedToAsset(uint256,string,string,uint256,uint256,bytes32)":"infinite","incrementAssetsCount()":"24707","investmentAmountOf(uint256,address)":"3675","investmentReceived(uint256)":"3626","investmentRefunded(uint256)":"4041","investorAssets(address,uint256)":"7927","investorTokens(uint256,address,uint256)":"3957","isApprovedForAll(address,address)":"4158","isApprovedOrOwner(address,uint256)":"9825","isRefundingAllowed(uint256)":"3110","isTransferAllowed(uint256)":"3550","mint(address,uint256,string)":"infinite","name()":"infinite","ownedAssetsCount(address)":"3271","owner()":"3285","ownerOf(uint256)":"3185","ownerToAssets(address,uint256)":"7905","pause()":"26420","paused()":"2956","pendingReturns(uint256,address)":"3521","renounceOwnership()":"26805","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"27609","supportsInterface(bytes4)":"451","symbol()":"infinite","tokenByIndex(uint256)":"infinite","tokenOfOwnerByIndex(address,uint256)":"5118","tokenURI(uint256)":"infinite","totalInvestment(uint256)":"2680","totalInvestors(uint256)":"2988","totalSupply()":"2504","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"29880","unpause()":"25966","updateAsset(uint256,(uint256,uint256,string,string,string,uint256,uint256,(string,string,uint256,uint256,uint256,uint256)[],uint8,address,string,string[],uint8))":"infinite","updateAssetReward(uint256,uint256,uint256)":"27730","updateInvestmentRefunded(uint256,uint256)":"23020","updateInvestorTokens(uint256,address,uint256,uint256)":"23974","updatePendingReturns(uint256,address,uint256)":"22726","updateRewardTokenAddress(uint256,address)":"24997"},"internal":{"_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(uint256)":"infinite"}},"methodIdentifiers":{"_addAsset(uint256,(uint256,uint256,string,string,string,uint256,uint256,(string,string,uint256,uint256,uint256,uint256)[],uint8,address,string,string[],uint8),address)":"dc289f48","activeAssets(uint256)":"86887e1b","addInvestment(uint256,address,uint256)":"79f48424","addInvestor(uint256,address)":"bbe30722","allowRefunding(uint256,bool)":"fbdc985a","allowTransfers(uint256,bool)":"d86da278","approve(address,uint256)":"095ea7b3","assetApprovals(uint256)":"03385770","assetExists(uint256)":"518e2bdd","assetInvestors(uint256,uint256)":"c619c4a2","assetMap(uint256)":"129f9008","assetOwner(uint256)":"2a0ee644","assetsCount()":"cd9df190","balanceOf()":"722713f7","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","categoryAssets(uint8,uint256)":"68ad1c79","clearApproval(uint256,address)":"daa5fe2d","completedAssets(uint256)":"33a90c36","exists(uint256)":"4f558e79","failedAssets(uint256)":"f35b25a8","fundedAssets(uint256)":"84bbffe7","getActiveAssets()":"0fd8aee8","getApproved(uint256)":"081812fc","getAsset(uint256)":"eac8f5b8","getAssetInvestors(uint256)":"07c90547","getAssetsByCategory(uint8)":"a2311d5f","getAssetsCount()":"0aac5dfd","getAssetsOfOwner(address)":"f3ab880e","getCompletedAssets()":"b5ff2582","getFailedAssets()":"3d3eb314","getFundedAssets()":"01bdc460","getInvestmentAmount(uint256,address)":"bb7e385a","getInvestorAssets(address)":"e9e7854c","getInvestorTokens(uint256,address)":"ebcab605","getTotalInvestment(uint256)":"34422a47","getTotalInvestors(uint256)":"3adc860e","handleRewardAddedToAsset(uint256,string,string,uint256,uint256,bytes32)":"3f9aa154","incrementAssetsCount()":"2c5bdb1f","investmentAmountOf(uint256,address)":"ae908698","investmentReceived(uint256)":"c0adb910","investmentRefunded(uint256)":"fd27ff81","investorAssets(address,uint256)":"ae7d9553","investorTokens(uint256,address,uint256)":"cbeaba77","isApprovedForAll(address,address)":"e985e9c5","isApprovedOrOwner(address,uint256)":"430c2081","isRefundingAllowed(uint256)":"6dd501d7","isTransferAllowed(uint256)":"b6160915","mint(address,uint256,string)":"d3fc9864","name()":"06fdde03","ownedAssetsCount(address)":"77394a73","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","ownerToAssets(address,uint256)":"adc649e1","pause()":"8456cb59","paused()":"5c975abb","pendingReturns(uint256,address)":"8ddac1ef","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalInvestment(uint256)":"32a64370","totalInvestors(uint256)":"5531ad6a","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","updateAsset(uint256,(uint256,uint256,string,string,string,uint256,uint256,(string,string,uint256,uint256,uint256,uint256)[],uint8,address,string,string[],uint8))":"e14ca948","updateAssetReward(uint256,uint256,uint256)":"87a115e6","updateInvestmentRefunded(uint256,uint256)":"5d0dead2","updateInvestorTokens(uint256,address,uint256,uint256)":"d166e4ee","updatePendingReturns(uint256,address,uint256)":"14fcde03","updateRewardTokenAddress(uint256,address)":"34899521"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"author\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"projectStartDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"projectEndDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"individualPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardTokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct Reward[]\",\"name\":\"rewards\",\"type\":\"tuple[]\"},{\"internalType\":\"enum ProjectStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"rewardTokenAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"mainPhoto\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"secondaryPhotos\",\"type\":\"string[]\"},{\"internalType\":\"enum Category\",\"name\":\"category\",\"type\":\"uint8\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"_addAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"addInvestor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"allowRefunding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"allowTransfers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetApprovals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetInvestors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"author\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"projectStartDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"projectEndDate\",\"type\":\"uint256\"},{\"internalType\":\"enum ProjectStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"rewardTokenAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"mainPhoto\",\"type\":\"string\"},{\"internalType\":\"enum Category\",\"name\":\"category\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Category\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"categoryAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"}],\"name\":\"clearApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"completedAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"failedAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fundedAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveAssets\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"getAsset\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"author\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"projectStartDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"projectEndDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"individualPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardTokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct Reward[]\",\"name\":\"rewards\",\"type\":\"tuple[]\"},{\"internalType\":\"enum ProjectStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"rewardTokenAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"mainPhoto\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"secondaryPhotos\",\"type\":\"string[]\"},{\"internalType\":\"enum Category\",\"name\":\"category\",\"type\":\"uint8\"}],\"internalType\":\"struct Asset\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"getAssetInvestors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Category\",\"name\":\"category\",\"type\":\"uint8\"}],\"name\":\"getAssetsByCategory\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssetsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getAssetsOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCompletedAssets\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFailedAssets\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFundedAssets\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"getInvestmentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"getInvestorAssets\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"getInvestorTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"getTotalInvestment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"getTotalInvestors\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"individualPrice\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"rewardId\",\"type\":\"bytes32\"}],\"name\":\"handleRewardAddedToAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incrementAssetsCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"investmentAmountOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"investmentReceived\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"investmentRefunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"investorAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"investorTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"isApprovedOrOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isRefundingAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isTransferAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"asseturi\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownedAssetsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingReturns\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalInvestment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalInvestors\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"author\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"projectStartDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"projectEndDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"individualPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardTokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct Reward[]\",\"name\":\"rewards\",\"type\":\"tuple[]\"},{\"internalType\":\"enum ProjectStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"rewardTokenAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"mainPhoto\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"secondaryPhotos\",\"type\":\"string[]\"},{\"internalType\":\"enum Category\",\"name\":\"category\",\"type\":\"uint8\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"}],\"name\":\"updateAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newAvailableTokens\",\"type\":\"uint256\"}],\"name\":\"updateAssetReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateInvestmentRefunded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"updateInvestorTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updatePendingReturns\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rewardTokenAddress\",\"type\":\"address\"}],\"name\":\"updateRewardTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTVenture.sol\":\"NFTVenture\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor () {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xab1f67e4c96dfe0e3875d22883c3dee5411914f40ce0c54ef407f030d803512e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"./extensions/IERC721Enumerable.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping (uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping (address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping (uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IERC721).interfaceId\\n            || interfaceId == type(IERC721Metadata).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: balance query for the zero address\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0\\n            ? string(abi.encodePacked(baseURI, tokenId.toString()))\\n            : '';\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\\n     * in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(_msgSender() == owner || ERC721.isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"ERC721: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        require(operator != _msgSender(), \\\"ERC721: approve to caller\\\");\\n\\n        _operatorApprovals[_msgSender()][operator] = approved;\\n        emit ApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"ERC721: operator query for nonexistent token\\\");\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || ERC721.isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {\\n        _mint(to, tokenId);\\n        require(_checkOnERC721Received(address(0), to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer of token that is not own\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\\n        private returns (bool)\\n    {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver(to).onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    // solhint-disable-next-line no-inline-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual { }\\n}\\n\",\"keccak256\":\"0x8d1cabca557cb77d97d801d674f0dacc33659e1430cdd34f91ae5d033fc3d93f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @title ERC721 Burnable Token\\n * @dev ERC721 Token that can be irreversibly burned (destroyed).\\n */\\nabstract contract ERC721Burnable is Context, ERC721 {\\n    /**\\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own `tokenId` or be an approved operator.\\n     */\\n    function burn(uint256 tokenId) public virtual {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721Burnable: caller is not owner nor approved\\\");\\n        _burn(tokenId);\\n    }\\n}\\n\",\"keccak256\":\"0x7481c284b0ff5983d3f1784f0ceae1ec397f8c8938bc60552b19889cc057aee8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"./IERC721Enumerable.sol\\\";\\n\\n/**\\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\\n * enumerability of all the token ids in the contract as well as all token ids owned by each\\n * account.\\n */\\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\\n    // Mapping from owner to list of owned token IDs\\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\\n\\n    // Mapping from token ID to index of the owner tokens list\\n    mapping(uint256 => uint256) private _ownedTokensIndex;\\n\\n    // Array with all token ids, used for enumeration\\n    uint256[] private _allTokens;\\n\\n    // Mapping from token id to position in the allTokens array\\n    mapping(uint256 => uint256) private _allTokensIndex;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\\n        return interfaceId == type(IERC721Enumerable).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721.balanceOf(owner), \\\"ERC721Enumerable: owner index out of bounds\\\");\\n        return _ownedTokens[owner][index];\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _allTokens.length;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenByIndex}.\\n     */\\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721Enumerable.totalSupply(), \\\"ERC721Enumerable: global index out of bounds\\\");\\n        return _allTokens[index];\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual override {\\n        super._beforeTokenTransfer(from, to, tokenId);\\n\\n        if (from == address(0)) {\\n            _addTokenToAllTokensEnumeration(tokenId);\\n        } else if (from != to) {\\n            _removeTokenFromOwnerEnumeration(from, tokenId);\\n        }\\n        if (to == address(0)) {\\n            _removeTokenFromAllTokensEnumeration(tokenId);\\n        } else if (to != from) {\\n            _addTokenToOwnerEnumeration(to, tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\\n     * @param to address representing the new owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\\n     */\\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\\n        uint256 length = ERC721.balanceOf(to);\\n        _ownedTokens[to][length] = tokenId;\\n        _ownedTokensIndex[tokenId] = length;\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's token tracking data structures.\\n     * @param tokenId uint256 ID of the token to be added to the tokens list\\n     */\\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\\n        _allTokensIndex[tokenId] = _allTokens.length;\\n        _allTokens.push(tokenId);\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\\n     * @param from address representing the previous owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\\n     */\\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary\\n        if (tokenIndex != lastTokenIndex) {\\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\\n\\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n        }\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _ownedTokensIndex[tokenId];\\n        delete _ownedTokens[from][lastTokenIndex];\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's token tracking data structures.\\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\\n     */\\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = _allTokens.length - 1;\\n        uint256 tokenIndex = _allTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\\n\\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _allTokensIndex[tokenId];\\n        _allTokens.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x3dce5847e70c056ef0f7cf91cb9a0067cf90784794017a45c1211cde7ed1c08c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping (uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI query for nonexistent token\\\");\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd03f5c3d258a9b0f751a3246e0802106585561ab5909b808368759364fc786f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xccb7e6475afcb1c5cb13b3fbf1329c10b93620a9b66393388066683915271a78\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant alphabet = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = alphabet[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n}\\n\",\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/AssetStruct.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <=0.8.19;\\n\\nenum ProjectStatus {\\n    Started,\\n    Funded,\\n    Failed,\\n    Completed\\n}\\n\\nenum Category {\\n    Technology,\\n    Gaming,\\n    Music,\\n    Movies,\\n    Art\\n}\\n\\nstruct Reward {\\n    string title;\\n    string description;\\n    uint256 tokenAmount;\\n    uint256 individualPrice;\\n    uint256 availableTokens;\\n    uint256 rewardTokenId;\\n}\\n\\nstruct NewReward {\\n    string tokenURI;\\n    string title;\\n    string description;\\n    uint256 tokenAmount;\\n    uint256 individualPrice;\\n}\\n\\nstruct Asset {\\n    uint256 assetId;\\n    uint256 price;\\n    string author;\\n    string title;\\n    string description;\\n    uint256 projectStartDate;\\n    uint256 projectEndDate;\\n    Reward[] rewards;\\n    ProjectStatus status;\\n    address rewardTokenAddress;\\n    string mainPhoto;\\n    string[] secondaryPhotos;\\n    Category category;\\n}\\n\",\"keccak256\":\"0x2ffc38b9e3b4154b2c7ededb682535a9fd6dfb1419217873d7ff8c3dcbe3e9b4\",\"license\":\"MIT\"},\"contracts/NFTVenture.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <=0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\\\";\\nimport \\\"./AssetStruct.sol\\\";\\n\\ncontract NFTVenture is\\n    ERC721,\\n    ERC721Enumerable,\\n    ERC721URIStorage,\\n    Pausable,\\n    Ownable,\\n    ERC721Burnable\\n{\\n    // Assets\\n    uint256 public assetsCount;\\n    mapping(uint256 => Asset) public assetMap;\\n    mapping(uint256 => bool) public assetExists;\\n\\n    mapping(address => uint256[]) public ownerToAssets;\\n\\n    mapping(uint256 => address) public assetApprovals;\\n    mapping(uint256 => address) public assetOwner;\\n    mapping(address => uint256) public ownedAssetsCount;\\n\\n    // State-based Asset IDs\\n    uint256[] public activeAssets;\\n    uint256[] public fundedAssets;\\n    uint256[] public failedAssets;\\n    uint256[] public completedAssets;\\n\\n    // Category-based Asset IDs\\n    mapping(Category => uint256[]) public categoryAssets;\\n\\n    // Investments\\n    mapping(uint256 => mapping(address => uint256)) public investmentAmountOf;\\n    mapping(uint256 => uint256) public investmentReceived;\\n    mapping(uint256 => address[]) public assetInvestors;\\n    mapping(uint256 => bool) public isTransferAllowed;\\n    mapping(uint256 => bool) public isRefundingAllowed;\\n    mapping(uint256 => uint256) public investmentRefunded;\\n    mapping(uint256 => mapping(address => uint256)) public pendingReturns;\\n    mapping(uint256 => mapping(address => mapping(uint256 => uint256)))\\n        public investorTokens;\\n    mapping(uint256 => uint256) public totalInvestors;\\n    mapping(uint256 => uint256) public totalInvestment;\\n    mapping(address => uint256[]) public investorAssets;\\n\\n    // Constructor\\n    constructor() ERC721(\\\"FractionalCTV\\\", \\\"FCTV\\\") {}\\n\\n    function pause() public onlyOwner {\\n        _pause();\\n    }\\n\\n    function unpause() public onlyOwner {\\n        _unpause();\\n    }\\n\\n    function _baseURI() internal pure override returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    function transfer(\\n        address recipient,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal override(ERC721, ERC721Enumerable) whenNotPaused {\\n        super._beforeTokenTransfer(from, to, tokenId);\\n    }\\n\\n    function _burn(\\n        uint256 tokenId\\n    ) internal override(ERC721, ERC721URIStorage) {\\n        super._burn(tokenId);\\n    }\\n\\n    function tokenURI(\\n        uint256 tokenId\\n    ) public view override(ERC721, ERC721URIStorage) returns (string memory) {\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    function supportsInterface(\\n        bytes4 interfaceId\\n    ) public view override(ERC721, ERC721Enumerable) returns (bool) {\\n        return super.supportsInterface(interfaceId);\\n    }\\n\\n    modifier isNFTOwner(uint256 assetId) {\\n        require(msg.sender == ownerOf(assetId));\\n        _;\\n    }\\n\\n    function balanceOf() public view returns (uint256) {\\n        require(\\n            msg.sender != address(0),\\n            \\\"ERC721: balance query for the zero address\\\"\\n        );\\n        return ownedAssetsCount[msg.sender];\\n    }\\n\\n    function ownerOf(\\n        uint256 assetId\\n    ) public view override(ERC721, IERC721) returns (address) {\\n        address owner = assetOwner[assetId];\\n        require(owner != address(0), \\\"NoAssetExists\\\");\\n        return owner;\\n    }\\n\\n    function approve(\\n        address to,\\n        uint256 assetId\\n    ) public override(ERC721, IERC721) {\\n        address owner = ownerOf(assetId);\\n        require(to != owner, \\\"CurrentOwnerApproval\\\");\\n        require(msg.sender == owner, \\\"NotTheAssetOwner\\\");\\n        assetApprovals[assetId] = to;\\n        emit Approval(owner, to, assetId);\\n    }\\n\\n    function getApproved(\\n        uint256 assetId\\n    ) public view override(ERC721, IERC721) returns (address) {\\n        require(\\n            _exists(assetId),\\n            \\\"ERC721: approved query for nonexistent token\\\"\\n        );\\n        return assetApprovals[assetId];\\n    }\\n\\n    function clearApproval(uint256 assetId, address approved) public {\\n        if (assetApprovals[assetId] == approved) {\\n            assetApprovals[assetId] = address(0);\\n        }\\n    }\\n\\n    function mint(address to, uint256 assetId, string memory asseturi) public {\\n        require(to != address(0), \\\"ZeroAddressMiniting\\\");\\n        _safeMint(to, assetId);\\n        _setTokenURI(assetId, asseturi);\\n        emit Transfer(address(0), to, assetId);\\n    }\\n\\n    function exists(uint256 assetId) public view returns (bool) {\\n        return assetExists[assetId];\\n    }\\n\\n    function isApprovedOrOwner(\\n        address spender,\\n        uint256 assetId\\n    ) external view returns (bool) {\\n        require(\\n            exists(assetId),\\n            \\\"ERC721: operator query for nonexistent token\\\"\\n        );\\n        address owner = ownerOf(assetId);\\n        return (spender == owner || getApproved(assetId) == spender);\\n    }\\n\\n    function _addAsset(\\n        uint256 assetId,\\n        Asset memory asset,\\n        address to\\n    ) external {\\n        assetMap[assetId] = asset;\\n        assetOwner[assetId] = to;\\n        ownedAssetsCount[to]++;\\n        ownerToAssets[to].push(assetId);\\n        assetExists[assetId] = true;\\n        activeAssets.push(assetId);\\n        categoryAssets[asset.category].push(assetId);\\n    }\\n\\n    function getAsset(uint256 assetId) public view returns (Asset memory) {\\n        return assetMap[assetId];\\n    }\\n\\n    function updateAsset(uint256 assetId, Asset memory asset) public {\\n        assetMap[assetId] = asset;\\n    }\\n\\n    function getAssetsCount() public view returns (uint256) {\\n        return assetsCount;\\n    }\\n\\n    function incrementAssetsCount() public {\\n        assetsCount++;\\n    }\\n\\n    function getAssetsOfOwner(\\n        address owner\\n    ) public view returns (uint256[] memory) {\\n        return ownerToAssets[owner];\\n    }\\n\\n    function updateAssetReward(\\n        uint256 assetId,\\n        uint256 rewardIndex,\\n        uint256 newAvailableTokens\\n    ) external {\\n        require(\\n            rewardIndex < assetMap[assetId].rewards.length,\\n            \\\"Invalid reward index\\\"\\n        );\\n        assetMap[assetId]\\n            .rewards[rewardIndex]\\n            .availableTokens = newAvailableTokens;\\n    }\\n\\n    function handleRewardAddedToAsset(\\n        uint256 assetId,\\n        string memory title,\\n        string memory description,\\n        uint256 tokenAmount,\\n        uint256 individualPrice,\\n        bytes32 rewardId\\n    ) external {\\n        Asset storage asset = assetMap[assetId];\\n        asset.rewards.push(\\n            Reward({\\n                title: title,\\n                description: description,\\n                tokenAmount: tokenAmount,\\n                individualPrice: individualPrice,\\n                availableTokens: tokenAmount,\\n                rewardTokenId: uint256(rewardId)\\n            })\\n        );\\n    }\\n\\n    function updateRewardTokenAddress(\\n        uint256 assetId,\\n        address rewardTokenAddress\\n    ) external {\\n        assetMap[assetId].rewardTokenAddress = rewardTokenAddress;\\n    }\\n\\n    function addInvestment(\\n        uint256 assetId,\\n        address investor,\\n        uint256 amount\\n    ) external {\\n        investmentAmountOf[assetId][investor] += amount;\\n        investmentReceived[assetId] += amount;\\n        totalInvestment[assetId] += amount;\\n        if (investmentAmountOf[assetId][investor] == amount) {\\n            assetInvestors[assetId].push(investor);\\n            investorAssets[investor].push(assetId);\\n\\n            totalInvestors[assetId]++;\\n        }\\n    }\\n\\n    function getTotalInvestment(\\n        uint256 assetId\\n    ) external view returns (uint256) {\\n        return totalInvestment[assetId];\\n    }\\n\\n    function getTotalInvestors(\\n        uint256 assetId\\n    ) external view returns (uint256) {\\n        return totalInvestors[assetId];\\n    }\\n\\n    function addInvestor(uint256 assetId, address investor) external {\\n        assetInvestors[assetId].push(investor);\\n        investorAssets[investor].push(assetId);\\n    }\\n\\n    function getAssetInvestors(\\n        uint256 assetId\\n    ) external view returns (address[] memory) {\\n        return assetInvestors[assetId];\\n    }\\n\\n    function getInvestorAssets(\\n        address investor\\n    ) external view returns (uint256[] memory) {\\n        return investorAssets[investor];\\n    }\\n    function getInvestorTokens(\\n        uint256 assetId,\\n        address investor\\n    ) public view returns (uint256[] memory, uint256[] memory) {\\n        Asset memory asset = assetMap[assetId];\\n        uint256 rewardCount = asset.rewards.length;\\n\\n        uint256[] memory tokenIds = new uint256[](rewardCount);\\n        uint256[] memory tokenAmounts = new uint256[](rewardCount);\\n\\n        for (uint256 i = 0; i < rewardCount; i++) {\\n            uint256 tokenId = asset.rewards[i].rewardTokenId;\\n            tokenIds[i] = tokenId;\\n            tokenAmounts[i] = investorTokens[assetId][investor][tokenId];\\n        }\\n\\n        return (tokenIds, tokenAmounts);\\n    }\\n\\n    function getInvestmentAmount(\\n        uint256 assetId,\\n        address investor\\n    ) public view returns (uint256) {\\n        return investmentAmountOf[assetId][investor];\\n    }\\n\\n    function updateInvestorTokens(\\n        uint256 assetId,\\n        address investor,\\n        uint256 tokenId,\\n        uint256 tokenAmount\\n    ) external {\\n        investorTokens[assetId][investor][tokenId] = tokenAmount;\\n    }\\n\\n    function allowTransfers(uint256 assetId, bool allowed) external {\\n        isTransferAllowed[assetId] = allowed;\\n    }\\n\\n    function allowRefunding(uint256 assetId, bool allowed) external {\\n        isRefundingAllowed[assetId] = allowed;\\n    }\\n\\n    function updatePendingReturns(\\n        uint256 assetId,\\n        address investor,\\n        uint256 amount\\n    ) external {\\n        pendingReturns[assetId][investor] = amount;\\n    }\\n\\n    function updateInvestmentRefunded(\\n        uint256 assetId,\\n        uint256 amount\\n    ) external {\\n        investmentRefunded[assetId] = amount;\\n    }\\n\\n    function getActiveAssets() external view returns (uint256[] memory) {\\n        return activeAssets;\\n    }\\n\\n    function getFundedAssets() external view returns (uint256[] memory) {\\n        return fundedAssets;\\n    }\\n\\n    function getFailedAssets() external view returns (uint256[] memory) {\\n        return failedAssets;\\n    }\\n\\n    function getCompletedAssets() external view returns (uint256[] memory) {\\n        return completedAssets;\\n    }\\n\\n    function getAssetsByCategory(\\n        Category category\\n    ) external view returns (uint256[] memory) {\\n        return categoryAssets[category];\\n    }\\n}\\n\",\"keccak256\":\"0xfe8b84cc7cf611042e781969058a556bbdef20e9d3d6073a89df555c628fffc7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2233,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2235,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2239,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":2243,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":2247,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":2253,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":3206,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"_ownedTokens","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_uint256,t_uint256))"},{"astId":3210,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"_ownedTokensIndex","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_uint256)"},{"astId":3213,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"_allTokens","offset":0,"slot":"8","type":"t_array(t_uint256)dyn_storage"},{"astId":3217,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"_allTokensIndex","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_uint256)"},{"astId":3542,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"_tokenURIs","offset":0,"slot":"10","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":127,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"_paused","offset":0,"slot":"11","type":"t_bool"},{"astId":7,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"_owner","offset":1,"slot":"11","type":"t_address"},{"astId":6124,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"assetsCount","offset":0,"slot":"12","type":"t_uint256"},{"astId":6129,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"assetMap","offset":0,"slot":"13","type":"t_mapping(t_uint256,t_struct(Asset)4654_storage)"},{"astId":6133,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"assetExists","offset":0,"slot":"14","type":"t_mapping(t_uint256,t_bool)"},{"astId":6138,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"ownerToAssets","offset":0,"slot":"15","type":"t_mapping(t_address,t_array(t_uint256)dyn_storage)"},{"astId":6142,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"assetApprovals","offset":0,"slot":"16","type":"t_mapping(t_uint256,t_address)"},{"astId":6146,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"assetOwner","offset":0,"slot":"17","type":"t_mapping(t_uint256,t_address)"},{"astId":6150,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"ownedAssetsCount","offset":0,"slot":"18","type":"t_mapping(t_address,t_uint256)"},{"astId":6153,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"activeAssets","offset":0,"slot":"19","type":"t_array(t_uint256)dyn_storage"},{"astId":6156,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"fundedAssets","offset":0,"slot":"20","type":"t_array(t_uint256)dyn_storage"},{"astId":6159,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"failedAssets","offset":0,"slot":"21","type":"t_array(t_uint256)dyn_storage"},{"astId":6162,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"completedAssets","offset":0,"slot":"22","type":"t_array(t_uint256)dyn_storage"},{"astId":6168,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"categoryAssets","offset":0,"slot":"23","type":"t_mapping(t_enum(Category)4598,t_array(t_uint256)dyn_storage)"},{"astId":6174,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"investmentAmountOf","offset":0,"slot":"24","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":6178,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"investmentReceived","offset":0,"slot":"25","type":"t_mapping(t_uint256,t_uint256)"},{"astId":6183,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"assetInvestors","offset":0,"slot":"26","type":"t_mapping(t_uint256,t_array(t_address)dyn_storage)"},{"astId":6187,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"isTransferAllowed","offset":0,"slot":"27","type":"t_mapping(t_uint256,t_bool)"},{"astId":6191,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"isRefundingAllowed","offset":0,"slot":"28","type":"t_mapping(t_uint256,t_bool)"},{"astId":6195,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"investmentRefunded","offset":0,"slot":"29","type":"t_mapping(t_uint256,t_uint256)"},{"astId":6201,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"pendingReturns","offset":0,"slot":"30","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":6209,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"investorTokens","offset":0,"slot":"31","type":"t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))"},{"astId":6213,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"totalInvestors","offset":0,"slot":"32","type":"t_mapping(t_uint256,t_uint256)"},{"astId":6217,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"totalInvestment","offset":0,"slot":"33","type":"t_mapping(t_uint256,t_uint256)"},{"astId":6222,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"investorAssets","offset":0,"slot":"34","type":"t_mapping(t_address,t_array(t_uint256)dyn_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_string_storage)dyn_storage":{"base":"t_string_storage","encoding":"dynamic_array","label":"string[]","numberOfBytes":"32"},"t_array(t_struct(Reward)4611_storage)dyn_storage":{"base":"t_struct(Reward)4611_storage","encoding":"dynamic_array","label":"struct Reward[]","numberOfBytes":"32"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_enum(Category)4598":{"encoding":"inplace","label":"enum Category","numberOfBytes":"1"},"t_enum(ProjectStatus)4592":{"encoding":"inplace","label":"enum ProjectStatus","numberOfBytes":"1"},"t_mapping(t_address,t_array(t_uint256)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256[])","numberOfBytes":"32","value":"t_array(t_uint256)dyn_storage"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_enum(Category)4598,t_array(t_uint256)dyn_storage)":{"encoding":"mapping","key":"t_enum(Category)4598","label":"mapping(enum Category => uint256[])","numberOfBytes":"32","value":"t_array(t_uint256)dyn_storage"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_array(t_address)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address[])","numberOfBytes":"32","value":"t_array(t_address)dyn_storage"},"t_mapping(t_uint256,t_bool)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => mapping(uint256 => uint256)))","numberOfBytes":"32","value":"t_mapping(t_address,t_mapping(t_uint256,t_uint256))"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_uint256,t_struct(Asset)4654_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Asset)","numberOfBytes":"32","value":"t_struct(Asset)4654_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Asset)4654_storage":{"encoding":"inplace","label":"struct Asset","members":[{"astId":4624,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"assetId","offset":0,"slot":"0","type":"t_uint256"},{"astId":4626,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"price","offset":0,"slot":"1","type":"t_uint256"},{"astId":4628,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"author","offset":0,"slot":"2","type":"t_string_storage"},{"astId":4630,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"title","offset":0,"slot":"3","type":"t_string_storage"},{"astId":4632,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"description","offset":0,"slot":"4","type":"t_string_storage"},{"astId":4634,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"projectStartDate","offset":0,"slot":"5","type":"t_uint256"},{"astId":4636,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"projectEndDate","offset":0,"slot":"6","type":"t_uint256"},{"astId":4640,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"rewards","offset":0,"slot":"7","type":"t_array(t_struct(Reward)4611_storage)dyn_storage"},{"astId":4643,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"status","offset":0,"slot":"8","type":"t_enum(ProjectStatus)4592"},{"astId":4645,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"rewardTokenAddress","offset":1,"slot":"8","type":"t_address"},{"astId":4647,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"mainPhoto","offset":0,"slot":"9","type":"t_string_storage"},{"astId":4650,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"secondaryPhotos","offset":0,"slot":"10","type":"t_array(t_string_storage)dyn_storage"},{"astId":4653,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"category","offset":0,"slot":"11","type":"t_enum(Category)4598"}],"numberOfBytes":"384"},"t_struct(Reward)4611_storage":{"encoding":"inplace","label":"struct Reward","members":[{"astId":4600,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"title","offset":0,"slot":"0","type":"t_string_storage"},{"astId":4602,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"description","offset":0,"slot":"1","type":"t_string_storage"},{"astId":4604,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"tokenAmount","offset":0,"slot":"2","type":"t_uint256"},{"astId":4606,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"individualPrice","offset":0,"slot":"3","type":"t_uint256"},{"astId":4608,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"availableTokens","offset":0,"slot":"4","type":"t_uint256"},{"astId":4610,"contract":"contracts/NFTVenture.sol:NFTVenture","label":"rewardTokenId","offset":0,"slot":"5","type":"t_uint256"}],"numberOfBytes":"192"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ReclamarFrac.sol":{"reclamarFrac":{"abi":[{"inputs":[{"internalType":"address","name":"_nftAddress","type":"address"},{"internalType":"uint256","name":"_tokenID","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"enum reclamarFrac.ClaimState","name":"claimState","type":"uint8"}],"name":"ClaimStateDetails","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"reclamante","type":"address"},{"indexed":false,"internalType":"uint256","name":"cantidad","type":"uint256"}],"name":"Claimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"funds","type":"uint256"}],"name":"FundsDetails","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"supply","type":"uint256"}],"name":"SupplyDetails","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"tokenAddress","type":"address"}],"name":"TokenAddressDetails","type":"event"},{"anonymous":false,"inputs":[],"name":"funded","type":"event"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimState","outputs":[{"internalType":"enum reclamarFrac.ClaimState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"fund","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"funds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getClaimState","outputs":[{"internalType":"enum reclamarFrac.ClaimState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nftAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ownerAddress","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"supply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":317,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":260,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608080604052346100b5576040816107d9803803809161001f8285610104565b8339810103126100b55760206100348261013d565b9101516040516331a9108f60e11b815260048101919091526001600160a01b0391821691602082602481865afa9182156100f8576000926100ba575b50339116036100b557600180546001600160a01b0319908116909217905560008054909116331790556002805460ff60a01b1916905560405161068790816101528239f35b600080fd5b90916020823d82116100f0575b816100d460209383610104565b810103126100ed57506100e69061013d565b9038610070565b80fd5b3d91506100c7565b6040513d6000823e3d90fd5b601f909101601f19168101906001600160401b0382119082101761012757604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100b55756fe608060408181526004918236101561001657600080fd5b600092833560e01c918263047fc9aa146105835750816323024408146103b15781634b43c6f9146103325781635bf8633a146103885781638f84aa09146103605781639a725809146103325781639d76ea5814610309578163aad3ec96146100a9575063c89f2ce41461008857600080fd5b346100a557816003193601126100a5576020906003549051908152f35b5080fd5b9050346103055781600319360112610305576100c361059e565b6002546001600160a01b03918216919060249081359083168403610301578454670de0b6b3a7640000908181029181830414901517156102ef576003548083029083820414831517156102dd5781156102cb57049283471061027d57908792918380868015610273575b8280929181923390f115610269576002541690813b1561026557839161016891895195868094819363079cc67960e41b8352338d8401610616565b03925af1801561025b5761021e575b50509060008051602061063283398151915261019b60209386519182913383610616565b0390a183516318160ddd60e01b815292839182905afa918215610215575082916101df575b50156101c95780f35b6002805460ff60a01b1916600160a11b17905580f35b90506020813d821161020d575b816101f9602093836105dd565b810103126102085751386101c0565b600080fd5b3d91506101ec565b513d84823e3d90fd5b9195916001600160401b03821161024a575084529360008051602061063283398151915261019b610177565b634e487b7160e01b83526041855282fd5b86513d89823e3d90fd5b8380fd5b87513d85823e3d90fd5b6108fc915061012d565b865162461bcd60e51b81526020818801526023818501527f466f6e646f7320696e737566696369656e74657320656e20656c20636f6e747260448201526261746f60e81b6064820152608490fd5b634e487b7160e01b8952601287528389fd5b634e487b7160e01b8952601187528389fd5b634e487b7160e01b8852601186528288fd5b8680fd5b8280fd5b5050346100a557816003193601126100a55760025490516001600160a01b039091168152602090f35b5050346100a557816003193601126100a55761035c9060ff60025460a01c169051918291826105b4565b0390f35b5050346100a557816003193601126100a557905490516001600160a01b039091168152602090f35b5050346100a557816003193601126100a55760015490516001600160a01b039091168152602090f35b916020915036600319018213610265576103c961059e565b916002549260ff8460a01c1660038110156105705761056c5785546001600160a01b0391908216330361030157346003556001600160a81b0319909416938116938417600160a01b17600281905583516318160ddd60e01b815295909483908790839082905afa958615610562578796610529575b50827f825c94adc2d07d7054df3df363833d04745e4d5bbfbf6349d7d3aa0ba212731f8160ff9796947fb8fbc896aaf3402bc9e3197c5ef680f129d53be930035e2c0f7ac85244df0c1a6104ff977fd1928025d134c8c80a2236b6a0ae96292bcaf0717ea1ab4957e636787fe8bf3596670de0b6b3a76400007f09a3780ffd48bc4df9d4816a4c9a74f5e52518e90e2173034df5b0b140085ecc9d048091558851908152a185519088168152a18251348152a15192839260a01c16826105b4565b0390a17ff3a504f28a34fdf555994a3bdfd3dc29f822e8684a9ef01001afb738cc3cdd0a8180a180f35b9295509392908583813d811161055b575b61054481836105dd565b81010312610301579151949293909291908261043e565b503d61053a565b84513d89823e3d90fd5b8580fd5b634e487b7160e01b875260218652602487fd5b84913461030557826003193601126103055760209250548152f35b600435906001600160a01b038216820361020857565b9190602083019260038210156105c75752565b634e487b7160e01b600052602160045260246000fd5b601f909101601f19168101906001600160401b0382119082101761060057604052565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03909116815260208101919091526040019056fed8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426aa2646970667358221220b55e1d3f2ec3dec2b8e7f69d447d3793c2e2d0b1d4265f36338f73a85702160e64736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xB5 JUMPI PUSH1 0x40 DUP2 PUSH2 0x7D9 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1F DUP3 DUP6 PUSH2 0x104 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xB5 JUMPI PUSH1 0x20 PUSH2 0x34 DUP3 PUSH2 0x13D JUMP JUMPDEST SWAP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xBA JUMPI JUMPDEST POP CALLER SWAP2 AND SUB PUSH2 0xB5 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD SWAP1 SWAP2 AND CALLER OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x687 SWAP1 DUP2 PUSH2 0x152 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0xF0 JUMPI JUMPDEST DUP2 PUSH2 0xD4 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x104 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xED JUMPI POP PUSH2 0xE6 SWAP1 PUSH2 0x13D JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x70 JUMP JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x127 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB5 JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x47FC9AA EQ PUSH2 0x583 JUMPI POP DUP2 PUSH4 0x23024408 EQ PUSH2 0x3B1 JUMPI DUP2 PUSH4 0x4B43C6F9 EQ PUSH2 0x332 JUMPI DUP2 PUSH4 0x5BF8633A EQ PUSH2 0x388 JUMPI DUP2 PUSH4 0x8F84AA09 EQ PUSH2 0x360 JUMPI DUP2 PUSH4 0x9A725809 EQ PUSH2 0x332 JUMPI DUP2 PUSH4 0x9D76EA58 EQ PUSH2 0x309 JUMPI DUP2 PUSH4 0xAAD3EC96 EQ PUSH2 0xA9 JUMPI POP PUSH4 0xC89F2CE4 EQ PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xA5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x305 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x305 JUMPI PUSH2 0xC3 PUSH2 0x59E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 SWAP1 PUSH1 0x24 SWAP1 DUP2 CALLDATALOAD SWAP1 DUP4 AND DUP5 SUB PUSH2 0x301 JUMPI DUP5 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2EF JUMPI PUSH1 0x3 SLOAD DUP1 DUP4 MUL SWAP1 DUP4 DUP3 DIV EQ DUP4 ISZERO OR ISZERO PUSH2 0x2DD JUMPI DUP2 ISZERO PUSH2 0x2CB JUMPI DIV SWAP3 DUP4 SELFBALANCE LT PUSH2 0x27D JUMPI SWAP1 DUP8 SWAP3 SWAP2 DUP4 DUP1 DUP7 DUP1 ISZERO PUSH2 0x273 JUMPI JUMPDEST DUP3 DUP1 SWAP3 SWAP2 DUP2 SWAP3 CALLER SWAP1 CALL ISZERO PUSH2 0x269 JUMPI PUSH1 0x2 SLOAD AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x265 JUMPI DUP4 SWAP2 PUSH2 0x168 SWAP2 DUP10 MLOAD SWAP6 DUP7 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP4 MSTORE CALLER DUP14 DUP5 ADD PUSH2 0x616 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x25B JUMPI PUSH2 0x21E JUMPI JUMPDEST POP POP SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x632 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x19B PUSH1 0x20 SWAP4 DUP7 MLOAD SWAP2 DUP3 SWAP2 CALLER DUP4 PUSH2 0x616 JUMP JUMPDEST SUB SWAP1 LOG1 DUP4 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x215 JUMPI POP DUP3 SWAP2 PUSH2 0x1DF JUMPI JUMPDEST POP ISZERO PUSH2 0x1C9 JUMPI DUP1 RETURN JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA1 SHL OR SWAP1 SSTORE DUP1 RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x20D JUMPI JUMPDEST DUP2 PUSH2 0x1F9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x5DD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x208 JUMPI MLOAD CODESIZE PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1EC JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP6 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x24A JUMPI POP DUP5 MSTORE SWAP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x632 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x19B PUSH2 0x177 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 DUP6 MSTORE DUP3 REVERT JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x12D JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x23 DUP2 DUP6 ADD MSTORE PUSH32 0x466F6E646F7320696E737566696369656E74657320656E20656C20636F6E7472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x61746F PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x12 DUP8 MSTORE DUP4 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP8 MSTORE DUP4 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 DUP7 MSTORE DUP3 DUP9 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xA5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA5 JUMPI PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xA5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA5 JUMPI PUSH2 0x35C SWAP1 PUSH1 0xFF PUSH1 0x2 SLOAD PUSH1 0xA0 SHR AND SWAP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x5B4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xA5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA5 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xA5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA5 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP2 PUSH1 0x20 SWAP2 POP CALLDATASIZE PUSH1 0x3 NOT ADD DUP3 SGT PUSH2 0x265 JUMPI PUSH2 0x3C9 PUSH2 0x59E JUMP JUMPDEST SWAP2 PUSH1 0x2 SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0xA0 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x570 JUMPI PUSH2 0x56C JUMPI DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND CALLER SUB PUSH2 0x301 JUMPI CALLVALUE PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 DUP2 AND SWAP4 DUP5 OR PUSH1 0x1 PUSH1 0xA0 SHL OR PUSH1 0x2 DUP2 SWAP1 SSTORE DUP4 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP6 SWAP1 SWAP5 DUP4 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x562 JUMPI DUP8 SWAP7 PUSH2 0x529 JUMPI JUMPDEST POP DUP3 PUSH32 0x825C94ADC2D07D7054DF3DF363833D04745E4D5BBFBF6349D7D3AA0BA212731F DUP2 PUSH1 0xFF SWAP8 SWAP7 SWAP5 PUSH32 0xB8FBC896AAF3402BC9E3197C5EF680F129D53BE930035E2C0F7AC85244DF0C1A PUSH2 0x4FF SWAP8 PUSH32 0xD1928025D134C8C80A2236B6A0AE96292BCAF0717EA1AB4957E636787FE8BF35 SWAP7 PUSH8 0xDE0B6B3A7640000 PUSH32 0x9A3780FFD48BC4DF9D4816A4C9A74F5E52518E90E2173034DF5B0B140085ECC SWAP14 DIV DUP1 SWAP2 SSTORE DUP9 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP6 MLOAD SWAP1 DUP9 AND DUP2 MSTORE LOG1 DUP3 MLOAD CALLVALUE DUP2 MSTORE LOG1 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0xA0 SHR AND DUP3 PUSH2 0x5B4 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH32 0xF3A504F28A34FDF555994A3BDFD3DC29F822E8684A9EF01001AFB738CC3CDD0A DUP2 DUP1 LOG1 DUP1 RETURN JUMPDEST SWAP3 SWAP6 POP SWAP4 SWAP3 SWAP1 DUP6 DUP4 DUP2 RETURNDATASIZE DUP2 GT PUSH2 0x55B JUMPI JUMPDEST PUSH2 0x544 DUP2 DUP4 PUSH2 0x5DD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x301 JUMPI SWAP2 MLOAD SWAP5 SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH2 0x43E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x53A JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x21 DUP7 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP5 SWAP2 CALLVALUE PUSH2 0x305 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x305 JUMPI PUSH1 0x20 SWAP3 POP SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x208 JUMPI JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP3 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x5C7 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x600 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD SWAP1 JUMP INVALID 0xD8 SGT DUP16 DUP11 EXTCODEHASH CALLDATACOPY PUSH29 0x5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426AA2646970 PUSH7 0x7358221220B55E SAR EXTCODEHASH 0x2E 0xC3 0xDE 0xC2 0xB8 0xE7 0xF6 SWAP14 PREVRANDAO PUSH30 0x3793C2E2D0B1D4265F36338F73A85702160E64736F6C6343000813003300 ","sourceMap":"468:3365:31:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;1407:37:31;;;;;468:3365;;;;-1:-1:-1;;;;;468:3365:31;;;;;;;;;1407:37;;;;;;;-1:-1:-1;1407:37:31;;;-1:-1:-1;1970:10:31;;468:3365;;1407:54;468:3365;;;;;-1:-1:-1;;;;;;468:3365:31;;;;;;;;-1:-1:-1;468:3365:31;;;;;1970:10;468:3365;;;2080:33;468:3365;;-1:-1:-1;;;;468:3365:31;;;;;;;;;;;;;-1:-1:-1;468:3365:31;;1407:37;;;468:3365;1407:37;;;;;;;;;468:3365;1407:37;;;:::i;:::-;;;468:3365;;;;;;;;:::i;:::-;1407:37;;;;468:3365;;;1407:37;;;-1:-1:-1;1407:37:31;;;468:3365;;;-1:-1:-1;468:3365:31;;;;;;;;;;-1:-1:-1;;468:3365:31;;;;-1:-1:-1;;;;;468:3365:31;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;468:3365:31;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1438,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":1558,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_enum_ClaimState":{"entryPoint":1460,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1501,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060408181526004918236101561001657600080fd5b600092833560e01c918263047fc9aa146105835750816323024408146103b15781634b43c6f9146103325781635bf8633a146103885781638f84aa09146103605781639a725809146103325781639d76ea5814610309578163aad3ec96146100a9575063c89f2ce41461008857600080fd5b346100a557816003193601126100a5576020906003549051908152f35b5080fd5b9050346103055781600319360112610305576100c361059e565b6002546001600160a01b03918216919060249081359083168403610301578454670de0b6b3a7640000908181029181830414901517156102ef576003548083029083820414831517156102dd5781156102cb57049283471061027d57908792918380868015610273575b8280929181923390f115610269576002541690813b1561026557839161016891895195868094819363079cc67960e41b8352338d8401610616565b03925af1801561025b5761021e575b50509060008051602061063283398151915261019b60209386519182913383610616565b0390a183516318160ddd60e01b815292839182905afa918215610215575082916101df575b50156101c95780f35b6002805460ff60a01b1916600160a11b17905580f35b90506020813d821161020d575b816101f9602093836105dd565b810103126102085751386101c0565b600080fd5b3d91506101ec565b513d84823e3d90fd5b9195916001600160401b03821161024a575084529360008051602061063283398151915261019b610177565b634e487b7160e01b83526041855282fd5b86513d89823e3d90fd5b8380fd5b87513d85823e3d90fd5b6108fc915061012d565b865162461bcd60e51b81526020818801526023818501527f466f6e646f7320696e737566696369656e74657320656e20656c20636f6e747260448201526261746f60e81b6064820152608490fd5b634e487b7160e01b8952601287528389fd5b634e487b7160e01b8952601187528389fd5b634e487b7160e01b8852601186528288fd5b8680fd5b8280fd5b5050346100a557816003193601126100a55760025490516001600160a01b039091168152602090f35b5050346100a557816003193601126100a55761035c9060ff60025460a01c169051918291826105b4565b0390f35b5050346100a557816003193601126100a557905490516001600160a01b039091168152602090f35b5050346100a557816003193601126100a55760015490516001600160a01b039091168152602090f35b916020915036600319018213610265576103c961059e565b916002549260ff8460a01c1660038110156105705761056c5785546001600160a01b0391908216330361030157346003556001600160a81b0319909416938116938417600160a01b17600281905583516318160ddd60e01b815295909483908790839082905afa958615610562578796610529575b50827f825c94adc2d07d7054df3df363833d04745e4d5bbfbf6349d7d3aa0ba212731f8160ff9796947fb8fbc896aaf3402bc9e3197c5ef680f129d53be930035e2c0f7ac85244df0c1a6104ff977fd1928025d134c8c80a2236b6a0ae96292bcaf0717ea1ab4957e636787fe8bf3596670de0b6b3a76400007f09a3780ffd48bc4df9d4816a4c9a74f5e52518e90e2173034df5b0b140085ecc9d048091558851908152a185519088168152a18251348152a15192839260a01c16826105b4565b0390a17ff3a504f28a34fdf555994a3bdfd3dc29f822e8684a9ef01001afb738cc3cdd0a8180a180f35b9295509392908583813d811161055b575b61054481836105dd565b81010312610301579151949293909291908261043e565b503d61053a565b84513d89823e3d90fd5b8580fd5b634e487b7160e01b875260218652602487fd5b84913461030557826003193601126103055760209250548152f35b600435906001600160a01b038216820361020857565b9190602083019260038210156105c75752565b634e487b7160e01b600052602160045260246000fd5b601f909101601f19168101906001600160401b0382119082101761060057604052565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03909116815260208101919091526040019056fed8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426aa2646970667358221220b55e1d3f2ec3dec2b8e7f69d447d3793c2e2d0b1d4265f36338f73a85702160e64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x47FC9AA EQ PUSH2 0x583 JUMPI POP DUP2 PUSH4 0x23024408 EQ PUSH2 0x3B1 JUMPI DUP2 PUSH4 0x4B43C6F9 EQ PUSH2 0x332 JUMPI DUP2 PUSH4 0x5BF8633A EQ PUSH2 0x388 JUMPI DUP2 PUSH4 0x8F84AA09 EQ PUSH2 0x360 JUMPI DUP2 PUSH4 0x9A725809 EQ PUSH2 0x332 JUMPI DUP2 PUSH4 0x9D76EA58 EQ PUSH2 0x309 JUMPI DUP2 PUSH4 0xAAD3EC96 EQ PUSH2 0xA9 JUMPI POP PUSH4 0xC89F2CE4 EQ PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xA5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x305 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x305 JUMPI PUSH2 0xC3 PUSH2 0x59E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 SWAP1 PUSH1 0x24 SWAP1 DUP2 CALLDATALOAD SWAP1 DUP4 AND DUP5 SUB PUSH2 0x301 JUMPI DUP5 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2EF JUMPI PUSH1 0x3 SLOAD DUP1 DUP4 MUL SWAP1 DUP4 DUP3 DIV EQ DUP4 ISZERO OR ISZERO PUSH2 0x2DD JUMPI DUP2 ISZERO PUSH2 0x2CB JUMPI DIV SWAP3 DUP4 SELFBALANCE LT PUSH2 0x27D JUMPI SWAP1 DUP8 SWAP3 SWAP2 DUP4 DUP1 DUP7 DUP1 ISZERO PUSH2 0x273 JUMPI JUMPDEST DUP3 DUP1 SWAP3 SWAP2 DUP2 SWAP3 CALLER SWAP1 CALL ISZERO PUSH2 0x269 JUMPI PUSH1 0x2 SLOAD AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x265 JUMPI DUP4 SWAP2 PUSH2 0x168 SWAP2 DUP10 MLOAD SWAP6 DUP7 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP4 MSTORE CALLER DUP14 DUP5 ADD PUSH2 0x616 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x25B JUMPI PUSH2 0x21E JUMPI JUMPDEST POP POP SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x632 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x19B PUSH1 0x20 SWAP4 DUP7 MLOAD SWAP2 DUP3 SWAP2 CALLER DUP4 PUSH2 0x616 JUMP JUMPDEST SUB SWAP1 LOG1 DUP4 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x215 JUMPI POP DUP3 SWAP2 PUSH2 0x1DF JUMPI JUMPDEST POP ISZERO PUSH2 0x1C9 JUMPI DUP1 RETURN JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA1 SHL OR SWAP1 SSTORE DUP1 RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x20D JUMPI JUMPDEST DUP2 PUSH2 0x1F9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x5DD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x208 JUMPI MLOAD CODESIZE PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1EC JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP6 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x24A JUMPI POP DUP5 MSTORE SWAP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x632 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x19B PUSH2 0x177 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 DUP6 MSTORE DUP3 REVERT JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x12D JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x23 DUP2 DUP6 ADD MSTORE PUSH32 0x466F6E646F7320696E737566696369656E74657320656E20656C20636F6E7472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x61746F PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x12 DUP8 MSTORE DUP4 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP8 MSTORE DUP4 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 DUP7 MSTORE DUP3 DUP9 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xA5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA5 JUMPI PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xA5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA5 JUMPI PUSH2 0x35C SWAP1 PUSH1 0xFF PUSH1 0x2 SLOAD PUSH1 0xA0 SHR AND SWAP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x5B4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xA5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA5 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xA5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA5 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP2 PUSH1 0x20 SWAP2 POP CALLDATASIZE PUSH1 0x3 NOT ADD DUP3 SGT PUSH2 0x265 JUMPI PUSH2 0x3C9 PUSH2 0x59E JUMP JUMPDEST SWAP2 PUSH1 0x2 SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0xA0 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x570 JUMPI PUSH2 0x56C JUMPI DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND CALLER SUB PUSH2 0x301 JUMPI CALLVALUE PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 DUP2 AND SWAP4 DUP5 OR PUSH1 0x1 PUSH1 0xA0 SHL OR PUSH1 0x2 DUP2 SWAP1 SSTORE DUP4 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP6 SWAP1 SWAP5 DUP4 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x562 JUMPI DUP8 SWAP7 PUSH2 0x529 JUMPI JUMPDEST POP DUP3 PUSH32 0x825C94ADC2D07D7054DF3DF363833D04745E4D5BBFBF6349D7D3AA0BA212731F DUP2 PUSH1 0xFF SWAP8 SWAP7 SWAP5 PUSH32 0xB8FBC896AAF3402BC9E3197C5EF680F129D53BE930035E2C0F7AC85244DF0C1A PUSH2 0x4FF SWAP8 PUSH32 0xD1928025D134C8C80A2236B6A0AE96292BCAF0717EA1AB4957E636787FE8BF35 SWAP7 PUSH8 0xDE0B6B3A7640000 PUSH32 0x9A3780FFD48BC4DF9D4816A4C9A74F5E52518E90E2173034DF5B0B140085ECC SWAP14 DIV DUP1 SWAP2 SSTORE DUP9 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP6 MLOAD SWAP1 DUP9 AND DUP2 MSTORE LOG1 DUP3 MLOAD CALLVALUE DUP2 MSTORE LOG1 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0xA0 SHR AND DUP3 PUSH2 0x5B4 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH32 0xF3A504F28A34FDF555994A3BDFD3DC29F822E8684A9EF01001AFB738CC3CDD0A DUP2 DUP1 LOG1 DUP1 RETURN JUMPDEST SWAP3 SWAP6 POP SWAP4 SWAP3 SWAP1 DUP6 DUP4 DUP2 RETURNDATASIZE DUP2 GT PUSH2 0x55B JUMPI JUMPDEST PUSH2 0x544 DUP2 DUP4 PUSH2 0x5DD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x301 JUMPI SWAP2 MLOAD SWAP5 SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH2 0x43E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x53A JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x21 DUP7 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP5 SWAP2 CALLVALUE PUSH2 0x305 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x305 JUMPI PUSH1 0x20 SWAP3 POP SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x208 JUMPI JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP3 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x5C7 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x600 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD SWAP1 JUMP INVALID 0xD8 SGT DUP16 DUP11 EXTCODEHASH CALLDATACOPY PUSH29 0x5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426AA2646970 PUSH7 0x7358221220B55E SAR EXTCODEHASH 0x2E 0xC3 0xDE 0xC2 0xB8 0xE7 0xF6 SWAP14 PREVRANDAO PUSH30 0x3793C2E2D0B1D4265F36338F73A85702160E64736F6C6343000813003300 ","sourceMap":"468:3365:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1834:12;468:3365;-1:-1:-1;;;;;468:3365:31;;;;;;;;;;;;1824:22;;468:3365;;;;3045:4;468:3365;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3262:21;;;:33;468:3365;;3402:38;;;;;;;;;;;468:3365;3410:10;;;;;;;3402:38;;;;;1834:12;468:3365;;3497:61;;;;;;468:3365;;3497:61;468:3365;;;;;;;;;;;;3497:61;;3410:10;3497:61;;;;:::i;:::-;;;;;;;;;;;468:3365;;;;-1:-1:-1;;;;;;;;;;;3644:29:31;468:3365;;;;3410:10;;;;3644:29;;:::i;:::-;;;;468:3365;;-1:-1:-1;;;3733:35:31;;468:3365;;;;;3733:35;;;;;;;;;;;;468:3365;3733:40;;3729:100;;468:3365;;3729:100;1834:12;468:3365;;-1:-1:-1;;;;468:3365:31;-1:-1:-1;;;468:3365:31;;;;;3733:35;;;468:3365;3733:35;;;;;;;;;468:3365;3733:35;;;:::i;:::-;;;468:3365;;;;;3733:35;;;468:3365;;;;3733:35;;;-1:-1:-1;3733:35:31;;;468:3365;;;;;;;;3497:61;468:3365;;;-1:-1:-1;;;;;468:3365:31;;;;-1:-1:-1;468:3365:31;;;-1:-1:-1;;;;;;;;;;;3644:29:31;3497:61;;468:3365;-1:-1:-1;;;468:3365:31;;;;;;;3497:61;468:3365;;;;;;;;;3497:61;468:3365;;;3402:38;468:3365;;;;;;;;;3402:38;;;-1:-1:-1;3402:38:31;;468:3365;;;-1:-1:-1;;;468:3365:31;;;;;;;;;;;;;;;;;-1:-1:-1;;;468:3365:31;;;;;;;;-1:-1:-1;;;468:3365:31;;;;;;;;;-1:-1:-1;;;468:3365:31;;;;;;;;;-1:-1:-1;;;468:3365:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;601:27;468:3365;;;-1:-1:-1;;;;;468:3365:31;;;;;;;;;;;;;;;;;;;;;;;;;715:28;468:3365;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;468:3365:31;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;468:3365:31;;;;;;;;;;;;-1:-1:-1;468:3365:31;-1:-1:-1;;468:3365:31;;-1:-1:-1;468:3365:31;;;;:::i;:::-;;1723:10;468:3365;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;468:3365:31;;;;1613:10;:26;468:3365;;2339:9;468:3365;;-1:-1:-1;;;;;;468:3365:31;;;;;;;;;-1:-1:-1;;;468:3365:31;1723:10;468:3365;;;;;-1:-1:-1;;;2662:27:31;;468:3365;;;2339:9;;468:3365;;2339:9;;468:3365;;2662:27;;;;;;;;;;;468:3365;;;2758:33;468:3365;;;;;2726:21;2832:29;468:3365;2802:19;468:3365;2694:19;2832:29;468:3365;;;;;;;;;;2726:21;468:3365;;;;;;;2758:33;468:3365;;2339:9;468:3365;;2802:19;468:3365;;;;;;;2832:29;;:::i;:::-;;;;2877:8;;;;468:3365;;2662:27;;;-1:-1:-1;2662:27:31;;;;;;;;;;;;;;;;:::i;:::-;;;468:3365;;;;;;;2662:27;;;;468:3365;;;2662:27;;;;;;;;468:3365;;;;;;;;;;;;;;-1:-1:-1;;;468:3365:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;468:3365:31;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;468:3365:31;;;;;-1:-1:-1;468:3365:31;;;;;;-1:-1:-1;;468:3365:31;;;;-1:-1:-1;;;;;468:3365:31;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;468:3365:31;;;;;;;;;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"334200","executionCost":"infinite","totalCost":"infinite"},"external":{"claim(address,uint256)":"infinite","claimState()":"2485","fund(address)":"infinite","funds()":"2451","getClaimState()":"2419","nftAddress()":"2367","ownerAddress()":"2389","supply()":"2270","tokenAddress()":"2433"}},"methodIdentifiers":{"claim(address,uint256)":"aad3ec96","claimState()":"9a725809","fund(address)":"23024408","funds()":"c89f2ce4","getClaimState()":"4b43c6f9","nftAddress()":"5bf8633a","ownerAddress()":"8f84aa09","supply()":"047fc9aa","tokenAddress()":"9d76ea58"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum reclamarFrac.ClaimState\",\"name\":\"claimState\",\"type\":\"uint8\"}],\"name\":\"ClaimStateDetails\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"reclamante\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cantidad\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"funds\",\"type\":\"uint256\"}],\"name\":\"FundsDetails\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"SupplyDetails\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"TokenAddressDetails\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"funded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimState\",\"outputs\":[{\"internalType\":\"enum reclamarFrac.ClaimState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"funds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimState\",\"outputs\":[{\"internalType\":\"enum reclamarFrac.ClaimState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ReclamarFrac.sol\":\"reclamarFrac\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The defaut value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overloaded;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        _approve(sender, _msgSender(), currentAllowance - amount);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[sender] = senderBalance - amount;\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _balances[account] = accountBalance - amount;\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20.sol\\\";\\nimport \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        uint256 currentAllowance = allowance(account, _msgSender());\\n        require(currentAllowance >= amount, \\\"ERC20: burn amount exceeds allowance\\\");\\n        _approve(account, _msgSender(), currentAllowance - amount);\\n        _burn(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0xb8cc16fa5514ccbff1123c566ec0a21682f1ded0ca7e5df719c6bd0b7429390a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"./extensions/IERC721Enumerable.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping (uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping (address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping (uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IERC721).interfaceId\\n            || interfaceId == type(IERC721Metadata).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: balance query for the zero address\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0\\n            ? string(abi.encodePacked(baseURI, tokenId.toString()))\\n            : '';\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\\n     * in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(_msgSender() == owner || ERC721.isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"ERC721: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        require(operator != _msgSender(), \\\"ERC721: approve to caller\\\");\\n\\n        _operatorApprovals[_msgSender()][operator] = approved;\\n        emit ApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"ERC721: operator query for nonexistent token\\\");\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || ERC721.isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {\\n        _mint(to, tokenId);\\n        require(_checkOnERC721Received(address(0), to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer of token that is not own\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\\n        private returns (bool)\\n    {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver(to).onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    // solhint-disable-next-line no-inline-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual { }\\n}\\n\",\"keccak256\":\"0x8d1cabca557cb77d97d801d674f0dacc33659e1430cdd34f91ae5d033fc3d93f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xccb7e6475afcb1c5cb13b3fbf1329c10b93620a9b66393388066683915271a78\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant alphabet = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = alphabet[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n}\\n\",\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\"},\"contracts/ReclamarFrac.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/**\\n * @file reclamarFrac.sol\\n * @autor A.Castellano <alcamo93@suissistemas.com>\\n * @date created 1th Jul 2022\\n * @date last modified 11th Jul 2022\\n */\\n\\npragma solidity >=0.7.0 <=0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\n\\ncontract reclamarFrac {\\n    using SafeMath for uint256;\\n\\n    address payable public ownerAddress;\\n    address public nftAddress;\\n    address public tokenAddress;\\n    enum ClaimState {\\n        initiated,\\n        accepting,\\n        closed\\n    }\\n    ClaimState public claimState;\\n    uint256 public funds;\\n    uint256 public supply;\\n    event SupplyDetails(uint256 supply);\\n    event TokenAddressDetails(address tokenAddress);\\n    event FundsDetails(uint256 funds);\\n    event ClaimStateDetails(ClaimState claimState);\\n    event Claimed(address reclamante, uint256 cantidad);\\n\\n    event funded();\\n    //este contrato de reclamar fracciones solo debe permitirse si la persona que lo inici\\u00f3 posee este token NFT\\n    //this claims contract should only be allowed if the guy who started it owns this NFT token\\n    modifier isOwnerOfNFT(\\n        address _nftAddress,\\n        address _ownerAddress,\\n        uint256 _tokenID\\n    ) {\\n        require(ERC721(_nftAddress).ownerOf(_tokenID) == _ownerAddress);\\n        _;\\n    }\\n\\n    modifier condition(bool _condition) {\\n        require(_condition);\\n        _;\\n    }\\n    modifier onlyOwner() {\\n        require(msg.sender == ownerAddress);\\n        _;\\n    }\\n\\n    modifier inClaimState(ClaimState _state) {\\n        require(claimState == _state);\\n        _;\\n    }\\n\\n    modifier correctToken(address _token) {\\n        require(_token == tokenAddress);\\n        _;\\n    }\\n\\n    constructor(\\n        address _nftAddress,\\n        uint256 _tokenID\\n    ) isOwnerOfNFT(_nftAddress, msg.sender, _tokenID) {\\n        nftAddress = _nftAddress;\\n        ownerAddress = payable(msg.sender);\\n        claimState = ClaimState.initiated;\\n    }\\n\\n    function getClaimState() public view returns (ClaimState) {\\n    return claimState;\\n}\\n\\n\\n    function fund(\\n        address _token\\n    ) public payable inClaimState(ClaimState.initiated) onlyOwner {\\n        funds = msg.value; //cantidad agregada para permitir que se hagan reclamos //amount added to allow claims to be made\\n        tokenAddress = _token; //direcci\\u00f3n del token aceptable //address of acceptable token\\n        claimState = ClaimState.accepting; //establece en estado aceptaci\\u00f3n//set to accepting status\\n\\n        supply = ERC20(_token).totalSupply().div(1000000000000000000);\\n\\n    emit SupplyDetails(supply);\\n    emit TokenAddressDetails(tokenAddress);\\n    emit FundsDetails(funds);\\n    emit ClaimStateDetails(claimState);\\n\\n        emit funded();\\n    }\\n\\n \\nfunction claim(address _token, uint256 tokenAmount) public correctToken(_token) {\\n    // Convierte supply a wei\\n    uint256 supplyInWei = supply.mul(1e18);\\n\\n    // Calcula la cantidad de ETH a transferir en base al tokenAmount\\n    uint256 cantidad = tokenAmount.mul(funds).div(supplyInWei);\\n\\n    // Aseg\\u00farate de que el contrato tenga suficientes fondos\\n    require(address(this).balance >= cantidad, \\\"Fondos insuficientes en el contrato\\\");\\n\\n    // Transfiere la cantidad calculada de ETH al remitente\\n    payable(msg.sender).transfer(cantidad);\\n\\n\\n    // Quema la cantidad de tokens del remitente\\n    ERC20Burnable(tokenAddress).burnFrom(msg.sender, tokenAmount);\\n\\n\\n    // Emite un evento para indicar que se ha realizado una reclamaci\\u00f3n\\n    emit Claimed(msg.sender, cantidad);\\n\\n    //ok, fully claimed. Close this contract\\n        if (ERC20Burnable(_token).totalSupply() == 0){\\n            claimState = ClaimState.closed;\\n        }\\n}\\n}\",\"keccak256\":\"0xf1782ad31c57fc0830ed538db4742a27d5048f14cff248a603aaf302e8dca997\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7166,"contract":"contracts/ReclamarFrac.sol:reclamarFrac","label":"ownerAddress","offset":0,"slot":"0","type":"t_address_payable"},{"astId":7168,"contract":"contracts/ReclamarFrac.sol:reclamarFrac","label":"nftAddress","offset":0,"slot":"1","type":"t_address"},{"astId":7170,"contract":"contracts/ReclamarFrac.sol:reclamarFrac","label":"tokenAddress","offset":0,"slot":"2","type":"t_address"},{"astId":7177,"contract":"contracts/ReclamarFrac.sol:reclamarFrac","label":"claimState","offset":20,"slot":"2","type":"t_enum(ClaimState)7174"},{"astId":7179,"contract":"contracts/ReclamarFrac.sol:reclamarFrac","label":"funds","offset":0,"slot":"3","type":"t_uint256"},{"astId":7181,"contract":"contracts/ReclamarFrac.sol:reclamarFrac","label":"supply","offset":0,"slot":"4","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_enum(ClaimState)7174":{"encoding":"inplace","label":"enum reclamarFrac.ClaimState","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Rewards.sol":{"Rewards":{"abi":[{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"assetId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"rewardsCount","type":"uint256"},{"indexed":false,"internalType":"address","name":"rewardTokenAddress","type":"address"}],"name":"RewardsAdded","type":"event"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"},{"components":[{"internalType":"string","name":"tokenURI","type":"string"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"internalType":"uint256","name":"individualPrice","type":"uint256"}],"internalType":"struct NewReward[]","name":"rewards","type":"tuple[]"}],"name":"addRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetId","type":"uint256"}],"name":"getRewardsForAsset","outputs":[{"components":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"},{"internalType":"uint256","name":"individualPrice","type":"uint256"},{"internalType":"uint256","name":"availableTokens","type":"uint256"},{"internalType":"uint256","name":"rewardTokenId","type":"uint256"}],"internalType":"struct Reward[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"supervisor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60803461007c57601f61331438819003918201601f19168301916001600160401b038311848410176100815780849260209460405283398101031261007c57516001600160a01b0381169081900361007c5760018060a01b0319908160005416176000553390600154161760015560405161327c90816100988239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60808060405260043610156200001457600080fd5b600090813560e01c90816301ffc9a7146200093c5750806356e4b68b1462000911578063660486ff14620002995780638bfa795d146200016b578063bc197c8114620000cf5763f23a6e61146200006a57600080fd5b34620000cc5760a0366003190112620000cc576200008762000aa0565b506200009262000ab7565b506084356001600160401b038111620000c857620000b590369060040162000a02565b5060405163f23a6e6160e01b8152602090f35b5080fd5b80fd5b5034620000cc5760a0366003190112620000cc57620000ed62000aa0565b50620000f862000ab7565b506001600160401b0360443581811162000167576200011c90369060040162000ace565b5060643581811162000167576200013890369060040162000ace565b50608435908111620000c8576200015490369060040162000a02565b5060405163bc197c8160e01b8152602090f35b8280fd5b5034620000cc57602080600319360112620000c8578154604051631d591eb760e31b81526004803590820152908390829060249082906001600160a01b03165afa80156200028e5760e091849162000267575b5001516040805183815282518185018190529093600582901b850183019381019285015b828710620001f05785850386f35b909192938280600192603f198982030185528751906200022e6200021d835160c080855284019062000a79565b848401518382038685015262000a79565b9160408101516040830152606080820151908301526080808201519083015260a0809101519101529601920196019592919092620001e2565b6200028791503d8086833e6200027e8183620009aa565b81019062000b81565b38620001be565b6040513d85823e3d90fd5b5034620000cc576040366003190112620000cc57602435906001600160401b038211620000cc5736602383011215620000cc578160040135620002dc81620009ce565b92620002ec6040519485620009aa565b8184526024602085019260051b82010190368211620005e95760248101925b8284106200081257600154869086906001600160a01b03163303620007be578054604051634f558e7960e01b815260048035908201526001600160a01b0390911690602081602481855afa9081156200028e5783916200077c575b501562000740578160249160405192838092631d591eb760e31b825260043560048301525afa908115620006f657829162000722575b506101208101516001600160a01b03161562000641575b6101208101516001600160a01b031692825b81518110156200063d576040805160043560208201908152818301849052918152606081016001600160401b038111828210176200062757604052519020606062000411838562000e7f565b51015162000420838562000e7f565b515190873b156200062357869060206200046660405194859363a4b645eb60e01b8552306004860152876024860152604485015260a0606485015260a484019062000a79565b838382039160031983016084860152520181838b5af180156200061857908691620005fc575b505084546001600160a01b03166020620004a7848662000e7f565b5101516040620004b8858762000e7f565b510151926060620004ca868862000e7f565b510151906080620004dc878962000e7f565b510151843b15620005f8576200053895938a959362000525938793604051998a9889978896630fe6a85560e21b8852600435600489015260c0602489015260c488019062000a79565b8681036003190160448801529062000a79565b926064850152608484015260a483015203925af18015620005ed57908591620005d1575b50508151610120840151604051600435927f31055275ed1c52e3c2c906750e908d15538e6c1c01092da5ee55dfcad29da39f928291620005a7916001600160a01b0316908362000e66565b0390a26000198114620005bd57600101620003c5565b634e487b7160e01b84526011600452602484fd5b620005dc9062000996565b620005e95783866200055c565b8380fd5b6040513d87823e3d90fd5b8980fd5b620006079062000996565b620006145784876200048c565b8480fd5b6040513d88823e3d90fd5b8680fd5b634e487b7160e01b600052604160045260246000fd5b8380f35b60405190919061239c808201906001600160401b038211838310176200070e57604091839162000eab83396020815284602082015203019082f0801562000701576001600160a01b039081166101208401819052825490911690813b156200016757620006cb83928392604051948580948193633489952160e01b83526004356004840162000e66565b03925af18015620006f657620006e4575b5090620003b3565b620006ef9062000996565b83620006dc565b6040513d84823e3d90fd5b50604051903d90823e3d90fd5b634e487b7160e01b84526041600452602484fd5b6200073991503d8084833e6200027e8183620009aa565b836200039c565b60405162461bcd60e51b8152602060048201526014602482015273105cdcd95d08191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b90506020813d602011620007b5575b816200079a60209383620009aa565b81010312620001675751801515810362000167578462000366565b3d91506200078b565b60405162461bcd60e51b815260206004820152602660248201527f4f6e6c792073757065727669736f722063616e2063616c6c20746869732066756044820152653731ba34b7b760d11b6064820152608490fd5b83356001600160401b0381116200090d57820160a09081602319823603011262000623576040519182016001600160401b03811183821017620008f95760405260248101356001600160401b038111620008f55762000878906024369184010162000a02565b825260448101356001600160401b038111620008f557620008a0906024369184010162000a02565b602083015260648101356001600160401b038111620008f5579160a460209492620008d386956024369184010162000a02565b604084015260848101356060840152013560808201528152019301926200030b565b8780fd5b634e487b7160e01b88526041600452602488fd5b8580fd5b5034620000cc5780600319360112620000cc576001546040516001600160a01b039091168152602090f35b905034620000c8576020366003190112620000c85760043563ffffffff60e01b8116809103620001675760209250630271189760e51b811490811562000984575b5015158152f35b6301ffc9a760e01b149050386200097d565b6001600160401b0381116200062757604052565b601f909101601f19168101906001600160401b038211908210176200062757604052565b6001600160401b038111620006275760051b60200190565b6001600160401b0381116200062757601f01601f191660200190565b81601f8201121562000a4f5780359062000a1c82620009e6565b9262000a2c6040519485620009aa565b8284526020838301011162000a4f57816000926020809301838601378301015290565b600080fd5b60005b83811062000a685750506000910152565b818101518382015260200162000a57565b9060209162000a948151809281855285808601910162000a54565b601f01601f1916010190565b600435906001600160a01b038216820362000a4f57565b602435906001600160a01b038216820362000a4f57565b81601f8201121562000a4f5780359162000ae883620009ce565b9262000af86040519485620009aa565b808452602092838086019260051b82010192831162000a4f578301905b82821062000b24575050505090565b8135815290830190830162000b15565b81601f8201121562000a4f57805162000b4d81620009e6565b9262000b5d6040519485620009aa565b8184526020828401011162000a4f5762000b7e916020808501910162000a54565b90565b602091828282031262000a4f5781516001600160401b039283821162000a4f5701916101a093848484031262000a4f57604092835195860186811084821117620006275784528451865281850151828701528385015183811162000a4f578162000bed91870162000b34565b8487015260608086015184811162000a4f578262000c0d91880162000b34565b8188015260808087015185811162000a4f578362000c2d91890162000b34565b8189015260a09081880151828a015260c09182890151838b015260e089015187811162000a4f5789019285601f8501121562000a4f5783519262000c7184620009ce565b9562000c808b519788620009aa565b848752888088019560051b8701019588871162000a4f57898101955b87871062000dad57505050505050505060e08701526101008086015190600482101562000a4f5787015261012085810151906001600160a01b038216820362000a4f578701526101408086015184811162000a4f578262000cff91880162000b34565b90870152610160928386015181811162000a4f5786019082601f8301121562000a4f5781519062000d3e62000d3483620009ce565b97519788620009aa565b818752848088019260051b8401019380851162000a4f57858401925b85841062000d8457505050505050508301526101808091015190600582101562000a4f5782015290565b835183811162000a4f57879162000da1848480948a010162000b34565b81520193019262000d5a565b86518c811162000a4f57820185601f19828d03011262000a4f578d5186810192908e84118185101762000e5157928f52818d0151928e841162000a4f578f8f948f8f9062000dfe9287010162000b34565b825283015193841162000a4f578f838f95918f62000e2390888d958199010162000b34565b86850152888201519084015288810151888401528a8101518984015201518982015281520196019562000c9c565b60246000634e487b7160e01b81526041600452fd5b9081526001600160a01b03909116602082015260400190565b805182101562000e945760209160051b010190565b634e487b7160e01b600052603260045260246000fdfe608060405234620002bb576200239c803803806200001d81620002c0565b9283398101906020918282820312620002bb5781516001600160401b0392838211620002bb570191601f91808385011215620002bb578351938285116200029157601f19946200007385820187168801620002c0565b92818452878284010111620002bb57869160005b828110620002a7575050906000918301015280519182116200029157620000b0600254620002e6565b83811162000253575b508493838311600114620001ec575092819293600092620001e0575b50508160011b916000199060031b1c1916176002555b600380546001600160a01b0319163390811790915560007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a362000133600454620002e6565b818111620001bc575b507f4672616374696f6e616c2043545620546f6b656e73000000000000000000002a6004556005546200016f90620002e6565b9080821162000198575b600a641190d5159560da1b0160055560405161205f90816200033d8239f35b620001b3926005600052600020910160051c81019062000323565b38808062000179565b620001d99060046000528284600020910160051c81019062000323565b386200013c565b015190503880620000d5565b8216936002600052856000209160005b878782106200023c57505083600195961062000222575b505050811b01600255620000eb565b015160001960f88460031b161c1916905538808062000213565b6001849582939585015181550194019201620001fc565b62000280906002600052866000208580860160051c82019289871062000287575b0160051c019062000323565b38620000b9565b9250819262000274565b634e487b7160e01b600052604160045260246000fd5b818101840151858201850152830162000087565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200029157604052565b90600182811c9216801562000318575b60208310146200030257565b634e487b7160e01b600052602260045260246000fd5b91607f1691620002f6565b8181106200032f575050565b600081556001016200032356fe6040608081526004908136101561001557600080fd5b600091823560e01c908162fdd58e1461184057816301ffc9a7146117d257816306fdde031461171f5781630e89341c146116465781632eb2c2d6146113625781634e1273f4146111cd5781636b20c45414611089578163715018a61461103a578163862440e214610f0d5781638da5cb5b14610ee457816395d89b4114610dff578163a22cb46514610d21578163a4b645eb146109f4578163b9571e8414610539578163e985e9c5146104e7578163f242432a1461028d578163f2fde38b146101d2575063f5298aca146100e857600080fd5b8190346101cf5760603660031901126101cf57610103611870565b6001600160a01b03169060243590600080516020611fea8339815191529060443533851480156101b0575b61013790611be8565b610142851515611ec3565b61014b84611e8e565b5061015581611e8e565b50858251610162816118db565b528386528560205281862085875260205261018c818388205461018782821015611f1b565b611ca5565b8487528660205282872086885260205282872055815193845260208401523392a480f35b508486526001602090815282872033885290528186205460ff1661012e565b50fd5b905034610289576020366003190112610289576101ed611870565b600354916001600160a01b0380841692610208338514611a6e565b16938415610237575050829060008051602061200a8339815191528580a36001600160a01b0319161760035580f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b919050346102895760a0366003190112610289576102a9611870565b836102b261188b565b916044356064356084356001600160401b0381116104e3576102d790369089016119e4565b926001600160a01b03868116916102ef831515611b8e565b169233841480156104c4575b61030490611be8565b61030d81611e8e565b5061031783611e8e565b50808652602096868852888720858852885261033d848a89205461018782821015611c46565b828852878952898820868952895289882055818752868852888720838852885288872061036b858254611cb2565b905582858a51848152868b820152600080516020611fea8339815191528c3392a43b610395578580f35b889587946103d68a519788968795869463f23a6e6160e01b9c8d8752339087015260248601526044850152606484015260a0608484015260a483019061192f565b03925af1869181610495575b506104645750506001906103f4611dad565b6308c379a014610431575b506104145750505b3880808381808080808580f35b5162461bcd60e51b81529150819061042d908201611e39565b0390fd5b610439611dcb565b8061044457506103ff565b61042d8591855193849362461bcd60e51b8552840152602483019061192f565b6001600160e01b03191603905061047c575050610407565b5162461bcd60e51b81529150819061042d908201611d64565b6104b6919250843d86116104bd575b6104ae818361190c565b810190611d44565b90386103e2565b503d6104a4565b508386526001602090815288872033885290528786205460ff166102fb565b8480fd5b50503461053557806003193601126105355760ff81602093610507611870565b61050f61188b565b6001600160a01b0391821683526001875283832091168252855220549151911615158152f35b5080fd5b905034610289576003199160a0368401126109f057610556611870565b6024946001600160401b039490919086358681116109f05761057b9036908701611986565b946044358781116104e3576105939036908301611986565b96606435938185116109ec57366023860112156109ec5784830135996105b88b61196f565b946105c58951968761190c565b8b86526020968787018360059e8f1b830101913683116109e857848101915b8383106109be57505050506084358481116109ba5761060690369087016119e4565b60018060a01b039360039461061f818754163314611a6e565b8c5189510361096957906106508d9a9997959f98969493928f9083169b6106478d1515611f73565b51905114611cbf565b8a5b8d518110156106b157908e9f9392918e9f908f8f8f908f918f9261069e9361068887610681816106a59b611b64565b5197611b64565b5183528281528383209183525220918254611cb2565b9055611b3f565b909192939f9e50610652565b508e8c8f8f95908c8f968f888d95888c94869b858588600080516020611fca8339815191526106e88f8e9051918291339583611d1c565b0390a43b610847575b5050509450505050505b85518110156108435761070e818b611b64565b516107198288611b64565b51865260068552828620908051908a8211610831578d9061073a84546118a1565b601f928382116107f1575b505087918311600114610789576107799493929189918361077e575b50508160011b91600019908c1b1c1916179055611b3f565b6106fb565b015190508f80610761565b8389528789209190601f1984168a5b8a8282106107db5750509084610779979695949392106107c3575b505050600190811b019055611b3f565b0151600019838d1b60f8161c191690558e80806107b3565b6001859682939686015181550195019301610798565b858b52898b209084808701821c8301938c8810610828575b01901c01905b81811061081d57508f610745565b8a815560010161080f565b93508293610809565b634e487b7160e01b885260418c528588fd5b8480f35b83928a519889978896879563bc197c8160e01b9d8e885233908801528601526044850160a0905260a4850161087b91611a3a565b8285820301606486015261088e91611a3a565b908382030160848401526108a19161192f565b03925af186918161094a575b5061092557505060016108be611dad565b6308c379a0146108f2575b6108dc575b878b848782888188816106f1565b5162461bcd60e51b81528061042d818a01611e39565b6108fa611dcb565b8061090557506108c9565b9050889261042d925194859462461bcd60e51b865285015283019061192f565b6001600160e01b031916146108ce575162461bcd60e51b81528061042d818a01611d64565b610962919250863d88116104bd576104ae818361190c565b908d6108ad565b508a5162461bcd60e51b81528088018a90526025818601527f455243313135353a2069647320616e642075726973206c656e677468206d69736044820152640dac2e8c6d60db1b6064820152608490fd5b8880fd5b82358881116109e4578b916109d983928936918701016119e4565b8152019201916105e4565b8c80fd5b8a80fd5b8580fd5b8380fd5b839150346105355760a036600319011261053557610a10611870565b604435936001600160401b039190602435606435848111610d1d57610a3890369087016119e4565b96608435858111610d1957610a5090369088016119e4565b938660018060a01b0391610a6983600354163314611a6e565b82811696610a78881515611f73565b610a8186611e8e565b50610a8b85611e8e565b50858b5260209788928c84528c828a822091528452888d20610aae888254611cb2565b9055818d8a518a81528987820152600080516020611fea8339815191528c3392a43b610c03575b50505050610aea915033906003541614611a6e565b8552600682528420928551928311610bf05750610b0783546118a1565b601f8111610bad575b5080601f8311600114610b4b5750839482939492610b40575b50508160011b916000199060031b1c191617905580f35b015190508480610b29565b90601f198316958486528286209286905b888210610b9557505083600195969710610b7c575b505050811b01905580f35b015160001960f88460031b161c19169055848080610b71565b80600185968294968601518155019501930190610b5c565b838552818520601f840160051c810191838510610be6575b601f0160051c01905b818110610bdb5750610b10565b858155600101610bce565b9091508190610bc5565b634e487b7160e01b855260419052602484fd5b610c459394958c895180968195829463f23a6e6160e01b9a8b855233908501528460248501528c6044850152606484015260a0608484015260a483019061192f565b03925af1899181610cfa575b50610ccb5750506001610c62611dad565b6308c379a014610c96575b610c7f57610aea905b86858b80610ad5565b825162461bcd60e51b81528061042d818901611e39565b610c9e611dcb565b80610ca95750610c6d565b845162461bcd60e51b815280890187905290819061042d90602483019061192f565b6001600160e01b03191603610ce357610aea90610c76565b825162461bcd60e51b81528061042d818901611d64565b610d12919250873d89116104bd576104ae818361190c565b908b610c51565b8780fd5b8680fd5b91905034610289578060031936011261028957610d3c611870565b90602435918215158093036104e3576001600160a01b031692338414610dab5750338452600160205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020608492519162461bcd60e51b8352820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152fd5b50503461053557816003193601126105355780519082600554610e21816118a1565b80855290600190818116908115610ebc5750600114610e63575b505050610e4d82610e5f94038361190c565b5191829160208352602083019061192f565b0390f35b60058352602095507f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b828410610ea95750505082610e5f94610e4d9282010194610e3b565b8054868501880152928601928101610e8d565b610e5f9750610e4d9450602092508693915060ff191682840152151560051b82010194610e3b565b50503461053557816003193601126105355760035490516001600160a01b039091168152602090f35b839150346105355782600319360112610535576001600160401b036024358181116109f057610f3f90369084016119e4565b93610f5560018060a01b03600354163314611a6e565b82358452602090600682528420928551928311610bf05750610f7783546118a1565b601f8111610ff7575b5080601f8311600114610faf5750839482939492610b405750508160011b916000199060031b1c191617905580f35b90601f198316958486528286209286905b888210610fdf57505083600195969710610b7c57505050811b01905580f35b80600185968294968601518155019501930190610fc0565b838552818520601f840160051c810191838510611030575b601f0160051c01905b8181106110255750610f80565b858155600101611018565b909150819061100f565b8334611086578060031936011261108657600354816001600160a01b038216611064338214611a6e565b60008051602061200a8339815191528280a36001600160a01b03191660035580f35b80fd5b91905034610289576060366003190112610289576110a5611870565b906001600160401b036024358181116109ec576110c59036908601611986565b936044359182116109ec576110dc91369101611986565b916001600160a01b031633811480156111ae575b6110f990611be8565b611104811515611ec3565b6111118451845114611cbf565b84825161111d816118db565b52845b8585518210156111855750806111396111809287611b64565b516111448287611b64565b518189526111696020918a8352878b20878c528352878b205461018782821015611f1b565b91895288815285892090858a525284882055611b3f565b611120565b808387600080516020611fca8339815191526111a8898951918291339583611d1c565b0390a480f35b508085526001602090815282862033875290528185205460ff166110f0565b90503461028957816003193601126102895780356001600160401b038082116104e357366023830112156104e35781830135906112098261196f565b926112168651948561190c565b82845260209260248486019160051b830101913683116109ba57602401905b82821061133f575050506024359081116109ec576112569036908501611986565b9282518451036112ec575081519461126d8661196f565b9561127a8651978861190c565b808752611289601f199161196f565b0136838801375b82518110156112da576112d5906112c56001600160a01b036112b28387611b64565b51166112be8388611b64565b5190611ab9565b6112cf8289611b64565b52611b3f565b611290565b845182815280610e5f81850189611a3a565b60849185519162461bcd60e51b8352820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152fd5b81356001600160a01b038116810361135e578152908401908401611235565b8980fd5b905034610289576003199160a0368401126109f05761137f611870565b61138761188b565b936001600160401b0393604435858111610d19576113a89036908301611986565b906064358681116109ba576113c09036908301611986565b956084359081116109ba576113d890369083016119e4565b926113e68351885114611cbf565b6001600160a01b03888116956113fd871515611b8e565b16933385148015611628575b156115ca57895b8a855182101561148e57908961069e8a6114899461143985611432818d611b64565b5195611b64565b51938082526020908282528383208d84528252611460868585205461018782821015611c46565b8184528383528d8585209085528352848420558252818152828220908d83525220918254611cb2565b611410565b5050909493959692919784878951600080516020611fca8339815191523391806114b98a8a83611d1c565b0390a43b6114c5578880f35b8651948593849363bc197c8160e01b98898652338c87015260248601526044850160a0905260a485016114f791611a3a565b8285820301606486015261150a91611a3a565b9083820301608484015261151d9161192f565b0381885a94602095f18591816115aa575b50611594575050600161153f611dad565b6308c379a01461155d575b6104145750505b38808080808080808880f35b611565611dcb565b80611570575061154a565b905061042d91602094505193849362461bcd60e51b8552840152602483019061192f565b6001600160e01b0319160361047c575050611551565b6115c391925060203d81116104bd576104ae818361190c565b903861152e565b865162461bcd60e51b8152602081850152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608490fd5b50848a526001602052868a20338b5260205260ff878b205416611409565b9190503461028957602091826003193601126109f05735835260068252808320815193849181815490611678826118a1565b928386526001928884821691826000146116f55750506001146116b7575b8588610e5f896116a8848a038561190c565b5192828493845283019061192f565b87945081939291528383205b8284106116dd57505050820101816116a8610e5f38611696565b8054848a0186015288955087949093019281016116c3565b60ff19168882015294151560051b870190940194508593506116a89250610e5f9150389050611696565b83833461053557816003193601126105355780519180938054611741816118a1565b808652916001918083169081156117a7575060011461176c575b610e5f8686610e4d828b038361190c565b835260208084209096505b8284106117945750505082610e5f94610e4d92820101948661175b565b8054868501880152928601928101611777565b9050610e5f9750610e4d9450602092508693915060ff191682840152151560051b820101948661175b565b90503461028957602036600319011261028957359063ffffffff60e01b82168092036102895760209250636cdb3d1360e11b821491821561182f575b821561181e575b50519015158152f35b6301ffc9a760e01b14915038611815565b6303a24d0760e21b8114925061180e565b505034610535578060031936011261053557602090611869611860611870565b60243590611ab9565b9051908152f35b600435906001600160a01b038216820361188657565b600080fd5b602435906001600160a01b038216820361188657565b90600182811c921680156118d1575b60208310146118bb57565b634e487b7160e01b600052602260045260246000fd5b91607f16916118b0565b602081019081106001600160401b038211176118f657604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b038211908210176118f657604052565b919082519283825260005b84811061195b575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161193a565b6001600160401b0381116118f65760051b60200190565b81601f820112156118865780359161199d8361196f565b926119ab604051948561190c565b808452602092838086019260051b820101928311611886578301905b8282106119d5575050505090565b813581529083019083016119c7565b81601f82011215611886578035906001600160401b0382116118f65760405192611a18601f8401601f19166020018561190c565b8284526020838301011161188657816000926020809301838601378301015290565b90815180825260208080930193019160005b828110611a5a575050505090565b835185529381019392810192600101611a4c565b15611a7557565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160a01b0316908115611ae657600052600060205260406000209060005260205260406000205490565b60405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b6064820152608490fd5b6000198114611b4e5760010190565b634e487b7160e01b600052601160045260246000fd5b8051821015611b785760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b15611b9557565b60405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b15611bef57565b60405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608490fd5b15611c4d57565b60405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608490fd5b91908203918211611b4e57565b91908201809211611b4e57565b15611cc657565b60405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608490fd5b9091611d33611d4193604084526040840190611a3a565b916020818403910152611a3a565b90565b9081602091031261188657516001600160e01b0319811681036118865790565b60809060208152602860208201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b60608201520190565b60009060033d11611dba57565b905060046000803e60005160e01c90565b600060443d10611d4157604051600319913d83016004833e81516001600160401b03918282113d602484011117611e2857818401948551938411611e30573d85010160208487010111611e285750611d419291016020019061190c565b949350505050565b50949350505050565b60809060208152603460208201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356040820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60608201520190565b60408051919082016001600160401b038111838210176118f65760405260018252602082016020368237825115611b78575290565b15611eca57565b60405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b15611f2257565b60405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608490fd5b15611f7a57565b60405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608490fdfe4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fbc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220c5037edb4635403503877508e187c5a41e767365cafe1c2066c7063858af063964736f6c63430008130033a2646970667358221220210fc2f79d12b6e4d6211b2cfe949e00c9c8e760e0f87f1c63ca9b8c449cd23564736f6c63430008130033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0x7C JUMPI PUSH1 0x1F PUSH2 0x3314 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x81 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x7C JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x7C JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE CALLER SWAP1 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x327C SWAP1 DUP2 PUSH2 0x98 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH3 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH3 0x93C JUMPI POP DUP1 PUSH4 0x56E4B68B EQ PUSH3 0x911 JUMPI DUP1 PUSH4 0x660486FF EQ PUSH3 0x299 JUMPI DUP1 PUSH4 0x8BFA795D EQ PUSH3 0x16B JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH3 0xCF JUMPI PUSH4 0xF23A6E61 EQ PUSH3 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH3 0xCC JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xCC JUMPI PUSH3 0x87 PUSH3 0xAA0 JUMP JUMPDEST POP PUSH3 0x92 PUSH3 0xAB7 JUMP JUMPDEST POP PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xC8 JUMPI PUSH3 0xB5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xA02 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0xCC JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xCC JUMPI PUSH3 0xED PUSH3 0xAA0 JUMP JUMPDEST POP PUSH3 0xF8 PUSH3 0xAB7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH3 0x167 JUMPI PUSH3 0x11C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xACE JUMP JUMPDEST POP PUSH1 0x64 CALLDATALOAD DUP2 DUP2 GT PUSH3 0x167 JUMPI PUSH3 0x138 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xACE JUMP JUMPDEST POP PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH3 0xC8 JUMPI PUSH3 0x154 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xA02 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0xCC JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xC8 JUMPI DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1D591EB7 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH3 0x28E JUMPI PUSH1 0xE0 SWAP2 DUP5 SWAP2 PUSH3 0x267 JUMPI JUMPDEST POP ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE DUP3 MLOAD DUP2 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 PUSH1 0x5 DUP3 SWAP1 SHL DUP6 ADD DUP4 ADD SWAP4 DUP2 ADD SWAP3 DUP6 ADD JUMPDEST DUP3 DUP8 LT PUSH3 0x1F0 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH1 0x1 SWAP3 PUSH1 0x3F NOT DUP10 DUP3 SUB ADD DUP6 MSTORE DUP8 MLOAD SWAP1 PUSH3 0x22E PUSH3 0x21D DUP4 MLOAD PUSH1 0xC0 DUP1 DUP6 MSTORE DUP5 ADD SWAP1 PUSH3 0xA79 JUMP JUMPDEST DUP5 DUP5 ADD MLOAD DUP4 DUP3 SUB DUP7 DUP6 ADD MSTORE PUSH3 0xA79 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0xA0 DUP1 SWAP2 ADD MLOAD SWAP2 ADD MSTORE SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH3 0x1E2 JUMP JUMPDEST PUSH3 0x287 SWAP2 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH3 0x27E DUP2 DUP4 PUSH3 0x9AA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH3 0xB81 JUMP JUMPDEST CODESIZE PUSH3 0x1BE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0xCC JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xCC JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xCC JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH3 0xCC JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH3 0x2DC DUP2 PUSH3 0x9CE JUMP JUMPDEST SWAP3 PUSH3 0x2EC PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH3 0x9AA JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x24 PUSH1 0x20 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH3 0x5E9 JUMPI PUSH1 0x24 DUP2 ADD SWAP3 JUMPDEST DUP3 DUP5 LT PUSH3 0x812 JUMPI PUSH1 0x1 SLOAD DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH3 0x7BE JUMPI DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4F558E79 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH3 0x28E JUMPI DUP4 SWAP2 PUSH3 0x77C JUMPI JUMPDEST POP ISZERO PUSH3 0x740 JUMPI DUP2 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x1D591EB7 PUSH1 0xE3 SHL DUP3 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH3 0x6F6 JUMPI DUP3 SWAP2 PUSH3 0x722 JUMPI JUMPDEST POP PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH3 0x641 JUMPI JUMPDEST PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP3 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0x63D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 DUP4 ADD DUP5 SWAP1 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x60 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH3 0x627 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 PUSH1 0x60 PUSH3 0x411 DUP4 DUP6 PUSH3 0xE7F JUMP JUMPDEST MLOAD ADD MLOAD PUSH3 0x420 DUP4 DUP6 PUSH3 0xE7F JUMP JUMPDEST MLOAD MLOAD SWAP1 DUP8 EXTCODESIZE ISZERO PUSH3 0x623 JUMPI DUP7 SWAP1 PUSH1 0x20 PUSH3 0x466 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH4 0xA4B645EB PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS PUSH1 0x4 DUP7 ADD MSTORE DUP8 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x64 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD SWAP1 PUSH3 0xA79 JUMP JUMPDEST DUP4 DUP4 DUP3 SUB SWAP2 PUSH1 0x3 NOT DUP4 ADD PUSH1 0x84 DUP7 ADD MSTORE MSTORE ADD DUP2 DUP4 DUP12 GAS CALL DUP1 ISZERO PUSH3 0x618 JUMPI SWAP1 DUP7 SWAP2 PUSH3 0x5FC JUMPI JUMPDEST POP POP DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 PUSH3 0x4A7 DUP5 DUP7 PUSH3 0xE7F JUMP JUMPDEST MLOAD ADD MLOAD PUSH1 0x40 PUSH3 0x4B8 DUP6 DUP8 PUSH3 0xE7F JUMP JUMPDEST MLOAD ADD MLOAD SWAP3 PUSH1 0x60 PUSH3 0x4CA DUP7 DUP9 PUSH3 0xE7F JUMP JUMPDEST MLOAD ADD MLOAD SWAP1 PUSH1 0x80 PUSH3 0x4DC DUP8 DUP10 PUSH3 0xE7F JUMP JUMPDEST MLOAD ADD MLOAD DUP5 EXTCODESIZE ISZERO PUSH3 0x5F8 JUMPI PUSH3 0x538 SWAP6 SWAP4 DUP11 SWAP6 SWAP4 PUSH3 0x525 SWAP4 DUP8 SWAP4 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 DUP9 SWAP7 PUSH4 0xFE6A855 PUSH1 0xE2 SHL DUP9 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP10 ADD MSTORE PUSH1 0xC0 PUSH1 0x24 DUP10 ADD MSTORE PUSH1 0xC4 DUP9 ADD SWAP1 PUSH3 0xA79 JUMP JUMPDEST DUP7 DUP2 SUB PUSH1 0x3 NOT ADD PUSH1 0x44 DUP9 ADD MSTORE SWAP1 PUSH3 0xA79 JUMP JUMPDEST SWAP3 PUSH1 0x64 DUP6 ADD MSTORE PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD MSTORE SUB SWAP3 GAS CALL DUP1 ISZERO PUSH3 0x5ED JUMPI SWAP1 DUP6 SWAP2 PUSH3 0x5D1 JUMPI JUMPDEST POP POP DUP2 MLOAD PUSH2 0x120 DUP5 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x4 CALLDATALOAD SWAP3 PUSH32 0x31055275ED1C52E3C2C906750E908D15538E6C1C01092DA5EE55DFCAD29DA39F SWAP3 DUP3 SWAP2 PUSH3 0x5A7 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 PUSH3 0xE66 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x0 NOT DUP2 EQ PUSH3 0x5BD JUMPI PUSH1 0x1 ADD PUSH3 0x3C5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH3 0x5DC SWAP1 PUSH3 0x996 JUMP JUMPDEST PUSH3 0x5E9 JUMPI DUP4 DUP7 PUSH3 0x55C JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST PUSH3 0x607 SWAP1 PUSH3 0x996 JUMP JUMPDEST PUSH3 0x614 JUMPI DUP5 DUP8 PUSH3 0x48C JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x239C DUP1 DUP3 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT DUP4 DUP4 LT OR PUSH3 0x70E JUMPI PUSH1 0x40 SWAP2 DUP4 SWAP2 PUSH3 0xEAB DUP4 CODECOPY PUSH1 0x20 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE SUB ADD SWAP1 DUP3 CREATE DUP1 ISZERO PUSH3 0x701 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0x120 DUP5 ADD DUP2 SWAP1 MSTORE DUP3 SLOAD SWAP1 SWAP2 AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH3 0x167 JUMPI PUSH3 0x6CB DUP4 SWAP3 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x34899521 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD PUSH3 0xE66 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH3 0x6F6 JUMPI PUSH3 0x6E4 JUMPI JUMPDEST POP SWAP1 PUSH3 0x3B3 JUMP JUMPDEST PUSH3 0x6EF SWAP1 PUSH3 0x996 JUMP JUMPDEST DUP4 PUSH3 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH3 0x739 SWAP2 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH3 0x27E DUP2 DUP4 PUSH3 0x9AA JUMP JUMPDEST DUP4 PUSH3 0x39C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x105CDCD95D08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH3 0x7B5 JUMPI JUMPDEST DUP2 PUSH3 0x79A PUSH1 0x20 SWAP4 DUP4 PUSH3 0x9AA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x167 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH3 0x167 JUMPI DUP5 PUSH3 0x366 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH3 0x78B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792073757065727669736F722063616E2063616C6C2074686973206675 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x3731BA34B7B7 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x90D JUMPI DUP3 ADD PUSH1 0xA0 SWAP1 DUP2 PUSH1 0x23 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH3 0x623 JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x8F9 JUMPI PUSH1 0x40 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x8F5 JUMPI PUSH3 0x878 SWAP1 PUSH1 0x24 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH3 0xA02 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x44 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x8F5 JUMPI PUSH3 0x8A0 SWAP1 PUSH1 0x24 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH3 0xA02 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x64 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x8F5 JUMPI SWAP2 PUSH1 0xA4 PUSH1 0x20 SWAP5 SWAP3 PUSH3 0x8D3 DUP7 SWAP6 PUSH1 0x24 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH3 0xA02 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x84 DUP2 ADD CALLDATALOAD PUSH1 0x60 DUP5 ADD MSTORE ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP4 ADD SWAP3 PUSH3 0x30B JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0xCC JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xCC JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH3 0xC8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xC8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH3 0x167 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x2711897 PUSH1 0xE5 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH3 0x984 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH3 0x97D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x627 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH3 0x627 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x627 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x627 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0xA4F JUMPI DUP1 CALLDATALOAD SWAP1 PUSH3 0xA1C DUP3 PUSH3 0x9E6 JUMP JUMPDEST SWAP3 PUSH3 0xA2C PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH3 0x9AA JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH3 0xA4F JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0xA68 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xA57 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH3 0xA94 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH3 0xA54 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0xA4F JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0xA4F JUMPI JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0xA4F JUMPI DUP1 CALLDATALOAD SWAP2 PUSH3 0xAE8 DUP4 PUSH3 0x9CE JUMP JUMPDEST SWAP3 PUSH3 0xAF8 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH3 0x9AA JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH3 0xA4F JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH3 0xB24 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH3 0xB15 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0xA4F JUMPI DUP1 MLOAD PUSH3 0xB4D DUP2 PUSH3 0x9E6 JUMP JUMPDEST SWAP3 PUSH3 0xB5D PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH3 0x9AA JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH3 0xA4F JUMPI PUSH3 0xB7E SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH3 0xA54 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP3 DUP3 DUP3 SUB SLT PUSH3 0xA4F JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH3 0xA4F JUMPI ADD SWAP2 PUSH2 0x1A0 SWAP4 DUP5 DUP5 DUP5 SUB SLT PUSH3 0xA4F JUMPI PUSH1 0x40 SWAP3 DUP4 MLOAD SWAP6 DUP7 ADD DUP7 DUP2 LT DUP5 DUP3 GT OR PUSH3 0x627 JUMPI DUP5 MSTORE DUP5 MLOAD DUP7 MSTORE DUP2 DUP6 ADD MLOAD DUP3 DUP8 ADD MSTORE DUP4 DUP6 ADD MLOAD DUP4 DUP2 GT PUSH3 0xA4F JUMPI DUP2 PUSH3 0xBED SWAP2 DUP8 ADD PUSH3 0xB34 JUMP JUMPDEST DUP5 DUP8 ADD MSTORE PUSH1 0x60 DUP1 DUP7 ADD MLOAD DUP5 DUP2 GT PUSH3 0xA4F JUMPI DUP3 PUSH3 0xC0D SWAP2 DUP9 ADD PUSH3 0xB34 JUMP JUMPDEST DUP2 DUP9 ADD MSTORE PUSH1 0x80 DUP1 DUP8 ADD MLOAD DUP6 DUP2 GT PUSH3 0xA4F JUMPI DUP4 PUSH3 0xC2D SWAP2 DUP10 ADD PUSH3 0xB34 JUMP JUMPDEST DUP2 DUP10 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 DUP9 ADD MLOAD DUP3 DUP11 ADD MSTORE PUSH1 0xC0 SWAP2 DUP3 DUP10 ADD MLOAD DUP4 DUP12 ADD MSTORE PUSH1 0xE0 DUP10 ADD MLOAD DUP8 DUP2 GT PUSH3 0xA4F JUMPI DUP10 ADD SWAP3 DUP6 PUSH1 0x1F DUP6 ADD SLT ISZERO PUSH3 0xA4F JUMPI DUP4 MLOAD SWAP3 PUSH3 0xC71 DUP5 PUSH3 0x9CE JUMP JUMPDEST SWAP6 PUSH3 0xC80 DUP12 MLOAD SWAP8 DUP9 PUSH3 0x9AA JUMP JUMPDEST DUP5 DUP8 MSTORE DUP9 DUP1 DUP9 ADD SWAP6 PUSH1 0x5 SHL DUP8 ADD ADD SWAP6 DUP9 DUP8 GT PUSH3 0xA4F JUMPI DUP10 DUP2 ADD SWAP6 JUMPDEST DUP8 DUP8 LT PUSH3 0xDAD JUMPI POP POP POP POP POP POP POP POP PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP1 DUP7 ADD MLOAD SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH3 0xA4F JUMPI DUP8 ADD MSTORE PUSH2 0x120 DUP6 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0xA4F JUMPI DUP8 ADD MSTORE PUSH2 0x140 DUP1 DUP7 ADD MLOAD DUP5 DUP2 GT PUSH3 0xA4F JUMPI DUP3 PUSH3 0xCFF SWAP2 DUP9 ADD PUSH3 0xB34 JUMP JUMPDEST SWAP1 DUP8 ADD MSTORE PUSH2 0x160 SWAP3 DUP4 DUP7 ADD MLOAD DUP2 DUP2 GT PUSH3 0xA4F JUMPI DUP7 ADD SWAP1 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH3 0xA4F JUMPI DUP2 MLOAD SWAP1 PUSH3 0xD3E PUSH3 0xD34 DUP4 PUSH3 0x9CE JUMP JUMPDEST SWAP8 MLOAD SWAP8 DUP9 PUSH3 0x9AA JUMP JUMPDEST DUP2 DUP8 MSTORE DUP5 DUP1 DUP9 ADD SWAP3 PUSH1 0x5 SHL DUP5 ADD ADD SWAP4 DUP1 DUP6 GT PUSH3 0xA4F JUMPI DUP6 DUP5 ADD SWAP3 JUMPDEST DUP6 DUP5 LT PUSH3 0xD84 JUMPI POP POP POP POP POP POP POP DUP4 ADD MSTORE PUSH2 0x180 DUP1 SWAP2 ADD MLOAD SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH3 0xA4F JUMPI DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP4 DUP2 GT PUSH3 0xA4F JUMPI DUP8 SWAP2 PUSH3 0xDA1 DUP5 DUP5 DUP1 SWAP5 DUP11 ADD ADD PUSH3 0xB34 JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP3 PUSH3 0xD5A JUMP JUMPDEST DUP7 MLOAD DUP13 DUP2 GT PUSH3 0xA4F JUMPI DUP3 ADD DUP6 PUSH1 0x1F NOT DUP3 DUP14 SUB ADD SLT PUSH3 0xA4F JUMPI DUP14 MLOAD DUP7 DUP2 ADD SWAP3 SWAP1 DUP15 DUP5 GT DUP2 DUP6 LT OR PUSH3 0xE51 JUMPI SWAP3 DUP16 MSTORE DUP2 DUP14 ADD MLOAD SWAP3 DUP15 DUP5 GT PUSH3 0xA4F JUMPI DUP16 DUP16 SWAP5 DUP16 DUP16 SWAP1 PUSH3 0xDFE SWAP3 DUP8 ADD ADD PUSH3 0xB34 JUMP JUMPDEST DUP3 MSTORE DUP4 ADD MLOAD SWAP4 DUP5 GT PUSH3 0xA4F JUMPI DUP16 DUP4 DUP16 SWAP6 SWAP2 DUP16 PUSH3 0xE23 SWAP1 DUP9 DUP14 SWAP6 DUP2 SWAP10 ADD ADD PUSH3 0xB34 JUMP JUMPDEST DUP7 DUP6 ADD MSTORE DUP9 DUP3 ADD MLOAD SWAP1 DUP5 ADD MSTORE DUP9 DUP2 ADD MLOAD DUP9 DUP5 ADD MSTORE DUP11 DUP2 ADD MLOAD DUP10 DUP5 ADD MSTORE ADD MLOAD DUP10 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP7 ADD SWAP6 PUSH3 0xC9C JUMP JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH3 0xE94 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x2BB JUMPI PUSH3 0x239C DUP1 CODESIZE SUB DUP1 PUSH3 0x1D DUP2 PUSH3 0x2C0 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DUP3 SUB SLT PUSH3 0x2BB JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH3 0x2BB JUMPI ADD SWAP2 PUSH1 0x1F SWAP2 DUP1 DUP4 DUP6 ADD SLT ISZERO PUSH3 0x2BB JUMPI DUP4 MLOAD SWAP4 DUP3 DUP6 GT PUSH3 0x291 JUMPI PUSH1 0x1F NOT SWAP5 PUSH3 0x73 DUP6 DUP3 ADD DUP8 AND DUP9 ADD PUSH3 0x2C0 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE DUP8 DUP3 DUP5 ADD ADD GT PUSH3 0x2BB JUMPI DUP7 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH3 0x2A7 JUMPI POP POP SWAP1 PUSH1 0x0 SWAP2 DUP4 ADD ADD MSTORE DUP1 MLOAD SWAP2 DUP3 GT PUSH3 0x291 JUMPI PUSH3 0xB0 PUSH1 0x2 SLOAD PUSH3 0x2E6 JUMP JUMPDEST DUP4 DUP2 GT PUSH3 0x253 JUMPI JUMPDEST POP DUP5 SWAP4 DUP4 DUP4 GT PUSH1 0x1 EQ PUSH3 0x1EC JUMPI POP SWAP3 DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x1E0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 SSTORE JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP2 DUP1 LOG3 PUSH3 0x133 PUSH1 0x4 SLOAD PUSH3 0x2E6 JUMP JUMPDEST DUP2 DUP2 GT PUSH3 0x1BC JUMPI JUMPDEST POP PUSH32 0x4672616374696F6E616C2043545620546F6B656E73000000000000000000002A PUSH1 0x4 SSTORE PUSH1 0x5 SLOAD PUSH3 0x16F SWAP1 PUSH3 0x2E6 JUMP JUMPDEST SWAP1 DUP1 DUP3 GT PUSH3 0x198 JUMPI JUMPDEST PUSH1 0xA PUSH5 0x1190D51595 PUSH1 0xDA SHL ADD PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD PUSH2 0x205F SWAP1 DUP2 PUSH3 0x33D DUP3 CODECOPY RETURN JUMPDEST PUSH3 0x1B3 SWAP3 PUSH1 0x5 PUSH1 0x0 MSTORE PUSH1 0x0 KECCAK256 SWAP2 ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 PUSH3 0x323 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH3 0x179 JUMP JUMPDEST PUSH3 0x1D9 SWAP1 PUSH1 0x4 PUSH1 0x0 MSTORE DUP3 DUP5 PUSH1 0x0 KECCAK256 SWAP2 ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 PUSH3 0x323 JUMP JUMPDEST CODESIZE PUSH3 0x13C JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xD5 JUMP JUMPDEST DUP3 AND SWAP4 PUSH1 0x2 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP8 DUP8 DUP3 LT PUSH3 0x23C JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x222 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE PUSH3 0xEB JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x213 JUMP JUMPDEST PUSH1 0x1 DUP5 SWAP6 DUP3 SWAP4 SWAP6 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x1FC JUMP JUMPDEST PUSH3 0x280 SWAP1 PUSH1 0x2 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP10 DUP8 LT PUSH3 0x287 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 PUSH3 0x323 JUMP JUMPDEST CODESIZE PUSH3 0xB9 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x274 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 ADD DUP5 ADD MLOAD DUP6 DUP3 ADD DUP6 ADD MSTORE DUP4 ADD PUSH3 0x87 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x291 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x318 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x302 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x2F6 JUMP JUMPDEST DUP2 DUP2 LT PUSH3 0x32F JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x323 JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0xFDD58E EQ PUSH2 0x1840 JUMPI DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x17D2 JUMPI DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x171F JUMPI DUP2 PUSH4 0xE89341C EQ PUSH2 0x1646 JUMPI DUP2 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1362 JUMPI DUP2 PUSH4 0x4E1273F4 EQ PUSH2 0x11CD JUMPI DUP2 PUSH4 0x6B20C454 EQ PUSH2 0x1089 JUMPI DUP2 PUSH4 0x715018A6 EQ PUSH2 0x103A JUMPI DUP2 PUSH4 0x862440E2 EQ PUSH2 0xF0D JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0xEE4 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0xDFF JUMPI DUP2 PUSH4 0xA22CB465 EQ PUSH2 0xD21 JUMPI DUP2 PUSH4 0xA4B645EB EQ PUSH2 0x9F4 JUMPI DUP2 PUSH4 0xB9571E84 EQ PUSH2 0x539 JUMPI DUP2 PUSH4 0xE985E9C5 EQ PUSH2 0x4E7 JUMPI DUP2 PUSH4 0xF242432A EQ PUSH2 0x28D JUMPI DUP2 PUSH4 0xF2FDE38B EQ PUSH2 0x1D2 JUMPI POP PUSH4 0xF5298ACA EQ PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SWAP1 CALLVALUE PUSH2 0x1CF JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CF JUMPI PUSH2 0x103 PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FEA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x44 CALLDATALOAD CALLER DUP6 EQ DUP1 ISZERO PUSH2 0x1B0 JUMPI JUMPDEST PUSH2 0x137 SWAP1 PUSH2 0x1BE8 JUMP JUMPDEST PUSH2 0x142 DUP6 ISZERO ISZERO PUSH2 0x1EC3 JUMP JUMPDEST PUSH2 0x14B DUP5 PUSH2 0x1E8E JUMP JUMPDEST POP PUSH2 0x155 DUP2 PUSH2 0x1E8E JUMP JUMPDEST POP DUP6 DUP3 MLOAD PUSH2 0x162 DUP2 PUSH2 0x18DB JUMP JUMPDEST MSTORE DUP4 DUP7 MSTORE DUP6 PUSH1 0x20 MSTORE DUP2 DUP7 KECCAK256 DUP6 DUP8 MSTORE PUSH1 0x20 MSTORE PUSH2 0x18C DUP2 DUP4 DUP9 KECCAK256 SLOAD PUSH2 0x187 DUP3 DUP3 LT ISZERO PUSH2 0x1F1B JUMP JUMPDEST PUSH2 0x1CA5 JUMP JUMPDEST DUP5 DUP8 MSTORE DUP7 PUSH1 0x20 MSTORE DUP3 DUP8 KECCAK256 DUP7 DUP9 MSTORE PUSH1 0x20 MSTORE DUP3 DUP8 KECCAK256 SSTORE DUP2 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE CALLER SWAP3 LOG4 DUP1 RETURN JUMPDEST POP DUP5 DUP7 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP3 DUP8 KECCAK256 CALLER DUP9 MSTORE SWAP1 MSTORE DUP2 DUP7 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x12E JUMP JUMPDEST POP REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x289 JUMPI PUSH2 0x1ED PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 PUSH2 0x208 CALLER DUP6 EQ PUSH2 0x1A6E JUMP JUMPDEST AND SWAP4 DUP5 ISZERO PUSH2 0x237 JUMPI POP POP DUP3 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x200A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x289 JUMPI PUSH2 0x2A9 PUSH2 0x1870 JUMP JUMPDEST DUP4 PUSH2 0x2B2 PUSH2 0x188B JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4E3 JUMPI PUSH2 0x2D7 SWAP1 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0x19E4 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 PUSH2 0x2EF DUP4 ISZERO ISZERO PUSH2 0x1B8E JUMP JUMPDEST AND SWAP3 CALLER DUP5 EQ DUP1 ISZERO PUSH2 0x4C4 JUMPI JUMPDEST PUSH2 0x304 SWAP1 PUSH2 0x1BE8 JUMP JUMPDEST PUSH2 0x30D DUP2 PUSH2 0x1E8E JUMP JUMPDEST POP PUSH2 0x317 DUP4 PUSH2 0x1E8E JUMP JUMPDEST POP DUP1 DUP7 MSTORE PUSH1 0x20 SWAP7 DUP7 DUP9 MSTORE DUP9 DUP8 KECCAK256 DUP6 DUP9 MSTORE DUP9 MSTORE PUSH2 0x33D DUP5 DUP11 DUP10 KECCAK256 SLOAD PUSH2 0x187 DUP3 DUP3 LT ISZERO PUSH2 0x1C46 JUMP JUMPDEST DUP3 DUP9 MSTORE DUP8 DUP10 MSTORE DUP10 DUP9 KECCAK256 DUP7 DUP10 MSTORE DUP10 MSTORE DUP10 DUP9 KECCAK256 SSTORE DUP2 DUP8 MSTORE DUP7 DUP9 MSTORE DUP9 DUP8 KECCAK256 DUP4 DUP9 MSTORE DUP9 MSTORE DUP9 DUP8 KECCAK256 PUSH2 0x36B DUP6 DUP3 SLOAD PUSH2 0x1CB2 JUMP JUMPDEST SWAP1 SSTORE DUP3 DUP6 DUP11 MLOAD DUP5 DUP2 MSTORE DUP7 DUP12 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FEA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP13 CALLER SWAP3 LOG4 EXTCODESIZE PUSH2 0x395 JUMPI DUP6 DUP1 RETURN JUMPDEST DUP9 SWAP6 DUP8 SWAP5 PUSH2 0x3D6 DUP11 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP13 DUP14 DUP8 MSTORE CALLER SWAP1 DUP8 ADD MSTORE PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST SUB SWAP3 GAS CALL DUP7 SWAP2 DUP2 PUSH2 0x495 JUMPI JUMPDEST POP PUSH2 0x464 JUMPI POP POP PUSH1 0x1 SWAP1 PUSH2 0x3F4 PUSH2 0x1DAD JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x431 JUMPI JUMPDEST POP PUSH2 0x414 JUMPI POP POP JUMPDEST CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 DUP1 DUP1 DUP6 DUP1 RETURN JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 POP DUP2 SWAP1 PUSH2 0x42D SWAP1 DUP3 ADD PUSH2 0x1E39 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x439 PUSH2 0x1DCB JUMP JUMPDEST DUP1 PUSH2 0x444 JUMPI POP PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x42D DUP6 SWAP2 DUP6 MLOAD SWAP4 DUP5 SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB SWAP1 POP PUSH2 0x47C JUMPI POP POP PUSH2 0x407 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 POP DUP2 SWAP1 PUSH2 0x42D SWAP1 DUP3 ADD PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0x4B6 SWAP2 SWAP3 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x4BD JUMPI JUMPDEST PUSH2 0x4AE DUP2 DUP4 PUSH2 0x190C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1D44 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x3E2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4A4 JUMP JUMPDEST POP DUP4 DUP7 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP9 DUP8 KECCAK256 CALLER DUP9 MSTORE SWAP1 MSTORE DUP8 DUP7 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2FB JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x535 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI PUSH1 0xFF DUP2 PUSH1 0x20 SWAP4 PUSH2 0x507 PUSH2 0x1870 JUMP JUMPDEST PUSH2 0x50F PUSH2 0x188B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP8 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x3 NOT SWAP2 PUSH1 0xA0 CALLDATASIZE DUP5 ADD SLT PUSH2 0x9F0 JUMPI PUSH2 0x556 PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x24 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 SWAP1 SWAP2 SWAP1 DUP7 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x9F0 JUMPI PUSH2 0x57B SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP5 PUSH1 0x44 CALLDATALOAD DUP8 DUP2 GT PUSH2 0x4E3 JUMPI PUSH2 0x593 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP7 PUSH1 0x64 CALLDATALOAD SWAP4 DUP2 DUP6 GT PUSH2 0x9EC JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x9EC JUMPI DUP5 DUP4 ADD CALLDATALOAD SWAP10 PUSH2 0x5B8 DUP12 PUSH2 0x196F JUMP JUMPDEST SWAP5 PUSH2 0x5C5 DUP10 MLOAD SWAP7 DUP8 PUSH2 0x190C JUMP JUMPDEST DUP12 DUP7 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP8 ADD DUP4 PUSH1 0x5 SWAP15 DUP16 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x9E8 JUMPI DUP5 DUP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x9BE JUMPI POP POP POP POP PUSH1 0x84 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x9BA JUMPI PUSH2 0x606 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x19E4 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x3 SWAP5 PUSH2 0x61F DUP2 DUP8 SLOAD AND CALLER EQ PUSH2 0x1A6E JUMP JUMPDEST DUP13 MLOAD DUP10 MLOAD SUB PUSH2 0x969 JUMPI SWAP1 PUSH2 0x650 DUP14 SWAP11 SWAP10 SWAP8 SWAP6 SWAP16 SWAP9 SWAP7 SWAP5 SWAP4 SWAP3 DUP16 SWAP1 DUP4 AND SWAP12 PUSH2 0x647 DUP14 ISZERO ISZERO PUSH2 0x1F73 JUMP JUMPDEST MLOAD SWAP1 MLOAD EQ PUSH2 0x1CBF JUMP JUMPDEST DUP11 JUMPDEST DUP14 MLOAD DUP2 LT ISZERO PUSH2 0x6B1 JUMPI SWAP1 DUP15 SWAP16 SWAP4 SWAP3 SWAP2 DUP15 SWAP16 SWAP1 DUP16 DUP16 DUP16 SWAP1 DUP16 SWAP2 DUP16 SWAP3 PUSH2 0x69E SWAP4 PUSH2 0x688 DUP8 PUSH2 0x681 DUP2 PUSH2 0x6A5 SWAP12 PUSH2 0x1B64 JUMP JUMPDEST MLOAD SWAP8 PUSH2 0x1B64 JUMP JUMPDEST MLOAD DUP4 MSTORE DUP3 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1CB2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1B3F JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP16 SWAP15 POP PUSH2 0x652 JUMP JUMPDEST POP DUP15 DUP13 DUP16 DUP16 SWAP6 SWAP1 DUP13 DUP16 SWAP7 DUP16 DUP9 DUP14 SWAP6 DUP9 DUP13 SWAP5 DUP7 SWAP12 DUP6 DUP6 DUP9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x6E8 DUP16 DUP15 SWAP1 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH2 0x1D1C JUMP JUMPDEST SUB SWAP1 LOG4 EXTCODESIZE PUSH2 0x847 JUMPI JUMPDEST POP POP POP SWAP5 POP POP POP POP POP JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x843 JUMPI PUSH2 0x70E DUP2 DUP12 PUSH2 0x1B64 JUMP JUMPDEST MLOAD PUSH2 0x719 DUP3 DUP9 PUSH2 0x1B64 JUMP JUMPDEST MLOAD DUP7 MSTORE PUSH1 0x6 DUP6 MSTORE DUP3 DUP7 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 DUP11 DUP3 GT PUSH2 0x831 JUMPI DUP14 SWAP1 PUSH2 0x73A DUP5 SLOAD PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x1F SWAP3 DUP4 DUP3 GT PUSH2 0x7F1 JUMPI JUMPDEST POP POP DUP8 SWAP2 DUP4 GT PUSH1 0x1 EQ PUSH2 0x789 JUMPI PUSH2 0x779 SWAP5 SWAP4 SWAP3 SWAP2 DUP10 SWAP2 DUP4 PUSH2 0x77E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 DUP13 SHL SHR NOT AND OR SWAP1 SSTORE PUSH2 0x1B3F JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP16 DUP1 PUSH2 0x761 JUMP JUMPDEST DUP4 DUP10 MSTORE DUP8 DUP10 KECCAK256 SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP11 JUMPDEST DUP11 DUP3 DUP3 LT PUSH2 0x7DB JUMPI POP POP SWAP1 DUP5 PUSH2 0x779 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x7C3 JUMPI JUMPDEST POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1B3F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP14 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP4 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x798 JUMP JUMPDEST DUP6 DUP12 MSTORE DUP10 DUP12 KECCAK256 SWAP1 DUP5 DUP1 DUP8 ADD DUP3 SHR DUP4 ADD SWAP4 DUP13 DUP9 LT PUSH2 0x828 JUMPI JUMPDEST ADD SWAP1 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x81D JUMPI POP DUP16 PUSH2 0x745 JUMP JUMPDEST DUP11 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x80F JUMP JUMPDEST SWAP4 POP DUP3 SWAP4 PUSH2 0x809 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 DUP13 MSTORE DUP6 DUP9 REVERT JUMPDEST DUP5 DUP1 RETURN JUMPDEST DUP4 SWAP3 DUP11 MLOAD SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP14 DUP15 DUP9 MSTORE CALLER SWAP1 DUP9 ADD MSTORE DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD PUSH1 0xA0 SWAP1 MSTORE PUSH1 0xA4 DUP6 ADD PUSH2 0x87B SWAP2 PUSH2 0x1A3A JUMP JUMPDEST DUP3 DUP6 DUP3 SUB ADD PUSH1 0x64 DUP7 ADD MSTORE PUSH2 0x88E SWAP2 PUSH2 0x1A3A JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB ADD PUSH1 0x84 DUP5 ADD MSTORE PUSH2 0x8A1 SWAP2 PUSH2 0x192F JUMP JUMPDEST SUB SWAP3 GAS CALL DUP7 SWAP2 DUP2 PUSH2 0x94A JUMPI JUMPDEST POP PUSH2 0x925 JUMPI POP POP PUSH1 0x1 PUSH2 0x8BE PUSH2 0x1DAD JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x8F2 JUMPI JUMPDEST PUSH2 0x8DC JUMPI JUMPDEST DUP8 DUP12 DUP5 DUP8 DUP3 DUP9 DUP2 DUP9 DUP2 PUSH2 0x6F1 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x42D DUP2 DUP11 ADD PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x8FA PUSH2 0x1DCB JUMP JUMPDEST DUP1 PUSH2 0x905 JUMPI POP PUSH2 0x8C9 JUMP JUMPDEST SWAP1 POP DUP9 SWAP3 PUSH2 0x42D SWAP3 MLOAD SWAP5 DUP6 SWAP5 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP7 MSTORE DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x8CE JUMPI MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x42D DUP2 DUP11 ADD PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0x962 SWAP2 SWAP3 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x4BD JUMPI PUSH2 0x4AE DUP2 DUP4 PUSH2 0x190C JUMP JUMPDEST SWAP1 DUP14 PUSH2 0x8AD JUMP JUMPDEST POP DUP11 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP9 ADD DUP11 SWAP1 MSTORE PUSH1 0x25 DUP2 DUP7 ADD MSTORE PUSH32 0x455243313135353A2069647320616E642075726973206C656E677468206D6973 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0xDAC2E8C6D PUSH1 0xDB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD DUP9 DUP2 GT PUSH2 0x9E4 JUMPI DUP12 SWAP2 PUSH2 0x9D9 DUP4 SWAP3 DUP10 CALLDATASIZE SWAP2 DUP8 ADD ADD PUSH2 0x19E4 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x5E4 JUMP JUMPDEST DUP13 DUP1 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x535 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x535 JUMPI PUSH2 0xA10 PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x64 CALLDATALOAD DUP5 DUP2 GT PUSH2 0xD1D JUMPI PUSH2 0xA38 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x19E4 JUMP JUMPDEST SWAP7 PUSH1 0x84 CALLDATALOAD DUP6 DUP2 GT PUSH2 0xD19 JUMPI PUSH2 0xA50 SWAP1 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0x19E4 JUMP JUMPDEST SWAP4 DUP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0xA69 DUP4 PUSH1 0x3 SLOAD AND CALLER EQ PUSH2 0x1A6E JUMP JUMPDEST DUP3 DUP2 AND SWAP7 PUSH2 0xA78 DUP9 ISZERO ISZERO PUSH2 0x1F73 JUMP JUMPDEST PUSH2 0xA81 DUP7 PUSH2 0x1E8E JUMP JUMPDEST POP PUSH2 0xA8B DUP6 PUSH2 0x1E8E JUMP JUMPDEST POP DUP6 DUP12 MSTORE PUSH1 0x20 SWAP8 DUP9 SWAP3 DUP13 DUP5 MSTORE DUP13 DUP3 DUP11 DUP3 KECCAK256 SWAP2 MSTORE DUP5 MSTORE DUP9 DUP14 KECCAK256 PUSH2 0xAAE DUP9 DUP3 SLOAD PUSH2 0x1CB2 JUMP JUMPDEST SWAP1 SSTORE DUP2 DUP14 DUP11 MLOAD DUP11 DUP2 MSTORE DUP10 DUP8 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FEA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP13 CALLER SWAP3 LOG4 EXTCODESIZE PUSH2 0xC03 JUMPI JUMPDEST POP POP POP POP PUSH2 0xAEA SWAP2 POP CALLER SWAP1 PUSH1 0x3 SLOAD AND EQ PUSH2 0x1A6E JUMP JUMPDEST DUP6 MSTORE PUSH1 0x6 DUP3 MSTORE DUP5 KECCAK256 SWAP3 DUP6 MLOAD SWAP3 DUP4 GT PUSH2 0xBF0 JUMPI POP PUSH2 0xB07 DUP4 SLOAD PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xBAD JUMPI JUMPDEST POP DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xB4B JUMPI POP DUP4 SWAP5 DUP3 SWAP4 SWAP5 SWAP3 PUSH2 0xB40 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0xB29 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP3 DUP7 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0xB95 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0xB7C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP5 DUP1 DUP1 PUSH2 0xB71 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0xB5C JUMP JUMPDEST DUP4 DUP6 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP6 LT PUSH2 0xBE6 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xBDB JUMPI POP PUSH2 0xB10 JUMP JUMPDEST DUP6 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xBCE JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xBC5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH2 0xC45 SWAP4 SWAP5 SWAP6 DUP13 DUP10 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP11 DUP12 DUP6 MSTORE CALLER SWAP1 DUP6 ADD MSTORE DUP5 PUSH1 0x24 DUP6 ADD MSTORE DUP13 PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST SUB SWAP3 GAS CALL DUP10 SWAP2 DUP2 PUSH2 0xCFA JUMPI JUMPDEST POP PUSH2 0xCCB JUMPI POP POP PUSH1 0x1 PUSH2 0xC62 PUSH2 0x1DAD JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0xC96 JUMPI JUMPDEST PUSH2 0xC7F JUMPI PUSH2 0xAEA SWAP1 JUMPDEST DUP7 DUP6 DUP12 DUP1 PUSH2 0xAD5 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x42D DUP2 DUP10 ADD PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0xC9E PUSH2 0x1DCB JUMP JUMPDEST DUP1 PUSH2 0xCA9 JUMPI POP PUSH2 0xC6D JUMP JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x42D SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0xCE3 JUMPI PUSH2 0xAEA SWAP1 PUSH2 0xC76 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x42D DUP2 DUP10 ADD PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0xD12 SWAP2 SWAP3 POP DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x4BD JUMPI PUSH2 0x4AE DUP2 DUP4 PUSH2 0x190C JUMP JUMPDEST SWAP1 DUP12 PUSH2 0xC51 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x289 JUMPI PUSH2 0xD3C PUSH2 0x1870 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0x4E3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 CALLER DUP5 EQ PUSH2 0xDAB JUMPI POP CALLER DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 DUP5 KECCAK256 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE DUP1 DUP5 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x535 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0x5 SLOAD PUSH2 0xE21 DUP2 PUSH2 0x18A1 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xEBC JUMPI POP PUSH1 0x1 EQ PUSH2 0xE63 JUMPI JUMPDEST POP POP POP PUSH2 0xE4D DUP3 PUSH2 0xE5F SWAP5 SUB DUP4 PUSH2 0x190C JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 DUP4 MSTORE PUSH1 0x20 SWAP6 POP PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 JUMPDEST DUP3 DUP5 LT PUSH2 0xEA9 JUMPI POP POP POP DUP3 PUSH2 0xE5F SWAP5 PUSH2 0xE4D SWAP3 DUP3 ADD ADD SWAP5 PUSH2 0xE3B JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xE8D JUMP JUMPDEST PUSH2 0xE5F SWAP8 POP PUSH2 0xE4D SWAP5 POP PUSH1 0x20 SWAP3 POP DUP7 SWAP4 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 PUSH2 0xE3B JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x535 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x535 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x9F0 JUMPI PUSH2 0xF3F SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x19E4 JUMP JUMPDEST SWAP4 PUSH2 0xF55 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND CALLER EQ PUSH2 0x1A6E JUMP JUMPDEST DUP3 CALLDATALOAD DUP5 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x6 DUP3 MSTORE DUP5 KECCAK256 SWAP3 DUP6 MLOAD SWAP3 DUP4 GT PUSH2 0xBF0 JUMPI POP PUSH2 0xF77 DUP4 SLOAD PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xFF7 JUMPI JUMPDEST POP DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xFAF JUMPI POP DUP4 SWAP5 DUP3 SWAP4 SWAP5 SWAP3 PUSH2 0xB40 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP3 DUP7 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0xFDF JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0xB7C JUMPI POP POP POP DUP2 SHL ADD SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0xFC0 JUMP JUMPDEST DUP4 DUP6 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP6 LT PUSH2 0x1030 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1025 JUMPI POP PUSH2 0xF80 JUMP JUMPDEST DUP6 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1018 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST DUP4 CALLVALUE PUSH2 0x1086 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1086 JUMPI PUSH1 0x3 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1064 CALLER DUP3 EQ PUSH2 0x1A6E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x200A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x289 JUMPI PUSH2 0x10A5 PUSH2 0x1870 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x9EC JUMPI PUSH2 0x10C5 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP4 PUSH1 0x44 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x9EC JUMPI PUSH2 0x10DC SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ DUP1 ISZERO PUSH2 0x11AE JUMPI JUMPDEST PUSH2 0x10F9 SWAP1 PUSH2 0x1BE8 JUMP JUMPDEST PUSH2 0x1104 DUP2 ISZERO ISZERO PUSH2 0x1EC3 JUMP JUMPDEST PUSH2 0x1111 DUP5 MLOAD DUP5 MLOAD EQ PUSH2 0x1CBF JUMP JUMPDEST DUP5 DUP3 MLOAD PUSH2 0x111D DUP2 PUSH2 0x18DB JUMP JUMPDEST MSTORE DUP5 JUMPDEST DUP6 DUP6 MLOAD DUP3 LT ISZERO PUSH2 0x1185 JUMPI POP DUP1 PUSH2 0x1139 PUSH2 0x1180 SWAP3 DUP8 PUSH2 0x1B64 JUMP JUMPDEST MLOAD PUSH2 0x1144 DUP3 DUP8 PUSH2 0x1B64 JUMP JUMPDEST MLOAD DUP2 DUP10 MSTORE PUSH2 0x1169 PUSH1 0x20 SWAP2 DUP11 DUP4 MSTORE DUP8 DUP12 KECCAK256 DUP8 DUP13 MSTORE DUP4 MSTORE DUP8 DUP12 KECCAK256 SLOAD PUSH2 0x187 DUP3 DUP3 LT ISZERO PUSH2 0x1F1B JUMP JUMPDEST SWAP2 DUP10 MSTORE DUP9 DUP2 MSTORE DUP6 DUP10 KECCAK256 SWAP1 DUP6 DUP11 MSTORE MSTORE DUP5 DUP9 KECCAK256 SSTORE PUSH2 0x1B3F JUMP JUMPDEST PUSH2 0x1120 JUMP JUMPDEST DUP1 DUP4 DUP8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x11A8 DUP10 DUP10 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH2 0x1D1C JUMP JUMPDEST SUB SWAP1 LOG4 DUP1 RETURN JUMPDEST POP DUP1 DUP6 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP3 DUP7 KECCAK256 CALLER DUP8 MSTORE SWAP1 MSTORE DUP2 DUP6 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x10F0 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x289 JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT PUSH2 0x4E3 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x4E3 JUMPI DUP2 DUP4 ADD CALLDATALOAD SWAP1 PUSH2 0x1209 DUP3 PUSH2 0x196F JUMP JUMPDEST SWAP3 PUSH2 0x1216 DUP7 MLOAD SWAP5 DUP6 PUSH2 0x190C JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x24 DUP5 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x9BA JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x133F JUMPI POP POP POP PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x9EC JUMPI PUSH2 0x1256 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP3 DUP3 MLOAD DUP5 MLOAD SUB PUSH2 0x12EC JUMPI POP DUP2 MLOAD SWAP5 PUSH2 0x126D DUP7 PUSH2 0x196F JUMP JUMPDEST SWAP6 PUSH2 0x127A DUP7 MLOAD SWAP8 DUP9 PUSH2 0x190C JUMP JUMPDEST DUP1 DUP8 MSTORE PUSH2 0x1289 PUSH1 0x1F NOT SWAP2 PUSH2 0x196F JUMP JUMPDEST ADD CALLDATASIZE DUP4 DUP9 ADD CALLDATACOPY JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x12DA JUMPI PUSH2 0x12D5 SWAP1 PUSH2 0x12C5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x12B2 DUP4 DUP8 PUSH2 0x1B64 JUMP JUMPDEST MLOAD AND PUSH2 0x12BE DUP4 DUP9 PUSH2 0x1B64 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1AB9 JUMP JUMPDEST PUSH2 0x12CF DUP3 DUP10 PUSH2 0x1B64 JUMP JUMPDEST MSTORE PUSH2 0x1B3F JUMP JUMPDEST PUSH2 0x1290 JUMP JUMPDEST DUP5 MLOAD DUP3 DUP2 MSTORE DUP1 PUSH2 0xE5F DUP2 DUP6 ADD DUP10 PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x84 SWAP2 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x135E JUMPI DUP2 MSTORE SWAP1 DUP5 ADD SWAP1 DUP5 ADD PUSH2 0x1235 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x3 NOT SWAP2 PUSH1 0xA0 CALLDATASIZE DUP5 ADD SLT PUSH2 0x9F0 JUMPI PUSH2 0x137F PUSH2 0x1870 JUMP JUMPDEST PUSH2 0x1387 PUSH2 0x188B JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 PUSH1 0x44 CALLDATALOAD DUP6 DUP2 GT PUSH2 0xD19 JUMPI PUSH2 0x13A8 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x9BA JUMPI PUSH2 0x13C0 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP6 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x9BA JUMPI PUSH2 0x13D8 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x19E4 JUMP JUMPDEST SWAP3 PUSH2 0x13E6 DUP4 MLOAD DUP9 MLOAD EQ PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP6 PUSH2 0x13FD DUP8 ISZERO ISZERO PUSH2 0x1B8E JUMP JUMPDEST AND SWAP4 CALLER DUP6 EQ DUP1 ISZERO PUSH2 0x1628 JUMPI JUMPDEST ISZERO PUSH2 0x15CA JUMPI DUP10 JUMPDEST DUP11 DUP6 MLOAD DUP3 LT ISZERO PUSH2 0x148E JUMPI SWAP1 DUP10 PUSH2 0x69E DUP11 PUSH2 0x1489 SWAP5 PUSH2 0x1439 DUP6 PUSH2 0x1432 DUP2 DUP14 PUSH2 0x1B64 JUMP JUMPDEST MLOAD SWAP6 PUSH2 0x1B64 JUMP JUMPDEST MLOAD SWAP4 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP1 DUP3 DUP3 MSTORE DUP4 DUP4 KECCAK256 DUP14 DUP5 MSTORE DUP3 MSTORE PUSH2 0x1460 DUP7 DUP6 DUP6 KECCAK256 SLOAD PUSH2 0x187 DUP3 DUP3 LT ISZERO PUSH2 0x1C46 JUMP JUMPDEST DUP2 DUP5 MSTORE DUP4 DUP4 MSTORE DUP14 DUP6 DUP6 KECCAK256 SWAP1 DUP6 MSTORE DUP4 MSTORE DUP5 DUP5 KECCAK256 SSTORE DUP3 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP14 DUP4 MSTORE MSTORE KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1CB2 JUMP JUMPDEST PUSH2 0x1410 JUMP JUMPDEST POP POP SWAP1 SWAP5 SWAP4 SWAP6 SWAP7 SWAP3 SWAP2 SWAP8 DUP5 DUP8 DUP10 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP2 DUP1 PUSH2 0x14B9 DUP11 DUP11 DUP4 PUSH2 0x1D1C JUMP JUMPDEST SUB SWAP1 LOG4 EXTCODESIZE PUSH2 0x14C5 JUMPI DUP9 DUP1 RETURN JUMPDEST DUP7 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE CALLER DUP13 DUP8 ADD MSTORE PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD PUSH1 0xA0 SWAP1 MSTORE PUSH1 0xA4 DUP6 ADD PUSH2 0x14F7 SWAP2 PUSH2 0x1A3A JUMP JUMPDEST DUP3 DUP6 DUP3 SUB ADD PUSH1 0x64 DUP7 ADD MSTORE PUSH2 0x150A SWAP2 PUSH2 0x1A3A JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB ADD PUSH1 0x84 DUP5 ADD MSTORE PUSH2 0x151D SWAP2 PUSH2 0x192F JUMP JUMPDEST SUB DUP2 DUP9 GAS SWAP5 PUSH1 0x20 SWAP6 CALL DUP6 SWAP2 DUP2 PUSH2 0x15AA JUMPI JUMPDEST POP PUSH2 0x1594 JUMPI POP POP PUSH1 0x1 PUSH2 0x153F PUSH2 0x1DAD JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x155D JUMPI JUMPDEST PUSH2 0x414 JUMPI POP POP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP9 DUP1 RETURN JUMPDEST PUSH2 0x1565 PUSH2 0x1DCB JUMP JUMPDEST DUP1 PUSH2 0x1570 JUMPI POP PUSH2 0x154A JUMP JUMPDEST SWAP1 POP PUSH2 0x42D SWAP2 PUSH1 0x20 SWAP5 POP MLOAD SWAP4 DUP5 SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x47C JUMPI POP POP PUSH2 0x1551 JUMP JUMPDEST PUSH2 0x15C3 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x4BD JUMPI PUSH2 0x4AE DUP2 DUP4 PUSH2 0x190C JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x152E JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP5 DUP11 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP11 KECCAK256 CALLER DUP12 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP8 DUP12 KECCAK256 SLOAD AND PUSH2 0x1409 JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x9F0 JUMPI CALLDATALOAD DUP4 MSTORE PUSH1 0x6 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP2 MLOAD SWAP4 DUP5 SWAP2 DUP2 DUP2 SLOAD SWAP1 PUSH2 0x1678 DUP3 PUSH2 0x18A1 JUMP JUMPDEST SWAP3 DUP4 DUP7 MSTORE PUSH1 0x1 SWAP3 DUP9 DUP5 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x16F5 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x16B7 JUMPI JUMPDEST DUP6 DUP9 PUSH2 0xE5F DUP10 PUSH2 0x16A8 DUP5 DUP11 SUB DUP6 PUSH2 0x190C JUMP JUMPDEST MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST DUP8 SWAP5 POP DUP2 SWAP4 SWAP3 SWAP2 MSTORE DUP4 DUP4 KECCAK256 JUMPDEST DUP3 DUP5 LT PUSH2 0x16DD JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0x16A8 PUSH2 0xE5F CODESIZE PUSH2 0x1696 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP3 ADD MSTORE SWAP5 ISZERO ISZERO PUSH1 0x5 SHL DUP8 ADD SWAP1 SWAP5 ADD SWAP5 POP DUP6 SWAP4 POP PUSH2 0x16A8 SWAP3 POP PUSH2 0xE5F SWAP2 POP CODESIZE SWAP1 POP PUSH2 0x1696 JUMP JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x535 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD PUSH2 0x1741 DUP2 PUSH2 0x18A1 JUMP JUMPDEST DUP1 DUP7 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x17A7 JUMPI POP PUSH1 0x1 EQ PUSH2 0x176C JUMPI JUMPDEST PUSH2 0xE5F DUP7 DUP7 PUSH2 0xE4D DUP3 DUP12 SUB DUP4 PUSH2 0x190C JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 KECCAK256 SWAP1 SWAP7 POP JUMPDEST DUP3 DUP5 LT PUSH2 0x1794 JUMPI POP POP POP DUP3 PUSH2 0xE5F SWAP5 PUSH2 0xE4D SWAP3 DUP3 ADD ADD SWAP5 DUP7 PUSH2 0x175B JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x1777 JUMP JUMPDEST SWAP1 POP PUSH2 0xE5F SWAP8 POP PUSH2 0xE4D SWAP5 POP PUSH1 0x20 SWAP3 POP DUP7 SWAP4 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 DUP7 PUSH2 0x175B JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x289 JUMPI CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x289 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x182F JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x181E JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 POP CODESIZE PUSH2 0x1815 JUMP JUMPDEST PUSH4 0x3A24D07 PUSH1 0xE2 SHL DUP2 EQ SWAP3 POP PUSH2 0x180E JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x535 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1869 PUSH2 0x1860 PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1AB9 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1886 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1886 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x18D1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x18BB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x18F6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x18F6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x195B JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x193A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x18F6 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1886 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x199D DUP4 PUSH2 0x196F JUMP JUMPDEST SWAP3 PUSH2 0x19AB PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x190C JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x1886 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x19D5 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x19C7 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1886 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x18F6 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1A18 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x190C JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x1886 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1A5A JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1A4C JUMP JUMPDEST ISZERO PUSH2 0x1A75 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1AE6 JUMPI PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1B4E JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1B78 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1B95 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1BEF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1C4D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1B4E JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1B4E JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1CC6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 PUSH2 0x1D33 PUSH2 0x1D41 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x1A3A JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1A3A JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1886 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x1886 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x28 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x3 RETURNDATASIZE GT PUSH2 0x1DBA JUMPI JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x1D41 JUMPI PUSH1 0x40 MLOAD PUSH1 0x3 NOT SWAP2 RETURNDATASIZE DUP4 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 DUP3 GT RETURNDATASIZE PUSH1 0x24 DUP5 ADD GT OR PUSH2 0x1E28 JUMPI DUP2 DUP5 ADD SWAP5 DUP6 MLOAD SWAP4 DUP5 GT PUSH2 0x1E30 JUMPI RETURNDATASIZE DUP6 ADD ADD PUSH1 0x20 DUP5 DUP8 ADD ADD GT PUSH2 0x1E28 JUMPI POP PUSH2 0x1D41 SWAP3 SWAP2 ADD PUSH1 0x20 ADD SWAP1 PUSH2 0x190C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x40 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x18F6 JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x20 CALLDATASIZE DUP3 CALLDATACOPY DUP3 MLOAD ISZERO PUSH2 0x1B78 JUMPI MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1ECA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F22 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F7A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID 0x4A CODECOPY 0xDC MOD 0xD4 0xC0 0xDB 0xC6 0x4B PUSH17 0xAF90FD698A233A518AA5D07E595D983B8C SDIV 0x26 0xC8 0xF7 0xFB 0xC3 0xD5 DUP2 PUSH9 0xC5AE7397731D063D5B 0xBF RETURNDATASIZE PUSH6 0x7854427343F4 0xC0 DUP4 0x24 0xF PUSH27 0xACAA2D0F628BE0079C531659141344CD1FD0A4F28419497F9722A3 0xDA 0xAF 0xE3 0xB4 XOR PUSH16 0x6B6457E0A2646970667358221220C503 PUSH31 0xDB4635403503877508E187C5A41E767365CAFE1C2066C7063858AF06396473 PUSH16 0x6C63430008130033A264697066735822 SLT KECCAK256 0x21 0xF 0xC2 0xF7 SWAP14 SLT 0xB6 0xE4 0xD6 0x21 SHL 0x2C INVALID SWAP5 SWAP15 STOP 0xC9 0xC8 0xE7 PUSH1 0xE0 0xF8 PUSH32 0x1C63CA9B8C449CD23564736F6C63430008130033000000000000000000000000 ","sourceMap":"221:2051:32:-:0;;;;;;;;;;;;;-1:-1:-1;;221:2051:32;;;;-1:-1:-1;;;;;221:2051:32;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;221:2051:32;;;;;;;;;;;;;;;;-1:-1:-1;221:2051:32;;;-1:-1:-1;221:2051:32;563:10;221:2051;;;;;;;;;;;;;;;;;-1:-1:-1;221:2051:32;;;;;;-1:-1:-1;221:2051:32;;;;;-1:-1:-1;221:2051:32"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":2720,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_9853":{"entryPoint":2743,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":2766,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string":{"entryPoint":2562,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":2868,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_Asset_fromMemory":{"entryPoint":2945,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":2681,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_address":{"entryPoint":3686,"id":null,"parameterSlots":3,"returnSlots":1},"array_allocation_size_array_struct_NewReward_dyn":{"entryPoint":2510,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":2534,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2644,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":2474,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_9849":{"entryPoint":2454,"id":null,"parameterSlots":1,"returnSlots":0},"memory_array_index_access_struct_NewReward_dyn":{"entryPoint":3711,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60808060405260043610156200001457600080fd5b600090813560e01c90816301ffc9a7146200093c5750806356e4b68b1462000911578063660486ff14620002995780638bfa795d146200016b578063bc197c8114620000cf5763f23a6e61146200006a57600080fd5b34620000cc5760a0366003190112620000cc576200008762000aa0565b506200009262000ab7565b506084356001600160401b038111620000c857620000b590369060040162000a02565b5060405163f23a6e6160e01b8152602090f35b5080fd5b80fd5b5034620000cc5760a0366003190112620000cc57620000ed62000aa0565b50620000f862000ab7565b506001600160401b0360443581811162000167576200011c90369060040162000ace565b5060643581811162000167576200013890369060040162000ace565b50608435908111620000c8576200015490369060040162000a02565b5060405163bc197c8160e01b8152602090f35b8280fd5b5034620000cc57602080600319360112620000c8578154604051631d591eb760e31b81526004803590820152908390829060249082906001600160a01b03165afa80156200028e5760e091849162000267575b5001516040805183815282518185018190529093600582901b850183019381019285015b828710620001f05785850386f35b909192938280600192603f198982030185528751906200022e6200021d835160c080855284019062000a79565b848401518382038685015262000a79565b9160408101516040830152606080820151908301526080808201519083015260a0809101519101529601920196019592919092620001e2565b6200028791503d8086833e6200027e8183620009aa565b81019062000b81565b38620001be565b6040513d85823e3d90fd5b5034620000cc576040366003190112620000cc57602435906001600160401b038211620000cc5736602383011215620000cc578160040135620002dc81620009ce565b92620002ec6040519485620009aa565b8184526024602085019260051b82010190368211620005e95760248101925b8284106200081257600154869086906001600160a01b03163303620007be578054604051634f558e7960e01b815260048035908201526001600160a01b0390911690602081602481855afa9081156200028e5783916200077c575b501562000740578160249160405192838092631d591eb760e31b825260043560048301525afa908115620006f657829162000722575b506101208101516001600160a01b03161562000641575b6101208101516001600160a01b031692825b81518110156200063d576040805160043560208201908152818301849052918152606081016001600160401b038111828210176200062757604052519020606062000411838562000e7f565b51015162000420838562000e7f565b515190873b156200062357869060206200046660405194859363a4b645eb60e01b8552306004860152876024860152604485015260a0606485015260a484019062000a79565b838382039160031983016084860152520181838b5af180156200061857908691620005fc575b505084546001600160a01b03166020620004a7848662000e7f565b5101516040620004b8858762000e7f565b510151926060620004ca868862000e7f565b510151906080620004dc878962000e7f565b510151843b15620005f8576200053895938a959362000525938793604051998a9889978896630fe6a85560e21b8852600435600489015260c0602489015260c488019062000a79565b8681036003190160448801529062000a79565b926064850152608484015260a483015203925af18015620005ed57908591620005d1575b50508151610120840151604051600435927f31055275ed1c52e3c2c906750e908d15538e6c1c01092da5ee55dfcad29da39f928291620005a7916001600160a01b0316908362000e66565b0390a26000198114620005bd57600101620003c5565b634e487b7160e01b84526011600452602484fd5b620005dc9062000996565b620005e95783866200055c565b8380fd5b6040513d87823e3d90fd5b8980fd5b620006079062000996565b620006145784876200048c565b8480fd5b6040513d88823e3d90fd5b8680fd5b634e487b7160e01b600052604160045260246000fd5b8380f35b60405190919061239c808201906001600160401b038211838310176200070e57604091839162000eab83396020815284602082015203019082f0801562000701576001600160a01b039081166101208401819052825490911690813b156200016757620006cb83928392604051948580948193633489952160e01b83526004356004840162000e66565b03925af18015620006f657620006e4575b5090620003b3565b620006ef9062000996565b83620006dc565b6040513d84823e3d90fd5b50604051903d90823e3d90fd5b634e487b7160e01b84526041600452602484fd5b6200073991503d8084833e6200027e8183620009aa565b836200039c565b60405162461bcd60e51b8152602060048201526014602482015273105cdcd95d08191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b90506020813d602011620007b5575b816200079a60209383620009aa565b81010312620001675751801515810362000167578462000366565b3d91506200078b565b60405162461bcd60e51b815260206004820152602660248201527f4f6e6c792073757065727669736f722063616e2063616c6c20746869732066756044820152653731ba34b7b760d11b6064820152608490fd5b83356001600160401b0381116200090d57820160a09081602319823603011262000623576040519182016001600160401b03811183821017620008f95760405260248101356001600160401b038111620008f55762000878906024369184010162000a02565b825260448101356001600160401b038111620008f557620008a0906024369184010162000a02565b602083015260648101356001600160401b038111620008f5579160a460209492620008d386956024369184010162000a02565b604084015260848101356060840152013560808201528152019301926200030b565b8780fd5b634e487b7160e01b88526041600452602488fd5b8580fd5b5034620000cc5780600319360112620000cc576001546040516001600160a01b039091168152602090f35b905034620000c8576020366003190112620000c85760043563ffffffff60e01b8116809103620001675760209250630271189760e51b811490811562000984575b5015158152f35b6301ffc9a760e01b149050386200097d565b6001600160401b0381116200062757604052565b601f909101601f19168101906001600160401b038211908210176200062757604052565b6001600160401b038111620006275760051b60200190565b6001600160401b0381116200062757601f01601f191660200190565b81601f8201121562000a4f5780359062000a1c82620009e6565b9262000a2c6040519485620009aa565b8284526020838301011162000a4f57816000926020809301838601378301015290565b600080fd5b60005b83811062000a685750506000910152565b818101518382015260200162000a57565b9060209162000a948151809281855285808601910162000a54565b601f01601f1916010190565b600435906001600160a01b038216820362000a4f57565b602435906001600160a01b038216820362000a4f57565b81601f8201121562000a4f5780359162000ae883620009ce565b9262000af86040519485620009aa565b808452602092838086019260051b82010192831162000a4f578301905b82821062000b24575050505090565b8135815290830190830162000b15565b81601f8201121562000a4f57805162000b4d81620009e6565b9262000b5d6040519485620009aa565b8184526020828401011162000a4f5762000b7e916020808501910162000a54565b90565b602091828282031262000a4f5781516001600160401b039283821162000a4f5701916101a093848484031262000a4f57604092835195860186811084821117620006275784528451865281850151828701528385015183811162000a4f578162000bed91870162000b34565b8487015260608086015184811162000a4f578262000c0d91880162000b34565b8188015260808087015185811162000a4f578362000c2d91890162000b34565b8189015260a09081880151828a015260c09182890151838b015260e089015187811162000a4f5789019285601f8501121562000a4f5783519262000c7184620009ce565b9562000c808b519788620009aa565b848752888088019560051b8701019588871162000a4f57898101955b87871062000dad57505050505050505060e08701526101008086015190600482101562000a4f5787015261012085810151906001600160a01b038216820362000a4f578701526101408086015184811162000a4f578262000cff91880162000b34565b90870152610160928386015181811162000a4f5786019082601f8301121562000a4f5781519062000d3e62000d3483620009ce565b97519788620009aa565b818752848088019260051b8401019380851162000a4f57858401925b85841062000d8457505050505050508301526101808091015190600582101562000a4f5782015290565b835183811162000a4f57879162000da1848480948a010162000b34565b81520193019262000d5a565b86518c811162000a4f57820185601f19828d03011262000a4f578d5186810192908e84118185101762000e5157928f52818d0151928e841162000a4f578f8f948f8f9062000dfe9287010162000b34565b825283015193841162000a4f578f838f95918f62000e2390888d958199010162000b34565b86850152888201519084015288810151888401528a8101518984015201518982015281520196019562000c9c565b60246000634e487b7160e01b81526041600452fd5b9081526001600160a01b03909116602082015260400190565b805182101562000e945760209160051b010190565b634e487b7160e01b600052603260045260246000fdfe608060405234620002bb576200239c803803806200001d81620002c0565b9283398101906020918282820312620002bb5781516001600160401b0392838211620002bb570191601f91808385011215620002bb578351938285116200029157601f19946200007385820187168801620002c0565b92818452878284010111620002bb57869160005b828110620002a7575050906000918301015280519182116200029157620000b0600254620002e6565b83811162000253575b508493838311600114620001ec575092819293600092620001e0575b50508160011b916000199060031b1c1916176002555b600380546001600160a01b0319163390811790915560007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a362000133600454620002e6565b818111620001bc575b507f4672616374696f6e616c2043545620546f6b656e73000000000000000000002a6004556005546200016f90620002e6565b9080821162000198575b600a641190d5159560da1b0160055560405161205f90816200033d8239f35b620001b3926005600052600020910160051c81019062000323565b38808062000179565b620001d99060046000528284600020910160051c81019062000323565b386200013c565b015190503880620000d5565b8216936002600052856000209160005b878782106200023c57505083600195961062000222575b505050811b01600255620000eb565b015160001960f88460031b161c1916905538808062000213565b6001849582939585015181550194019201620001fc565b62000280906002600052866000208580860160051c82019289871062000287575b0160051c019062000323565b38620000b9565b9250819262000274565b634e487b7160e01b600052604160045260246000fd5b818101840151858201850152830162000087565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200029157604052565b90600182811c9216801562000318575b60208310146200030257565b634e487b7160e01b600052602260045260246000fd5b91607f1691620002f6565b8181106200032f575050565b600081556001016200032356fe6040608081526004908136101561001557600080fd5b600091823560e01c908162fdd58e1461184057816301ffc9a7146117d257816306fdde031461171f5781630e89341c146116465781632eb2c2d6146113625781634e1273f4146111cd5781636b20c45414611089578163715018a61461103a578163862440e214610f0d5781638da5cb5b14610ee457816395d89b4114610dff578163a22cb46514610d21578163a4b645eb146109f4578163b9571e8414610539578163e985e9c5146104e7578163f242432a1461028d578163f2fde38b146101d2575063f5298aca146100e857600080fd5b8190346101cf5760603660031901126101cf57610103611870565b6001600160a01b03169060243590600080516020611fea8339815191529060443533851480156101b0575b61013790611be8565b610142851515611ec3565b61014b84611e8e565b5061015581611e8e565b50858251610162816118db565b528386528560205281862085875260205261018c818388205461018782821015611f1b565b611ca5565b8487528660205282872086885260205282872055815193845260208401523392a480f35b508486526001602090815282872033885290528186205460ff1661012e565b50fd5b905034610289576020366003190112610289576101ed611870565b600354916001600160a01b0380841692610208338514611a6e565b16938415610237575050829060008051602061200a8339815191528580a36001600160a01b0319161760035580f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b919050346102895760a0366003190112610289576102a9611870565b836102b261188b565b916044356064356084356001600160401b0381116104e3576102d790369089016119e4565b926001600160a01b03868116916102ef831515611b8e565b169233841480156104c4575b61030490611be8565b61030d81611e8e565b5061031783611e8e565b50808652602096868852888720858852885261033d848a89205461018782821015611c46565b828852878952898820868952895289882055818752868852888720838852885288872061036b858254611cb2565b905582858a51848152868b820152600080516020611fea8339815191528c3392a43b610395578580f35b889587946103d68a519788968795869463f23a6e6160e01b9c8d8752339087015260248601526044850152606484015260a0608484015260a483019061192f565b03925af1869181610495575b506104645750506001906103f4611dad565b6308c379a014610431575b506104145750505b3880808381808080808580f35b5162461bcd60e51b81529150819061042d908201611e39565b0390fd5b610439611dcb565b8061044457506103ff565b61042d8591855193849362461bcd60e51b8552840152602483019061192f565b6001600160e01b03191603905061047c575050610407565b5162461bcd60e51b81529150819061042d908201611d64565b6104b6919250843d86116104bd575b6104ae818361190c565b810190611d44565b90386103e2565b503d6104a4565b508386526001602090815288872033885290528786205460ff166102fb565b8480fd5b50503461053557806003193601126105355760ff81602093610507611870565b61050f61188b565b6001600160a01b0391821683526001875283832091168252855220549151911615158152f35b5080fd5b905034610289576003199160a0368401126109f057610556611870565b6024946001600160401b039490919086358681116109f05761057b9036908701611986565b946044358781116104e3576105939036908301611986565b96606435938185116109ec57366023860112156109ec5784830135996105b88b61196f565b946105c58951968761190c565b8b86526020968787018360059e8f1b830101913683116109e857848101915b8383106109be57505050506084358481116109ba5761060690369087016119e4565b60018060a01b039360039461061f818754163314611a6e565b8c5189510361096957906106508d9a9997959f98969493928f9083169b6106478d1515611f73565b51905114611cbf565b8a5b8d518110156106b157908e9f9392918e9f908f8f8f908f918f9261069e9361068887610681816106a59b611b64565b5197611b64565b5183528281528383209183525220918254611cb2565b9055611b3f565b909192939f9e50610652565b508e8c8f8f95908c8f968f888d95888c94869b858588600080516020611fca8339815191526106e88f8e9051918291339583611d1c565b0390a43b610847575b5050509450505050505b85518110156108435761070e818b611b64565b516107198288611b64565b51865260068552828620908051908a8211610831578d9061073a84546118a1565b601f928382116107f1575b505087918311600114610789576107799493929189918361077e575b50508160011b91600019908c1b1c1916179055611b3f565b6106fb565b015190508f80610761565b8389528789209190601f1984168a5b8a8282106107db5750509084610779979695949392106107c3575b505050600190811b019055611b3f565b0151600019838d1b60f8161c191690558e80806107b3565b6001859682939686015181550195019301610798565b858b52898b209084808701821c8301938c8810610828575b01901c01905b81811061081d57508f610745565b8a815560010161080f565b93508293610809565b634e487b7160e01b885260418c528588fd5b8480f35b83928a519889978896879563bc197c8160e01b9d8e885233908801528601526044850160a0905260a4850161087b91611a3a565b8285820301606486015261088e91611a3a565b908382030160848401526108a19161192f565b03925af186918161094a575b5061092557505060016108be611dad565b6308c379a0146108f2575b6108dc575b878b848782888188816106f1565b5162461bcd60e51b81528061042d818a01611e39565b6108fa611dcb565b8061090557506108c9565b9050889261042d925194859462461bcd60e51b865285015283019061192f565b6001600160e01b031916146108ce575162461bcd60e51b81528061042d818a01611d64565b610962919250863d88116104bd576104ae818361190c565b908d6108ad565b508a5162461bcd60e51b81528088018a90526025818601527f455243313135353a2069647320616e642075726973206c656e677468206d69736044820152640dac2e8c6d60db1b6064820152608490fd5b8880fd5b82358881116109e4578b916109d983928936918701016119e4565b8152019201916105e4565b8c80fd5b8a80fd5b8580fd5b8380fd5b839150346105355760a036600319011261053557610a10611870565b604435936001600160401b039190602435606435848111610d1d57610a3890369087016119e4565b96608435858111610d1957610a5090369088016119e4565b938660018060a01b0391610a6983600354163314611a6e565b82811696610a78881515611f73565b610a8186611e8e565b50610a8b85611e8e565b50858b5260209788928c84528c828a822091528452888d20610aae888254611cb2565b9055818d8a518a81528987820152600080516020611fea8339815191528c3392a43b610c03575b50505050610aea915033906003541614611a6e565b8552600682528420928551928311610bf05750610b0783546118a1565b601f8111610bad575b5080601f8311600114610b4b5750839482939492610b40575b50508160011b916000199060031b1c191617905580f35b015190508480610b29565b90601f198316958486528286209286905b888210610b9557505083600195969710610b7c575b505050811b01905580f35b015160001960f88460031b161c19169055848080610b71565b80600185968294968601518155019501930190610b5c565b838552818520601f840160051c810191838510610be6575b601f0160051c01905b818110610bdb5750610b10565b858155600101610bce565b9091508190610bc5565b634e487b7160e01b855260419052602484fd5b610c459394958c895180968195829463f23a6e6160e01b9a8b855233908501528460248501528c6044850152606484015260a0608484015260a483019061192f565b03925af1899181610cfa575b50610ccb5750506001610c62611dad565b6308c379a014610c96575b610c7f57610aea905b86858b80610ad5565b825162461bcd60e51b81528061042d818901611e39565b610c9e611dcb565b80610ca95750610c6d565b845162461bcd60e51b815280890187905290819061042d90602483019061192f565b6001600160e01b03191603610ce357610aea90610c76565b825162461bcd60e51b81528061042d818901611d64565b610d12919250873d89116104bd576104ae818361190c565b908b610c51565b8780fd5b8680fd5b91905034610289578060031936011261028957610d3c611870565b90602435918215158093036104e3576001600160a01b031692338414610dab5750338452600160205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020608492519162461bcd60e51b8352820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152fd5b50503461053557816003193601126105355780519082600554610e21816118a1565b80855290600190818116908115610ebc5750600114610e63575b505050610e4d82610e5f94038361190c565b5191829160208352602083019061192f565b0390f35b60058352602095507f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b828410610ea95750505082610e5f94610e4d9282010194610e3b565b8054868501880152928601928101610e8d565b610e5f9750610e4d9450602092508693915060ff191682840152151560051b82010194610e3b565b50503461053557816003193601126105355760035490516001600160a01b039091168152602090f35b839150346105355782600319360112610535576001600160401b036024358181116109f057610f3f90369084016119e4565b93610f5560018060a01b03600354163314611a6e565b82358452602090600682528420928551928311610bf05750610f7783546118a1565b601f8111610ff7575b5080601f8311600114610faf5750839482939492610b405750508160011b916000199060031b1c191617905580f35b90601f198316958486528286209286905b888210610fdf57505083600195969710610b7c57505050811b01905580f35b80600185968294968601518155019501930190610fc0565b838552818520601f840160051c810191838510611030575b601f0160051c01905b8181106110255750610f80565b858155600101611018565b909150819061100f565b8334611086578060031936011261108657600354816001600160a01b038216611064338214611a6e565b60008051602061200a8339815191528280a36001600160a01b03191660035580f35b80fd5b91905034610289576060366003190112610289576110a5611870565b906001600160401b036024358181116109ec576110c59036908601611986565b936044359182116109ec576110dc91369101611986565b916001600160a01b031633811480156111ae575b6110f990611be8565b611104811515611ec3565b6111118451845114611cbf565b84825161111d816118db565b52845b8585518210156111855750806111396111809287611b64565b516111448287611b64565b518189526111696020918a8352878b20878c528352878b205461018782821015611f1b565b91895288815285892090858a525284882055611b3f565b611120565b808387600080516020611fca8339815191526111a8898951918291339583611d1c565b0390a480f35b508085526001602090815282862033875290528185205460ff166110f0565b90503461028957816003193601126102895780356001600160401b038082116104e357366023830112156104e35781830135906112098261196f565b926112168651948561190c565b82845260209260248486019160051b830101913683116109ba57602401905b82821061133f575050506024359081116109ec576112569036908501611986565b9282518451036112ec575081519461126d8661196f565b9561127a8651978861190c565b808752611289601f199161196f565b0136838801375b82518110156112da576112d5906112c56001600160a01b036112b28387611b64565b51166112be8388611b64565b5190611ab9565b6112cf8289611b64565b52611b3f565b611290565b845182815280610e5f81850189611a3a565b60849185519162461bcd60e51b8352820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152fd5b81356001600160a01b038116810361135e578152908401908401611235565b8980fd5b905034610289576003199160a0368401126109f05761137f611870565b61138761188b565b936001600160401b0393604435858111610d19576113a89036908301611986565b906064358681116109ba576113c09036908301611986565b956084359081116109ba576113d890369083016119e4565b926113e68351885114611cbf565b6001600160a01b03888116956113fd871515611b8e565b16933385148015611628575b156115ca57895b8a855182101561148e57908961069e8a6114899461143985611432818d611b64565b5195611b64565b51938082526020908282528383208d84528252611460868585205461018782821015611c46565b8184528383528d8585209085528352848420558252818152828220908d83525220918254611cb2565b611410565b5050909493959692919784878951600080516020611fca8339815191523391806114b98a8a83611d1c565b0390a43b6114c5578880f35b8651948593849363bc197c8160e01b98898652338c87015260248601526044850160a0905260a485016114f791611a3a565b8285820301606486015261150a91611a3a565b9083820301608484015261151d9161192f565b0381885a94602095f18591816115aa575b50611594575050600161153f611dad565b6308c379a01461155d575b6104145750505b38808080808080808880f35b611565611dcb565b80611570575061154a565b905061042d91602094505193849362461bcd60e51b8552840152602483019061192f565b6001600160e01b0319160361047c575050611551565b6115c391925060203d81116104bd576104ae818361190c565b903861152e565b865162461bcd60e51b8152602081850152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608490fd5b50848a526001602052868a20338b5260205260ff878b205416611409565b9190503461028957602091826003193601126109f05735835260068252808320815193849181815490611678826118a1565b928386526001928884821691826000146116f55750506001146116b7575b8588610e5f896116a8848a038561190c565b5192828493845283019061192f565b87945081939291528383205b8284106116dd57505050820101816116a8610e5f38611696565b8054848a0186015288955087949093019281016116c3565b60ff19168882015294151560051b870190940194508593506116a89250610e5f9150389050611696565b83833461053557816003193601126105355780519180938054611741816118a1565b808652916001918083169081156117a7575060011461176c575b610e5f8686610e4d828b038361190c565b835260208084209096505b8284106117945750505082610e5f94610e4d92820101948661175b565b8054868501880152928601928101611777565b9050610e5f9750610e4d9450602092508693915060ff191682840152151560051b820101948661175b565b90503461028957602036600319011261028957359063ffffffff60e01b82168092036102895760209250636cdb3d1360e11b821491821561182f575b821561181e575b50519015158152f35b6301ffc9a760e01b14915038611815565b6303a24d0760e21b8114925061180e565b505034610535578060031936011261053557602090611869611860611870565b60243590611ab9565b9051908152f35b600435906001600160a01b038216820361188657565b600080fd5b602435906001600160a01b038216820361188657565b90600182811c921680156118d1575b60208310146118bb57565b634e487b7160e01b600052602260045260246000fd5b91607f16916118b0565b602081019081106001600160401b038211176118f657604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b038211908210176118f657604052565b919082519283825260005b84811061195b575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161193a565b6001600160401b0381116118f65760051b60200190565b81601f820112156118865780359161199d8361196f565b926119ab604051948561190c565b808452602092838086019260051b820101928311611886578301905b8282106119d5575050505090565b813581529083019083016119c7565b81601f82011215611886578035906001600160401b0382116118f65760405192611a18601f8401601f19166020018561190c565b8284526020838301011161188657816000926020809301838601378301015290565b90815180825260208080930193019160005b828110611a5a575050505090565b835185529381019392810192600101611a4c565b15611a7557565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160a01b0316908115611ae657600052600060205260406000209060005260205260406000205490565b60405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b6064820152608490fd5b6000198114611b4e5760010190565b634e487b7160e01b600052601160045260246000fd5b8051821015611b785760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b15611b9557565b60405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b15611bef57565b60405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608490fd5b15611c4d57565b60405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608490fd5b91908203918211611b4e57565b91908201809211611b4e57565b15611cc657565b60405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608490fd5b9091611d33611d4193604084526040840190611a3a565b916020818403910152611a3a565b90565b9081602091031261188657516001600160e01b0319811681036118865790565b60809060208152602860208201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b60608201520190565b60009060033d11611dba57565b905060046000803e60005160e01c90565b600060443d10611d4157604051600319913d83016004833e81516001600160401b03918282113d602484011117611e2857818401948551938411611e30573d85010160208487010111611e285750611d419291016020019061190c565b949350505050565b50949350505050565b60809060208152603460208201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356040820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60608201520190565b60408051919082016001600160401b038111838210176118f65760405260018252602082016020368237825115611b78575290565b15611eca57565b60405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b15611f2257565b60405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608490fd5b15611f7a57565b60405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608490fdfe4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fbc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220c5037edb4635403503877508e187c5a41e767365cafe1c2066c7063858af063964736f6c63430008130033a2646970667358221220210fc2f79d12b6e4d6211b2cfe949e00c9c8e760e0f87f1c63ca9b8c449cd23564736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH3 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH3 0x93C JUMPI POP DUP1 PUSH4 0x56E4B68B EQ PUSH3 0x911 JUMPI DUP1 PUSH4 0x660486FF EQ PUSH3 0x299 JUMPI DUP1 PUSH4 0x8BFA795D EQ PUSH3 0x16B JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH3 0xCF JUMPI PUSH4 0xF23A6E61 EQ PUSH3 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH3 0xCC JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xCC JUMPI PUSH3 0x87 PUSH3 0xAA0 JUMP JUMPDEST POP PUSH3 0x92 PUSH3 0xAB7 JUMP JUMPDEST POP PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xC8 JUMPI PUSH3 0xB5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xA02 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0xCC JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xCC JUMPI PUSH3 0xED PUSH3 0xAA0 JUMP JUMPDEST POP PUSH3 0xF8 PUSH3 0xAB7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH3 0x167 JUMPI PUSH3 0x11C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xACE JUMP JUMPDEST POP PUSH1 0x64 CALLDATALOAD DUP2 DUP2 GT PUSH3 0x167 JUMPI PUSH3 0x138 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xACE JUMP JUMPDEST POP PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH3 0xC8 JUMPI PUSH3 0x154 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xA02 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0xCC JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xC8 JUMPI DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1D591EB7 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH3 0x28E JUMPI PUSH1 0xE0 SWAP2 DUP5 SWAP2 PUSH3 0x267 JUMPI JUMPDEST POP ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE DUP3 MLOAD DUP2 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 PUSH1 0x5 DUP3 SWAP1 SHL DUP6 ADD DUP4 ADD SWAP4 DUP2 ADD SWAP3 DUP6 ADD JUMPDEST DUP3 DUP8 LT PUSH3 0x1F0 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH1 0x1 SWAP3 PUSH1 0x3F NOT DUP10 DUP3 SUB ADD DUP6 MSTORE DUP8 MLOAD SWAP1 PUSH3 0x22E PUSH3 0x21D DUP4 MLOAD PUSH1 0xC0 DUP1 DUP6 MSTORE DUP5 ADD SWAP1 PUSH3 0xA79 JUMP JUMPDEST DUP5 DUP5 ADD MLOAD DUP4 DUP3 SUB DUP7 DUP6 ADD MSTORE PUSH3 0xA79 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0xA0 DUP1 SWAP2 ADD MLOAD SWAP2 ADD MSTORE SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH3 0x1E2 JUMP JUMPDEST PUSH3 0x287 SWAP2 POP RETURNDATASIZE DUP1 DUP7 DUP4 RETURNDATACOPY PUSH3 0x27E DUP2 DUP4 PUSH3 0x9AA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH3 0xB81 JUMP JUMPDEST CODESIZE PUSH3 0x1BE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0xCC JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xCC JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xCC JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH3 0xCC JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH3 0x2DC DUP2 PUSH3 0x9CE JUMP JUMPDEST SWAP3 PUSH3 0x2EC PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH3 0x9AA JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x24 PUSH1 0x20 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH3 0x5E9 JUMPI PUSH1 0x24 DUP2 ADD SWAP3 JUMPDEST DUP3 DUP5 LT PUSH3 0x812 JUMPI PUSH1 0x1 SLOAD DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH3 0x7BE JUMPI DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4F558E79 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH3 0x28E JUMPI DUP4 SWAP2 PUSH3 0x77C JUMPI JUMPDEST POP ISZERO PUSH3 0x740 JUMPI DUP2 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x1D591EB7 PUSH1 0xE3 SHL DUP3 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH3 0x6F6 JUMPI DUP3 SWAP2 PUSH3 0x722 JUMPI JUMPDEST POP PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH3 0x641 JUMPI JUMPDEST PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP3 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0x63D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 DUP4 ADD DUP5 SWAP1 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x60 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH3 0x627 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 PUSH1 0x60 PUSH3 0x411 DUP4 DUP6 PUSH3 0xE7F JUMP JUMPDEST MLOAD ADD MLOAD PUSH3 0x420 DUP4 DUP6 PUSH3 0xE7F JUMP JUMPDEST MLOAD MLOAD SWAP1 DUP8 EXTCODESIZE ISZERO PUSH3 0x623 JUMPI DUP7 SWAP1 PUSH1 0x20 PUSH3 0x466 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH4 0xA4B645EB PUSH1 0xE0 SHL DUP6 MSTORE ADDRESS PUSH1 0x4 DUP7 ADD MSTORE DUP8 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x64 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD SWAP1 PUSH3 0xA79 JUMP JUMPDEST DUP4 DUP4 DUP3 SUB SWAP2 PUSH1 0x3 NOT DUP4 ADD PUSH1 0x84 DUP7 ADD MSTORE MSTORE ADD DUP2 DUP4 DUP12 GAS CALL DUP1 ISZERO PUSH3 0x618 JUMPI SWAP1 DUP7 SWAP2 PUSH3 0x5FC JUMPI JUMPDEST POP POP DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 PUSH3 0x4A7 DUP5 DUP7 PUSH3 0xE7F JUMP JUMPDEST MLOAD ADD MLOAD PUSH1 0x40 PUSH3 0x4B8 DUP6 DUP8 PUSH3 0xE7F JUMP JUMPDEST MLOAD ADD MLOAD SWAP3 PUSH1 0x60 PUSH3 0x4CA DUP7 DUP9 PUSH3 0xE7F JUMP JUMPDEST MLOAD ADD MLOAD SWAP1 PUSH1 0x80 PUSH3 0x4DC DUP8 DUP10 PUSH3 0xE7F JUMP JUMPDEST MLOAD ADD MLOAD DUP5 EXTCODESIZE ISZERO PUSH3 0x5F8 JUMPI PUSH3 0x538 SWAP6 SWAP4 DUP11 SWAP6 SWAP4 PUSH3 0x525 SWAP4 DUP8 SWAP4 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 DUP9 SWAP7 PUSH4 0xFE6A855 PUSH1 0xE2 SHL DUP9 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP10 ADD MSTORE PUSH1 0xC0 PUSH1 0x24 DUP10 ADD MSTORE PUSH1 0xC4 DUP9 ADD SWAP1 PUSH3 0xA79 JUMP JUMPDEST DUP7 DUP2 SUB PUSH1 0x3 NOT ADD PUSH1 0x44 DUP9 ADD MSTORE SWAP1 PUSH3 0xA79 JUMP JUMPDEST SWAP3 PUSH1 0x64 DUP6 ADD MSTORE PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD MSTORE SUB SWAP3 GAS CALL DUP1 ISZERO PUSH3 0x5ED JUMPI SWAP1 DUP6 SWAP2 PUSH3 0x5D1 JUMPI JUMPDEST POP POP DUP2 MLOAD PUSH2 0x120 DUP5 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x4 CALLDATALOAD SWAP3 PUSH32 0x31055275ED1C52E3C2C906750E908D15538E6C1C01092DA5EE55DFCAD29DA39F SWAP3 DUP3 SWAP2 PUSH3 0x5A7 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 PUSH3 0xE66 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x0 NOT DUP2 EQ PUSH3 0x5BD JUMPI PUSH1 0x1 ADD PUSH3 0x3C5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH3 0x5DC SWAP1 PUSH3 0x996 JUMP JUMPDEST PUSH3 0x5E9 JUMPI DUP4 DUP7 PUSH3 0x55C JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST PUSH3 0x607 SWAP1 PUSH3 0x996 JUMP JUMPDEST PUSH3 0x614 JUMPI DUP5 DUP8 PUSH3 0x48C JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x239C DUP1 DUP3 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT DUP4 DUP4 LT OR PUSH3 0x70E JUMPI PUSH1 0x40 SWAP2 DUP4 SWAP2 PUSH3 0xEAB DUP4 CODECOPY PUSH1 0x20 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE SUB ADD SWAP1 DUP3 CREATE DUP1 ISZERO PUSH3 0x701 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0x120 DUP5 ADD DUP2 SWAP1 MSTORE DUP3 SLOAD SWAP1 SWAP2 AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH3 0x167 JUMPI PUSH3 0x6CB DUP4 SWAP3 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x34899521 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD PUSH3 0xE66 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH3 0x6F6 JUMPI PUSH3 0x6E4 JUMPI JUMPDEST POP SWAP1 PUSH3 0x3B3 JUMP JUMPDEST PUSH3 0x6EF SWAP1 PUSH3 0x996 JUMP JUMPDEST DUP4 PUSH3 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH3 0x739 SWAP2 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH3 0x27E DUP2 DUP4 PUSH3 0x9AA JUMP JUMPDEST DUP4 PUSH3 0x39C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x105CDCD95D08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH3 0x7B5 JUMPI JUMPDEST DUP2 PUSH3 0x79A PUSH1 0x20 SWAP4 DUP4 PUSH3 0x9AA JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x167 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH3 0x167 JUMPI DUP5 PUSH3 0x366 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH3 0x78B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792073757065727669736F722063616E2063616C6C2074686973206675 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x3731BA34B7B7 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x90D JUMPI DUP3 ADD PUSH1 0xA0 SWAP1 DUP2 PUSH1 0x23 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH3 0x623 JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x8F9 JUMPI PUSH1 0x40 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x8F5 JUMPI PUSH3 0x878 SWAP1 PUSH1 0x24 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH3 0xA02 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x44 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x8F5 JUMPI PUSH3 0x8A0 SWAP1 PUSH1 0x24 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH3 0xA02 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x64 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x8F5 JUMPI SWAP2 PUSH1 0xA4 PUSH1 0x20 SWAP5 SWAP3 PUSH3 0x8D3 DUP7 SWAP6 PUSH1 0x24 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH3 0xA02 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x84 DUP2 ADD CALLDATALOAD PUSH1 0x60 DUP5 ADD MSTORE ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP4 ADD SWAP3 PUSH3 0x30B JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0xCC JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0xCC JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH3 0xC8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0xC8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH3 0x167 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x2711897 PUSH1 0xE5 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH3 0x984 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH3 0x97D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x627 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH3 0x627 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x627 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x627 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0xA4F JUMPI DUP1 CALLDATALOAD SWAP1 PUSH3 0xA1C DUP3 PUSH3 0x9E6 JUMP JUMPDEST SWAP3 PUSH3 0xA2C PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH3 0x9AA JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH3 0xA4F JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0xA68 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xA57 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH3 0xA94 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH3 0xA54 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0xA4F JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0xA4F JUMPI JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0xA4F JUMPI DUP1 CALLDATALOAD SWAP2 PUSH3 0xAE8 DUP4 PUSH3 0x9CE JUMP JUMPDEST SWAP3 PUSH3 0xAF8 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH3 0x9AA JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH3 0xA4F JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH3 0xB24 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH3 0xB15 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0xA4F JUMPI DUP1 MLOAD PUSH3 0xB4D DUP2 PUSH3 0x9E6 JUMP JUMPDEST SWAP3 PUSH3 0xB5D PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH3 0x9AA JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH3 0xA4F JUMPI PUSH3 0xB7E SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH3 0xA54 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP3 DUP3 DUP3 SUB SLT PUSH3 0xA4F JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH3 0xA4F JUMPI ADD SWAP2 PUSH2 0x1A0 SWAP4 DUP5 DUP5 DUP5 SUB SLT PUSH3 0xA4F JUMPI PUSH1 0x40 SWAP3 DUP4 MLOAD SWAP6 DUP7 ADD DUP7 DUP2 LT DUP5 DUP3 GT OR PUSH3 0x627 JUMPI DUP5 MSTORE DUP5 MLOAD DUP7 MSTORE DUP2 DUP6 ADD MLOAD DUP3 DUP8 ADD MSTORE DUP4 DUP6 ADD MLOAD DUP4 DUP2 GT PUSH3 0xA4F JUMPI DUP2 PUSH3 0xBED SWAP2 DUP8 ADD PUSH3 0xB34 JUMP JUMPDEST DUP5 DUP8 ADD MSTORE PUSH1 0x60 DUP1 DUP7 ADD MLOAD DUP5 DUP2 GT PUSH3 0xA4F JUMPI DUP3 PUSH3 0xC0D SWAP2 DUP9 ADD PUSH3 0xB34 JUMP JUMPDEST DUP2 DUP9 ADD MSTORE PUSH1 0x80 DUP1 DUP8 ADD MLOAD DUP6 DUP2 GT PUSH3 0xA4F JUMPI DUP4 PUSH3 0xC2D SWAP2 DUP10 ADD PUSH3 0xB34 JUMP JUMPDEST DUP2 DUP10 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 DUP9 ADD MLOAD DUP3 DUP11 ADD MSTORE PUSH1 0xC0 SWAP2 DUP3 DUP10 ADD MLOAD DUP4 DUP12 ADD MSTORE PUSH1 0xE0 DUP10 ADD MLOAD DUP8 DUP2 GT PUSH3 0xA4F JUMPI DUP10 ADD SWAP3 DUP6 PUSH1 0x1F DUP6 ADD SLT ISZERO PUSH3 0xA4F JUMPI DUP4 MLOAD SWAP3 PUSH3 0xC71 DUP5 PUSH3 0x9CE JUMP JUMPDEST SWAP6 PUSH3 0xC80 DUP12 MLOAD SWAP8 DUP9 PUSH3 0x9AA JUMP JUMPDEST DUP5 DUP8 MSTORE DUP9 DUP1 DUP9 ADD SWAP6 PUSH1 0x5 SHL DUP8 ADD ADD SWAP6 DUP9 DUP8 GT PUSH3 0xA4F JUMPI DUP10 DUP2 ADD SWAP6 JUMPDEST DUP8 DUP8 LT PUSH3 0xDAD JUMPI POP POP POP POP POP POP POP POP PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP1 DUP7 ADD MLOAD SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH3 0xA4F JUMPI DUP8 ADD MSTORE PUSH2 0x120 DUP6 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0xA4F JUMPI DUP8 ADD MSTORE PUSH2 0x140 DUP1 DUP7 ADD MLOAD DUP5 DUP2 GT PUSH3 0xA4F JUMPI DUP3 PUSH3 0xCFF SWAP2 DUP9 ADD PUSH3 0xB34 JUMP JUMPDEST SWAP1 DUP8 ADD MSTORE PUSH2 0x160 SWAP3 DUP4 DUP7 ADD MLOAD DUP2 DUP2 GT PUSH3 0xA4F JUMPI DUP7 ADD SWAP1 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH3 0xA4F JUMPI DUP2 MLOAD SWAP1 PUSH3 0xD3E PUSH3 0xD34 DUP4 PUSH3 0x9CE JUMP JUMPDEST SWAP8 MLOAD SWAP8 DUP9 PUSH3 0x9AA JUMP JUMPDEST DUP2 DUP8 MSTORE DUP5 DUP1 DUP9 ADD SWAP3 PUSH1 0x5 SHL DUP5 ADD ADD SWAP4 DUP1 DUP6 GT PUSH3 0xA4F JUMPI DUP6 DUP5 ADD SWAP3 JUMPDEST DUP6 DUP5 LT PUSH3 0xD84 JUMPI POP POP POP POP POP POP POP DUP4 ADD MSTORE PUSH2 0x180 DUP1 SWAP2 ADD MLOAD SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH3 0xA4F JUMPI DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP4 DUP2 GT PUSH3 0xA4F JUMPI DUP8 SWAP2 PUSH3 0xDA1 DUP5 DUP5 DUP1 SWAP5 DUP11 ADD ADD PUSH3 0xB34 JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP3 PUSH3 0xD5A JUMP JUMPDEST DUP7 MLOAD DUP13 DUP2 GT PUSH3 0xA4F JUMPI DUP3 ADD DUP6 PUSH1 0x1F NOT DUP3 DUP14 SUB ADD SLT PUSH3 0xA4F JUMPI DUP14 MLOAD DUP7 DUP2 ADD SWAP3 SWAP1 DUP15 DUP5 GT DUP2 DUP6 LT OR PUSH3 0xE51 JUMPI SWAP3 DUP16 MSTORE DUP2 DUP14 ADD MLOAD SWAP3 DUP15 DUP5 GT PUSH3 0xA4F JUMPI DUP16 DUP16 SWAP5 DUP16 DUP16 SWAP1 PUSH3 0xDFE SWAP3 DUP8 ADD ADD PUSH3 0xB34 JUMP JUMPDEST DUP3 MSTORE DUP4 ADD MLOAD SWAP4 DUP5 GT PUSH3 0xA4F JUMPI DUP16 DUP4 DUP16 SWAP6 SWAP2 DUP16 PUSH3 0xE23 SWAP1 DUP9 DUP14 SWAP6 DUP2 SWAP10 ADD ADD PUSH3 0xB34 JUMP JUMPDEST DUP7 DUP6 ADD MSTORE DUP9 DUP3 ADD MLOAD SWAP1 DUP5 ADD MSTORE DUP9 DUP2 ADD MLOAD DUP9 DUP5 ADD MSTORE DUP11 DUP2 ADD MLOAD DUP10 DUP5 ADD MSTORE ADD MLOAD DUP10 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP7 ADD SWAP6 PUSH3 0xC9C JUMP JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH3 0xE94 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x2BB JUMPI PUSH3 0x239C DUP1 CODESIZE SUB DUP1 PUSH3 0x1D DUP2 PUSH3 0x2C0 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DUP3 SUB SLT PUSH3 0x2BB JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP3 GT PUSH3 0x2BB JUMPI ADD SWAP2 PUSH1 0x1F SWAP2 DUP1 DUP4 DUP6 ADD SLT ISZERO PUSH3 0x2BB JUMPI DUP4 MLOAD SWAP4 DUP3 DUP6 GT PUSH3 0x291 JUMPI PUSH1 0x1F NOT SWAP5 PUSH3 0x73 DUP6 DUP3 ADD DUP8 AND DUP9 ADD PUSH3 0x2C0 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE DUP8 DUP3 DUP5 ADD ADD GT PUSH3 0x2BB JUMPI DUP7 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH3 0x2A7 JUMPI POP POP SWAP1 PUSH1 0x0 SWAP2 DUP4 ADD ADD MSTORE DUP1 MLOAD SWAP2 DUP3 GT PUSH3 0x291 JUMPI PUSH3 0xB0 PUSH1 0x2 SLOAD PUSH3 0x2E6 JUMP JUMPDEST DUP4 DUP2 GT PUSH3 0x253 JUMPI JUMPDEST POP DUP5 SWAP4 DUP4 DUP4 GT PUSH1 0x1 EQ PUSH3 0x1EC JUMPI POP SWAP3 DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x1E0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 SSTORE JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP2 DUP1 LOG3 PUSH3 0x133 PUSH1 0x4 SLOAD PUSH3 0x2E6 JUMP JUMPDEST DUP2 DUP2 GT PUSH3 0x1BC JUMPI JUMPDEST POP PUSH32 0x4672616374696F6E616C2043545620546F6B656E73000000000000000000002A PUSH1 0x4 SSTORE PUSH1 0x5 SLOAD PUSH3 0x16F SWAP1 PUSH3 0x2E6 JUMP JUMPDEST SWAP1 DUP1 DUP3 GT PUSH3 0x198 JUMPI JUMPDEST PUSH1 0xA PUSH5 0x1190D51595 PUSH1 0xDA SHL ADD PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD PUSH2 0x205F SWAP1 DUP2 PUSH3 0x33D DUP3 CODECOPY RETURN JUMPDEST PUSH3 0x1B3 SWAP3 PUSH1 0x5 PUSH1 0x0 MSTORE PUSH1 0x0 KECCAK256 SWAP2 ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 PUSH3 0x323 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH3 0x179 JUMP JUMPDEST PUSH3 0x1D9 SWAP1 PUSH1 0x4 PUSH1 0x0 MSTORE DUP3 DUP5 PUSH1 0x0 KECCAK256 SWAP2 ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 PUSH3 0x323 JUMP JUMPDEST CODESIZE PUSH3 0x13C JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xD5 JUMP JUMPDEST DUP3 AND SWAP4 PUSH1 0x2 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP8 DUP8 DUP3 LT PUSH3 0x23C JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x222 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE PUSH3 0xEB JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x213 JUMP JUMPDEST PUSH1 0x1 DUP5 SWAP6 DUP3 SWAP4 SWAP6 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x1FC JUMP JUMPDEST PUSH3 0x280 SWAP1 PUSH1 0x2 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP10 DUP8 LT PUSH3 0x287 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 PUSH3 0x323 JUMP JUMPDEST CODESIZE PUSH3 0xB9 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x274 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 ADD DUP5 ADD MLOAD DUP6 DUP3 ADD DUP6 ADD MSTORE DUP4 ADD PUSH3 0x87 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x291 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x318 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x302 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x2F6 JUMP JUMPDEST DUP2 DUP2 LT PUSH3 0x32F JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x323 JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0xFDD58E EQ PUSH2 0x1840 JUMPI DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x17D2 JUMPI DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x171F JUMPI DUP2 PUSH4 0xE89341C EQ PUSH2 0x1646 JUMPI DUP2 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1362 JUMPI DUP2 PUSH4 0x4E1273F4 EQ PUSH2 0x11CD JUMPI DUP2 PUSH4 0x6B20C454 EQ PUSH2 0x1089 JUMPI DUP2 PUSH4 0x715018A6 EQ PUSH2 0x103A JUMPI DUP2 PUSH4 0x862440E2 EQ PUSH2 0xF0D JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0xEE4 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0xDFF JUMPI DUP2 PUSH4 0xA22CB465 EQ PUSH2 0xD21 JUMPI DUP2 PUSH4 0xA4B645EB EQ PUSH2 0x9F4 JUMPI DUP2 PUSH4 0xB9571E84 EQ PUSH2 0x539 JUMPI DUP2 PUSH4 0xE985E9C5 EQ PUSH2 0x4E7 JUMPI DUP2 PUSH4 0xF242432A EQ PUSH2 0x28D JUMPI DUP2 PUSH4 0xF2FDE38B EQ PUSH2 0x1D2 JUMPI POP PUSH4 0xF5298ACA EQ PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SWAP1 CALLVALUE PUSH2 0x1CF JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1CF JUMPI PUSH2 0x103 PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FEA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x44 CALLDATALOAD CALLER DUP6 EQ DUP1 ISZERO PUSH2 0x1B0 JUMPI JUMPDEST PUSH2 0x137 SWAP1 PUSH2 0x1BE8 JUMP JUMPDEST PUSH2 0x142 DUP6 ISZERO ISZERO PUSH2 0x1EC3 JUMP JUMPDEST PUSH2 0x14B DUP5 PUSH2 0x1E8E JUMP JUMPDEST POP PUSH2 0x155 DUP2 PUSH2 0x1E8E JUMP JUMPDEST POP DUP6 DUP3 MLOAD PUSH2 0x162 DUP2 PUSH2 0x18DB JUMP JUMPDEST MSTORE DUP4 DUP7 MSTORE DUP6 PUSH1 0x20 MSTORE DUP2 DUP7 KECCAK256 DUP6 DUP8 MSTORE PUSH1 0x20 MSTORE PUSH2 0x18C DUP2 DUP4 DUP9 KECCAK256 SLOAD PUSH2 0x187 DUP3 DUP3 LT ISZERO PUSH2 0x1F1B JUMP JUMPDEST PUSH2 0x1CA5 JUMP JUMPDEST DUP5 DUP8 MSTORE DUP7 PUSH1 0x20 MSTORE DUP3 DUP8 KECCAK256 DUP7 DUP9 MSTORE PUSH1 0x20 MSTORE DUP3 DUP8 KECCAK256 SSTORE DUP2 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE CALLER SWAP3 LOG4 DUP1 RETURN JUMPDEST POP DUP5 DUP7 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP3 DUP8 KECCAK256 CALLER DUP9 MSTORE SWAP1 MSTORE DUP2 DUP7 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x12E JUMP JUMPDEST POP REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x289 JUMPI PUSH2 0x1ED PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 PUSH2 0x208 CALLER DUP6 EQ PUSH2 0x1A6E JUMP JUMPDEST AND SWAP4 DUP5 ISZERO PUSH2 0x237 JUMPI POP POP DUP3 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x200A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x289 JUMPI PUSH2 0x2A9 PUSH2 0x1870 JUMP JUMPDEST DUP4 PUSH2 0x2B2 PUSH2 0x188B JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x4E3 JUMPI PUSH2 0x2D7 SWAP1 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0x19E4 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 PUSH2 0x2EF DUP4 ISZERO ISZERO PUSH2 0x1B8E JUMP JUMPDEST AND SWAP3 CALLER DUP5 EQ DUP1 ISZERO PUSH2 0x4C4 JUMPI JUMPDEST PUSH2 0x304 SWAP1 PUSH2 0x1BE8 JUMP JUMPDEST PUSH2 0x30D DUP2 PUSH2 0x1E8E JUMP JUMPDEST POP PUSH2 0x317 DUP4 PUSH2 0x1E8E JUMP JUMPDEST POP DUP1 DUP7 MSTORE PUSH1 0x20 SWAP7 DUP7 DUP9 MSTORE DUP9 DUP8 KECCAK256 DUP6 DUP9 MSTORE DUP9 MSTORE PUSH2 0x33D DUP5 DUP11 DUP10 KECCAK256 SLOAD PUSH2 0x187 DUP3 DUP3 LT ISZERO PUSH2 0x1C46 JUMP JUMPDEST DUP3 DUP9 MSTORE DUP8 DUP10 MSTORE DUP10 DUP9 KECCAK256 DUP7 DUP10 MSTORE DUP10 MSTORE DUP10 DUP9 KECCAK256 SSTORE DUP2 DUP8 MSTORE DUP7 DUP9 MSTORE DUP9 DUP8 KECCAK256 DUP4 DUP9 MSTORE DUP9 MSTORE DUP9 DUP8 KECCAK256 PUSH2 0x36B DUP6 DUP3 SLOAD PUSH2 0x1CB2 JUMP JUMPDEST SWAP1 SSTORE DUP3 DUP6 DUP11 MLOAD DUP5 DUP2 MSTORE DUP7 DUP12 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FEA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP13 CALLER SWAP3 LOG4 EXTCODESIZE PUSH2 0x395 JUMPI DUP6 DUP1 RETURN JUMPDEST DUP9 SWAP6 DUP8 SWAP5 PUSH2 0x3D6 DUP11 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP13 DUP14 DUP8 MSTORE CALLER SWAP1 DUP8 ADD MSTORE PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST SUB SWAP3 GAS CALL DUP7 SWAP2 DUP2 PUSH2 0x495 JUMPI JUMPDEST POP PUSH2 0x464 JUMPI POP POP PUSH1 0x1 SWAP1 PUSH2 0x3F4 PUSH2 0x1DAD JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x431 JUMPI JUMPDEST POP PUSH2 0x414 JUMPI POP POP JUMPDEST CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 DUP1 DUP1 DUP6 DUP1 RETURN JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 POP DUP2 SWAP1 PUSH2 0x42D SWAP1 DUP3 ADD PUSH2 0x1E39 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x439 PUSH2 0x1DCB JUMP JUMPDEST DUP1 PUSH2 0x444 JUMPI POP PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x42D DUP6 SWAP2 DUP6 MLOAD SWAP4 DUP5 SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB SWAP1 POP PUSH2 0x47C JUMPI POP POP PUSH2 0x407 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 POP DUP2 SWAP1 PUSH2 0x42D SWAP1 DUP3 ADD PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0x4B6 SWAP2 SWAP3 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x4BD JUMPI JUMPDEST PUSH2 0x4AE DUP2 DUP4 PUSH2 0x190C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1D44 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x3E2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4A4 JUMP JUMPDEST POP DUP4 DUP7 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP9 DUP8 KECCAK256 CALLER DUP9 MSTORE SWAP1 MSTORE DUP8 DUP7 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2FB JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x535 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI PUSH1 0xFF DUP2 PUSH1 0x20 SWAP4 PUSH2 0x507 PUSH2 0x1870 JUMP JUMPDEST PUSH2 0x50F PUSH2 0x188B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP8 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x3 NOT SWAP2 PUSH1 0xA0 CALLDATASIZE DUP5 ADD SLT PUSH2 0x9F0 JUMPI PUSH2 0x556 PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x24 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 SWAP1 SWAP2 SWAP1 DUP7 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x9F0 JUMPI PUSH2 0x57B SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP5 PUSH1 0x44 CALLDATALOAD DUP8 DUP2 GT PUSH2 0x4E3 JUMPI PUSH2 0x593 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP7 PUSH1 0x64 CALLDATALOAD SWAP4 DUP2 DUP6 GT PUSH2 0x9EC JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x9EC JUMPI DUP5 DUP4 ADD CALLDATALOAD SWAP10 PUSH2 0x5B8 DUP12 PUSH2 0x196F JUMP JUMPDEST SWAP5 PUSH2 0x5C5 DUP10 MLOAD SWAP7 DUP8 PUSH2 0x190C JUMP JUMPDEST DUP12 DUP7 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP8 ADD DUP4 PUSH1 0x5 SWAP15 DUP16 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x9E8 JUMPI DUP5 DUP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x9BE JUMPI POP POP POP POP PUSH1 0x84 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x9BA JUMPI PUSH2 0x606 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x19E4 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x3 SWAP5 PUSH2 0x61F DUP2 DUP8 SLOAD AND CALLER EQ PUSH2 0x1A6E JUMP JUMPDEST DUP13 MLOAD DUP10 MLOAD SUB PUSH2 0x969 JUMPI SWAP1 PUSH2 0x650 DUP14 SWAP11 SWAP10 SWAP8 SWAP6 SWAP16 SWAP9 SWAP7 SWAP5 SWAP4 SWAP3 DUP16 SWAP1 DUP4 AND SWAP12 PUSH2 0x647 DUP14 ISZERO ISZERO PUSH2 0x1F73 JUMP JUMPDEST MLOAD SWAP1 MLOAD EQ PUSH2 0x1CBF JUMP JUMPDEST DUP11 JUMPDEST DUP14 MLOAD DUP2 LT ISZERO PUSH2 0x6B1 JUMPI SWAP1 DUP15 SWAP16 SWAP4 SWAP3 SWAP2 DUP15 SWAP16 SWAP1 DUP16 DUP16 DUP16 SWAP1 DUP16 SWAP2 DUP16 SWAP3 PUSH2 0x69E SWAP4 PUSH2 0x688 DUP8 PUSH2 0x681 DUP2 PUSH2 0x6A5 SWAP12 PUSH2 0x1B64 JUMP JUMPDEST MLOAD SWAP8 PUSH2 0x1B64 JUMP JUMPDEST MLOAD DUP4 MSTORE DUP3 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1CB2 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1B3F JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP16 SWAP15 POP PUSH2 0x652 JUMP JUMPDEST POP DUP15 DUP13 DUP16 DUP16 SWAP6 SWAP1 DUP13 DUP16 SWAP7 DUP16 DUP9 DUP14 SWAP6 DUP9 DUP13 SWAP5 DUP7 SWAP12 DUP6 DUP6 DUP9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x6E8 DUP16 DUP15 SWAP1 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH2 0x1D1C JUMP JUMPDEST SUB SWAP1 LOG4 EXTCODESIZE PUSH2 0x847 JUMPI JUMPDEST POP POP POP SWAP5 POP POP POP POP POP JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x843 JUMPI PUSH2 0x70E DUP2 DUP12 PUSH2 0x1B64 JUMP JUMPDEST MLOAD PUSH2 0x719 DUP3 DUP9 PUSH2 0x1B64 JUMP JUMPDEST MLOAD DUP7 MSTORE PUSH1 0x6 DUP6 MSTORE DUP3 DUP7 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 DUP11 DUP3 GT PUSH2 0x831 JUMPI DUP14 SWAP1 PUSH2 0x73A DUP5 SLOAD PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x1F SWAP3 DUP4 DUP3 GT PUSH2 0x7F1 JUMPI JUMPDEST POP POP DUP8 SWAP2 DUP4 GT PUSH1 0x1 EQ PUSH2 0x789 JUMPI PUSH2 0x779 SWAP5 SWAP4 SWAP3 SWAP2 DUP10 SWAP2 DUP4 PUSH2 0x77E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 DUP13 SHL SHR NOT AND OR SWAP1 SSTORE PUSH2 0x1B3F JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP16 DUP1 PUSH2 0x761 JUMP JUMPDEST DUP4 DUP10 MSTORE DUP8 DUP10 KECCAK256 SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP11 JUMPDEST DUP11 DUP3 DUP3 LT PUSH2 0x7DB JUMPI POP POP SWAP1 DUP5 PUSH2 0x779 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x7C3 JUMPI JUMPDEST POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1B3F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP14 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP4 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x798 JUMP JUMPDEST DUP6 DUP12 MSTORE DUP10 DUP12 KECCAK256 SWAP1 DUP5 DUP1 DUP8 ADD DUP3 SHR DUP4 ADD SWAP4 DUP13 DUP9 LT PUSH2 0x828 JUMPI JUMPDEST ADD SWAP1 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x81D JUMPI POP DUP16 PUSH2 0x745 JUMP JUMPDEST DUP11 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x80F JUMP JUMPDEST SWAP4 POP DUP3 SWAP4 PUSH2 0x809 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 DUP13 MSTORE DUP6 DUP9 REVERT JUMPDEST DUP5 DUP1 RETURN JUMPDEST DUP4 SWAP3 DUP11 MLOAD SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP14 DUP15 DUP9 MSTORE CALLER SWAP1 DUP9 ADD MSTORE DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD PUSH1 0xA0 SWAP1 MSTORE PUSH1 0xA4 DUP6 ADD PUSH2 0x87B SWAP2 PUSH2 0x1A3A JUMP JUMPDEST DUP3 DUP6 DUP3 SUB ADD PUSH1 0x64 DUP7 ADD MSTORE PUSH2 0x88E SWAP2 PUSH2 0x1A3A JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB ADD PUSH1 0x84 DUP5 ADD MSTORE PUSH2 0x8A1 SWAP2 PUSH2 0x192F JUMP JUMPDEST SUB SWAP3 GAS CALL DUP7 SWAP2 DUP2 PUSH2 0x94A JUMPI JUMPDEST POP PUSH2 0x925 JUMPI POP POP PUSH1 0x1 PUSH2 0x8BE PUSH2 0x1DAD JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x8F2 JUMPI JUMPDEST PUSH2 0x8DC JUMPI JUMPDEST DUP8 DUP12 DUP5 DUP8 DUP3 DUP9 DUP2 DUP9 DUP2 PUSH2 0x6F1 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x42D DUP2 DUP11 ADD PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x8FA PUSH2 0x1DCB JUMP JUMPDEST DUP1 PUSH2 0x905 JUMPI POP PUSH2 0x8C9 JUMP JUMPDEST SWAP1 POP DUP9 SWAP3 PUSH2 0x42D SWAP3 MLOAD SWAP5 DUP6 SWAP5 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP7 MSTORE DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x8CE JUMPI MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x42D DUP2 DUP11 ADD PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0x962 SWAP2 SWAP3 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x4BD JUMPI PUSH2 0x4AE DUP2 DUP4 PUSH2 0x190C JUMP JUMPDEST SWAP1 DUP14 PUSH2 0x8AD JUMP JUMPDEST POP DUP11 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP9 ADD DUP11 SWAP1 MSTORE PUSH1 0x25 DUP2 DUP7 ADD MSTORE PUSH32 0x455243313135353A2069647320616E642075726973206C656E677468206D6973 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0xDAC2E8C6D PUSH1 0xDB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD DUP9 DUP2 GT PUSH2 0x9E4 JUMPI DUP12 SWAP2 PUSH2 0x9D9 DUP4 SWAP3 DUP10 CALLDATASIZE SWAP2 DUP8 ADD ADD PUSH2 0x19E4 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x5E4 JUMP JUMPDEST DUP13 DUP1 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x535 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x535 JUMPI PUSH2 0xA10 PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x64 CALLDATALOAD DUP5 DUP2 GT PUSH2 0xD1D JUMPI PUSH2 0xA38 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x19E4 JUMP JUMPDEST SWAP7 PUSH1 0x84 CALLDATALOAD DUP6 DUP2 GT PUSH2 0xD19 JUMPI PUSH2 0xA50 SWAP1 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0x19E4 JUMP JUMPDEST SWAP4 DUP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0xA69 DUP4 PUSH1 0x3 SLOAD AND CALLER EQ PUSH2 0x1A6E JUMP JUMPDEST DUP3 DUP2 AND SWAP7 PUSH2 0xA78 DUP9 ISZERO ISZERO PUSH2 0x1F73 JUMP JUMPDEST PUSH2 0xA81 DUP7 PUSH2 0x1E8E JUMP JUMPDEST POP PUSH2 0xA8B DUP6 PUSH2 0x1E8E JUMP JUMPDEST POP DUP6 DUP12 MSTORE PUSH1 0x20 SWAP8 DUP9 SWAP3 DUP13 DUP5 MSTORE DUP13 DUP3 DUP11 DUP3 KECCAK256 SWAP2 MSTORE DUP5 MSTORE DUP9 DUP14 KECCAK256 PUSH2 0xAAE DUP9 DUP3 SLOAD PUSH2 0x1CB2 JUMP JUMPDEST SWAP1 SSTORE DUP2 DUP14 DUP11 MLOAD DUP11 DUP2 MSTORE DUP10 DUP8 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FEA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP13 CALLER SWAP3 LOG4 EXTCODESIZE PUSH2 0xC03 JUMPI JUMPDEST POP POP POP POP PUSH2 0xAEA SWAP2 POP CALLER SWAP1 PUSH1 0x3 SLOAD AND EQ PUSH2 0x1A6E JUMP JUMPDEST DUP6 MSTORE PUSH1 0x6 DUP3 MSTORE DUP5 KECCAK256 SWAP3 DUP6 MLOAD SWAP3 DUP4 GT PUSH2 0xBF0 JUMPI POP PUSH2 0xB07 DUP4 SLOAD PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xBAD JUMPI JUMPDEST POP DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xB4B JUMPI POP DUP4 SWAP5 DUP3 SWAP4 SWAP5 SWAP3 PUSH2 0xB40 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0xB29 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP3 DUP7 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0xB95 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0xB7C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP5 DUP1 DUP1 PUSH2 0xB71 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0xB5C JUMP JUMPDEST DUP4 DUP6 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP6 LT PUSH2 0xBE6 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xBDB JUMPI POP PUSH2 0xB10 JUMP JUMPDEST DUP6 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xBCE JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xBC5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH2 0xC45 SWAP4 SWAP5 SWAP6 DUP13 DUP10 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP11 DUP12 DUP6 MSTORE CALLER SWAP1 DUP6 ADD MSTORE DUP5 PUSH1 0x24 DUP6 ADD MSTORE DUP13 PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST SUB SWAP3 GAS CALL DUP10 SWAP2 DUP2 PUSH2 0xCFA JUMPI JUMPDEST POP PUSH2 0xCCB JUMPI POP POP PUSH1 0x1 PUSH2 0xC62 PUSH2 0x1DAD JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0xC96 JUMPI JUMPDEST PUSH2 0xC7F JUMPI PUSH2 0xAEA SWAP1 JUMPDEST DUP7 DUP6 DUP12 DUP1 PUSH2 0xAD5 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x42D DUP2 DUP10 ADD PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0xC9E PUSH2 0x1DCB JUMP JUMPDEST DUP1 PUSH2 0xCA9 JUMPI POP PUSH2 0xC6D JUMP JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x42D SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0xCE3 JUMPI PUSH2 0xAEA SWAP1 PUSH2 0xC76 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x42D DUP2 DUP10 ADD PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0xD12 SWAP2 SWAP3 POP DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x4BD JUMPI PUSH2 0x4AE DUP2 DUP4 PUSH2 0x190C JUMP JUMPDEST SWAP1 DUP12 PUSH2 0xC51 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x289 JUMPI PUSH2 0xD3C PUSH2 0x1870 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0x4E3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 CALLER DUP5 EQ PUSH2 0xDAB JUMPI POP CALLER DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 DUP5 KECCAK256 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE DUP1 DUP5 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x535 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0x5 SLOAD PUSH2 0xE21 DUP2 PUSH2 0x18A1 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xEBC JUMPI POP PUSH1 0x1 EQ PUSH2 0xE63 JUMPI JUMPDEST POP POP POP PUSH2 0xE4D DUP3 PUSH2 0xE5F SWAP5 SUB DUP4 PUSH2 0x190C JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 DUP4 MSTORE PUSH1 0x20 SWAP6 POP PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 JUMPDEST DUP3 DUP5 LT PUSH2 0xEA9 JUMPI POP POP POP DUP3 PUSH2 0xE5F SWAP5 PUSH2 0xE4D SWAP3 DUP3 ADD ADD SWAP5 PUSH2 0xE3B JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xE8D JUMP JUMPDEST PUSH2 0xE5F SWAP8 POP PUSH2 0xE4D SWAP5 POP PUSH1 0x20 SWAP3 POP DUP7 SWAP4 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 PUSH2 0xE3B JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x535 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x535 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x9F0 JUMPI PUSH2 0xF3F SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x19E4 JUMP JUMPDEST SWAP4 PUSH2 0xF55 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND CALLER EQ PUSH2 0x1A6E JUMP JUMPDEST DUP3 CALLDATALOAD DUP5 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x6 DUP3 MSTORE DUP5 KECCAK256 SWAP3 DUP6 MLOAD SWAP3 DUP4 GT PUSH2 0xBF0 JUMPI POP PUSH2 0xF77 DUP4 SLOAD PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xFF7 JUMPI JUMPDEST POP DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xFAF JUMPI POP DUP4 SWAP5 DUP3 SWAP4 SWAP5 SWAP3 PUSH2 0xB40 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP3 DUP7 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0xFDF JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0xB7C JUMPI POP POP POP DUP2 SHL ADD SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0xFC0 JUMP JUMPDEST DUP4 DUP6 MSTORE DUP2 DUP6 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP6 LT PUSH2 0x1030 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1025 JUMPI POP PUSH2 0xF80 JUMP JUMPDEST DUP6 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1018 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST DUP4 CALLVALUE PUSH2 0x1086 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1086 JUMPI PUSH1 0x3 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1064 CALLER DUP3 EQ PUSH2 0x1A6E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x200A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x289 JUMPI PUSH2 0x10A5 PUSH2 0x1870 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x9EC JUMPI PUSH2 0x10C5 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP4 PUSH1 0x44 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x9EC JUMPI PUSH2 0x10DC SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ DUP1 ISZERO PUSH2 0x11AE JUMPI JUMPDEST PUSH2 0x10F9 SWAP1 PUSH2 0x1BE8 JUMP JUMPDEST PUSH2 0x1104 DUP2 ISZERO ISZERO PUSH2 0x1EC3 JUMP JUMPDEST PUSH2 0x1111 DUP5 MLOAD DUP5 MLOAD EQ PUSH2 0x1CBF JUMP JUMPDEST DUP5 DUP3 MLOAD PUSH2 0x111D DUP2 PUSH2 0x18DB JUMP JUMPDEST MSTORE DUP5 JUMPDEST DUP6 DUP6 MLOAD DUP3 LT ISZERO PUSH2 0x1185 JUMPI POP DUP1 PUSH2 0x1139 PUSH2 0x1180 SWAP3 DUP8 PUSH2 0x1B64 JUMP JUMPDEST MLOAD PUSH2 0x1144 DUP3 DUP8 PUSH2 0x1B64 JUMP JUMPDEST MLOAD DUP2 DUP10 MSTORE PUSH2 0x1169 PUSH1 0x20 SWAP2 DUP11 DUP4 MSTORE DUP8 DUP12 KECCAK256 DUP8 DUP13 MSTORE DUP4 MSTORE DUP8 DUP12 KECCAK256 SLOAD PUSH2 0x187 DUP3 DUP3 LT ISZERO PUSH2 0x1F1B JUMP JUMPDEST SWAP2 DUP10 MSTORE DUP9 DUP2 MSTORE DUP6 DUP10 KECCAK256 SWAP1 DUP6 DUP11 MSTORE MSTORE DUP5 DUP9 KECCAK256 SSTORE PUSH2 0x1B3F JUMP JUMPDEST PUSH2 0x1120 JUMP JUMPDEST DUP1 DUP4 DUP8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x11A8 DUP10 DUP10 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH2 0x1D1C JUMP JUMPDEST SUB SWAP1 LOG4 DUP1 RETURN JUMPDEST POP DUP1 DUP6 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP3 DUP7 KECCAK256 CALLER DUP8 MSTORE SWAP1 MSTORE DUP2 DUP6 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x10F0 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x289 JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT PUSH2 0x4E3 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x4E3 JUMPI DUP2 DUP4 ADD CALLDATALOAD SWAP1 PUSH2 0x1209 DUP3 PUSH2 0x196F JUMP JUMPDEST SWAP3 PUSH2 0x1216 DUP7 MLOAD SWAP5 DUP6 PUSH2 0x190C JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x24 DUP5 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x9BA JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x133F JUMPI POP POP POP PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x9EC JUMPI PUSH2 0x1256 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP3 DUP3 MLOAD DUP5 MLOAD SUB PUSH2 0x12EC JUMPI POP DUP2 MLOAD SWAP5 PUSH2 0x126D DUP7 PUSH2 0x196F JUMP JUMPDEST SWAP6 PUSH2 0x127A DUP7 MLOAD SWAP8 DUP9 PUSH2 0x190C JUMP JUMPDEST DUP1 DUP8 MSTORE PUSH2 0x1289 PUSH1 0x1F NOT SWAP2 PUSH2 0x196F JUMP JUMPDEST ADD CALLDATASIZE DUP4 DUP9 ADD CALLDATACOPY JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x12DA JUMPI PUSH2 0x12D5 SWAP1 PUSH2 0x12C5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x12B2 DUP4 DUP8 PUSH2 0x1B64 JUMP JUMPDEST MLOAD AND PUSH2 0x12BE DUP4 DUP9 PUSH2 0x1B64 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1AB9 JUMP JUMPDEST PUSH2 0x12CF DUP3 DUP10 PUSH2 0x1B64 JUMP JUMPDEST MSTORE PUSH2 0x1B3F JUMP JUMPDEST PUSH2 0x1290 JUMP JUMPDEST DUP5 MLOAD DUP3 DUP2 MSTORE DUP1 PUSH2 0xE5F DUP2 DUP6 ADD DUP10 PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x84 SWAP2 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x135E JUMPI DUP2 MSTORE SWAP1 DUP5 ADD SWAP1 DUP5 ADD PUSH2 0x1235 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x3 NOT SWAP2 PUSH1 0xA0 CALLDATASIZE DUP5 ADD SLT PUSH2 0x9F0 JUMPI PUSH2 0x137F PUSH2 0x1870 JUMP JUMPDEST PUSH2 0x1387 PUSH2 0x188B JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 PUSH1 0x44 CALLDATALOAD DUP6 DUP2 GT PUSH2 0xD19 JUMPI PUSH2 0x13A8 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x9BA JUMPI PUSH2 0x13C0 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x1986 JUMP JUMPDEST SWAP6 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x9BA JUMPI PUSH2 0x13D8 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x19E4 JUMP JUMPDEST SWAP3 PUSH2 0x13E6 DUP4 MLOAD DUP9 MLOAD EQ PUSH2 0x1CBF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP6 PUSH2 0x13FD DUP8 ISZERO ISZERO PUSH2 0x1B8E JUMP JUMPDEST AND SWAP4 CALLER DUP6 EQ DUP1 ISZERO PUSH2 0x1628 JUMPI JUMPDEST ISZERO PUSH2 0x15CA JUMPI DUP10 JUMPDEST DUP11 DUP6 MLOAD DUP3 LT ISZERO PUSH2 0x148E JUMPI SWAP1 DUP10 PUSH2 0x69E DUP11 PUSH2 0x1489 SWAP5 PUSH2 0x1439 DUP6 PUSH2 0x1432 DUP2 DUP14 PUSH2 0x1B64 JUMP JUMPDEST MLOAD SWAP6 PUSH2 0x1B64 JUMP JUMPDEST MLOAD SWAP4 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP1 DUP3 DUP3 MSTORE DUP4 DUP4 KECCAK256 DUP14 DUP5 MSTORE DUP3 MSTORE PUSH2 0x1460 DUP7 DUP6 DUP6 KECCAK256 SLOAD PUSH2 0x187 DUP3 DUP3 LT ISZERO PUSH2 0x1C46 JUMP JUMPDEST DUP2 DUP5 MSTORE DUP4 DUP4 MSTORE DUP14 DUP6 DUP6 KECCAK256 SWAP1 DUP6 MSTORE DUP4 MSTORE DUP5 DUP5 KECCAK256 SSTORE DUP3 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 KECCAK256 SWAP1 DUP14 DUP4 MSTORE MSTORE KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1CB2 JUMP JUMPDEST PUSH2 0x1410 JUMP JUMPDEST POP POP SWAP1 SWAP5 SWAP4 SWAP6 SWAP7 SWAP3 SWAP2 SWAP8 DUP5 DUP8 DUP10 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1FCA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP2 DUP1 PUSH2 0x14B9 DUP11 DUP11 DUP4 PUSH2 0x1D1C JUMP JUMPDEST SUB SWAP1 LOG4 EXTCODESIZE PUSH2 0x14C5 JUMPI DUP9 DUP1 RETURN JUMPDEST DUP7 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE CALLER DUP13 DUP8 ADD MSTORE PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD PUSH1 0xA0 SWAP1 MSTORE PUSH1 0xA4 DUP6 ADD PUSH2 0x14F7 SWAP2 PUSH2 0x1A3A JUMP JUMPDEST DUP3 DUP6 DUP3 SUB ADD PUSH1 0x64 DUP7 ADD MSTORE PUSH2 0x150A SWAP2 PUSH2 0x1A3A JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB ADD PUSH1 0x84 DUP5 ADD MSTORE PUSH2 0x151D SWAP2 PUSH2 0x192F JUMP JUMPDEST SUB DUP2 DUP9 GAS SWAP5 PUSH1 0x20 SWAP6 CALL DUP6 SWAP2 DUP2 PUSH2 0x15AA JUMPI JUMPDEST POP PUSH2 0x1594 JUMPI POP POP PUSH1 0x1 PUSH2 0x153F PUSH2 0x1DAD JUMP JUMPDEST PUSH4 0x8C379A0 EQ PUSH2 0x155D JUMPI JUMPDEST PUSH2 0x414 JUMPI POP POP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP9 DUP1 RETURN JUMPDEST PUSH2 0x1565 PUSH2 0x1DCB JUMP JUMPDEST DUP1 PUSH2 0x1570 JUMPI POP PUSH2 0x154A JUMP JUMPDEST SWAP1 POP PUSH2 0x42D SWAP2 PUSH1 0x20 SWAP5 POP MLOAD SWAP4 DUP5 SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x47C JUMPI POP POP PUSH2 0x1551 JUMP JUMPDEST PUSH2 0x15C3 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x4BD JUMPI PUSH2 0x4AE DUP2 DUP4 PUSH2 0x190C JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x152E JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP5 DUP11 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP11 KECCAK256 CALLER DUP12 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP8 DUP12 KECCAK256 SLOAD AND PUSH2 0x1409 JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x9F0 JUMPI CALLDATALOAD DUP4 MSTORE PUSH1 0x6 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP2 MLOAD SWAP4 DUP5 SWAP2 DUP2 DUP2 SLOAD SWAP1 PUSH2 0x1678 DUP3 PUSH2 0x18A1 JUMP JUMPDEST SWAP3 DUP4 DUP7 MSTORE PUSH1 0x1 SWAP3 DUP9 DUP5 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x16F5 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x16B7 JUMPI JUMPDEST DUP6 DUP9 PUSH2 0xE5F DUP10 PUSH2 0x16A8 DUP5 DUP11 SUB DUP6 PUSH2 0x190C JUMP JUMPDEST MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x192F JUMP JUMPDEST DUP8 SWAP5 POP DUP2 SWAP4 SWAP3 SWAP2 MSTORE DUP4 DUP4 KECCAK256 JUMPDEST DUP3 DUP5 LT PUSH2 0x16DD JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0x16A8 PUSH2 0xE5F CODESIZE PUSH2 0x1696 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP3 ADD MSTORE SWAP5 ISZERO ISZERO PUSH1 0x5 SHL DUP8 ADD SWAP1 SWAP5 ADD SWAP5 POP DUP6 SWAP4 POP PUSH2 0x16A8 SWAP3 POP PUSH2 0xE5F SWAP2 POP CODESIZE SWAP1 POP PUSH2 0x1696 JUMP JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x535 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD PUSH2 0x1741 DUP2 PUSH2 0x18A1 JUMP JUMPDEST DUP1 DUP7 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x17A7 JUMPI POP PUSH1 0x1 EQ PUSH2 0x176C JUMPI JUMPDEST PUSH2 0xE5F DUP7 DUP7 PUSH2 0xE4D DUP3 DUP12 SUB DUP4 PUSH2 0x190C JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 KECCAK256 SWAP1 SWAP7 POP JUMPDEST DUP3 DUP5 LT PUSH2 0x1794 JUMPI POP POP POP DUP3 PUSH2 0xE5F SWAP5 PUSH2 0xE4D SWAP3 DUP3 ADD ADD SWAP5 DUP7 PUSH2 0x175B JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x1777 JUMP JUMPDEST SWAP1 POP PUSH2 0xE5F SWAP8 POP PUSH2 0xE4D SWAP5 POP PUSH1 0x20 SWAP3 POP DUP7 SWAP4 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 DUP7 PUSH2 0x175B JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x289 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x289 JUMPI CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x289 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x182F JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x181E JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 POP CODESIZE PUSH2 0x1815 JUMP JUMPDEST PUSH4 0x3A24D07 PUSH1 0xE2 SHL DUP2 EQ SWAP3 POP PUSH2 0x180E JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x535 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x535 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1869 PUSH2 0x1860 PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1AB9 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1886 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1886 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x18D1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x18BB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x18F6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x18F6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x195B JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x193A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x18F6 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1886 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x199D DUP4 PUSH2 0x196F JUMP JUMPDEST SWAP3 PUSH2 0x19AB PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x190C JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x1886 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x19D5 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x19C7 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1886 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x18F6 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1A18 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x190C JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x1886 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1A5A JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1A4C JUMP JUMPDEST ISZERO PUSH2 0x1A75 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1AE6 JUMPI PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1B4E JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1B78 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1B95 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1BEF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1C4D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1B4E JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1B4E JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1CC6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 PUSH2 0x1D33 PUSH2 0x1D41 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x1A3A JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1A3A JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1886 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x1886 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x28 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x3 RETURNDATASIZE GT PUSH2 0x1DBA JUMPI JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x1D41 JUMPI PUSH1 0x40 MLOAD PUSH1 0x3 NOT SWAP2 RETURNDATASIZE DUP4 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 DUP3 GT RETURNDATASIZE PUSH1 0x24 DUP5 ADD GT OR PUSH2 0x1E28 JUMPI DUP2 DUP5 ADD SWAP5 DUP6 MLOAD SWAP4 DUP5 GT PUSH2 0x1E30 JUMPI RETURNDATASIZE DUP6 ADD ADD PUSH1 0x20 DUP5 DUP8 ADD ADD GT PUSH2 0x1E28 JUMPI POP PUSH2 0x1D41 SWAP3 SWAP2 ADD PUSH1 0x20 ADD SWAP1 PUSH2 0x190C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x40 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x18F6 JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x20 CALLDATASIZE DUP3 CALLDATACOPY DUP3 MLOAD ISZERO PUSH2 0x1B78 JUMPI MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1ECA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F22 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F7A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID 0x4A CODECOPY 0xDC MOD 0xD4 0xC0 0xDB 0xC6 0x4B PUSH17 0xAF90FD698A233A518AA5D07E595D983B8C SDIV 0x26 0xC8 0xF7 0xFB 0xC3 0xD5 DUP2 PUSH9 0xC5AE7397731D063D5B 0xBF RETURNDATASIZE PUSH6 0x7854427343F4 0xC0 DUP4 0x24 0xF PUSH27 0xACAA2D0F628BE0079C531659141344CD1FD0A4F28419497F9722A3 0xDA 0xAF 0xE3 0xB4 XOR PUSH16 0x6B6457E0A2646970667358221220C503 PUSH31 0xDB4635403503877508E187C5A41E767365CAFE1C2066C7063858AF06396473 PUSH16 0x6C63430008130033A264697066735822 SLT KECCAK256 0x21 0xF 0xC2 0xF7 SWAP14 SLT 0xB6 0xE4 0xD6 0x21 SHL 0x2C INVALID SWAP5 SWAP15 STOP 0xC9 0xC8 0xE7 PUSH1 0xE0 0xF8 PUSH32 0x1C63CA9B8C449CD23564736F6C63430008130033000000000000000000000000 ","sourceMap":"221:2051:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;221:2051:32;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;221:2051:32;;-1:-1:-1;;;;;221:2051:32;;;;;;;;;;;:::i;:::-;-1:-1:-1;221:2051:32;;-1:-1:-1;;;221:2051:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;;221:2051:32;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;;221:2051:32;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;221:2051:32;;-1:-1:-1;;;221:2051:32;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2204:29:32;;221:2051;;;2204:29;;;221:2051;;;;;;;;;;-1:-1:-1;;;;;221:2051:32;2204:29;;;;;;221:2051;2204:29;;;;;221:2051;-1:-1:-1;2250:13:32;;221:2051;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2204:29;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;221:2051;;;;;;;;;;;;;;;;-1:-1:-1;;221:2051:32;;;;;;;-1:-1:-1;;;;;221:2051:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;221:2051:32;630:10;:24;221:2051;;;;;;-1:-1:-1;;;1025:27:32;;221:2051;;;1025:27;;;221:2051;-1:-1:-1;;;;;221:2051:32;;;;;;;;;1025:27;;;;;;;;;;;221:2051;;;;;;;;;;;;;;;;;1108:29;;221:2051;;;1108:29;;221:2051;1108:29;;;;;;;;;;;221:2051;-1:-1:-1;1152:24:32;;;221:2051;-1:-1:-1;;;;;221:2051:32;1152:38;1148:252;;221:2051;1152:24;;;221:2051;-1:-1:-1;;;;;221:2051:32;;1493:13;1528:3;221:2051;;1508:18;;;;;221:2051;;;;;;1576:28;;221:2051;;;;;;;;;1576:28;;;221:2051;;;-1:-1:-1;;;;;221:2051:32;;;;;;;;;;;1566:39;;221:2051;1727:10;;;;:::i;:::-;;:22;221:2051;1767:10;;;;:::i;:::-;;:19;1619:201;;;;;;221:2051;;;;;;;;;;;;1619:201;;1669:4;221:2051;1619:201;;221:2051;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;1619:201;;;;;;;;;;;;;;;1528:3;-1:-1:-1;;221:2051:32;;-1:-1:-1;;;;;221:2051:32;;1881:10;;;;:::i;:::-;;:16;;221:2051;1899:10;;;;:::i;:::-;;:22;;1923:10;221:2051;1923:10;;;;:::i;:::-;;:22;221:2051;1947:10;221:2051;1947:10;;;;:::i;:::-;;:26;221:2051;1835:149;;;;;221:2051;;;;;;;;;;;;;;;;;;;;;;1835:149;;221:2051;;;1835:149;;221:2051;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;221:2051:32;;;;;;;:::i;:::-;;;;;;;;;;;;;;1835:149;;;;;;;;;;;;;1528:3;-1:-1:-1;;221:2051:32;;1152:24;;;221:2051;;;;;;2004:63;;221:2051;;2004:63;;-1:-1:-1;;;;;221:2051:32;;;2004:63;:::i;:::-;;;;-1:-1:-1;;221:2051:32;;;;;;1493:13;;221:2051;-1:-1:-1;;;221:2051:32;;;;;;;;1835:149;;;;:::i;:::-;221:2051;;1835:149;;;;221:2051;;;;1835:149;221:2051;;;;;;;;;1835:149;221:2051;;;1619:201;;;;:::i;:::-;221:2051;;1619:201;;;;221:2051;;;;1619:201;221:2051;;;;;;;;;1619:201;221:2051;;;;;;;;;;;;;;;1508:18;;221:2051;;1148:252;221:2051;;;;;1230:17;;;;;-1:-1:-1;;;;;1230:17:32;;;;;;;;221:2051;1230:17;;;;;;221:2051;;;;;;;;1230:17;;;;;;;;;-1:-1:-1;;;;;221:2051:32;;;1152:24;;;221:2051;;;;;;;;;1322:67;;;;;;221:2051;;;;;;;;;;;;;;;1322:67;;221:2051;;;1322:67;;;:::i;:::-;;;;;;;;;;;1148:252;;;;;1322:67;;;;:::i;:::-;;;;;221:2051;;;;;;;;;1230:17;221:2051;;;;;;;;;;;1230:17;-1:-1:-1;;;221:2051:32;;;;;;;;1108:29;;;;;;;;;;;;;:::i;:::-;;;;221:2051;;;-1:-1:-1;;;221:2051:32;;;;;;;;;;;;-1:-1:-1;;;221:2051:32;;;;;;;1025:27;;;221:2051;1025:27;;221:2051;1025:27;;;;;;221:2051;1025:27;;;:::i;:::-;;;221:2051;;;;;;;;;;;;1025:27;;;;;;-1:-1:-1;1025:27:32;;221:2051;;;-1:-1:-1;;;221:2051:32;;;;;;;;;;;;;;;;;-1:-1:-1;;;221:2051:32;;;;;;;;;;-1:-1:-1;;;;;221:2051:32;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;221:2051:32;;;;;;;;;;;;;;-1:-1:-1;;;;;221:2051:32;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;221:2051:32;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;221:2051:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;221:2051:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;221:2051:32;;;;;;;;;;;;;;;;-1:-1:-1;;221:2051:32;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;437:49:8;;;:101;;;;221:2051:32;;;;;;;437:101:8;-1:-1:-1;;;871:40:23;;-1:-1:-1;437:101:8;;;221:2051:32;-1:-1:-1;;;;;221:2051:32;;;;;;:::o;:::-;;;;;-1:-1:-1;;221:2051:32;;;;-1:-1:-1;;;;;221:2051:32;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;221:2051:32;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;221:2051:32;;;;;;-1:-1:-1;;221:2051:32;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;221:2051:32;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;221:2051:32;;;;;;;;;;-1:-1:-1;;221:2051:32;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;221:2051:32;;;;:::o;:::-;;;;-1:-1:-1;;;;;221:2051:32;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;221:2051:32;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;221:2051:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;221:2051:32;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;221:2051:32;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"2584800","executionCost":"infinite","totalCost":"infinite"},"external":{"addRewards(uint256,(string,string,string,uint256,uint256)[])":"infinite","getRewardsForAsset(uint256)":"infinite","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"infinite","onERC1155Received(address,address,uint256,uint256,bytes)":"infinite","supervisor()":"2312","supportsInterface(bytes4)":"280"}},"methodIdentifiers":{"addRewards(uint256,(string,string,string,uint256,uint256)[])":"660486ff","getRewardsForAsset(uint256)":"8bfa795d","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supervisor()":"56e4b68b","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardsCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardTokenAddress\",\"type\":\"address\"}],\"name\":\"RewardsAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"individualPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct NewReward[]\",\"name\":\"rewards\",\"type\":\"tuple[]\"}],\"name\":\"addRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"getRewardsForAsset\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"individualPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardTokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct Reward[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supervisor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Rewards.sol\":\"Rewards\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor () {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xab1f67e4c96dfe0e3875d22883c3dee5411914f40ce0c54ef407f030d803512e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC1155.sol\\\";\\nimport \\\"./IERC1155Receiver.sol\\\";\\nimport \\\"./extensions/IERC1155MetadataURI.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n *\\n * @dev Implementation of the basic standard multi-token.\\n * See https://eips.ethereum.org/EIPS/eip-1155\\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\\n *\\n * _Available since v3.1._\\n */\\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\\n    using Address for address;\\n\\n    // Mapping from token ID to account balances\\n    mapping (uint256 => mapping(address => uint256)) private _balances;\\n\\n    // Mapping from account to operator approvals\\n    mapping (address => mapping(address => bool)) private _operatorApprovals;\\n\\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\\n    string private _uri;\\n\\n    /**\\n     * @dev See {_setURI}.\\n     */\\n    constructor (string memory uri_) {\\n        _setURI(uri_);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IERC1155).interfaceId\\n            || interfaceId == type(IERC1155MetadataURI).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155MetadataURI-uri}.\\n     *\\n     * This implementation returns the same URI for *all* token types. It relies\\n     * on the token type ID substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the\\n     * actual token type ID.\\n     */\\n    function uri(uint256) public view virtual override returns (string memory) {\\n        return _uri;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\\n        require(account != address(0), \\\"ERC1155: balance query for the zero address\\\");\\n        return _balances[id][account];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-balanceOfBatch}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(\\n        address[] memory accounts,\\n        uint256[] memory ids\\n    )\\n        public\\n        view\\n        virtual\\n        override\\n        returns (uint256[] memory)\\n    {\\n        require(accounts.length == ids.length, \\\"ERC1155: accounts and ids length mismatch\\\");\\n\\n        uint256[] memory batchBalances = new uint256[](accounts.length);\\n\\n        for (uint256 i = 0; i < accounts.length; ++i) {\\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\\n        }\\n\\n        return batchBalances;\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        require(_msgSender() != operator, \\\"ERC1155: setting approval status for self\\\");\\n\\n        _operatorApprovals[_msgSender()][operator] = approved;\\n        emit ApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[account][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    )\\n        public\\n        virtual\\n        override\\n    {\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: caller is not owner nor approved\\\"\\n        );\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\\n\\n        uint256 fromBalance = _balances[id][from];\\n        require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n        _balances[id][from] = fromBalance - amount;\\n        _balances[id][to] += amount;\\n\\n        emit TransferSingle(operator, from, to, id, amount);\\n\\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev See {IERC1155-safeBatchTransferFrom}.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    )\\n        public\\n        virtual\\n        override\\n    {\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n        require(to != address(0), \\\"ERC1155: transfer to the zero address\\\");\\n        require(\\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\\n            \\\"ERC1155: transfer caller is not owner nor approved\\\"\\n        );\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\\n\\n        for (uint256 i = 0; i < ids.length; ++i) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 fromBalance = _balances[id][from];\\n            require(fromBalance >= amount, \\\"ERC1155: insufficient balance for transfer\\\");\\n            _balances[id][from] = fromBalance - amount;\\n            _balances[id][to] += amount;\\n        }\\n\\n        emit TransferBatch(operator, from, to, ids, amounts);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Sets a new URI for all token types, by relying on the token type ID\\n     * substitution mechanism\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\\n     *\\n     * By this mechanism, any occurrence of the `\\\\{id\\\\}` substring in either the\\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\\n     * clients with the token type ID.\\n     *\\n     * For example, the `https://token-cdn-domain/\\\\{id\\\\}.json` URI would be\\n     * interpreted by clients as\\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\\n     * for token type ID 0x4cce0.\\n     *\\n     * See {uri}.\\n     *\\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\\n     * this function emits no events.\\n     */\\n    function _setURI(string memory newuri) internal virtual {\\n        _uri = newuri;\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - If `account` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function _mint(address account, uint256 id, uint256 amount, bytes memory data) internal virtual {\\n        require(account != address(0), \\\"ERC1155: mint to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data);\\n\\n        _balances[id][account] += amount;\\n        emit TransferSingle(operator, address(0), account, id, amount);\\n\\n        _doSafeTransferAcceptanceCheck(operator, address(0), account, id, amount, data);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) internal virtual {\\n        require(to != address(0), \\\"ERC1155: mint to the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\\n\\n        for (uint i = 0; i < ids.length; i++) {\\n            _balances[ids[i]][to] += amounts[i];\\n        }\\n\\n        emit TransferBatch(operator, address(0), to, ids, amounts);\\n\\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens of token type `id` from `account`\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens of token type `id`.\\n     */\\n    function _burn(address account, uint256 id, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC1155: burn from the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, account, address(0), _asSingletonArray(id), _asSingletonArray(amount), \\\"\\\");\\n\\n        uint256 accountBalance = _balances[id][account];\\n        require(accountBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n        _balances[id][account] = accountBalance - amount;\\n\\n        emit TransferSingle(operator, account, address(0), id, amount);\\n    }\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     */\\n    function _burnBatch(address account, uint256[] memory ids, uint256[] memory amounts) internal virtual {\\n        require(account != address(0), \\\"ERC1155: burn from the zero address\\\");\\n        require(ids.length == amounts.length, \\\"ERC1155: ids and amounts length mismatch\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, account, address(0), ids, amounts, \\\"\\\");\\n\\n        for (uint i = 0; i < ids.length; i++) {\\n            uint256 id = ids[i];\\n            uint256 amount = amounts[i];\\n\\n            uint256 accountBalance = _balances[id][account];\\n            require(accountBalance >= amount, \\\"ERC1155: burn amount exceeds balance\\\");\\n            _balances[id][account] = accountBalance - amount;\\n        }\\n\\n        emit TransferBatch(operator, account, address(0), ids, amounts);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning, as well as batched variants.\\n     *\\n     * The same hook is called on both single and batched variants. For single\\n     * transfers, the length of the `id` and `amount` arrays will be 1.\\n     *\\n     * Calling conditions (for each `id` and `amount` pair):\\n     *\\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * of token type `id` will be  transferred to `to`.\\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\\n     * for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\\n     * will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `ids` and `amounts` have the same, non-zero length.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    )\\n        internal\\n        virtual\\n    { }\\n\\n    function _doSafeTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes memory data\\n    )\\n        private\\n    {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\\n                if (response != IERC1155Receiver(to).onERC1155Received.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _doSafeBatchTransferAcceptanceCheck(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        bytes memory data\\n    )\\n        private\\n    {\\n        if (to.isContract()) {\\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {\\n                if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {\\n                    revert(\\\"ERC1155: ERC1155Receiver rejected tokens\\\");\\n                }\\n            } catch Error(string memory reason) {\\n                revert(reason);\\n            } catch {\\n                revert(\\\"ERC1155: transfer to non ERC1155Receiver implementer\\\");\\n            }\\n        }\\n    }\\n\\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\\n        uint256[] memory array = new uint256[](1);\\n        array[0] = element;\\n\\n        return array;\\n    }\\n}\\n\",\"keccak256\":\"0x8d0a3d2756dc8eff2b2563b52a6dcd3ab36e07b57211d3ac7c76efee6c4682e4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x249bc2a6d919da5f5145950664134cfcf2f66874bda801fd3b8fb861783da079\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n\\n    /**\\n        @dev Handles the receipt of a single ERC1155 token type. This function is\\n        called at the end of a `safeTransferFrom` after the balance has been updated.\\n        To accept the transfer, this must return\\n        `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n        (i.e. 0xf23a6e61, or its own function selector).\\n        @param operator The address which initiated the transfer (i.e. msg.sender)\\n        @param from The address which previously owned the token\\n        @param id The ID of the token being transferred\\n        @param value The amount of tokens being transferred\\n        @param data Additional data with no specified format\\n        @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n    */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    )\\n        external\\n        returns(bytes4);\\n\\n    /**\\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\\n        is called at the end of a `safeBatchTransferFrom` after the balances have\\n        been updated. To accept the transfer(s), this must return\\n        `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n        (i.e. 0xbc197c81, or its own function selector).\\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n        @param from The address which previously owned the token\\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n        @param data Additional data with no specified format\\n        @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n    */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    )\\n        external\\n        returns(bytes4);\\n}\\n\",\"keccak256\":\"0xc7aa8a96aaeb7e1672a3d5fd37582136ff46b6a6cafabcc40ec0e00a42915e1c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1155.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\\n * own tokens and those that they have been approved to use.\\n *\\n * _Available since v3.1._\\n */\\nabstract contract ERC1155Burnable is ERC1155 {\\n    function burn(address account, uint256 id, uint256 value) public virtual {\\n        require(\\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\\n            \\\"ERC1155: caller is not owner nor approved\\\"\\n        );\\n\\n        _burn(account, id, value);\\n    }\\n\\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\\n        require(\\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\\n            \\\"ERC1155: caller is not owner nor approved\\\"\\n        );\\n\\n        _burnBatch(account, ids, values);\\n    }\\n}\\n\",\"keccak256\":\"0xf37ec99085370fa75da56456d21f8410423e64e6bc4ef31fed4884f70e5e40cb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155.sol\\\";\\n\\n/**\\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155MetadataURI is IERC1155 {\\n    /**\\n     * @dev Returns the URI for token type `id`.\\n     *\\n     * If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by\\n     * clients with the actual token type ID.\\n     */\\n    function uri(uint256 id) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x6ba0564f6970414d1166ee83127b834bbe7dbf699241a3005eb7ae64a2211975\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ERC1155Receiver.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ncontract ERC1155Holder is ERC1155Receiver {\\n    function onERC1155Received(address, address, uint256, uint256, bytes memory) public virtual override returns (bytes4) {\\n        return this.onERC1155Received.selector;\\n    }\\n\\n    function onERC1155BatchReceived(address, address, uint256[] memory, uint256[] memory, bytes memory) public virtual override returns (bytes4) {\\n        return this.onERC1155BatchReceived.selector;\\n    }\\n}\\n\",\"keccak256\":\"0x2ccdc162657b677334eb08a60bb50a0dd74b22eff7150abb06487f58dbebd5e5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155Receiver.sol\\\";\\nimport \\\"../../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IERC1155Receiver).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n}\\n\",\"keccak256\":\"0xfb1161632a10d0bd366c80db583246fa490183b45ec4f59acb43b97d1a7437b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"./extensions/IERC721Enumerable.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping (uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping (address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping (uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IERC721).interfaceId\\n            || interfaceId == type(IERC721Metadata).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: balance query for the zero address\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0\\n            ? string(abi.encodePacked(baseURI, tokenId.toString()))\\n            : '';\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\\n     * in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(_msgSender() == owner || ERC721.isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"ERC721: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        require(operator != _msgSender(), \\\"ERC721: approve to caller\\\");\\n\\n        _operatorApprovals[_msgSender()][operator] = approved;\\n        emit ApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"ERC721: operator query for nonexistent token\\\");\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || ERC721.isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {\\n        _mint(to, tokenId);\\n        require(_checkOnERC721Received(address(0), to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer of token that is not own\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\\n        private returns (bool)\\n    {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver(to).onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    // solhint-disable-next-line no-inline-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual { }\\n}\\n\",\"keccak256\":\"0x8d1cabca557cb77d97d801d674f0dacc33659e1430cdd34f91ae5d033fc3d93f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @title ERC721 Burnable Token\\n * @dev ERC721 Token that can be irreversibly burned (destroyed).\\n */\\nabstract contract ERC721Burnable is Context, ERC721 {\\n    /**\\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own `tokenId` or be an approved operator.\\n     */\\n    function burn(uint256 tokenId) public virtual {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721Burnable: caller is not owner nor approved\\\");\\n        _burn(tokenId);\\n    }\\n}\\n\",\"keccak256\":\"0x7481c284b0ff5983d3f1784f0ceae1ec397f8c8938bc60552b19889cc057aee8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"./IERC721Enumerable.sol\\\";\\n\\n/**\\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\\n * enumerability of all the token ids in the contract as well as all token ids owned by each\\n * account.\\n */\\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\\n    // Mapping from owner to list of owned token IDs\\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\\n\\n    // Mapping from token ID to index of the owner tokens list\\n    mapping(uint256 => uint256) private _ownedTokensIndex;\\n\\n    // Array with all token ids, used for enumeration\\n    uint256[] private _allTokens;\\n\\n    // Mapping from token id to position in the allTokens array\\n    mapping(uint256 => uint256) private _allTokensIndex;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\\n        return interfaceId == type(IERC721Enumerable).interfaceId\\n            || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721.balanceOf(owner), \\\"ERC721Enumerable: owner index out of bounds\\\");\\n        return _ownedTokens[owner][index];\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _allTokens.length;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Enumerable-tokenByIndex}.\\n     */\\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\\n        require(index < ERC721Enumerable.totalSupply(), \\\"ERC721Enumerable: global index out of bounds\\\");\\n        return _allTokens[index];\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual override {\\n        super._beforeTokenTransfer(from, to, tokenId);\\n\\n        if (from == address(0)) {\\n            _addTokenToAllTokensEnumeration(tokenId);\\n        } else if (from != to) {\\n            _removeTokenFromOwnerEnumeration(from, tokenId);\\n        }\\n        if (to == address(0)) {\\n            _removeTokenFromAllTokensEnumeration(tokenId);\\n        } else if (to != from) {\\n            _addTokenToOwnerEnumeration(to, tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\\n     * @param to address representing the new owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\\n     */\\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\\n        uint256 length = ERC721.balanceOf(to);\\n        _ownedTokens[to][length] = tokenId;\\n        _ownedTokensIndex[tokenId] = length;\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's token tracking data structures.\\n     * @param tokenId uint256 ID of the token to be added to the tokens list\\n     */\\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\\n        _allTokensIndex[tokenId] = _allTokens.length;\\n        _allTokens.push(tokenId);\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\\n     * @param from address representing the previous owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\\n     */\\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary\\n        if (tokenIndex != lastTokenIndex) {\\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\\n\\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n        }\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _ownedTokensIndex[tokenId];\\n        delete _ownedTokens[from][lastTokenIndex];\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's token tracking data structures.\\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\\n     */\\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = _allTokens.length - 1;\\n        uint256 tokenIndex = _allTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\\n\\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _allTokensIndex[tokenId];\\n        _allTokens.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x3dce5847e70c056ef0f7cf91cb9a0067cf90784794017a45c1211cde7ed1c08c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping (uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI query for nonexistent token\\\");\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd03f5c3d258a9b0f751a3246e0802106585561ab5909b808368759364fc786f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xccb7e6475afcb1c5cb13b3fbf1329c10b93620a9b66393388066683915271a78\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant alphabet = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = alphabet[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n}\\n\",\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/AssetStruct.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <=0.8.19;\\n\\nenum ProjectStatus {\\n    Started,\\n    Funded,\\n    Failed,\\n    Completed\\n}\\n\\nenum Category {\\n    Technology,\\n    Gaming,\\n    Music,\\n    Movies,\\n    Art\\n}\\n\\nstruct Reward {\\n    string title;\\n    string description;\\n    uint256 tokenAmount;\\n    uint256 individualPrice;\\n    uint256 availableTokens;\\n    uint256 rewardTokenId;\\n}\\n\\nstruct NewReward {\\n    string tokenURI;\\n    string title;\\n    string description;\\n    uint256 tokenAmount;\\n    uint256 individualPrice;\\n}\\n\\nstruct Asset {\\n    uint256 assetId;\\n    uint256 price;\\n    string author;\\n    string title;\\n    string description;\\n    uint256 projectStartDate;\\n    uint256 projectEndDate;\\n    Reward[] rewards;\\n    ProjectStatus status;\\n    address rewardTokenAddress;\\n    string mainPhoto;\\n    string[] secondaryPhotos;\\n    Category category;\\n}\\n\",\"keccak256\":\"0x2ffc38b9e3b4154b2c7ededb682535a9fd6dfb1419217873d7ff8c3dcbe3e9b4\",\"license\":\"MIT\"},\"contracts/FCTVToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <=0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract FCTVToken is ERC1155, ERC1155Burnable, Ownable {\\n    string public name;\\n    string public symbol;\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    constructor(string memory baseURI) ERC1155(baseURI) {\\n        name = \\\"Fractional CTV Tokens\\\";\\n        symbol = \\\"FCTVT\\\";\\n    }\\n\\n    function setURI(uint256 tokenId, string memory tokenURI) public onlyOwner {\\n        _tokenURIs[tokenId] = tokenURI;\\n    }\\n\\n    function uri(uint256 tokenId) public view override returns (string memory) {\\n        return _tokenURIs[tokenId];\\n    }\\n\\n    function mint(\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        string memory tokenURI,\\n        bytes memory data\\n    ) public onlyOwner {\\n        _mint(to, id, amount, data);\\n        setURI(id, tokenURI);\\n    }\\n\\n    function mintBatch(\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts,\\n        string[] memory tokenURIs,\\n        bytes memory data\\n    ) public onlyOwner {\\n        require(\\n            ids.length == tokenURIs.length,\\n            \\\"ERC1155: ids and uris length mismatch\\\"\\n        );\\n        _mintBatch(to, ids, amounts, data);\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            _tokenURIs[ids[i]] = tokenURIs[i];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xce05d65953d1ac5bba7cc1f68b6d996be95010824061febf3a2406076d7fc808\",\"license\":\"MIT\"},\"contracts/NFTVenture.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <=0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\\\";\\nimport \\\"./AssetStruct.sol\\\";\\n\\ncontract NFTVenture is\\n    ERC721,\\n    ERC721Enumerable,\\n    ERC721URIStorage,\\n    Pausable,\\n    Ownable,\\n    ERC721Burnable\\n{\\n    // Assets\\n    uint256 public assetsCount;\\n    mapping(uint256 => Asset) public assetMap;\\n    mapping(uint256 => bool) public assetExists;\\n\\n    mapping(address => uint256[]) public ownerToAssets;\\n\\n    mapping(uint256 => address) public assetApprovals;\\n    mapping(uint256 => address) public assetOwner;\\n    mapping(address => uint256) public ownedAssetsCount;\\n\\n    // State-based Asset IDs\\n    uint256[] public activeAssets;\\n    uint256[] public fundedAssets;\\n    uint256[] public failedAssets;\\n    uint256[] public completedAssets;\\n\\n    // Category-based Asset IDs\\n    mapping(Category => uint256[]) public categoryAssets;\\n\\n    // Investments\\n    mapping(uint256 => mapping(address => uint256)) public investmentAmountOf;\\n    mapping(uint256 => uint256) public investmentReceived;\\n    mapping(uint256 => address[]) public assetInvestors;\\n    mapping(uint256 => bool) public isTransferAllowed;\\n    mapping(uint256 => bool) public isRefundingAllowed;\\n    mapping(uint256 => uint256) public investmentRefunded;\\n    mapping(uint256 => mapping(address => uint256)) public pendingReturns;\\n    mapping(uint256 => mapping(address => mapping(uint256 => uint256)))\\n        public investorTokens;\\n    mapping(uint256 => uint256) public totalInvestors;\\n    mapping(uint256 => uint256) public totalInvestment;\\n    mapping(address => uint256[]) public investorAssets;\\n\\n    // Constructor\\n    constructor() ERC721(\\\"FractionalCTV\\\", \\\"FCTV\\\") {}\\n\\n    function pause() public onlyOwner {\\n        _pause();\\n    }\\n\\n    function unpause() public onlyOwner {\\n        _unpause();\\n    }\\n\\n    function _baseURI() internal pure override returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    function transfer(\\n        address recipient,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal override(ERC721, ERC721Enumerable) whenNotPaused {\\n        super._beforeTokenTransfer(from, to, tokenId);\\n    }\\n\\n    function _burn(\\n        uint256 tokenId\\n    ) internal override(ERC721, ERC721URIStorage) {\\n        super._burn(tokenId);\\n    }\\n\\n    function tokenURI(\\n        uint256 tokenId\\n    ) public view override(ERC721, ERC721URIStorage) returns (string memory) {\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    function supportsInterface(\\n        bytes4 interfaceId\\n    ) public view override(ERC721, ERC721Enumerable) returns (bool) {\\n        return super.supportsInterface(interfaceId);\\n    }\\n\\n    modifier isNFTOwner(uint256 assetId) {\\n        require(msg.sender == ownerOf(assetId));\\n        _;\\n    }\\n\\n    function balanceOf() public view returns (uint256) {\\n        require(\\n            msg.sender != address(0),\\n            \\\"ERC721: balance query for the zero address\\\"\\n        );\\n        return ownedAssetsCount[msg.sender];\\n    }\\n\\n    function ownerOf(\\n        uint256 assetId\\n    ) public view override(ERC721, IERC721) returns (address) {\\n        address owner = assetOwner[assetId];\\n        require(owner != address(0), \\\"NoAssetExists\\\");\\n        return owner;\\n    }\\n\\n    function approve(\\n        address to,\\n        uint256 assetId\\n    ) public override(ERC721, IERC721) {\\n        address owner = ownerOf(assetId);\\n        require(to != owner, \\\"CurrentOwnerApproval\\\");\\n        require(msg.sender == owner, \\\"NotTheAssetOwner\\\");\\n        assetApprovals[assetId] = to;\\n        emit Approval(owner, to, assetId);\\n    }\\n\\n    function getApproved(\\n        uint256 assetId\\n    ) public view override(ERC721, IERC721) returns (address) {\\n        require(\\n            _exists(assetId),\\n            \\\"ERC721: approved query for nonexistent token\\\"\\n        );\\n        return assetApprovals[assetId];\\n    }\\n\\n    function clearApproval(uint256 assetId, address approved) public {\\n        if (assetApprovals[assetId] == approved) {\\n            assetApprovals[assetId] = address(0);\\n        }\\n    }\\n\\n    function mint(address to, uint256 assetId, string memory asseturi) public {\\n        require(to != address(0), \\\"ZeroAddressMiniting\\\");\\n        _safeMint(to, assetId);\\n        _setTokenURI(assetId, asseturi);\\n        emit Transfer(address(0), to, assetId);\\n    }\\n\\n    function exists(uint256 assetId) public view returns (bool) {\\n        return assetExists[assetId];\\n    }\\n\\n    function isApprovedOrOwner(\\n        address spender,\\n        uint256 assetId\\n    ) external view returns (bool) {\\n        require(\\n            exists(assetId),\\n            \\\"ERC721: operator query for nonexistent token\\\"\\n        );\\n        address owner = ownerOf(assetId);\\n        return (spender == owner || getApproved(assetId) == spender);\\n    }\\n\\n    function _addAsset(\\n        uint256 assetId,\\n        Asset memory asset,\\n        address to\\n    ) external {\\n        assetMap[assetId] = asset;\\n        assetOwner[assetId] = to;\\n        ownedAssetsCount[to]++;\\n        ownerToAssets[to].push(assetId);\\n        assetExists[assetId] = true;\\n        activeAssets.push(assetId);\\n        categoryAssets[asset.category].push(assetId);\\n    }\\n\\n    function getAsset(uint256 assetId) public view returns (Asset memory) {\\n        return assetMap[assetId];\\n    }\\n\\n    function updateAsset(uint256 assetId, Asset memory asset) public {\\n        assetMap[assetId] = asset;\\n    }\\n\\n    function getAssetsCount() public view returns (uint256) {\\n        return assetsCount;\\n    }\\n\\n    function incrementAssetsCount() public {\\n        assetsCount++;\\n    }\\n\\n    function getAssetsOfOwner(\\n        address owner\\n    ) public view returns (uint256[] memory) {\\n        return ownerToAssets[owner];\\n    }\\n\\n    function updateAssetReward(\\n        uint256 assetId,\\n        uint256 rewardIndex,\\n        uint256 newAvailableTokens\\n    ) external {\\n        require(\\n            rewardIndex < assetMap[assetId].rewards.length,\\n            \\\"Invalid reward index\\\"\\n        );\\n        assetMap[assetId]\\n            .rewards[rewardIndex]\\n            .availableTokens = newAvailableTokens;\\n    }\\n\\n    function handleRewardAddedToAsset(\\n        uint256 assetId,\\n        string memory title,\\n        string memory description,\\n        uint256 tokenAmount,\\n        uint256 individualPrice,\\n        bytes32 rewardId\\n    ) external {\\n        Asset storage asset = assetMap[assetId];\\n        asset.rewards.push(\\n            Reward({\\n                title: title,\\n                description: description,\\n                tokenAmount: tokenAmount,\\n                individualPrice: individualPrice,\\n                availableTokens: tokenAmount,\\n                rewardTokenId: uint256(rewardId)\\n            })\\n        );\\n    }\\n\\n    function updateRewardTokenAddress(\\n        uint256 assetId,\\n        address rewardTokenAddress\\n    ) external {\\n        assetMap[assetId].rewardTokenAddress = rewardTokenAddress;\\n    }\\n\\n    function addInvestment(\\n        uint256 assetId,\\n        address investor,\\n        uint256 amount\\n    ) external {\\n        investmentAmountOf[assetId][investor] += amount;\\n        investmentReceived[assetId] += amount;\\n        totalInvestment[assetId] += amount;\\n        if (investmentAmountOf[assetId][investor] == amount) {\\n            assetInvestors[assetId].push(investor);\\n            investorAssets[investor].push(assetId);\\n\\n            totalInvestors[assetId]++;\\n        }\\n    }\\n\\n    function getTotalInvestment(\\n        uint256 assetId\\n    ) external view returns (uint256) {\\n        return totalInvestment[assetId];\\n    }\\n\\n    function getTotalInvestors(\\n        uint256 assetId\\n    ) external view returns (uint256) {\\n        return totalInvestors[assetId];\\n    }\\n\\n    function addInvestor(uint256 assetId, address investor) external {\\n        assetInvestors[assetId].push(investor);\\n        investorAssets[investor].push(assetId);\\n    }\\n\\n    function getAssetInvestors(\\n        uint256 assetId\\n    ) external view returns (address[] memory) {\\n        return assetInvestors[assetId];\\n    }\\n\\n    function getInvestorAssets(\\n        address investor\\n    ) external view returns (uint256[] memory) {\\n        return investorAssets[investor];\\n    }\\n    function getInvestorTokens(\\n        uint256 assetId,\\n        address investor\\n    ) public view returns (uint256[] memory, uint256[] memory) {\\n        Asset memory asset = assetMap[assetId];\\n        uint256 rewardCount = asset.rewards.length;\\n\\n        uint256[] memory tokenIds = new uint256[](rewardCount);\\n        uint256[] memory tokenAmounts = new uint256[](rewardCount);\\n\\n        for (uint256 i = 0; i < rewardCount; i++) {\\n            uint256 tokenId = asset.rewards[i].rewardTokenId;\\n            tokenIds[i] = tokenId;\\n            tokenAmounts[i] = investorTokens[assetId][investor][tokenId];\\n        }\\n\\n        return (tokenIds, tokenAmounts);\\n    }\\n\\n    function getInvestmentAmount(\\n        uint256 assetId,\\n        address investor\\n    ) public view returns (uint256) {\\n        return investmentAmountOf[assetId][investor];\\n    }\\n\\n    function updateInvestorTokens(\\n        uint256 assetId,\\n        address investor,\\n        uint256 tokenId,\\n        uint256 tokenAmount\\n    ) external {\\n        investorTokens[assetId][investor][tokenId] = tokenAmount;\\n    }\\n\\n    function allowTransfers(uint256 assetId, bool allowed) external {\\n        isTransferAllowed[assetId] = allowed;\\n    }\\n\\n    function allowRefunding(uint256 assetId, bool allowed) external {\\n        isRefundingAllowed[assetId] = allowed;\\n    }\\n\\n    function updatePendingReturns(\\n        uint256 assetId,\\n        address investor,\\n        uint256 amount\\n    ) external {\\n        pendingReturns[assetId][investor] = amount;\\n    }\\n\\n    function updateInvestmentRefunded(\\n        uint256 assetId,\\n        uint256 amount\\n    ) external {\\n        investmentRefunded[assetId] = amount;\\n    }\\n\\n    function getActiveAssets() external view returns (uint256[] memory) {\\n        return activeAssets;\\n    }\\n\\n    function getFundedAssets() external view returns (uint256[] memory) {\\n        return fundedAssets;\\n    }\\n\\n    function getFailedAssets() external view returns (uint256[] memory) {\\n        return failedAssets;\\n    }\\n\\n    function getCompletedAssets() external view returns (uint256[] memory) {\\n        return completedAssets;\\n    }\\n\\n    function getAssetsByCategory(\\n        Category category\\n    ) external view returns (uint256[] memory) {\\n        return categoryAssets[category];\\n    }\\n}\\n\",\"keccak256\":\"0xfe8b84cc7cf611042e781969058a556bbdef20e9d3d6073a89df555c628fffc7\",\"license\":\"MIT\"},\"contracts/Rewards.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <=0.8.19;\\n\\nimport \\\"./FCTVToken.sol\\\";\\nimport \\\"./NFTVenture.sol\\\";\\nimport \\\"./AssetStruct.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\\\";\\n\\ncontract Rewards is ERC1155Holder {\\n    NFTVenture private nftContract;\\n    address public supervisor;\\n\\n    // Events\\n    event RewardsAdded(uint256 indexed assetId, uint256 rewardsCount, address rewardTokenAddress);\\n\\n    // Constructor\\n    constructor(address nftAddress) {\\n        nftContract = NFTVenture(nftAddress);\\n        supervisor = msg.sender;\\n    }\\n\\n    modifier onlySupervisor() {\\n        require(msg.sender == supervisor, \\\"Only supervisor can call this function\\\");\\n        _;\\n    }\\n\\n    ////////////////////////////////////////////////////////////////////////////////\\n    // Functions Rewards //\\n    ////////////////////////////////////////////////////////////////////////////////\\n\\n    function addRewards(uint256 assetId, NewReward[] memory rewards) public onlySupervisor {\\n        require(nftContract.exists(assetId), \\\"Asset does not exist\\\");\\n        Asset memory asset = nftContract.getAsset(assetId);\\n\\n        if (asset.rewardTokenAddress == address(0)) {\\n            FCTVToken rewardToken = new FCTVToken(\\\"\\\");\\n            asset.rewardTokenAddress = address(rewardToken);\\n            nftContract.updateRewardTokenAddress(assetId, address(rewardToken));\\n        }\\n\\n        FCTVToken rewardTokenContract = FCTVToken(asset.rewardTokenAddress);\\n\\n        for (uint256 i = 0; i < rewards.length; i++) {\\n            bytes32 rewardId = keccak256(abi.encodePacked(assetId, i));\\n            rewardTokenContract.mint(\\n                address(this),\\n                uint256(rewardId),\\n                rewards[i].tokenAmount,\\n                rewards[i].tokenURI,\\n                \\\"\\\"\\n            );\\n\\n            nftContract.handleRewardAddedToAsset(assetId, rewards[i].title, rewards[i].description, rewards[i].tokenAmount, rewards[i].individualPrice, rewardId);\\n\\n            emit RewardsAdded(assetId, rewards.length, asset.rewardTokenAddress);\\n        }\\n    }\\n\\n    function getRewardsForAsset(uint256 assetId) public view returns (Reward[] memory) {\\n        Asset memory asset = nftContract.getAsset(assetId);\\n        return asset.rewards;\\n    }\\n}\\n\",\"keccak256\":\"0xbd8c836207e55a754af81840cfd5b7975e7010db166a8ac758ddc4da449c349c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7458,"contract":"contracts/Rewards.sol:Rewards","label":"nftContract","offset":0,"slot":"0","type":"t_contract(NFTVenture)7155"},{"astId":7460,"contract":"contracts/Rewards.sol:Rewards","label":"supervisor","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(NFTVenture)7155":{"encoding":"inplace","label":"contract NFTVenture","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}